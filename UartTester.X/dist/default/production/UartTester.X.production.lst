

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 17 16:22:26 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     008F                     	;# 
    97     0090                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0093                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0095                     	;# 
   105     0096                     	;# 
   106     0097                     	;# 
   107     0098                     	;# 
   108     0099                     	;# 
   109     009A                     	;# 
   110     009B                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     0105                     	;# 
   116     0107                     	;# 
   117     0108                     	;# 
   118     0109                     	;# 
   119     010C                     	;# 
   120     010C                     	;# 
   121     010D                     	;# 
   122     010E                     	;# 
   123     010F                     	;# 
   124     0185                     	;# 
   125     0187                     	;# 
   126     0188                     	;# 
   127     0189                     	;# 
   128     018C                     	;# 
   129     018D                     	;# 
   130     0000                     	;# 
   131     0001                     	;# 
   132     0002                     	;# 
   133     0003                     	;# 
   134     0004                     	;# 
   135     0005                     	;# 
   136     0006                     	;# 
   137     0007                     	;# 
   138     0008                     	;# 
   139     0009                     	;# 
   140     000A                     	;# 
   141     000B                     	;# 
   142     000C                     	;# 
   143     000D                     	;# 
   144     000E                     	;# 
   145     000E                     	;# 
   146     000F                     	;# 
   147     0010                     	;# 
   148     0011                     	;# 
   149     0012                     	;# 
   150     0013                     	;# 
   151     0014                     	;# 
   152     0015                     	;# 
   153     0015                     	;# 
   154     0016                     	;# 
   155     0017                     	;# 
   156     0018                     	;# 
   157     0019                     	;# 
   158     001A                     	;# 
   159     001B                     	;# 
   160     001B                     	;# 
   161     001C                     	;# 
   162     001D                     	;# 
   163     001E                     	;# 
   164     001F                     	;# 
   165     0081                     	;# 
   166     0085                     	;# 
   167     0086                     	;# 
   168     0087                     	;# 
   169     0088                     	;# 
   170     0089                     	;# 
   171     008C                     	;# 
   172     008D                     	;# 
   173     008E                     	;# 
   174     008F                     	;# 
   175     0090                     	;# 
   176     0091                     	;# 
   177     0092                     	;# 
   178     0093                     	;# 
   179     0093                     	;# 
   180     0093                     	;# 
   181     0094                     	;# 
   182     0095                     	;# 
   183     0096                     	;# 
   184     0097                     	;# 
   185     0098                     	;# 
   186     0099                     	;# 
   187     009A                     	;# 
   188     009B                     	;# 
   189     009C                     	;# 
   190     009D                     	;# 
   191     009E                     	;# 
   192     009F                     	;# 
   193     0105                     	;# 
   194     0107                     	;# 
   195     0108                     	;# 
   196     0109                     	;# 
   197     010C                     	;# 
   198     010C                     	;# 
   199     010D                     	;# 
   200     010E                     	;# 
   201     010F                     	;# 
   202     0185                     	;# 
   203     0187                     	;# 
   204     0188                     	;# 
   205     0189                     	;# 
   206     018C                     	;# 
   207     018D                     	;# 
   208     0000                     	;# 
   209     0001                     	;# 
   210     0002                     	;# 
   211     0003                     	;# 
   212     0004                     	;# 
   213     0005                     	;# 
   214     0006                     	;# 
   215     0007                     	;# 
   216     0008                     	;# 
   217     0009                     	;# 
   218     000A                     	;# 
   219     000B                     	;# 
   220     000C                     	;# 
   221     000D                     	;# 
   222     000E                     	;# 
   223     000E                     	;# 
   224     000F                     	;# 
   225     0010                     	;# 
   226     0011                     	;# 
   227     0012                     	;# 
   228     0013                     	;# 
   229     0014                     	;# 
   230     0015                     	;# 
   231     0015                     	;# 
   232     0016                     	;# 
   233     0017                     	;# 
   234     0018                     	;# 
   235     0019                     	;# 
   236     001A                     	;# 
   237     001B                     	;# 
   238     001B                     	;# 
   239     001C                     	;# 
   240     001D                     	;# 
   241     001E                     	;# 
   242     001F                     	;# 
   243     0081                     	;# 
   244     0085                     	;# 
   245     0086                     	;# 
   246     0087                     	;# 
   247     0088                     	;# 
   248     0089                     	;# 
   249     008C                     	;# 
   250     008D                     	;# 
   251     008E                     	;# 
   252     008F                     	;# 
   253     0090                     	;# 
   254     0091                     	;# 
   255     0092                     	;# 
   256     0093                     	;# 
   257     0093                     	;# 
   258     0093                     	;# 
   259     0094                     	;# 
   260     0095                     	;# 
   261     0096                     	;# 
   262     0097                     	;# 
   263     0098                     	;# 
   264     0099                     	;# 
   265     009A                     	;# 
   266     009B                     	;# 
   267     009C                     	;# 
   268     009D                     	;# 
   269     009E                     	;# 
   270     009F                     	;# 
   271     0105                     	;# 
   272     0107                     	;# 
   273     0108                     	;# 
   274     0109                     	;# 
   275     010C                     	;# 
   276     010C                     	;# 
   277     010D                     	;# 
   278     010E                     	;# 
   279     010F                     	;# 
   280     0185                     	;# 
   281     0187                     	;# 
   282     0188                     	;# 
   283     0189                     	;# 
   284     018C                     	;# 
   285     018D                     	;# 
   286     0019                     _TXREG	set	25
   287     000C                     _PIR1bits	set	12
   288     000D                     _PIR2bits	set	13
   289     000B                     _INTCONbits	set	11
   290     0018                     _RCSTAbits	set	24
   291     009A                     _SPBRGH	set	154
   292     0099                     _SPBRG	set	153
   293     0098                     _TXSTAbits	set	152
   294     008F                     _OSCCONbits	set	143
   295     010C                     _EEDAT	set	268
   296     010D                     _EEADR	set	269
   297     018D                     _EECON2	set	397
   298     018C                     _EECON1bits	set	396
   299     0187                     _BAUDCTLbits	set	391
   300                           
   301                           	psect	strings
   302     0003                     __pstrings:
   303     0003                     stringtab:
   304     0003                     __stringtab:
   305     0003                     stringcode:	
   306                           ;	String table - string pointers are 1 byte each
   307                           
   308     0003                     stringdir:
   309     0003  3000               	movlw	high stringdir
   310     0004  008A               	movwf	10
   311     0005  0804               	movf	4,w
   312     0006  0A84               	incf	4,f
   313     0007  0782               	addwf	2,f
   314     0008                     __stringbase:
   315     0008  3400               	retlw	0
   316     0009                     __end_of__stringtab:
   317     0009                     STR_1:
   318     0009  3448               	retlw	72	;'H'
   319     000A  3469               	retlw	105	;'i'
   320     000B  3420               	retlw	32	;' '
   321     000C  3466               	retlw	102	;'f'
   322     000D  3472               	retlw	114	;'r'
   323     000E  346F               	retlw	111	;'o'
   324     000F  346D               	retlw	109	;'m'
   325     0010  3420               	retlw	32	;' '
   326     0011  3474               	retlw	116	;'t'
   327     0012  3468               	retlw	104	;'h'
   328     0013  3465               	retlw	101	;'e'
   329     0014  3420               	retlw	32	;' '
   330     0015  3450               	retlw	80	;'P'
   331     0016  3449               	retlw	73	;'I'
   332     0017  3443               	retlw	67	;'C'
   333     0018  3431               	retlw	49	;'1'
   334     0019  3436               	retlw	54	;'6'
   335     001A  3446               	retlw	70	;'F'
   336     001B  3438               	retlw	56	;'8'
   337     001C  3438               	retlw	56	;'8'
   338     001D  3437               	retlw	55	;'7'
   339     001E  3400               	retlw	0
   340                           
   341                           	psect	cinit
   342     07F3                     start_initialization:	
   343                           ; #config settings
   344                           
   345     07F3                     __initialization:
   346                           
   347                           ; Clear objects allocated to BANK0
   348     07F3  1383               	bcf	3,7	;select IRP bank0
   349     07F4  3020               	movlw	low __pbssBANK0
   350     07F5  0084               	movwf	4
   351     07F6  3030               	movlw	low (__pbssBANK0+16)
   352     07F7  120A  118A  2780  120A  118A  	fcall	clear_ram0
   353     07FC                     end_of_initialization:	
   354                           ;End of C runtime variable initialization code
   355                           
   356     07FC                     __end_of__initialization:
   357     07FC  0183               	clrf	3
   358     07FD  120A  118A  2FB0   	ljmp	_main	;jump to C main() function
   359                           
   360                           	psect	bssBANK0
   361     0020                     __pbssBANK0:
   362     0020                     _volt:
   363     0020                     	ds	16
   364                           
   365                           	psect	clrtext
   366     0780                     clear_ram0:	
   367                           ;	Called with FSR containing the base address, and
   368                           ;	W with the last address+1
   369                           
   370     0780  0064               	clrwdt	;clear the watchdog before getting into this loop
   371     0781                     clrloop0:
   372     0781  0180               	clrf	0	;clear RAM location pointed to by FSR
   373     0782  0A84               	incf	4,f	;increment pointer
   374     0783  0604               	xorwf	4,w	;XOR with final address
   375     0784  1903               	btfsc	3,2	;have we reached the end yet?
   376     0785  3400               	retlw	0	;all done for this memory range, return
   377     0786  0604               	xorwf	4,w	;XOR again to restore value
   378     0787  2F81               	goto	clrloop0	;do the next byte
   379                           
   380                           	psect	cstackCOMMON
   381     0070                     __pcstackCOMMON:
   382     0070                     ?_setup:
   383     0070                     ??_setup:	
   384                           ; 1 bytes @ 0x0
   385                           
   386     0070                     ?_enviocadena:	
   387                           ; 1 bytes @ 0x0
   388                           
   389     0070                     ?_main:	
   390                           ; 1 bytes @ 0x0
   391                           
   392     0070                     ?_enviocaracter:	
   393                           ; 1 bytes @ 0x0
   394                           
   395     0070                     ??_enviocaracter:	
   396                           ; 1 bytes @ 0x0
   397                           
   398     0070                     enviocaracter@a:	
   399                           ; 1 bytes @ 0x0
   400                           
   401                           
   402                           ; 1 bytes @ 0x0
   403     0070                     	ds	1
   404     0071                     ??_enviocadena:
   405     0071                     enviocadena@cadena:	
   406                           ; 1 bytes @ 0x1
   407                           
   408                           
   409                           ; 1 bytes @ 0x1
   410     0071                     	ds	1
   411     0072                     ??_main:
   412                           
   413                           ; 1 bytes @ 0x2
   414     0072                     	ds	3
   415                           
   416                           	psect	maintext
   417     07B0                     __pmaintext:	
   418 ;;
   419 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   420 ;;
   421 ;; *************** function _main *****************
   422 ;; Defined at:
   423 ;;		line 36 in file "D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UartTester.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;		None
   426 ;; Auto vars:     Size  Location     Type
   427 ;;		None
   428 ;; Return value:  Size  Location     Type
   429 ;;                  1    wreg      void 
   430 ;; Registers used:
   431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   432 ;; Tracked objects:
   433 ;;		On entry : B00/0
   434 ;;		On exit  : 0/0
   435 ;;		Unchanged: 0/0
   436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   437 ;;      Params:         0       0       0       0       0
   438 ;;      Locals:         0       0       0       0       0
   439 ;;      Temps:          3       0       0       0       0
   440 ;;      Totals:         3       0       0       0       0
   441 ;;Total ram usage:        3 bytes
   442 ;; Hardware stack levels required when called: 2
   443 ;; This function calls:
   444 ;;		_enviocadena
   445 ;;		_setup
   446 ;; This function is called by:
   447 ;;		Startup code after reset
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451     07B0                     _main:	
   452                           ;psect for function _main
   453                           
   454     07B0                     l734:	
   455                           ;incstack = 0
   456                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   457                           
   458                           
   459                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UartTester.c: 37:     setup();
   460     07B0  120A  118A  2798  120A  118A  	fcall	_setup
   461     07B5                     l736:
   462                           
   463                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UartTester.c: 42:         enviocad
      +                          ena("Hi from the PIC16F887");
   464     07B5  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   465     07B6  120A  118A  27CC  120A  118A  	fcall	_enviocadena
   466     07BB                     l738:
   467                           
   468                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UartTester.c: 44:         _delay((
      +                          unsigned long)((5000)*(8000000/4000.0)));
   469     07BB  3033               	movlw	51
   470     07BC  00F4               	movwf	??_main+2
   471     07BD  30BB               	movlw	187
   472     07BE  00F3               	movwf	??_main+1
   473     07BF  30DF               	movlw	223
   474     07C0  00F2               	movwf	??_main
   475     07C1                     u87:
   476     07C1  0BF2               	decfsz	??_main,f
   477     07C2  2FC1               	goto	u87
   478     07C3  0BF3               	decfsz	??_main+1,f
   479     07C4  2FC1               	goto	u87
   480     07C5  0BF4               	decfsz	??_main+2,f
   481     07C6  2FC1               	goto	u87
   482     07C7  2FC8               	nop2
   483     07C8  2FB5               	goto	l736
   484     07C9  120A  118A  2800   	ljmp	start
   485     07CC                     __end_of_main:
   486                           
   487                           	psect	text1
   488     0798                     __ptext1:	
   489 ;; *************** function _setup *****************
   490 ;; Defined at:
   491 ;;		line 48 in file "D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UartTester.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0
   508 ;;      Totals:         0       0       0       0       0
   509 ;;Total ram usage:        0 bytes
   510 ;; Hardware stack levels used: 1
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		_main
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518     0798                     _setup:	
   519                           ;psect for function _setup
   520                           
   521     0798                     l668:	
   522                           ;incstack = 0
   523                           ; Regs used in _setup: [wreg+status,2+status,0]
   524                           
   525                           
   526                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UartTester.c: 50:     OSCCONbits.I
      +                          RCF = 0b111;
   527     0798  3070               	movlw	112
   528     0799  1683               	bsf	3,5	;RP0=1, select bank1
   529     079A  1303               	bcf	3,6	;RP1=0, select bank1
   530     079B  048F               	iorwf	15,f	;volatile
   531     079C                     l670:
   532                           
   533                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UartTester.c: 51:     OSCCONbits.S
      +                          CS = 1;
   534     079C  140F               	bsf	15,0	;volatile
   535     079D                     l672:
   536                           
   537                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UartTester.c: 53:     TXSTAbits.SY
      +                          NC = 0;
   538     079D  1218               	bcf	24,4	;volatile
   539     079E                     l674:
   540                           
   541                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UartTester.c: 54:     TXSTAbits.BR
      +                          GH = 1;
   542     079E  1518               	bsf	24,2	;volatile
   543     079F                     l676:
   544                           
   545                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UartTester.c: 56:     BAUDCTLbits.
      +                          BRG16 = 1;
   546     079F  1683               	bsf	3,5	;RP0=1, select bank3
   547     07A0  1703               	bsf	3,6	;RP1=1, select bank3
   548     07A1  1587               	bsf	7,3	;volatile
   549     07A2                     l678:
   550                           
   551                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UartTester.c: 60:     SPBRG = 207;
   552     07A2  30CF               	movlw	207
   553     07A3  1683               	bsf	3,5	;RP0=1, select bank1
   554     07A4  1303               	bcf	3,6	;RP1=0, select bank1
   555     07A5  0099               	movwf	25	;volatile
   556     07A6                     l680:
   557                           
   558                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UartTester.c: 62:     SPBRGH = 0;
   559     07A6  019A               	clrf	26	;volatile
   560     07A7                     l682:
   561                           
   562                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UartTester.c: 64:     RCSTAbits.SP
      +                          EN = 1;
   563     07A7  1283               	bcf	3,5	;RP0=0, select bank0
   564     07A8  1303               	bcf	3,6	;RP1=0, select bank0
   565     07A9  1798               	bsf	24,7	;volatile
   566     07AA                     l684:
   567                           
   568                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UartTester.c: 65:     RCSTAbits.RX
      +                          9 = 0;
   569     07AA  1318               	bcf	24,6	;volatile
   570     07AB                     l686:
   571                           
   572                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UartTester.c: 66:     RCSTAbits.CR
      +                          EN = 1;
   573     07AB  1618               	bsf	24,4	;volatile
   574     07AC                     l688:
   575                           
   576                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UartTester.c: 67:     TXSTAbits.TX
      +                          EN = 1;
   577     07AC  1683               	bsf	3,5	;RP0=1, select bank1
   578     07AD  1303               	bcf	3,6	;RP1=0, select bank1
   579     07AE  1698               	bsf	24,5	;volatile
   580     07AF                     l31:
   581     07AF  0008               	return
   582     07B0                     __end_of_setup:
   583                           
   584                           	psect	text2
   585     07CC                     __ptext2:	
   586 ;; *************** function _enviocadena *****************
   587 ;; Defined at:
   588 ;;		line 49 in file "D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UART.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;  cadena          1    wreg     PTR unsigned char 
   591 ;;		 -> STR_1(22), 
   592 ;; Auto vars:     Size  Location     Type
   593 ;;  cadena          1    1[COMMON] PTR unsigned char 
   594 ;;		 -> STR_1(22), 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0
   605 ;;      Locals:         1       0       0       0       0
   606 ;;      Temps:          0       0       0       0       0
   607 ;;      Totals:         1       0       0       0       0
   608 ;;Total ram usage:        1 bytes
   609 ;; Hardware stack levels used: 1
   610 ;; Hardware stack levels required when called: 1
   611 ;; This function calls:
   612 ;;		_enviocaracter
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618     07CC                     _enviocadena:	
   619                           ;psect for function _enviocadena
   620                           
   621                           
   622                           ;incstack = 0
   623                           ; Regs used in _enviocadena: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   624                           ;enviocadena@cadena stored from wreg
   625     07CC  00F1               	movwf	enviocadena@cadena
   626     07CD                     l724:
   627                           
   628                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UART.c: 50:     while (*cadena != 
      +                          0){
   629     07CD  2FDE               	goto	l730
   630     07CE                     l726:
   631                           
   632                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UART.c: 51:       enviocaracter(*c
      +                          adena);
   633     07CE  0871               	movf	enviocadena@cadena,w
   634     07CF  0084               	movwf	4
   635     07D0  120A  118A  2003  120A  118A  	fcall	stringdir
   636     07D5  120A  118A  2788  120A  118A  	fcall	_enviocaracter
   637     07DA                     l728:
   638                           
   639                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UART.c: 52:       cadena++;
   640     07DA  3001               	movlw	1
   641     07DB  00FF               	movwf	btemp+1
   642     07DC  087F               	movf	btemp+1,w
   643     07DD  07F1               	addwf	enviocadena@cadena,f
   644     07DE                     l730:
   645                           
   646                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UART.c: 50:     while (*cadena != 
      +                          0){
   647     07DE  0871               	movf	enviocadena@cadena,w
   648     07DF  0084               	movwf	4
   649     07E0  120A  118A  2003  120A  118A  	fcall	stringdir
   650     07E5  3A00               	xorlw	0
   651     07E6  1D03               	skipz
   652     07E7  2FE9               	goto	u61
   653     07E8  2FEA               	goto	u60
   654     07E9                     u61:
   655     07E9  2FCE               	goto	l726
   656     07EA                     u60:
   657     07EA                     l70:
   658                           
   659                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UART.c: 54:     if (PIR1bits.TXIF)
      +                          {
   660     07EA  1283               	bcf	3,5	;RP0=0, select bank0
   661     07EB  1303               	bcf	3,6	;RP1=0, select bank0
   662     07EC  1E0C               	btfss	12,4	;volatile
   663     07ED  2FEF               	goto	u71
   664     07EE  2FF0               	goto	u70
   665     07EF                     u71:
   666     07EF  2FF2               	goto	l72
   667     07F0                     u70:
   668     07F0                     l732:
   669                           
   670                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UART.c: 55:             TXREG = 13
      +                          ;
   671     07F0  300D               	movlw	13
   672     07F1  0099               	movwf	25	;volatile
   673     07F2                     l72:
   674     07F2  0008               	return
   675     07F3                     __end_of_enviocadena:
   676                           
   677                           	psect	text3
   678     0788                     __ptext3:	
   679 ;; *************** function _enviocaracter *****************
   680 ;; Defined at:
   681 ;;		line 40 in file "D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UART.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;  a               1    wreg     unsigned char 
   684 ;; Auto vars:     Size  Location     Type
   685 ;;  a               1    0[COMMON] unsigned char 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   695 ;;      Params:         0       0       0       0       0
   696 ;;      Locals:         1       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0
   698 ;;      Totals:         1       0       0       0       0
   699 ;;Total ram usage:        1 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_enviocadena
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708     0788                     _enviocaracter:	
   709                           ;psect for function _enviocaracter
   710                           
   711                           
   712                           ;incstack = 0
   713                           ; Regs used in _enviocaracter: [wreg]
   714                           ;enviocaracter@a stored from wreg
   715     0788  00F0               	movwf	enviocaracter@a
   716     0789                     l664:
   717     0789                     l61:	
   718                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UART.c: 43:     }
   719                           
   720                           
   721                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UART.c: 41:     while (TXSTAbits.T
      +                          RMT == 0){
   722     0789  1683               	bsf	3,5	;RP0=1, select bank1
   723     078A  1303               	bcf	3,6	;RP1=0, select bank1
   724     078B  1C98               	btfss	24,1	;volatile
   725     078C  2F8E               	goto	u11
   726     078D  2F8F               	goto	u10
   727     078E                     u11:
   728     078E  2F89               	goto	l61
   729     078F                     u10:
   730     078F                     l63:
   731                           
   732                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UART.c: 44:     if (PIR1bits.TXIF)
      +                          {
   733     078F  1283               	bcf	3,5	;RP0=0, select bank0
   734     0790  1303               	bcf	3,6	;RP1=0, select bank0
   735     0791  1E0C               	btfss	12,4	;volatile
   736     0792  2F94               	goto	u21
   737     0793  2F95               	goto	u20
   738     0794                     u21:
   739     0794  2F97               	goto	l65
   740     0795                     u20:
   741     0795                     l666:
   742                           
   743                           ;D:/Universidad/Semestre2_2023/Digital-2/UartTester.X/UART.c: 45:             TXREG = a;
   744     0795  0870               	movf	enviocaracter@a,w
   745     0796  0099               	movwf	25	;volatile
   746     0797                     l65:
   747     0797  0008               	return
   748     0798                     __end_of_enviocaracter:
   749     007E                     btemp	set	126	;btemp
   750     007E                     wtemp0	set	126
   751                           
   752                           	psect	idloc
   753                           
   754                           ;Config register IDLOC0 @ 0x2000
   755                           ;	unspecified, using default values
   756     2000                     	org	8192
   757     2000  3FFF               	dw	16383
   758                           
   759                           ;Config register IDLOC1 @ 0x2001
   760                           ;	unspecified, using default values
   761     2001                     	org	8193
   762     2001  3FFF               	dw	16383
   763                           
   764                           ;Config register IDLOC2 @ 0x2002
   765                           ;	unspecified, using default values
   766     2002                     	org	8194
   767     2002  3FFF               	dw	16383
   768                           
   769                           ;Config register IDLOC3 @ 0x2003
   770                           ;	unspecified, using default values
   771     2003                     	org	8195
   772     2003  3FFF               	dw	16383
   773                           
   774                           	psect	config
   775                           
   776                           ;Config register CONFIG1 @ 0x2007
   777                           ;	Oscillator Selection bits
   778                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   779                           ;	Watchdog Timer Enable bit
   780                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   781                           ;	Power-up Timer Enable bit
   782                           ;	PWRTE = OFF, PWRT disabled
   783                           ;	RE3/MCLR pin function select bit
   784                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   785                           ;	Code Protection bit
   786                           ;	CP = OFF, Program memory code protection is disabled
   787                           ;	Data Code Protection bit
   788                           ;	CPD = OFF, Data memory code protection is disabled
   789                           ;	Brown Out Reset Selection bits
   790                           ;	BOREN = OFF, BOR disabled
   791                           ;	Internal External Switchover bit
   792                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   793                           ;	Fail-Safe Clock Monitor Enabled bit
   794                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   795                           ;	Low Voltage Programming Enable bit
   796                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   797                           ;	In-Circuit Debugger Mode bit
   798                           ;	DEBUG = 0x1, unprogramme   799     2007                     	org	8199
   800     2007  20D4               	dw	8404
   801                           
   802                           ;Config register CONFIG2 @ 0x2008
   803                           ;	Brown-out Reset Selection bit
   804                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   805                           ;	Flash Program Memory Self Write Enable bits
   806                           ;	WRT = OFF, Write protection off
   807     2008                     	org	8200
   808     2008  3FFF               	dw	16383

Data Sizes:
    Strings     22
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    enviocadena@cadena	PTR unsigned char  size(1) Largest target is 22
		 -> STR_1(CODE[22]), 


Critical Paths under _main in COMMON

    _main->_enviocadena
    _enviocadena->_enviocaracter

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      93
                                              2 COMMON     3     3      0
                        _enviocadena
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enviocadena                                          1     1      0      93
                                              1 COMMON     1     1      0
                      _enviocaracter
 ---------------------------------------------------------------------------------
 (2) _enviocaracter                                        1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _enviocadena
     _enviocaracter
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 17 16:22:26 2023

                      pc 0002                       l31 07AF                       l61 0789  
                     l70 07EA                       l63 078F                       l72 07F2  
                     l65 0797                       u10 078F                       u11 078E  
                     u20 0795                       u21 0794                       u60 07EA  
                     u61 07E9                       u70 07F0                       u71 07EF  
                     u87 07C1                       fsr 0004                      l730 07DE  
                    l732 07F0                      l724 07CD                      l726 07CE  
                    l670 079C                      l734 07B0                      l664 0789  
                    l728 07DA                      l680 07A6                      l672 079D  
                    l736 07B5                      l666 0795                      l682 07A7  
                    l674 079E                      l738 07BB                      l684 07AA  
                    l676 079F                      l668 0798                      l686 07AB  
                    l678 07A2                      l688 07AC                      fsr0 0004  
                    indf 0000                     STR_1 0009                     _main 07B0  
                   btemp 007E                     _volt 0020                     start 0000  
           ?_enviocadena 0070                    ?_main 0070                    _EEADR 010D  
                  _EEDAT 010C                    _SPBRG 0099                    _TXREG 0019  
                  _setup 0798                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07F3             __end_of_main 07CC  
                 ??_main 0072                   _EECON2 018D                   ?_setup 0070  
                 _SPBRGH 009A            _enviocaracter 0788  __end_of__initialization 07FC  
         __pcstackCOMMON 0070           ?_enviocaracter 0070            __end_of_setup 07B0  
                ??_setup 0070               __pbssBANK0 0020               __pmaintext 07B0  
         enviocaracter@a 0070               __stringtab 0003          ??_enviocaracter 0070  
                __ptext1 0798                  __ptext2 07CC                  __ptext3 0788  
                clrloop0 0781     end_of_initialization 07FC                _RCSTAbits 0018  
              _TXSTAbits 0098              _BAUDCTLbits 0187      start_initialization 07F3  
          ??_enviocadena 0071                ___latbits 0002      __end_of_enviocadena 07F3  
              __pstrings 0003                clear_ram0 0780                 _PIR1bits 000C  
               _PIR2bits 000D    __end_of_enviocaracter 0798              __stringbase 0008  
      enviocadena@cadena 0071               _EECON1bits 018C              _enviocadena 07CC  
     __end_of__stringtab 0009               _INTCONbits 000B                stringcode 0003  
             _OSCCONbits 008F                 stringdir 0003                 stringtab 0003  
