

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Jul 26 06:39:07 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  008F                     	;# 
   270  0090                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  0105                     	;# 
   289  0107                     	;# 
   290  0108                     	;# 
   291  0109                     	;# 
   292  010C                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  0185                     	;# 
   298  0187                     	;# 
   299  0188                     	;# 
   300  0189                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  008F                     	;# 
   348  0090                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0095                     	;# 
   356  0096                     	;# 
   357  0097                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009A                     	;# 
   361  009B                     	;# 
   362  009C                     	;# 
   363  009D                     	;# 
   364  009E                     	;# 
   365  009F                     	;# 
   366  0105                     	;# 
   367  0107                     	;# 
   368  0108                     	;# 
   369  0109                     	;# 
   370  010C                     	;# 
   371  010C                     	;# 
   372  010D                     	;# 
   373  010E                     	;# 
   374  010F                     	;# 
   375  0185                     	;# 
   376  0187                     	;# 
   377  0188                     	;# 
   378  0189                     	;# 
   379  018C                     	;# 
   380  018D                     	;# 
   381  0000                     	;# 
   382  0001                     	;# 
   383  0002                     	;# 
   384  0003                     	;# 
   385  0004                     	;# 
   386  0005                     	;# 
   387  0006                     	;# 
   388  0007                     	;# 
   389  0008                     	;# 
   390  0009                     	;# 
   391  000A                     	;# 
   392  000B                     	;# 
   393  000C                     	;# 
   394  000D                     	;# 
   395  000E                     	;# 
   396  000E                     	;# 
   397  000F                     	;# 
   398  0010                     	;# 
   399  0011                     	;# 
   400  0012                     	;# 
   401  0013                     	;# 
   402  0014                     	;# 
   403  0015                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0017                     	;# 
   407  0018                     	;# 
   408  0019                     	;# 
   409  001A                     	;# 
   410  001B                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001D                     	;# 
   414  001E                     	;# 
   415  001F                     	;# 
   416  0081                     	;# 
   417  0085                     	;# 
   418  0086                     	;# 
   419  0087                     	;# 
   420  0088                     	;# 
   421  0089                     	;# 
   422  008C                     	;# 
   423  008D                     	;# 
   424  008E                     	;# 
   425  008F                     	;# 
   426  0090                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0094                     	;# 
   433  0095                     	;# 
   434  0096                     	;# 
   435  0097                     	;# 
   436  0098                     	;# 
   437  0099                     	;# 
   438  009A                     	;# 
   439  009B                     	;# 
   440  009C                     	;# 
   441  009D                     	;# 
   442  009E                     	;# 
   443  009F                     	;# 
   444  0105                     	;# 
   445  0107                     	;# 
   446  0108                     	;# 
   447  0109                     	;# 
   448  010C                     	;# 
   449  010C                     	;# 
   450  010D                     	;# 
   451  010E                     	;# 
   452  010F                     	;# 
   453  0185                     	;# 
   454  0187                     	;# 
   455  0188                     	;# 
   456  0189                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  0000                     	;# 
   460  0001                     	;# 
   461  0002                     	;# 
   462  0003                     	;# 
   463  0004                     	;# 
   464  0005                     	;# 
   465  0006                     	;# 
   466  0007                     	;# 
   467  0008                     	;# 
   468  0009                     	;# 
   469  000A                     	;# 
   470  000B                     	;# 
   471  000C                     	;# 
   472  000D                     	;# 
   473  000E                     	;# 
   474  000E                     	;# 
   475  000F                     	;# 
   476  0010                     	;# 
   477  0011                     	;# 
   478  0012                     	;# 
   479  0013                     	;# 
   480  0014                     	;# 
   481  0015                     	;# 
   482  0015                     	;# 
   483  0016                     	;# 
   484  0017                     	;# 
   485  0018                     	;# 
   486  0019                     	;# 
   487  001A                     	;# 
   488  001B                     	;# 
   489  001B                     	;# 
   490  001C                     	;# 
   491  001D                     	;# 
   492  001E                     	;# 
   493  001F                     	;# 
   494  0081                     	;# 
   495  0085                     	;# 
   496  0086                     	;# 
   497  0087                     	;# 
   498  0088                     	;# 
   499  0089                     	;# 
   500  008C                     	;# 
   501  008D                     	;# 
   502  008E                     	;# 
   503  008F                     	;# 
   504  0090                     	;# 
   505  0091                     	;# 
   506  0092                     	;# 
   507  0093                     	;# 
   508  0093                     	;# 
   509  0093                     	;# 
   510  0094                     	;# 
   511  0095                     	;# 
   512  0096                     	;# 
   513  0097                     	;# 
   514  0098                     	;# 
   515  0099                     	;# 
   516  009A                     	;# 
   517  009B                     	;# 
   518  009C                     	;# 
   519  009D                     	;# 
   520  009E                     	;# 
   521  009F                     	;# 
   522  0105                     	;# 
   523  0107                     	;# 
   524  0108                     	;# 
   525  0109                     	;# 
   526  010C                     	;# 
   527  010C                     	;# 
   528  010D                     	;# 
   529  010E                     	;# 
   530  010F                     	;# 
   531  0185                     	;# 
   532  0187                     	;# 
   533  0188                     	;# 
   534  0189                     	;# 
   535  018C                     	;# 
   536  018D                     	;# 
   537                           
   538                           	psect	strings
   539  0100                     __pstrings:
   540  0100                     stringtab:
   541  0100                     __stringtab:
   542                           
   543                           ;	String table - string pointers are 1 byte each
   544  0100  1BFF               	btfsc	btemp+1,7
   545  0101  290A               	ljmp	stringcode
   546  0102  1383               	bcf	3,7
   547  0103  187F               	btfsc	btemp+1,0
   548  0104  1783               	bsf	3,7
   549  0105  0800               	movf	0,w
   550  0106  0A84               	incf	4,f
   551  0107  1903               	skipnz
   552  0108  0AFF               	incf	btemp+1,f
   553  0109  0008               	return
   554  010A                     stringcode:
   555  010A                     stringdir:
   556  010A  3001               	movlw	high stringdir
   557  010B  008A               	movwf	10
   558  010C  0804               	movf	4,w
   559  010D  0A84               	incf	4,f
   560  010E  0782               	addwf	2,f
   561  010F                     __stringbase:
   562  010F  3400               	retlw	0
   563  0110                     __end_of__stringtab:
   564  0110                     _dpowers:
   565  0110  3401               	retlw	1
   566  0111  3400               	retlw	0
   567  0112  340A               	retlw	10
   568  0113  3400               	retlw	0
   569  0114  3464               	retlw	100
   570  0115  3400               	retlw	0
   571  0116  34E8               	retlw	232
   572  0117  3403               	retlw	3
   573  0118  3410               	retlw	16
   574  0119  3427               	retlw	39
   575  011A                     __end_of_dpowers:
   576  0001                     _TMR0	set	1
   577  001E                     _ADRESH	set	30
   578  000C                     _PIR1bits	set	12
   579  001F                     _ADCON0bits	set	31
   580  000B                     _INTCONbits	set	11
   581  0008                     _PORTD	set	8
   582  0005                     _PORTA	set	5
   583  005A                     _T0IF	set	90
   584  0066                     _ADIF	set	102
   585  0043                     _RD3	set	67
   586  0042                     _RD2	set	66
   587  0047                     _RD7	set	71
   588  0046                     _RD6	set	70
   589  0045                     _RD5	set	69
   590  0044                     _RD4	set	68
   591  008C                     _PIE1bits	set	140
   592  009F                     _ADCON1bits	set	159
   593  0081                     _OPTION_REGbits	set	129
   594  0085                     _TRISA	set	133
   595  008F                     _OSCCONbits	set	143
   596  0088                     _TRISD	set	136
   597  0188                     _ANSELbits	set	392
   598  0189                     _ANSELH	set	393
   599  011A                     STR_5:
   600  011A  3477               	retlw	119	;'w'
   601  011B  3477               	retlw	119	;'w'
   602  011C  3477               	retlw	119	;'w'
   603  011D  342E               	retlw	46	;'.'
   604  011E  3465               	retlw	101	;'e'
   605  011F  346C               	retlw	108	;'l'
   606  0120  3465               	retlw	101	;'e'
   607  0121  3463               	retlw	99	;'c'
   608  0122  3474               	retlw	116	;'t'
   609  0123  3472               	retlw	114	;'r'
   610  0124  346F               	retlw	111	;'o'
   611  0125  3453               	retlw	83	;'S'
   612  0126  346F               	retlw	111	;'o'
   613  0127  346D               	retlw	109	;'m'
   614  0128  3465               	retlw	101	;'e'
   615  0129  342E               	retlw	46	;'.'
   616  012A  3463               	retlw	99	;'c'
   617  012B  346F               	retlw	111	;'o'
   618  012C  346D               	retlw	109	;'m'
   619  012D  3400               	retlw	0
   620  012E                     STR_8:
   621  012E  3450               	retlw	80	;'P'
   622  012F  346F               	retlw	111	;'o'
   623  0130  3474               	retlw	116	;'t'
   624  0131  3420               	retlw	32	;' '
   625  0132  3431               	retlw	49	;'1'
   626  0133  343A               	retlw	58	;':'
   627  0134  3420               	retlw	32	;' '
   628  0135  3420               	retlw	32	;' '
   629  0136  3420               	retlw	32	;' '
   630  0137  3420               	retlw	32	;' '
   631  0138  3420               	retlw	32	;' '
   632  0139  3443               	retlw	67	;'C'
   633  013A  3450               	retlw	80	;'P'
   634  013B  3455               	retlw	85	;'U'
   635  013C  343A               	retlw	58	;':'
   636  013D  3400               	retlw	0
   637  013E                     STR_1:
   638  013E  344C               	retlw	76	;'L'
   639  013F  3443               	retlw	67	;'C'
   640  0140  3444               	retlw	68	;'D'
   641  0141  3420               	retlw	32	;' '
   642  0142  344C               	retlw	76	;'L'
   643  0143  3469               	retlw	105	;'i'
   644  0144  3462               	retlw	98	;'b'
   645  0145  3472               	retlw	114	;'r'
   646  0146  3461               	retlw	97	;'a'
   647  0147  3472               	retlw	114	;'r'
   648  0148  3479               	retlw	121	;'y'
   649  0149  3420               	retlw	32	;' '
   650  014A  3466               	retlw	102	;'f'
   651  014B  346F               	retlw	111	;'o'
   652  014C  3472               	retlw	114	;'r'
   653  014D  3400               	retlw	0
   654  014E                     STR_3:
   655  014E  3444               	retlw	68	;'D'
   656  014F  3465               	retlw	101	;'e'
   657  0150  3476               	retlw	118	;'v'
   658  0151  3465               	retlw	101	;'e'
   659  0152  346C               	retlw	108	;'l'
   660  0153  346F               	retlw	111	;'o'
   661  0154  3470               	retlw	112	;'p'
   662  0155  3465               	retlw	101	;'e'
   663  0156  3464               	retlw	100	;'d'
   664  0157  3420               	retlw	32	;' '
   665  0158  3442               	retlw	66	;'B'
   666  0159  3479               	retlw	121	;'y'
   667  015A  3400               	retlw	0
   668  015B                     STR_4:
   669  015B  3465               	retlw	101	;'e'
   670  015C  346C               	retlw	108	;'l'
   671  015D  3465               	retlw	101	;'e'
   672  015E  3463               	retlw	99	;'c'
   673  015F  3474               	retlw	116	;'t'
   674  0160  3472               	retlw	114	;'r'
   675  0161  346F               	retlw	111	;'o'
   676  0162  3453               	retlw	83	;'S'
   677  0163  346F               	retlw	111	;'o'
   678  0164  346D               	retlw	109	;'m'
   679  0165  3465               	retlw	101	;'e'
   680  0166  3400               	retlw	0
   681  0167                     STR_2:
   682  0167  344D               	retlw	77	;'M'
   683  0168  3450               	retlw	80	;'P'
   684  0169  344C               	retlw	76	;'L'
   685  016A  3441               	retlw	65	;'A'
   686  016B  3442               	retlw	66	;'B'
   687  016C  3420               	retlw	32	;' '
   688  016D  3458               	retlw	88	;'X'
   689  016E  3443               	retlw	67	;'C'
   690  016F  3438               	retlw	56	;'8'
   691  0170  3400               	retlw	0
   692  0171                     STR_6:
   693  0171  3425               	retlw	37	;'%'
   694  0172  3464               	retlw	100	;'d'
   695  0173  3420               	retlw	32	;' '
   696  0174  3400               	retlw	0
   697  0175                     STR_7:
   698  0175  3425               	retlw	37	;'%'
   699  0176  3464               	retlw	100	;'d'
   700  0177  3400               	retlw	0
   701                           
   702                           	psect	cinit
   703  000F                     start_initialization:	
   704                           ; #config settings
   705                           
   706  000F                     __initialization:
   707                           
   708                           ; Clear objects allocated to BANK0
   709  000F  1283               	bcf	3,5	;RP0=0, select bank0
   710  0010  1303               	bcf	3,6	;RP1=0, select bank0
   711  0011  01CB               	clrf	__pbssBANK0& (0+127)
   712  0012                     end_of_initialization:	
   713                           ;End of C runtime variable initialization code
   714                           
   715  0012                     __end_of__initialization:
   716  0012  0183               	clrf	3
   717  0013  120A  118A  2BDC   	ljmp	_main	;jump to C main() function
   718                           
   719                           	psect	bssBANK0
   720  004B                     __pbssBANK0:
   721  004B                     _c:
   722  004B                     	ds	1
   723                           
   724                           	psect	cstackCOMMON
   725  0070                     __pcstackCOMMON:
   726  0070                     ?_Lcd_Clear:
   727  0070                     ?_Lcd_Write_Char:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_ioc_init:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_adc_change_channel:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?_LCD_Test:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_Lcd_Port:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_Lcd_Cmd:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_Lcd_Init:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_setupF:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_adc_read:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ??_adc_read:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_isr:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_main:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ioc_init@pin:	
   764                           ; 1 bytes @ 0x0
   765                           
   766                           
   767                           ; 1 bytes @ 0x0
   768  0070                     	ds	1
   769  0071                     adc_read@channel:
   770                           
   771                           ; 1 bytes @ 0x1
   772  0071                     	ds	1
   773  0072                     ??_isr:
   774                           
   775                           ; 1 bytes @ 0x2
   776  0072                     	ds	3
   777  0075                     ??_ioc_init:
   778  0075                     ??_adc_change_channel:	
   779                           ; 1 bytes @ 0x5
   780                           
   781  0075                     ??_Lcd_Port:	
   782                           ; 1 bytes @ 0x5
   783                           
   784  0075                     ?_configOsc:	
   785                           ; 1 bytes @ 0x5
   786                           
   787  0075                     ?___lwdiv:	
   788                           ; 1 bytes @ 0x5
   789                           
   790  0075                     Lcd_Port@a:	
   791                           ; 2 bytes @ 0x5
   792                           
   793  0075                     configOsc@frec:	
   794                           ; 1 bytes @ 0x5
   795                           
   796  0075                     ___lwdiv@divisor:	
   797                           ; 2 bytes @ 0x5
   798                           
   799                           
   800                           ; 2 bytes @ 0x5
   801  0075                     	ds	1
   802  0076                     ??_Lcd_Write_Char:
   803  0076                     ??_Lcd_Cmd:	
   804                           ; 1 bytes @ 0x6
   805                           
   806  0076                     adc_change_channel@channel:	
   807                           ; 1 bytes @ 0x6
   808                           
   809                           
   810                           ; 1 bytes @ 0x6
   811  0076                     	ds	1
   812  0077                     ?_Lcd_Write_String:
   813  0077                     ??_configOsc:	
   814                           ; 1 bytes @ 0x7
   815                           
   816  0077                     ??_setupF:	
   817                           ; 1 bytes @ 0x7
   818                           
   819  0077                     ?_adc_init:	
   820                           ; 1 bytes @ 0x7
   821                           
   822  0077                     Lcd_Write_String@a:	
   823                           ; 1 bytes @ 0x7
   824                           
   825  0077                     adc_init@channel:	
   826                           ; 2 bytes @ 0x7
   827                           
   828  0077                     ___lwdiv@dividend:	
   829                           ; 2 bytes @ 0x7
   830                           
   831                           
   832                           ; 2 bytes @ 0x7
   833  0077                     	ds	1
   834  0078                     Lcd_Cmd@a:
   835                           
   836                           ; 1 bytes @ 0x8
   837  0078                     	ds	1
   838  0079                     ??_Lcd_Clear:
   839                           
   840                           	psect	cstackBANK0
   841  0020                     __pcstackBANK0:	
   842                           ; 1 bytes @ 0x9
   843                           
   844  0020                     ?_Lcd_Set_Cursor:
   845  0020                     ??_Lcd_Init:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0020                     ??_adc_init:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0020                     ??___lwdiv:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0020                     Lcd_Set_Cursor@b:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0020                     Lcd_Write_Char@temp:	
   858                           ; 1 bytes @ 0x0
   859                           
   860                           
   861                           ; 1 bytes @ 0x0
   862  0020                     	ds	1
   863  0021                     ??_Lcd_Set_Cursor:
   864  0021                     Lcd_Write_Char@y:	
   865                           ; 1 bytes @ 0x1
   866                           
   867  0021                     ___lwdiv@quotient:	
   868                           ; 1 bytes @ 0x1
   869                           
   870                           
   871                           ; 2 bytes @ 0x1
   872  0021                     	ds	1
   873  0022                     Lcd_Write_Char@a:
   874                           
   875                           ; 1 bytes @ 0x2
   876  0022                     	ds	1
   877  0023                     ??_Lcd_Write_String:
   878  0023                     Lcd_Set_Cursor@a:	
   879                           ; 1 bytes @ 0x3
   880                           
   881  0023                     ___lwdiv@counter:	
   882                           ; 1 bytes @ 0x3
   883                           
   884                           
   885                           ; 1 bytes @ 0x3
   886  0023                     	ds	1
   887  0024                     ?___lwmod:
   888  0024                     Lcd_Set_Cursor@z:	
   889                           ; 2 bytes @ 0x4
   890                           
   891  0024                     ___lwmod@divisor:	
   892                           ; 1 bytes @ 0x4
   893                           
   894                           
   895                           ; 2 bytes @ 0x4
   896  0024                     	ds	1
   897  0025                     Lcd_Set_Cursor@y:
   898                           
   899                           ; 1 bytes @ 0x5
   900  0025                     	ds	1
   901  0026                     Lcd_Set_Cursor@temp:
   902  0026                     Lcd_Write_String@i:	
   903                           ; 1 bytes @ 0x6
   904                           
   905  0026                     ___lwmod@dividend:	
   906                           ; 2 bytes @ 0x6
   907                           
   908                           
   909                           ; 2 bytes @ 0x6
   910  0026                     	ds	2
   911  0028                     ??___lwmod:
   912                           
   913                           ; 1 bytes @ 0x8
   914  0028                     	ds	1
   915  0029                     ___lwmod@counter:
   916                           
   917                           ; 1 bytes @ 0x9
   918  0029                     	ds	1
   919  002A                     ?_sprintf:
   920  002A                     sprintf@f:	
   921                           ; 2 bytes @ 0xA
   922                           
   923                           
   924                           ; 1 bytes @ 0xA
   925  002A                     	ds	3
   926  002D                     ??_sprintf:
   927                           
   928                           ; 1 bytes @ 0xD
   929  002D                     	ds	3
   930  0030                     sprintf@ap:
   931                           
   932                           ; 1 bytes @ 0x10
   933  0030                     	ds	1
   934  0031                     sprintf@flag:
   935                           
   936                           ; 1 bytes @ 0x11
   937  0031                     	ds	1
   938  0032                     sprintf@prec:
   939                           
   940                           ; 1 bytes @ 0x12
   941  0032                     	ds	1
   942  0033                     sprintf@val:
   943                           
   944                           ; 2 bytes @ 0x13
   945  0033                     	ds	2
   946  0035                     sprintf@sp:
   947                           
   948                           ; 1 bytes @ 0x15
   949  0035                     	ds	1
   950  0036                     sprintf@c:
   951                           
   952                           ; 1 bytes @ 0x16
   953  0036                     	ds	1
   954  0037                     ?_intToString:
   955  0037                     intToString@num:	
   956                           ; 1 bytes @ 0x17
   957                           
   958                           
   959                           ; 2 bytes @ 0x17
   960  0037                     	ds	2
   961  0039                     intToString@buffer:
   962                           
   963                           ; 1 bytes @ 0x19
   964  0039                     	ds	1
   965  003A                     ??_intToString:
   966                           
   967                           ; 1 bytes @ 0x1A
   968  003A                     	ds	1
   969  003B                     ??_LCD_Test:
   970                           
   971                           ; 1 bytes @ 0x1B
   972  003B                     	ds	3
   973  003E                     LCD_Test@buffer:
   974                           
   975                           ; 12 bytes @ 0x1E
   976  003E                     	ds	12
   977  004A                     ??_main:
   978                           
   979                           ; 1 bytes @ 0x2A
   980  004A                     	ds	1
   981                           
   982                           	psect	maintext
   983  03DC                     __pmaintext:	
   984 ;;
   985 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   986 ;;
   987 ;; *************** function _main *****************
   988 ;; Defined at:
   989 ;;		line 70 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;		None
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : B00/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1003 ;;      Params:         0       0       0       0       0
  1004 ;;      Locals:         0       0       0       0       0
  1005 ;;      Temps:          0       1       0       0       0
  1006 ;;      Totals:         0       1       0       0       0
  1007 ;;Total ram usage:        1 bytes
  1008 ;; Hardware stack levels required when called: 6
  1009 ;; This function calls:
  1010 ;;		_LCD_Test
  1011 ;;		_Lcd_Init
  1012 ;;		_adc_init
  1013 ;;		_setupF
  1014 ;; This function is called by:
  1015 ;;		Startup code after reset
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019  03DC                     _main:	
  1020                           ;psect for function _main
  1021                           
  1022  03DC                     l1572:	
  1023                           ;incstack = 0
  1024                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1025                           
  1026  03DC  120A  118A  2408  120A  118A  	fcall	_setupF
  1027  03E1  3001               	movlw	1
  1028  03E2  00F7               	movwf	adc_init@channel
  1029  03E3  3000               	movlw	0
  1030  03E4  00F8               	movwf	adc_init@channel+1
  1031  03E5  120A  118A  242E  120A  118A  	fcall	_adc_init
  1032  03EA  120A  118A  2178  120A  118A  	fcall	_Lcd_Init
  1033  03EF                     l1574:
  1034  03EF  120A  118A  228E  120A  118A  	fcall	_LCD_Test
  1035  03F4                     l1576:
  1036  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1037  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1038  03F6  189F               	btfsc	31,1	;volatile
  1039  03F7  2BF9               	goto	u911
  1040  03F8  2BFA               	goto	u910
  1041  03F9                     u911:
  1042  03F9  2BEF               	goto	l1574
  1043  03FA                     u910:
  1044  03FA                     l1578:
  1045  03FA  3019               	movlw	25
  1046  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1047  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1048  03FD  00CA               	movwf	??_main
  1049  03FE                     u927:
  1050  03FE  0BCA               	decfsz	??_main,f
  1051  03FF  2BFE               	goto	u927
  1052  0400  2C01               	nop2
  1053  0401                     l1580:
  1054  0401  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0402  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0403  149F               	bsf	31,1	;volatile
  1057  0404  2BEF               	goto	l1574
  1058  0405  120A  118A  280C   	ljmp	start
  1059  0408                     __end_of_main:
  1060                           
  1061                           	psect	text1
  1062  0408                     __ptext1:	
  1063 ;; *************** function _setupF *****************
  1064 ;; Defined at:
  1065 ;;		line 8 in file "setup.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0, pclath, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1079 ;;      Params:         0       0       0       0       0
  1080 ;;      Locals:         0       0       0       0       0
  1081 ;;      Temps:          0       0       0       0       0
  1082 ;;      Totals:         0       0       0       0       0
  1083 ;;Total ram usage:        0 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; Hardware stack levels required when called: 3
  1086 ;; This function calls:
  1087 ;;		_configOsc
  1088 ;;		_ioc_init
  1089 ;; This function is called by:
  1090 ;;		_main
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094  0408                     _setupF:	
  1095                           ;psect for function _setupF
  1096                           
  1097  0408                     l1436:	
  1098                           ;incstack = 0
  1099                           ; Regs used in _setupF: [wreg+status,2+status,0+pclath+cstack]
  1100                           
  1101                           
  1102                           ;setup.c: 10:     ANSELH = 0;
  1103  0408  1683               	bsf	3,5	;RP0=1, select bank3
  1104  0409  1703               	bsf	3,6	;RP1=1, select bank3
  1105  040A  0189               	clrf	9	;volatile
  1106  040B                     l1438:
  1107                           
  1108                           ;setup.c: 11:     ANSELbits.ANS0 = 1;
  1109  040B  1408               	bsf	8,0	;volatile
  1110                           
  1111                           ;setup.c: 12:     TRISA = 0;
  1112  040C  1683               	bsf	3,5	;RP0=1, select bank1
  1113  040D  1303               	bcf	3,6	;RP1=0, select bank1
  1114  040E  0185               	clrf	5	;volatile
  1115                           
  1116                           ;setup.c: 13:     PORTA = 0;
  1117  040F  1283               	bcf	3,5	;RP0=0, select bank0
  1118  0410  1303               	bcf	3,6	;RP1=0, select bank0
  1119  0411  0185               	clrf	5	;volatile
  1120                           
  1121                           ;setup.c: 16:     TRISD = 0x00;
  1122  0412  1683               	bsf	3,5	;RP0=1, select bank1
  1123  0413  1303               	bcf	3,6	;RP1=0, select bank1
  1124  0414  0188               	clrf	8	;volatile
  1125                           
  1126                           ;setup.c: 17:     PORTD = 0;
  1127  0415  1283               	bcf	3,5	;RP0=0, select bank0
  1128  0416  1303               	bcf	3,6	;RP1=0, select bank0
  1129  0417  0188               	clrf	8	;volatile
  1130  0418                     l1440:
  1131                           
  1132                           ;setup.c: 20:     OPTION_REGbits.T0CS = 0;
  1133  0418  1683               	bsf	3,5	;RP0=1, select bank1
  1134  0419  1303               	bcf	3,6	;RP1=0, select bank1
  1135  041A  1281               	bcf	1,5	;volatile
  1136  041B                     l1442:
  1137                           
  1138                           ;setup.c: 21:     OPTION_REGbits.PSA = 0;
  1139  041B  1181               	bcf	1,3	;volatile
  1140  041C                     l1444:
  1141                           
  1142                           ;setup.c: 22:     OPTION_REGbits.PS = 0;
  1143  041C  30F8               	movlw	-8
  1144  041D  0581               	andwf	1,f	;volatile
  1145  041E                     l1446:
  1146                           
  1147                           ;setup.c: 24:     configOsc(4);
  1148  041E  3004               	movlw	4
  1149  041F  00F5               	movwf	configOsc@frec
  1150  0420  3000               	movlw	0
  1151  0421  00F6               	movwf	configOsc@frec+1
  1152  0422  120A  118A  21DA  120A  118A  	fcall	_configOsc
  1153  0427                     l1448:
  1154                           
  1155                           ;setup.c: 25:     ioc_init(1);
  1156  0427  3001               	movlw	1
  1157  0428  120A  118A  24EB  120A  118A  	fcall	_ioc_init
  1158  042D                     l122:
  1159  042D  0008               	return
  1160  042E                     __end_of_setupF:
  1161                           
  1162                           	psect	text2
  1163  04EB                     __ptext2:	
  1164 ;; *************** function _ioc_init *****************
  1165 ;; Defined at:
  1166 ;;		line 27 in file "setup.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  pin             1    wreg     unsigned char 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  pin             1    0[COMMON] unsigned char 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1180 ;;      Params:         0       0       0       0       0
  1181 ;;      Locals:         0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0
  1183 ;;      Totals:         0       0       0       0       0
  1184 ;;Total ram usage:        0 bytes
  1185 ;; Hardware stack levels used: 1
  1186 ;; Hardware stack levels required when called: 2
  1187 ;; This function calls:
  1188 ;;		Nothing
  1189 ;; This function is called by:
  1190 ;;		_setupF
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194  04EB                     _ioc_init:	
  1195                           ;psect for function _ioc_init
  1196                           
  1197  04EB                     l1028:	
  1198                           ;incstack = 0
  1199                           ; Regs used in _ioc_init: [wreg]
  1200                           
  1201                           
  1202                           ;setup.c: 29:     INTCONbits.GIE = 1;
  1203  04EB  178B               	bsf	11,7	;volatile
  1204                           
  1205                           ;setup.c: 30:     INTCONbits.PEIE = 1;
  1206  04EC  170B               	bsf	11,6	;volatile
  1207  04ED                     l125:
  1208  04ED  0008               	return
  1209  04EE                     __end_of_ioc_init:
  1210                           
  1211                           	psect	text3
  1212  01DA                     __ptext3:	
  1213 ;; *************** function _configOsc *****************
  1214 ;; Defined at:
  1215 ;;		line 4 in file "oscilador.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  frec            2    5[COMMON] unsigned int 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1229 ;;      Params:         2       0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0
  1232 ;;      Totals:         2       0       0       0       0
  1233 ;;Total ram usage:        2 bytes
  1234 ;; Hardware stack levels used: 1
  1235 ;; Hardware stack levels required when called: 2
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_setupF
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243  01DA                     _configOsc:	
  1244                           ;psect for function _configOsc
  1245                           
  1246  01DA                     l1408:	
  1247                           ;incstack = 0
  1248                           ; Regs used in _configOsc: [wreg+status,2+status,0]
  1249                           
  1250                           
  1251                           ;oscilador.c: 5:         if (frec == 8) OSCCONbits.IRCF = 0b111;
  1252  01DA  3008               	movlw	8
  1253  01DB  0675               	xorwf	configOsc@frec,w
  1254  01DC  0476               	iorwf	configOsc@frec+1,w
  1255  01DD  1D03               	btfss	3,2
  1256  01DE  29E0               	goto	u801
  1257  01DF  29E1               	goto	u800
  1258  01E0                     u801:
  1259  01E0  29E5               	goto	l92
  1260  01E1                     u800:
  1261  01E1                     l1410:
  1262  01E1  3070               	movlw	112
  1263  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  1264  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  1265  01E4  048F               	iorwf	15,f	;volatile
  1266  01E5                     l92:
  1267                           
  1268                           ;oscilador.c: 6:         if (frec == 4) OSCCONbits.IRCF = 0b110;
  1269  01E5  3004               	movlw	4
  1270  01E6  0675               	xorwf	configOsc@frec,w
  1271  01E7  0476               	iorwf	configOsc@frec+1,w
  1272  01E8  1D03               	btfss	3,2
  1273  01E9  29EB               	goto	u811
  1274  01EA  29EC               	goto	u810
  1275  01EB                     u811:
  1276  01EB  29F2               	goto	l93
  1277  01EC                     u810:
  1278  01EC                     l1412:
  1279  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  1280  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  1281  01EE  080F               	movf	15,w	;volatile
  1282  01EF  398F               	andlw	-113
  1283  01F0  3860               	iorlw	96
  1284  01F1  008F               	movwf	15	;volatile
  1285  01F2                     l93:
  1286                           
  1287                           ;oscilador.c: 7:         if (frec == 1) OSCCONbits.IRCF = 0b100;
  1288  01F2  0375               	decf	configOsc@frec,w
  1289  01F3  0476               	iorwf	configOsc@frec+1,w
  1290  01F4  1D03               	btfss	3,2
  1291  01F5  29F7               	goto	u821
  1292  01F6  29F8               	goto	u820
  1293  01F7                     u821:
  1294  01F7  29FE               	goto	l94
  1295  01F8                     u820:
  1296  01F8                     l1414:
  1297  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  1298  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  1299  01FA  080F               	movf	15,w	;volatile
  1300  01FB  398F               	andlw	-113
  1301  01FC  3840               	iorlw	64
  1302  01FD  008F               	movwf	15	;volatile
  1303  01FE                     l94:
  1304                           
  1305                           ;oscilador.c: 8:         if (frec == 500) OSCCONbits.IRCF = 0b011;
  1306  01FE  30F4               	movlw	244
  1307  01FF  0675               	xorwf	configOsc@frec,w
  1308  0200  1D03               	skipz
  1309  0201  2A06               	goto	u831
  1310  0202  0376               	decf	configOsc@frec+1,w
  1311  0203  1D03               	btfss	3,2
  1312  0204  2A06               	goto	u831
  1313  0205  2A07               	goto	u830
  1314  0206                     u831:
  1315  0206  2A0D               	goto	l95
  1316  0207                     u830:
  1317  0207                     l1416:
  1318  0207  1683               	bsf	3,5	;RP0=1, select bank1
  1319  0208  1303               	bcf	3,6	;RP1=0, select bank1
  1320  0209  080F               	movf	15,w	;volatile
  1321  020A  398F               	andlw	-113
  1322  020B  3830               	iorlw	48
  1323  020C  008F               	movwf	15	;volatile
  1324  020D                     l95:
  1325                           
  1326                           ;oscilador.c: 9:         if (frec == 250) OSCCONbits.IRCF = 0b101;
  1327  020D  30FA               	movlw	250
  1328  020E  0675               	xorwf	configOsc@frec,w
  1329  020F  0476               	iorwf	configOsc@frec+1,w
  1330  0210  1D03               	btfss	3,2
  1331  0211  2A13               	goto	u841
  1332  0212  2A14               	goto	u840
  1333  0213                     u841:
  1334  0213  2A1A               	goto	l96
  1335  0214                     u840:
  1336  0214                     l1418:
  1337  0214  1683               	bsf	3,5	;RP0=1, select bank1
  1338  0215  1303               	bcf	3,6	;RP1=0, select bank1
  1339  0216  080F               	movf	15,w	;volatile
  1340  0217  398F               	andlw	-113
  1341  0218  3850               	iorlw	80
  1342  0219  008F               	movwf	15	;volatile
  1343  021A                     l96:
  1344                           
  1345                           ;oscilador.c: 10:         if (frec == 125) OSCCONbits.IRCF = 0b001;
  1346  021A  307D               	movlw	125
  1347  021B  0675               	xorwf	configOsc@frec,w
  1348  021C  0476               	iorwf	configOsc@frec+1,w
  1349  021D  1D03               	btfss	3,2
  1350  021E  2A20               	goto	u851
  1351  021F  2A21               	goto	u850
  1352  0220                     u851:
  1353  0220  2A27               	goto	l97
  1354  0221                     u850:
  1355  0221                     l1420:
  1356  0221  1683               	bsf	3,5	;RP0=1, select bank1
  1357  0222  1303               	bcf	3,6	;RP1=0, select bank1
  1358  0223  080F               	movf	15,w	;volatile
  1359  0224  398F               	andlw	-113
  1360  0225  3810               	iorlw	16
  1361  0226  008F               	movwf	15	;volatile
  1362  0227                     l97:
  1363                           
  1364                           ;oscilador.c: 11:         if (frec == 31) OSCCONbits.IRCF = 0b000;
  1365  0227  301F               	movlw	31
  1366  0228  0675               	xorwf	configOsc@frec,w
  1367  0229  0476               	iorwf	configOsc@frec+1,w
  1368  022A  1D03               	btfss	3,2
  1369  022B  2A2D               	goto	u861
  1370  022C  2A2E               	goto	u860
  1371  022D                     u861:
  1372  022D  2A32               	goto	l1424
  1373  022E                     u860:
  1374  022E                     l1422:
  1375  022E  308F               	movlw	-113
  1376  022F  1683               	bsf	3,5	;RP0=1, select bank1
  1377  0230  1303               	bcf	3,6	;RP1=0, select bank1
  1378  0231  058F               	andwf	15,f	;volatile
  1379  0232                     l1424:
  1380                           
  1381                           ;oscilador.c: 12:         OSCCONbits.SCS = 1;
  1382  0232  1683               	bsf	3,5	;RP0=1, select bank1
  1383  0233  1303               	bcf	3,6	;RP1=0, select bank1
  1384  0234  140F               	bsf	15,0	;volatile
  1385  0235                     l99:
  1386  0235  0008               	return
  1387  0236                     __end_of_configOsc:
  1388                           
  1389                           	psect	text4
  1390  042E                     __ptext4:	
  1391 ;; *************** function _adc_init *****************
  1392 ;; Defined at:
  1393 ;;		line 17 in file "ADC_Interrupt.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  channel         2    7[COMMON] int 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0, pclath, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1407 ;;      Params:         2       0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0
  1409 ;;      Temps:          0       1       0       0       0
  1410 ;;      Totals:         2       1       0       0       0
  1411 ;;Total ram usage:        3 bytes
  1412 ;; Hardware stack levels used: 1
  1413 ;; Hardware stack levels required when called: 3
  1414 ;; This function calls:
  1415 ;;		_adc_change_channel
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421  042E                     _adc_init:	
  1422                           ;psect for function _adc_init
  1423                           
  1424  042E                     l1450:	
  1425                           ;incstack = 0
  1426                           ; Regs used in _adc_init: [wreg+status,2+status,0+pclath+cstack]
  1427                           
  1428                           
  1429                           ;ADC_Interrupt.c: 18:     ADCON0bits.ADCS = 0;
  1430  042E  303F               	movlw	-193
  1431  042F  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0430  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0431  059F               	andwf	31,f	;volatile
  1434  0432                     l1452:
  1435                           
  1436                           ;ADC_Interrupt.c: 19:     ADCON0bits.CHS0 = 0;
  1437  0432  111F               	bcf	31,2	;volatile
  1438  0433                     l1454:
  1439                           
  1440                           ;ADC_Interrupt.c: 20:     ADCON0bits.ADON = 1;
  1441  0433  141F               	bsf	31,0	;volatile
  1442  0434                     l1456:
  1443                           
  1444                           ;ADC_Interrupt.c: 21:     ADCON1bits.VCFG1 = 0;
  1445  0434  1683               	bsf	3,5	;RP0=1, select bank1
  1446  0435  1303               	bcf	3,6	;RP1=0, select bank1
  1447  0436  129F               	bcf	31,5	;volatile
  1448  0437                     l1458:
  1449                           
  1450                           ;ADC_Interrupt.c: 22:     ADCON1bits.VCFG0 = 0;
  1451  0437  121F               	bcf	31,4	;volatile
  1452  0438                     l1460:
  1453                           
  1454                           ;ADC_Interrupt.c: 23:     ADCON1bits.ADFM = 0;
  1455  0438  139F               	bcf	31,7	;volatile
  1456  0439                     l1462:
  1457                           
  1458                           ;ADC_Interrupt.c: 24:     adc_change_channel(1);
  1459  0439  3001               	movlw	1
  1460  043A  120A  118A  24D1  120A  118A  	fcall	_adc_change_channel
  1461  043F                     l1464:
  1462                           
  1463                           ;ADC_Interrupt.c: 26:     PIR1bits.ADIF = 0;
  1464  043F  1283               	bcf	3,5	;RP0=0, select bank0
  1465  0440  1303               	bcf	3,6	;RP1=0, select bank0
  1466  0441  130C               	bcf	12,6	;volatile
  1467  0442                     l1466:
  1468                           
  1469                           ;ADC_Interrupt.c: 27:     PIE1bits.ADIE = 1;
  1470  0442  1683               	bsf	3,5	;RP0=1, select bank1
  1471  0443  1303               	bcf	3,6	;RP1=0, select bank1
  1472  0444  170C               	bsf	12,6	;volatile
  1473  0445                     l1468:
  1474                           
  1475                           ;ADC_Interrupt.c: 28:     ADCON0bits.GO = 1;
  1476  0445  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0446  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0447  149F               	bsf	31,1	;volatile
  1479  0448                     l1470:
  1480                           
  1481                           ;ADC_Interrupt.c: 29:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1482  0448  3019               	movlw	25
  1483  0449  1283               	bcf	3,5	;RP0=0, select bank0
  1484  044A  1303               	bcf	3,6	;RP1=0, select bank0
  1485  044B  00A0               	movwf	??_adc_init
  1486  044C                     u937:
  1487  044C  0BA0               	decfsz	??_adc_init,f
  1488  044D  2C4C               	goto	u937
  1489  044E  2C4F               	nop2
  1490  044F                     l142:
  1491  044F  0008               	return
  1492  0450                     __end_of_adc_init:
  1493                           
  1494                           	psect	text5
  1495  04D1                     __ptext5:	
  1496 ;; *************** function _adc_change_channel *****************
  1497 ;; Defined at:
  1498 ;;		line 39 in file "ADC_Interrupt.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  channel         1    wreg     unsigned char 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  channel         1    6[COMMON] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      unsigned char 
  1505 ;; Registers used:
  1506 ;;		wreg, status,2, status,0
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         0       0       0       0       0
  1513 ;;      Locals:         1       0       0       0       0
  1514 ;;      Temps:          1       0       0       0       0
  1515 ;;      Totals:         2       0       0       0       0
  1516 ;;Total ram usage:        2 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; Hardware stack levels required when called: 2
  1519 ;; This function calls:
  1520 ;;		Nothing
  1521 ;; This function is called by:
  1522 ;;		_adc_init
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526  04D1                     _adc_change_channel:	
  1527                           ;psect for function _adc_change_channel
  1528                           
  1529                           
  1530                           ;incstack = 0
  1531                           ; Regs used in _adc_change_channel: [wreg+status,2+status,0]
  1532                           ;adc_change_channel@channel stored from wreg
  1533  04D1  00F6               	movwf	adc_change_channel@channel
  1534  04D2                     l1030:
  1535                           
  1536                           ;ADC_Interrupt.c: 40:     ADCON0bits.CHS = channel;
  1537  04D2  0876               	movf	adc_change_channel@channel,w
  1538  04D3  00F5               	movwf	??_adc_change_channel
  1539  04D4  0DF5               	rlf	??_adc_change_channel,f
  1540  04D5  0DF5               	rlf	??_adc_change_channel,f
  1541  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  1542  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  1543  04D8  081F               	movf	31,w	;volatile
  1544  04D9  0675               	xorwf	??_adc_change_channel,w
  1545  04DA  39C3               	andlw	-61
  1546  04DB  0675               	xorwf	??_adc_change_channel,w
  1547  04DC  009F               	movwf	31	;volatile
  1548  04DD                     l148:
  1549  04DD  0008               	return
  1550  04DE                     __end_of_adc_change_channel:
  1551                           
  1552                           	psect	text6
  1553  0178                     __ptext6:	
  1554 ;; *************** function _Lcd_Init *****************
  1555 ;; Defined at:
  1556 ;;		line 116 in file "lcd.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0, pclath, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1570 ;;      Params:         0       0       0       0       0
  1571 ;;      Locals:         0       0       0       0       0
  1572 ;;      Temps:          0       2       0       0       0
  1573 ;;      Totals:         0       2       0       0       0
  1574 ;;Total ram usage:        2 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 4
  1577 ;; This function calls:
  1578 ;;		_Lcd_Cmd
  1579 ;;		_Lcd_Port
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585  0178                     _Lcd_Init:	
  1586                           ;psect for function _Lcd_Init
  1587                           
  1588  0178                     l1426:	
  1589                           ;incstack = 0
  1590                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1591                           
  1592                           
  1593                           ;lcd.c: 118:   Lcd_Port(0x00);
  1594  0178  3000               	movlw	0
  1595  0179  120A  118A  2450  120A  118A  	fcall	_Lcd_Port
  1596  017E                     l1428:
  1597                           
  1598                           ;lcd.c: 119:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1599  017E  3034               	movlw	52
  1600  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1601  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1602  0181  00A1               	movwf	??_Lcd_Init+1
  1603  0182  30F1               	movlw	241
  1604  0183  00A0               	movwf	??_Lcd_Init
  1605  0184                     u947:
  1606  0184  0BA0               	decfsz	??_Lcd_Init,f
  1607  0185  2984               	goto	u947
  1608  0186  0BA1               	decfsz	??_Lcd_Init+1,f
  1609  0187  2984               	goto	u947
  1610  0188                     l1430:
  1611                           
  1612                           ;lcd.c: 120:   Lcd_Cmd(0x03);
  1613  0188  3003               	movlw	3
  1614  0189  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1615                           
  1616                           ;lcd.c: 121:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1617  018E  300D               	movlw	13
  1618  018F  1283               	bcf	3,5	;RP0=0, select bank0
  1619  0190  1303               	bcf	3,6	;RP1=0, select bank0
  1620  0191  00A1               	movwf	??_Lcd_Init+1
  1621  0192  30FB               	movlw	251
  1622  0193  00A0               	movwf	??_Lcd_Init
  1623  0194                     u957:
  1624  0194  0BA0               	decfsz	??_Lcd_Init,f
  1625  0195  2994               	goto	u957
  1626  0196  0BA1               	decfsz	??_Lcd_Init+1,f
  1627  0197  2994               	goto	u957
  1628  0198                     l1432:
  1629                           
  1630                           ;lcd.c: 122:   Lcd_Cmd(0x03);
  1631  0198  3003               	movlw	3
  1632  0199  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1633  019E                     l1434:
  1634                           
  1635                           ;lcd.c: 123:  _delay((unsigned long)((11)*(8000000/4000.0)));
  1636  019E  301D               	movlw	29
  1637  019F  1283               	bcf	3,5	;RP0=0, select bank0
  1638  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1639  01A1  00A1               	movwf	??_Lcd_Init+1
  1640  01A2  3090               	movlw	144
  1641  01A3  00A0               	movwf	??_Lcd_Init
  1642  01A4                     u967:
  1643  01A4  0BA0               	decfsz	??_Lcd_Init,f
  1644  01A5  29A4               	goto	u967
  1645  01A6  0BA1               	decfsz	??_Lcd_Init+1,f
  1646  01A7  29A4               	goto	u967
  1647  01A8  0000               	nop
  1648                           
  1649                           ;lcd.c: 124:   Lcd_Cmd(0x03);
  1650  01A9  3003               	movlw	3
  1651  01AA  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1652                           
  1653                           ;lcd.c: 126:   Lcd_Cmd(0x02);
  1654  01AF  3002               	movlw	2
  1655  01B0  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1656                           
  1657                           ;lcd.c: 127:   Lcd_Cmd(0x02);
  1658  01B5  3002               	movlw	2
  1659  01B6  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1660                           
  1661                           ;lcd.c: 128:   Lcd_Cmd(0x08);
  1662  01BB  3008               	movlw	8
  1663  01BC  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1664                           
  1665                           ;lcd.c: 129:   Lcd_Cmd(0x00);
  1666  01C1  3000               	movlw	0
  1667  01C2  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1668                           
  1669                           ;lcd.c: 130:   Lcd_Cmd(0x0C);
  1670  01C7  300C               	movlw	12
  1671  01C8  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1672                           
  1673                           ;lcd.c: 131:   Lcd_Cmd(0x00);
  1674  01CD  3000               	movlw	0
  1675  01CE  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1676                           
  1677                           ;lcd.c: 132:   Lcd_Cmd(0x06);
  1678  01D3  3006               	movlw	6
  1679  01D4  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  1680  01D9                     l66:
  1681  01D9  0008               	return
  1682  01DA                     __end_of_Lcd_Init:
  1683                           
  1684                           	psect	text7
  1685  028E                     __ptext7:	
  1686 ;; *************** function _LCD_Test *****************
  1687 ;; Defined at:
  1688 ;;		line 85 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;		None
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  buffer         12   30[BANK0 ] unsigned char [12]
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1702 ;;      Params:         0       0       0       0       0
  1703 ;;      Locals:         0      12       0       0       0
  1704 ;;      Temps:          0       3       0       0       0
  1705 ;;      Totals:         0      15       0       0       0
  1706 ;;Total ram usage:       15 bytes
  1707 ;; Hardware stack levels used: 1
  1708 ;; Hardware stack levels required when called: 5
  1709 ;; This function calls:
  1710 ;;		_Lcd_Clear
  1711 ;;		_Lcd_Set_Cursor
  1712 ;;		_Lcd_Write_String
  1713 ;;		_intToString
  1714 ;; This function is called by:
  1715 ;;		_main
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719  028E                     _LCD_Test:	
  1720                           ;psect for function _LCD_Test
  1721                           
  1722  028E                     l1480:	
  1723                           ;incstack = 0
  1724                           ; Regs used in _LCD_Test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1725                           
  1726  028E  120A  118A  24DE  120A  118A  	fcall	_Lcd_Clear
  1727  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1728  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1729  0295  01A0               	clrf	Lcd_Set_Cursor@b
  1730  0296  0AA0               	incf	Lcd_Set_Cursor@b,f
  1731  0297  3001               	movlw	1
  1732  0298  120A  118A  2236  120A  118A  	fcall	_Lcd_Set_Cursor
  1733  029D                     l1482:
  1734  029D  301F               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1735  029E  00F7               	movwf	Lcd_Write_String@a
  1736  029F  3080               	movlw	128
  1737  02A0  00F8               	movwf	Lcd_Write_String@a+1
  1738  02A1  120A  118A  2321  120A  118A  	fcall	_Lcd_Write_String
  1739  02A6                     l1484:
  1740  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1741  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1742  02A8  01A0               	clrf	Lcd_Set_Cursor@b
  1743  02A9  0AA0               	incf	Lcd_Set_Cursor@b,f
  1744  02AA  3002               	movlw	2
  1745  02AB  120A  118A  2236  120A  118A  	fcall	_Lcd_Set_Cursor
  1746  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1747  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1748  02B2  084B               	movf	_c,w
  1749  02B3  00BB               	movwf	??_LCD_Test
  1750  02B4  01BC               	clrf	??_LCD_Test+1
  1751  02B5  083B               	movf	??_LCD_Test,w
  1752  02B6  00B7               	movwf	intToString@num
  1753  02B7  083C               	movf	??_LCD_Test+1,w
  1754  02B8  00B8               	movwf	intToString@num+1
  1755  02B9  303E               	movlw	(low (LCD_Test@buffer| 0))& (0+255)
  1756  02BA  00BD               	movwf	??_LCD_Test+2
  1757  02BB  083D               	movf	??_LCD_Test+2,w
  1758  02BC  00B9               	movwf	intToString@buffer
  1759  02BD  120A  118A  24C0  120A  118A  	fcall	_intToString
  1760  02C2  303E               	movlw	(low (LCD_Test@buffer| 0))& (0+255)
  1761  02C3  00F7               	movwf	Lcd_Write_String@a
  1762  02C4  3000               	movlw	0
  1763  02C5  00F8               	movwf	Lcd_Write_String@a+1
  1764  02C6  120A  118A  2321  120A  118A  	fcall	_Lcd_Write_String
  1765  02CB                     l1486:
  1766  02CB  3015               	movlw	21
  1767  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1768  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1769  02CE  00BD               	movwf	??_LCD_Test+2
  1770  02CF  304B               	movlw	75
  1771  02D0  00BC               	movwf	??_LCD_Test+1
  1772  02D1  30BD               	movlw	189
  1773  02D2  00BB               	movwf	??_LCD_Test
  1774  02D3                     u977:
  1775  02D3  0BBB               	decfsz	??_LCD_Test,f
  1776  02D4  2AD3               	goto	u977
  1777  02D5  0BBC               	decfsz	??_LCD_Test+1,f
  1778  02D6  2AD3               	goto	u977
  1779  02D7  0BBD               	decfsz	??_LCD_Test+2,f
  1780  02D8  2AD3               	goto	u977
  1781  02D9  2ADA               	nop2
  1782  02DA                     l208:
  1783  02DA  0008               	return
  1784  02DB                     __end_of_LCD_Test:
  1785                           
  1786                           	psect	text8
  1787  04C0                     __ptext8:	
  1788 ;; *************** function _intToString *****************
  1789 ;; Defined at:
  1790 ;;		line 165 in file "lcd.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  num             2   23[BANK0 ] int 
  1793 ;;  buffer          1   25[BANK0 ] PTR unsigned char 
  1794 ;;		 -> LCD_Test@buffer(12), 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;		None
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1806 ;;      Params:         0       3       0       0       0
  1807 ;;      Locals:         0       0       0       0       0
  1808 ;;      Temps:          0       1       0       0       0
  1809 ;;      Totals:         0       4       0       0       0
  1810 ;;Total ram usage:        4 bytes
  1811 ;; Hardware stack levels used: 1
  1812 ;; Hardware stack levels required when called: 4
  1813 ;; This function calls:
  1814 ;;		_sprintf
  1815 ;; This function is called by:
  1816 ;;		_LCD_Test
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820  04C0                     _intToString:	
  1821                           ;psect for function _intToString
  1822                           
  1823  04C0                     l1406:	
  1824                           ;incstack = 0
  1825                           ; Regs used in _intToString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1826                           
  1827                           
  1828                           ;lcd.c: 166:     sprintf(buffer, "%d", num);
  1829  04C0  3066               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1830  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  1831  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  1832  04C3  00BA               	movwf	??_intToString
  1833  04C4  083A               	movf	??_intToString,w
  1834  04C5  00AA               	movwf	sprintf@f
  1835  04C6  0838               	movf	intToString@num+1,w
  1836  04C7  00AC               	movwf	?_sprintf+2
  1837  04C8  0837               	movf	intToString@num,w
  1838  04C9  00AB               	movwf	?_sprintf+1
  1839  04CA  0839               	movf	intToString@buffer,w
  1840  04CB  120A  118A  2016  120A  118A  	fcall	_sprintf
  1841  04D0                     l81:
  1842  04D0  0008               	return
  1843  04D1                     __end_of_intToString:
  1844                           
  1845                           	psect	text9
  1846  0016                     __ptext9:	
  1847 ;; *************** function _sprintf *****************
  1848 ;; Defined at:
  1849 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  sp              1    wreg     PTR unsigned char 
  1852 ;;		 -> LCD_Test@buffer(12), Lcd_Write_Integer@buffer(5), 
  1853 ;;  f               1   10[BANK0 ] PTR const unsigned char 
  1854 ;;		 -> STR_7(3), STR_6(4), 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  1857 ;;		 -> LCD_Test@buffer(12), Lcd_Write_Integer@buffer(5), 
  1858 ;;  tmpval          4    0        struct .
  1859 ;;  val             2   19[BANK0 ] unsigned int 
  1860 ;;  cp              2    0        PTR const unsigned char 
  1861 ;;  len             2    0        unsigned int 
  1862 ;;  c               1   22[BANK0 ] unsigned char 
  1863 ;;  prec            1   18[BANK0 ] char 
  1864 ;;  flag            1   17[BANK0 ] unsigned char 
  1865 ;;  ap              1   16[BANK0 ] PTR void [1]
  1866 ;;		 -> ?_sprintf(2), 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  2   10[BANK0 ] int 
  1869 ;; Registers used:
  1870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1876 ;;      Params:         0       3       0       0       0
  1877 ;;      Locals:         0       7       0       0       0
  1878 ;;      Temps:          0       3       0       0       0
  1879 ;;      Totals:         0      13       0       0       0
  1880 ;;Total ram usage:       13 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; Hardware stack levels required when called: 3
  1883 ;; This function calls:
  1884 ;;		___lwdiv
  1885 ;;		___lwmod
  1886 ;; This function is called by:
  1887 ;;		_intToString
  1888 ;;		_Lcd_Write_Integer
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892  0016                     _sprintf:	
  1893                           ;psect for function _sprintf
  1894                           
  1895                           
  1896                           ;incstack = 0
  1897                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1898                           ;sprintf@sp stored from wreg
  1899  0016  1283               	bcf	3,5	;RP0=0, select bank0
  1900  0017  1303               	bcf	3,6	;RP1=0, select bank0
  1901  0018  00B5               	movwf	sprintf@sp
  1902  0019                     l1314:
  1903                           
  1904                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1905  0019  302B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1906  001A  00AD               	movwf	??_sprintf
  1907  001B  082D               	movf	??_sprintf,w
  1908  001C  00B0               	movwf	sprintf@ap
  1909                           
  1910                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1911  001D  28E9               	goto	l1366
  1912  001E                     l1316:
  1913                           
  1914                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1915  001E  3025               	movlw	37
  1916  001F  0636               	xorwf	sprintf@c,w
  1917  0020  1903               	btfsc	3,2
  1918  0021  2823               	goto	u661
  1919  0022  2824               	goto	u660
  1920  0023                     u661:
  1921  0023  2830               	goto	l1322
  1922  0024                     u660:
  1923  0024                     l1318:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1926  0024  0836               	movf	sprintf@c,w
  1927  0025  00AD               	movwf	??_sprintf
  1928  0026  0835               	movf	sprintf@sp,w
  1929  0027  0084               	movwf	4
  1930  0028  082D               	movf	??_sprintf,w
  1931  0029  1383               	bcf	3,7	;select IRP bank0
  1932  002A  0080               	movwf	0
  1933  002B                     l1320:
  1934  002B  3001               	movlw	1
  1935  002C  00AD               	movwf	??_sprintf
  1936  002D  082D               	movf	??_sprintf,w
  1937  002E  07B5               	addwf	sprintf@sp,f
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 559:    continue;
  1940  002F  28E9               	goto	l1366
  1941  0030                     l1322:
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1944  0030  01B1               	clrf	sprintf@flag
  1945  0031                     l1326:	
  1946                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1947                           
  1948  0031  3001               	movlw	1
  1949  0032  07AA               	addwf	sprintf@f,f
  1950  0033  30FF               	movlw	-1
  1951  0034  072A               	addwf	sprintf@f,w
  1952  0035  0084               	movwf	4
  1953  0036  120A  118A  210A  120A  118A  	fcall	stringdir
  1954  003B  00B6               	movwf	sprintf@c
  1955  003C  00AD               	movwf	??_sprintf
  1956  003D  01AE               	clrf	??_sprintf+1
  1957                           
  1958                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1959                           ; Switch size 1, requested type "simple"
  1960                           ; Number of cases is 1, Range of values is 0 to 0
  1961                           ; switch strategies available:
  1962                           ; Name         Instructions Cycles
  1963                           ; simple_byte            4     3 (average)
  1964                           ; direct_byte           11     8 (fixed)
  1965                           ; jumptable            260     6 (fixed)
  1966                           ;	Chosen strategy is simple_byte
  1967  003E  082E               	movf	??_sprintf+1,w
  1968  003F  3A00               	xorlw	0	; case 0
  1969  0040  1903               	skipnz
  1970  0041  2843               	goto	l1602
  1971  0042  28E9               	goto	l1366
  1972  0043                     l1602:
  1973                           
  1974                           ; Switch size 1, requested type "simple"
  1975                           ; Number of cases is 3, Range of values is 0 to 105
  1976                           ; switch strategies available:
  1977                           ; Name         Instructions Cycles
  1978                           ; simple_byte           10     6 (average)
  1979                           ; jumptable            260     6 (fixed)
  1980                           ;	Chosen strategy is simple_byte
  1981  0043  082D               	movf	??_sprintf,w
  1982  0044  3A00               	xorlw	0	; case 0
  1983  0045  1903               	skipnz
  1984  0046  28FB               	goto	l1368
  1985  0047  3A64               	xorlw	100	; case 100
  1986  0048  1903               	skipnz
  1987  0049  284E               	goto	l1328
  1988  004A  3A0D               	xorlw	13	; case 105
  1989  004B  1903               	skipnz
  1990  004C  284E               	goto	l1328
  1991  004D  28E9               	goto	l1366
  1992  004E                     l1328:
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1995  004E  0830               	movf	sprintf@ap,w
  1996  004F  0084               	movwf	4
  1997  0050  1383               	bcf	3,7	;select IRP bank0
  1998  0051  0800               	movf	0,w
  1999  0052  00B3               	movwf	sprintf@val
  2000  0053  0A84               	incf	4,f
  2001  0054  0800               	movf	0,w
  2002  0055  00B4               	movwf	sprintf@val+1
  2003  0056                     l1330:
  2004  0056  3002               	movlw	2
  2005  0057  00AD               	movwf	??_sprintf
  2006  0058  082D               	movf	??_sprintf,w
  2007  0059  07B0               	addwf	sprintf@ap,f
  2008  005A                     l1332:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2011  005A  1FB4               	btfss	sprintf@val+1,7
  2012  005B  285D               	goto	u671
  2013  005C  285E               	goto	u670
  2014  005D                     u671:
  2015  005D  2867               	goto	l1338
  2016  005E                     u670:
  2017  005E                     l1334:
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2020  005E  3003               	movlw	3
  2021  005F  00AD               	movwf	??_sprintf
  2022  0060  082D               	movf	??_sprintf,w
  2023  0061  04B1               	iorwf	sprintf@flag,f
  2024  0062                     l1336:
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2027  0062  09B3               	comf	sprintf@val,f
  2028  0063  09B4               	comf	sprintf@val+1,f
  2029  0064  0AB3               	incf	sprintf@val,f
  2030  0065  1903               	skipnz
  2031  0066  0AB4               	incf	sprintf@val+1,f
  2032  0067                     l1338:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2035  0067  01B6               	clrf	sprintf@c
  2036  0068  0AB6               	incf	sprintf@c,f
  2037  0069                     l1344:
  2038                           
  2039                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2040  0069  0836               	movf	sprintf@c,w
  2041  006A  00AD               	movwf	??_sprintf
  2042  006B  072D               	addwf	??_sprintf,w
  2043  006C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2044  006D  0084               	movwf	4
  2045  006E  120A  118A  210A  120A  118A  	fcall	stringdir
  2046  0073  00AE               	movwf	??_sprintf+1
  2047  0074  120A  118A  210A  120A  118A  	fcall	stringdir
  2048  0079  00AF               	movwf	??_sprintf+2
  2049  007A  082F               	movf	??_sprintf+2,w
  2050  007B  0234               	subwf	sprintf@val+1,w
  2051  007C  1D03               	skipz
  2052  007D  2880               	goto	u685
  2053  007E  082E               	movf	??_sprintf+1,w
  2054  007F  0233               	subwf	sprintf@val,w
  2055  0080                     u685:
  2056  0080  1803               	skipnc
  2057  0081  2883               	goto	u681
  2058  0082  2884               	goto	u680
  2059  0083                     u681:
  2060  0083  2885               	goto	l1348
  2061  0084                     u680:
  2062  0084  288F               	goto	l1350
  2063  0085                     l1348:
  2064  0085  3001               	movlw	1
  2065  0086  00AD               	movwf	??_sprintf
  2066  0087  082D               	movf	??_sprintf,w
  2067  0088  07B6               	addwf	sprintf@c,f
  2068  0089  3005               	movlw	5
  2069  008A  0636               	xorwf	sprintf@c,w
  2070  008B  1D03               	btfss	3,2
  2071  008C  288E               	goto	u691
  2072  008D  288F               	goto	u690
  2073  008E                     u691:
  2074  008E  2869               	goto	l1344
  2075  008F                     u690:
  2076  008F                     l1350:
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2079  008F  0831               	movf	sprintf@flag,w
  2080  0090  3903               	andlw	3
  2081  0091  1903               	btfsc	3,2
  2082  0092  2894               	goto	u701
  2083  0093  2895               	goto	u700
  2084  0094                     u701:
  2085  0094  28A0               	goto	l1356
  2086  0095                     u700:
  2087  0095                     l1352:
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2090  0095  302D               	movlw	45
  2091  0096  00AD               	movwf	??_sprintf
  2092  0097  0835               	movf	sprintf@sp,w
  2093  0098  0084               	movwf	4
  2094  0099  082D               	movf	??_sprintf,w
  2095  009A  1383               	bcf	3,7	;select IRP bank0
  2096  009B  0080               	movwf	0
  2097  009C                     l1354:
  2098  009C  3001               	movlw	1
  2099  009D  00AD               	movwf	??_sprintf
  2100  009E  082D               	movf	??_sprintf,w
  2101  009F  07B5               	addwf	sprintf@sp,f
  2102  00A0                     l1356:
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2105  00A0  0836               	movf	sprintf@c,w
  2106  00A1  00AD               	movwf	??_sprintf
  2107  00A2  082D               	movf	??_sprintf,w
  2108  00A3  00B2               	movwf	sprintf@prec
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2111  00A4  28E0               	goto	l1364
  2112  00A5                     l1358:
  2113                           
  2114                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2115  00A5  300A               	movlw	10
  2116  00A6  00A4               	movwf	___lwmod@divisor
  2117  00A7  3000               	movlw	0
  2118  00A8  00A5               	movwf	___lwmod@divisor+1
  2119  00A9  0832               	movf	sprintf@prec,w
  2120  00AA  00AD               	movwf	??_sprintf
  2121  00AB  072D               	addwf	??_sprintf,w
  2122  00AC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2123  00AD  0084               	movwf	4
  2124  00AE  120A  118A  210A  120A  118A  	fcall	stringdir
  2125  00B3  00F5               	movwf	___lwdiv@divisor
  2126  00B4  120A  118A  210A  120A  118A  	fcall	stringdir
  2127  00B9  00F6               	movwf	___lwdiv@divisor+1
  2128  00BA  0834               	movf	sprintf@val+1,w
  2129  00BB  00F8               	movwf	___lwdiv@dividend+1
  2130  00BC  0833               	movf	sprintf@val,w
  2131  00BD  00F7               	movwf	___lwdiv@dividend
  2132  00BE  120A  118A  22DB  120A  118A  	fcall	___lwdiv
  2133  00C3  0876               	movf	?___lwdiv+1,w
  2134  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  2135  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  2136  00C6  00A7               	movwf	___lwmod@dividend+1
  2137  00C7  0875               	movf	?___lwdiv,w
  2138  00C8  00A6               	movwf	___lwmod@dividend
  2139  00C9  120A  118A  2367  120A  118A  	fcall	___lwmod
  2140  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  2141  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  2142  00D0  0824               	movf	?___lwmod,w
  2143  00D1  3E30               	addlw	48
  2144  00D2  00AE               	movwf	??_sprintf+1
  2145  00D3  082E               	movf	??_sprintf+1,w
  2146  00D4  00B6               	movwf	sprintf@c
  2147  00D5                     l1360:
  2148                           
  2149                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2150  00D5  0836               	movf	sprintf@c,w
  2151  00D6  00AD               	movwf	??_sprintf
  2152  00D7  0835               	movf	sprintf@sp,w
  2153  00D8  0084               	movwf	4
  2154  00D9  082D               	movf	??_sprintf,w
  2155  00DA  1383               	bcf	3,7	;select IRP bank0
  2156  00DB  0080               	movwf	0
  2157  00DC                     l1362:
  2158  00DC  3001               	movlw	1
  2159  00DD  00AD               	movwf	??_sprintf
  2160  00DE  082D               	movf	??_sprintf,w
  2161  00DF  07B5               	addwf	sprintf@sp,f
  2162  00E0                     l1364:
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2165  00E0  30FF               	movlw	255
  2166  00E1  00AD               	movwf	??_sprintf
  2167  00E2  082D               	movf	??_sprintf,w
  2168  00E3  07B2               	addwf	sprintf@prec,f
  2169  00E4  0A32               	incf	sprintf@prec,w
  2170  00E5  1D03               	btfss	3,2
  2171  00E6  28E8               	goto	u711
  2172  00E7  28E9               	goto	u710
  2173  00E8                     u711:
  2174  00E8  28A5               	goto	l1358
  2175  00E9                     u710:
  2176  00E9                     l1366:
  2177                           
  2178                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2179  00E9  3001               	movlw	1
  2180  00EA  07AA               	addwf	sprintf@f,f
  2181  00EB  30FF               	movlw	-1
  2182  00EC  072A               	addwf	sprintf@f,w
  2183  00ED  0084               	movwf	4
  2184  00EE  120A  118A  210A  120A  118A  	fcall	stringdir
  2185  00F3  00AD               	movwf	??_sprintf
  2186  00F4  082D               	movf	??_sprintf,w
  2187  00F5  00B6               	movwf	sprintf@c
  2188  00F6  0836               	movf	sprintf@c,w
  2189  00F7  1D03               	btfss	3,2
  2190  00F8  28FA               	goto	u721
  2191  00F9  28FB               	goto	u720
  2192  00FA                     u721:
  2193  00FA  281E               	goto	l1316
  2194  00FB                     u720:
  2195  00FB                     l1368:
  2196                           
  2197                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2198  00FB  0835               	movf	sprintf@sp,w
  2199  00FC  0084               	movwf	4
  2200  00FD  1383               	bcf	3,7	;select IRP bank0
  2201  00FE  0180               	clrf	0
  2202  00FF                     l318:
  2203  00FF  0008               	return
  2204  0100                     __end_of_sprintf:
  2205                           
  2206                           	psect	text10
  2207  0367                     __ptext10:	
  2208 ;; *************** function ___lwmod *****************
  2209 ;; Defined at:
  2210 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  divisor         2    4[BANK0 ] unsigned int 
  2213 ;;  dividend        2    6[BANK0 ] unsigned int 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  counter         1    9[BANK0 ] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  2    4[BANK0 ] unsigned int 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2225 ;;      Params:         0       4       0       0       0
  2226 ;;      Locals:         0       1       0       0       0
  2227 ;;      Temps:          0       1       0       0       0
  2228 ;;      Totals:         0       6       0       0       0
  2229 ;;Total ram usage:        6 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; Hardware stack levels required when called: 2
  2232 ;; This function calls:
  2233 ;;		Nothing
  2234 ;; This function is called by:
  2235 ;;		_sprintf
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239  0367                     ___lwmod:	
  2240                           ;psect for function ___lwmod
  2241                           
  2242  0367                     l1262:	
  2243                           ;incstack = 0
  2244                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2245                           
  2246  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0368  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0369  0824               	movf	___lwmod@divisor,w
  2249  036A  0425               	iorwf	___lwmod@divisor+1,w
  2250  036B  1903               	btfsc	3,2
  2251  036C  2B6E               	goto	u591
  2252  036D  2B6F               	goto	u590
  2253  036E                     u591:
  2254  036E  2B9E               	goto	l1280
  2255  036F                     u590:
  2256  036F                     l1264:
  2257  036F  01A9               	clrf	___lwmod@counter
  2258  0370  0AA9               	incf	___lwmod@counter,f
  2259  0371  2B7D               	goto	l1270
  2260  0372                     l1266:
  2261  0372  3001               	movlw	1
  2262  0373                     u605:
  2263  0373  1003               	clrc
  2264  0374  0DA4               	rlf	___lwmod@divisor,f
  2265  0375  0DA5               	rlf	___lwmod@divisor+1,f
  2266  0376  3EFF               	addlw	-1
  2267  0377  1D03               	skipz
  2268  0378  2B73               	goto	u605
  2269  0379                     l1268:
  2270  0379  3001               	movlw	1
  2271  037A  00A8               	movwf	??___lwmod
  2272  037B  0828               	movf	??___lwmod,w
  2273  037C  07A9               	addwf	___lwmod@counter,f
  2274  037D                     l1270:
  2275  037D  1FA5               	btfss	___lwmod@divisor+1,7
  2276  037E  2B80               	goto	u611
  2277  037F  2B81               	goto	u610
  2278  0380                     u611:
  2279  0380  2B72               	goto	l1266
  2280  0381                     u610:
  2281  0381                     l1272:
  2282  0381  0825               	movf	___lwmod@divisor+1,w
  2283  0382  0227               	subwf	___lwmod@dividend+1,w
  2284  0383  1D03               	skipz
  2285  0384  2B87               	goto	u625
  2286  0385  0824               	movf	___lwmod@divisor,w
  2287  0386  0226               	subwf	___lwmod@dividend,w
  2288  0387                     u625:
  2289  0387  1C03               	skipc
  2290  0388  2B8A               	goto	u621
  2291  0389  2B8B               	goto	u620
  2292  038A                     u621:
  2293  038A  2B91               	goto	l1276
  2294  038B                     u620:
  2295  038B                     l1274:
  2296  038B  0824               	movf	___lwmod@divisor,w
  2297  038C  02A6               	subwf	___lwmod@dividend,f
  2298  038D  0825               	movf	___lwmod@divisor+1,w
  2299  038E  1C03               	skipc
  2300  038F  03A7               	decf	___lwmod@dividend+1,f
  2301  0390  02A7               	subwf	___lwmod@dividend+1,f
  2302  0391                     l1276:
  2303  0391  3001               	movlw	1
  2304  0392                     u635:
  2305  0392  1003               	clrc
  2306  0393  0CA5               	rrf	___lwmod@divisor+1,f
  2307  0394  0CA4               	rrf	___lwmod@divisor,f
  2308  0395  3EFF               	addlw	-1
  2309  0396  1D03               	skipz
  2310  0397  2B92               	goto	u635
  2311  0398                     l1278:
  2312  0398  3001               	movlw	1
  2313  0399  02A9               	subwf	___lwmod@counter,f
  2314  039A  1D03               	btfss	3,2
  2315  039B  2B9D               	goto	u641
  2316  039C  2B9E               	goto	u640
  2317  039D                     u641:
  2318  039D  2B81               	goto	l1272
  2319  039E                     u640:
  2320  039E                     l1280:
  2321  039E  0827               	movf	___lwmod@dividend+1,w
  2322  039F  00A5               	movwf	?___lwmod+1
  2323  03A0  0826               	movf	___lwmod@dividend,w
  2324  03A1  00A4               	movwf	?___lwmod
  2325  03A2                     l604:
  2326  03A2  0008               	return
  2327  03A3                     __end_of___lwmod:
  2328                           
  2329                           	psect	text11
  2330  02DB                     __ptext11:	
  2331 ;; *************** function ___lwdiv *****************
  2332 ;; Defined at:
  2333 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  divisor         2    5[COMMON] unsigned int 
  2336 ;;  dividend        2    7[COMMON] unsigned int 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  quotient        2    1[BANK0 ] unsigned int 
  2339 ;;  counter         1    3[BANK0 ] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  2    5[COMMON] unsigned int 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2349 ;;      Params:         4       0       0       0       0
  2350 ;;      Locals:         0       3       0       0       0
  2351 ;;      Temps:          0       1       0       0       0
  2352 ;;      Totals:         4       4       0       0       0
  2353 ;;Total ram usage:        8 bytes
  2354 ;; Hardware stack levels used: 1
  2355 ;; Hardware stack levels required when called: 2
  2356 ;; This function calls:
  2357 ;;		Nothing
  2358 ;; This function is called by:
  2359 ;;		_sprintf
  2360 ;; This function uses a non-reentrant model
  2361 ;;
  2362                           
  2363  02DB                     ___lwdiv:	
  2364                           ;psect for function ___lwdiv
  2365                           
  2366  02DB                     l1236:	
  2367                           ;incstack = 0
  2368                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2369                           
  2370  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2371  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2372  02DD  01A1               	clrf	___lwdiv@quotient
  2373  02DE  01A2               	clrf	___lwdiv@quotient+1
  2374  02DF                     l1238:
  2375  02DF  0875               	movf	___lwdiv@divisor,w
  2376  02E0  0476               	iorwf	___lwdiv@divisor+1,w
  2377  02E1  1903               	btfsc	3,2
  2378  02E2  2AE4               	goto	u521
  2379  02E3  2AE5               	goto	u520
  2380  02E4                     u521:
  2381  02E4  2B1C               	goto	l1258
  2382  02E5                     u520:
  2383  02E5                     l1240:
  2384  02E5  01A3               	clrf	___lwdiv@counter
  2385  02E6  0AA3               	incf	___lwdiv@counter,f
  2386  02E7  2AF3               	goto	l1246
  2387  02E8                     l1242:
  2388  02E8  3001               	movlw	1
  2389  02E9                     u535:
  2390  02E9  1003               	clrc
  2391  02EA  0DF5               	rlf	___lwdiv@divisor,f
  2392  02EB  0DF6               	rlf	___lwdiv@divisor+1,f
  2393  02EC  3EFF               	addlw	-1
  2394  02ED  1D03               	skipz
  2395  02EE  2AE9               	goto	u535
  2396  02EF                     l1244:
  2397  02EF  3001               	movlw	1
  2398  02F0  00A0               	movwf	??___lwdiv
  2399  02F1  0820               	movf	??___lwdiv,w
  2400  02F2  07A3               	addwf	___lwdiv@counter,f
  2401  02F3                     l1246:
  2402  02F3  1FF6               	btfss	___lwdiv@divisor+1,7
  2403  02F4  2AF6               	goto	u541
  2404  02F5  2AF7               	goto	u540
  2405  02F6                     u541:
  2406  02F6  2AE8               	goto	l1242
  2407  02F7                     u540:
  2408  02F7                     l1248:
  2409  02F7  3001               	movlw	1
  2410  02F8                     u555:
  2411  02F8  1003               	clrc
  2412  02F9  0DA1               	rlf	___lwdiv@quotient,f
  2413  02FA  0DA2               	rlf	___lwdiv@quotient+1,f
  2414  02FB  3EFF               	addlw	-1
  2415  02FC  1D03               	skipz
  2416  02FD  2AF8               	goto	u555
  2417  02FE  0876               	movf	___lwdiv@divisor+1,w
  2418  02FF  0278               	subwf	___lwdiv@dividend+1,w
  2419  0300  1D03               	skipz
  2420  0301  2B04               	goto	u565
  2421  0302  0875               	movf	___lwdiv@divisor,w
  2422  0303  0277               	subwf	___lwdiv@dividend,w
  2423  0304                     u565:
  2424  0304  1C03               	skipc
  2425  0305  2B07               	goto	u561
  2426  0306  2B08               	goto	u560
  2427  0307                     u561:
  2428  0307  2B0F               	goto	l1254
  2429  0308                     u560:
  2430  0308                     l1250:
  2431  0308  0875               	movf	___lwdiv@divisor,w
  2432  0309  02F7               	subwf	___lwdiv@dividend,f
  2433  030A  0876               	movf	___lwdiv@divisor+1,w
  2434  030B  1C03               	skipc
  2435  030C  03F8               	decf	___lwdiv@dividend+1,f
  2436  030D  02F8               	subwf	___lwdiv@dividend+1,f
  2437  030E                     l1252:
  2438  030E  1421               	bsf	___lwdiv@quotient,0
  2439  030F                     l1254:
  2440  030F  3001               	movlw	1
  2441  0310                     u575:
  2442  0310  1003               	clrc
  2443  0311  0CF6               	rrf	___lwdiv@divisor+1,f
  2444  0312  0CF5               	rrf	___lwdiv@divisor,f
  2445  0313  3EFF               	addlw	-1
  2446  0314  1D03               	skipz
  2447  0315  2B10               	goto	u575
  2448  0316                     l1256:
  2449  0316  3001               	movlw	1
  2450  0317  02A3               	subwf	___lwdiv@counter,f
  2451  0318  1D03               	btfss	3,2
  2452  0319  2B1B               	goto	u581
  2453  031A  2B1C               	goto	u580
  2454  031B                     u581:
  2455  031B  2AF7               	goto	l1248
  2456  031C                     u580:
  2457  031C                     l1258:
  2458  031C  0822               	movf	___lwdiv@quotient+1,w
  2459  031D  00F6               	movwf	?___lwdiv+1
  2460  031E  0821               	movf	___lwdiv@quotient,w
  2461  031F  00F5               	movwf	?___lwdiv
  2462  0320                     l594:
  2463  0320  0008               	return
  2464  0321                     __end_of___lwdiv:
  2465                           
  2466                           	psect	text12
  2467  0321                     __ptext12:	
  2468 ;; *************** function _Lcd_Write_String *****************
  2469 ;; Defined at:
  2470 ;;		line 151 in file "lcd.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  a               2    7[COMMON] PTR unsigned char 
  2473 ;;		 -> LCD_Test@buffer(12), STR_8(16), Lcd_Write_Integer@buffer(5), STR_5(20), 
  2474 ;;		 -> STR_4(12), STR_3(13), STR_2(10), STR_1(16), 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  i               2    6[BANK0 ] int 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2486 ;;      Params:         2       0       0       0       0
  2487 ;;      Locals:         0       2       0       0       0
  2488 ;;      Temps:          0       3       0       0       0
  2489 ;;      Totals:         2       5       0       0       0
  2490 ;;Total ram usage:        7 bytes
  2491 ;; Hardware stack levels used: 1
  2492 ;; Hardware stack levels required when called: 4
  2493 ;; This function calls:
  2494 ;;		_Lcd_Write_Char
  2495 ;; This function is called by:
  2496 ;;		_LCD_Test
  2497 ;;		_example
  2498 ;;		_Lcd_Write_Integer
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502  0321                     _Lcd_Write_String:	
  2503                           ;psect for function _Lcd_Write_String
  2504                           
  2505  0321                     l1398:	
  2506                           ;incstack = 0
  2507                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2508                           
  2509                           
  2510                           ;lcd.c: 151: void Lcd_Write_String(char *a);lcd.c: 152: {;lcd.c: 153:  int i;;lcd.c: 154
      +                          :  for(i=0;a[i]!='\0';i++)
  2511  0321  1283               	bcf	3,5	;RP0=0, select bank0
  2512  0322  1303               	bcf	3,6	;RP1=0, select bank0
  2513  0323  01A6               	clrf	Lcd_Write_String@i
  2514  0324  01A7               	clrf	Lcd_Write_String@i+1
  2515  0325  2B4A               	goto	l1404
  2516  0326                     l1400:
  2517                           
  2518                           ;lcd.c: 155:     Lcd_Write_Char(a[i]);
  2519  0326  0826               	movf	Lcd_Write_String@i,w
  2520  0327  0777               	addwf	Lcd_Write_String@a,w
  2521  0328  00A4               	movwf	??_Lcd_Write_String+1
  2522  0329  0878               	movf	Lcd_Write_String@a+1,w
  2523  032A  00A3               	movwf	??_Lcd_Write_String
  2524  032B  1803               	skipnc
  2525  032C  0AA3               	incf	??_Lcd_Write_String,f
  2526  032D  1FA6               	btfss	Lcd_Write_String@i,7
  2527  032E  2B30               	goto	u770
  2528  032F  03A3               	decf	??_Lcd_Write_String,f
  2529  0330                     u770:
  2530  0330  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0331  1303               	bcf	3,6	;RP1=0, select bank0
  2532  0332  0823               	movf	??_Lcd_Write_String,w
  2533  0333  00A5               	movwf	??_Lcd_Write_String+2
  2534  0334  0825               	movf	??_Lcd_Write_String+2,w
  2535  0335  00FF               	movwf	btemp+1
  2536  0336  0824               	movf	??_Lcd_Write_String+1,w
  2537  0337  0084               	movwf	4
  2538  0338  120A  118A  2100  120A  118A  	fcall	stringtab
  2539  033D  120A  118A  23A3  120A  118A  	fcall	_Lcd_Write_Char
  2540  0342                     l1402:
  2541  0342  3001               	movlw	1
  2542  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0345  07A6               	addwf	Lcd_Write_String@i,f
  2545  0346  1803               	skipnc
  2546  0347  0AA7               	incf	Lcd_Write_String@i+1,f
  2547  0348  3000               	movlw	0
  2548  0349  07A7               	addwf	Lcd_Write_String@i+1,f
  2549  034A                     l1404:
  2550  034A  0826               	movf	Lcd_Write_String@i,w
  2551  034B  0777               	addwf	Lcd_Write_String@a,w
  2552  034C  00A4               	movwf	??_Lcd_Write_String+1
  2553  034D  0878               	movf	Lcd_Write_String@a+1,w
  2554  034E  00A3               	movwf	??_Lcd_Write_String
  2555  034F  1803               	skipnc
  2556  0350  0AA3               	incf	??_Lcd_Write_String,f
  2557  0351  1FA6               	btfss	Lcd_Write_String@i,7
  2558  0352  2B54               	goto	u780
  2559  0353  03A3               	decf	??_Lcd_Write_String,f
  2560  0354                     u780:
  2561  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2562  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2563  0356  0823               	movf	??_Lcd_Write_String,w
  2564  0357  00A5               	movwf	??_Lcd_Write_String+2
  2565  0358  0825               	movf	??_Lcd_Write_String+2,w
  2566  0359  00FF               	movwf	btemp+1
  2567  035A  0824               	movf	??_Lcd_Write_String+1,w
  2568  035B  0084               	movwf	4
  2569  035C  120A  118A  2100  120A  118A  	fcall	stringtab
  2570  0361  3A00               	xorlw	0
  2571  0362  1D03               	skipz
  2572  0363  2B65               	goto	u791
  2573  0364  2B66               	goto	u790
  2574  0365                     u791:
  2575  0365  2B26               	goto	l1400
  2576  0366                     u790:
  2577  0366                     l75:
  2578  0366  0008               	return
  2579  0367                     __end_of_Lcd_Write_String:
  2580                           
  2581                           	psect	text13
  2582  03A3                     __ptext13:	
  2583 ;; *************** function _Lcd_Write_Char *****************
  2584 ;; Defined at:
  2585 ;;		line 135 in file "lcd.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  a               1    wreg     unsigned char 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  a               1    2[BANK0 ] unsigned char 
  2590 ;;  y               1    1[BANK0 ] unsigned char 
  2591 ;;  temp            1    0[BANK0 ] unsigned char 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, pclath, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2601 ;;      Params:         0       0       0       0       0
  2602 ;;      Locals:         0       3       0       0       0
  2603 ;;      Temps:          1       0       0       0       0
  2604 ;;      Totals:         1       3       0       0       0
  2605 ;;Total ram usage:        4 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 3
  2608 ;; This function calls:
  2609 ;;		_Lcd_Port
  2610 ;; This function is called by:
  2611 ;;		_Lcd_Write_String
  2612 ;;		_example
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616  03A3                     _Lcd_Write_Char:	
  2617                           ;psect for function _Lcd_Write_Char
  2618                           
  2619                           
  2620                           ;incstack = 0
  2621                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2622                           ;Lcd_Write_Char@a stored from wreg
  2623  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2624  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2625  03A5  00A2               	movwf	Lcd_Write_Char@a
  2626  03A6                     l1284:
  2627                           
  2628                           ;lcd.c: 135: void Lcd_Write_Char(char a);lcd.c: 136: {;lcd.c: 137:    char temp,y;;lcd.c
      +                          : 138:    temp = a&0x0F;
  2629  03A6  0822               	movf	Lcd_Write_Char@a,w
  2630  03A7  390F               	andlw	15
  2631  03A8  00F6               	movwf	??_Lcd_Write_Char
  2632  03A9  0876               	movf	??_Lcd_Write_Char,w
  2633  03AA  00A0               	movwf	Lcd_Write_Char@temp
  2634                           
  2635                           ;lcd.c: 139:    y = a&0xF0;
  2636  03AB  0822               	movf	Lcd_Write_Char@a,w
  2637  03AC  39F0               	andlw	240
  2638  03AD  00F6               	movwf	??_Lcd_Write_Char
  2639  03AE  0876               	movf	??_Lcd_Write_Char,w
  2640  03AF  00A1               	movwf	Lcd_Write_Char@y
  2641  03B0                     l1286:
  2642                           
  2643                           ;lcd.c: 140:    RD2 = 1;
  2644  03B0  1508               	bsf	8,2	;volatile
  2645  03B1                     l1288:
  2646                           
  2647                           ;lcd.c: 141:    Lcd_Port(y>>4);
  2648  03B1  0821               	movf	Lcd_Write_Char@y,w
  2649  03B2  00F6               	movwf	??_Lcd_Write_Char
  2650  03B3  3004               	movlw	4
  2651  03B4                     u655:
  2652  03B4  1003               	clrc
  2653  03B5  0CF6               	rrf	??_Lcd_Write_Char,f
  2654  03B6  3EFF               	addlw	-1
  2655  03B7  1D03               	skipz
  2656  03B8  2BB4               	goto	u655
  2657  03B9  0876               	movf	??_Lcd_Write_Char,w
  2658  03BA  120A  118A  2450  120A  118A  	fcall	_Lcd_Port
  2659  03BF                     l1290:
  2660                           
  2661                           ;lcd.c: 142:    RD3 = 1;
  2662  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2663  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  2664  03C1  1588               	bsf	8,3	;volatile
  2665  03C2                     l1292:
  2666                           
  2667                           ;lcd.c: 143:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2668  03C2  301A               	movlw	26
  2669  03C3  00F6               	movwf	??_Lcd_Write_Char
  2670  03C4                     u987:
  2671  03C4  0BF6               	decfsz	??_Lcd_Write_Char,f
  2672  03C5  2BC4               	goto	u987
  2673  03C6  0000               	nop
  2674  03C7                     l1294:
  2675                           
  2676                           ;lcd.c: 144:    RD3 = 0;
  2677  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2678  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2679  03C9  1188               	bcf	8,3	;volatile
  2680  03CA                     l1296:
  2681                           
  2682                           ;lcd.c: 145:    Lcd_Port(temp);
  2683  03CA  0820               	movf	Lcd_Write_Char@temp,w
  2684  03CB  120A  118A  2450  120A  118A  	fcall	_Lcd_Port
  2685  03D0                     l1298:
  2686                           
  2687                           ;lcd.c: 146:    RD3 = 1;
  2688  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2689  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2690  03D2  1588               	bsf	8,3	;volatile
  2691  03D3                     l1300:
  2692                           
  2693                           ;lcd.c: 147:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  2694  03D3  301A               	movlw	26
  2695  03D4  00F6               	movwf	??_Lcd_Write_Char
  2696  03D5                     u997:
  2697  03D5  0BF6               	decfsz	??_Lcd_Write_Char,f
  2698  03D6  2BD5               	goto	u997
  2699  03D7  0000               	nop
  2700  03D8                     l1302:
  2701                           
  2702                           ;lcd.c: 148:    RD3 = 0;
  2703  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2704  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2705  03DA  1188               	bcf	8,3	;volatile
  2706  03DB                     l69:
  2707  03DB  0008               	return
  2708  03DC                     __end_of_Lcd_Write_Char:
  2709                           
  2710                           	psect	text14
  2711  0236                     __ptext14:	
  2712 ;; *************** function _Lcd_Set_Cursor *****************
  2713 ;; Defined at:
  2714 ;;		line 95 in file "lcd.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  a               1    wreg     unsigned char 
  2717 ;;  b               1    0[BANK0 ] unsigned char 
  2718 ;; Auto vars:     Size  Location     Type
  2719 ;;  a               1    3[BANK0 ] unsigned char 
  2720 ;;  temp            1    6[BANK0 ] unsigned char 
  2721 ;;  y               1    5[BANK0 ] unsigned char 
  2722 ;;  z               1    4[BANK0 ] unsigned char 
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		wreg, status,2, status,0, pclath, cstack
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2732 ;;      Params:         0       1       0       0       0
  2733 ;;      Locals:         0       4       0       0       0
  2734 ;;      Temps:          0       2       0       0       0
  2735 ;;      Totals:         0       7       0       0       0
  2736 ;;Total ram usage:        7 bytes
  2737 ;; Hardware stack levels used: 1
  2738 ;; Hardware stack levels required when called: 4
  2739 ;; This function calls:
  2740 ;;		_Lcd_Cmd
  2741 ;; This function is called by:
  2742 ;;		_LCD_Test
  2743 ;;		_example
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747  0236                     _Lcd_Set_Cursor:	
  2748                           ;psect for function _Lcd_Set_Cursor
  2749                           
  2750                           
  2751                           ;incstack = 0
  2752                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2753                           ;Lcd_Set_Cursor@a stored from wreg
  2754  0236  1283               	bcf	3,5	;RP0=0, select bank0
  2755  0237  1303               	bcf	3,6	;RP1=0, select bank0
  2756  0238  00A3               	movwf	Lcd_Set_Cursor@a
  2757  0239                     l1378:
  2758                           
  2759                           ;lcd.c: 95: void Lcd_Set_Cursor(char a, char b);lcd.c: 96: {;lcd.c: 97:  char temp,z,y;;
      +                          lcd.c: 98:  if(a == 1)
  2760  0239  0323               	decf	Lcd_Set_Cursor@a,w
  2761  023A  1D03               	btfss	3,2
  2762  023B  2A3D               	goto	u731
  2763  023C  2A3E               	goto	u730
  2764  023D                     u731:
  2765  023D  2A63               	goto	l1388
  2766  023E                     u730:
  2767  023E                     l1380:
  2768                           
  2769                           ;lcd.c: 99:  {;lcd.c: 100:    temp = 0x80 + b - 1;
  2770  023E  0820               	movf	Lcd_Set_Cursor@b,w
  2771  023F  3E7F               	addlw	127
  2772  0240  00A1               	movwf	??_Lcd_Set_Cursor
  2773  0241  0821               	movf	??_Lcd_Set_Cursor,w
  2774  0242  00A6               	movwf	Lcd_Set_Cursor@temp
  2775                           
  2776                           ;lcd.c: 101:   z = temp>>4;
  2777  0243  0826               	movf	Lcd_Set_Cursor@temp,w
  2778  0244  00A1               	movwf	??_Lcd_Set_Cursor
  2779  0245  3004               	movlw	4
  2780  0246                     u745:
  2781  0246  1003               	clrc
  2782  0247  0CA1               	rrf	??_Lcd_Set_Cursor,f
  2783  0248  3EFF               	addlw	-1
  2784  0249  1D03               	skipz
  2785  024A  2A46               	goto	u745
  2786  024B  0821               	movf	??_Lcd_Set_Cursor,w
  2787  024C  00A2               	movwf	??_Lcd_Set_Cursor+1
  2788  024D  0822               	movf	??_Lcd_Set_Cursor+1,w
  2789  024E  00A4               	movwf	Lcd_Set_Cursor@z
  2790  024F                     l1382:
  2791                           
  2792                           ;lcd.c: 102:   y = temp & 0x0F;
  2793  024F  0826               	movf	Lcd_Set_Cursor@temp,w
  2794  0250  390F               	andlw	15
  2795  0251  00A1               	movwf	??_Lcd_Set_Cursor
  2796  0252  0821               	movf	??_Lcd_Set_Cursor,w
  2797  0253  00A5               	movwf	Lcd_Set_Cursor@y
  2798  0254                     l1384:
  2799                           
  2800                           ;lcd.c: 103:   Lcd_Cmd(z);
  2801  0254  0824               	movf	Lcd_Set_Cursor@z,w
  2802  0255  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  2803  025A                     l1386:
  2804                           
  2805                           ;lcd.c: 104:   Lcd_Cmd(y);
  2806  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2807  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2808  025C  0825               	movf	Lcd_Set_Cursor@y,w
  2809  025D  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  2810                           
  2811                           ;lcd.c: 105:  }
  2812  0262  2A8D               	goto	l63
  2813  0263                     l1388:
  2814  0263  3002               	movlw	2
  2815  0264  0623               	xorwf	Lcd_Set_Cursor@a,w
  2816  0265  1D03               	btfss	3,2
  2817  0266  2A68               	goto	u751
  2818  0267  2A69               	goto	u750
  2819  0268                     u751:
  2820  0268  2A8D               	goto	l63
  2821  0269                     u750:
  2822  0269                     l1390:
  2823                           
  2824                           ;lcd.c: 107:  {;lcd.c: 108:   temp = 0xC0 + b - 1;
  2825  0269  0820               	movf	Lcd_Set_Cursor@b,w
  2826  026A  3EBF               	addlw	191
  2827  026B  00A1               	movwf	??_Lcd_Set_Cursor
  2828  026C  0821               	movf	??_Lcd_Set_Cursor,w
  2829  026D  00A6               	movwf	Lcd_Set_Cursor@temp
  2830                           
  2831                           ;lcd.c: 109:   z = temp>>4;
  2832  026E  0826               	movf	Lcd_Set_Cursor@temp,w
  2833  026F  00A1               	movwf	??_Lcd_Set_Cursor
  2834  0270  3004               	movlw	4
  2835  0271                     u765:
  2836  0271  1003               	clrc
  2837  0272  0CA1               	rrf	??_Lcd_Set_Cursor,f
  2838  0273  3EFF               	addlw	-1
  2839  0274  1D03               	skipz
  2840  0275  2A71               	goto	u765
  2841  0276  0821               	movf	??_Lcd_Set_Cursor,w
  2842  0277  00A2               	movwf	??_Lcd_Set_Cursor+1
  2843  0278  0822               	movf	??_Lcd_Set_Cursor+1,w
  2844  0279  00A4               	movwf	Lcd_Set_Cursor@z
  2845  027A                     l1392:
  2846                           
  2847                           ;lcd.c: 110:   y = temp & 0x0F;
  2848  027A  0826               	movf	Lcd_Set_Cursor@temp,w
  2849  027B  390F               	andlw	15
  2850  027C  00A1               	movwf	??_Lcd_Set_Cursor
  2851  027D  0821               	movf	??_Lcd_Set_Cursor,w
  2852  027E  00A5               	movwf	Lcd_Set_Cursor@y
  2853  027F                     l1394:
  2854                           
  2855                           ;lcd.c: 111:   Lcd_Cmd(z);
  2856  027F  0824               	movf	Lcd_Set_Cursor@z,w
  2857  0280  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  2858  0285                     l1396:
  2859                           
  2860                           ;lcd.c: 112:   Lcd_Cmd(y);
  2861  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2862  0286  1303               	bcf	3,6	;RP1=0, select bank0
  2863  0287  0825               	movf	Lcd_Set_Cursor@y,w
  2864  0288  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  2865  028D                     l63:
  2866  028D  0008               	return
  2867  028E                     __end_of_Lcd_Set_Cursor:
  2868                           
  2869                           	psect	text15
  2870  04DE                     __ptext15:	
  2871 ;; *************** function _Lcd_Clear *****************
  2872 ;; Defined at:
  2873 ;;		line 89 in file "lcd.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, status,0, pclath, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2887 ;;      Params:         0       0       0       0       0
  2888 ;;      Locals:         0       0       0       0       0
  2889 ;;      Temps:          0       0       0       0       0
  2890 ;;      Totals:         0       0       0       0       0
  2891 ;;Total ram usage:        0 bytes
  2892 ;; Hardware stack levels used: 1
  2893 ;; Hardware stack levels required when called: 4
  2894 ;; This function calls:
  2895 ;;		_Lcd_Cmd
  2896 ;; This function is called by:
  2897 ;;		_LCD_Test
  2898 ;;		_example
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902  04DE                     _Lcd_Clear:	
  2903                           ;psect for function _Lcd_Clear
  2904                           
  2905  04DE                     l1376:	
  2906                           ;incstack = 0
  2907                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2908                           
  2909                           
  2910                           ;lcd.c: 91:  Lcd_Cmd(0);
  2911  04DE  3000               	movlw	0
  2912  04DF  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  2913                           
  2914                           ;lcd.c: 92:  Lcd_Cmd(1);
  2915  04E4  3001               	movlw	1
  2916  04E5  120A  118A  2492  120A  118A  	fcall	_Lcd_Cmd
  2917  04EA                     l57:
  2918  04EA  0008               	return
  2919  04EB                     __end_of_Lcd_Clear:
  2920                           
  2921                           	psect	text16
  2922  0492                     __ptext16:	
  2923 ;; *************** function _Lcd_Cmd *****************
  2924 ;; Defined at:
  2925 ;;		line 80 in file "lcd.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  a               1    wreg     unsigned char 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  a               1    8[COMMON] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      void 
  2932 ;; Registers used:
  2933 ;;		wreg, status,2, status,0, pclath, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2939 ;;      Params:         0       0       0       0       0
  2940 ;;      Locals:         1       0       0       0       0
  2941 ;;      Temps:          2       0       0       0       0
  2942 ;;      Totals:         3       0       0       0       0
  2943 ;;Total ram usage:        3 bytes
  2944 ;; Hardware stack levels used: 1
  2945 ;; Hardware stack levels required when called: 3
  2946 ;; This function calls:
  2947 ;;		_Lcd_Port
  2948 ;; This function is called by:
  2949 ;;		_Lcd_Clear
  2950 ;;		_Lcd_Set_Cursor
  2951 ;;		_Lcd_Init
  2952 ;;		_Lcd_Shift_Right
  2953 ;;		_Lcd_Shift_Left
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957  0492                     _Lcd_Cmd:	
  2958                           ;psect for function _Lcd_Cmd
  2959                           
  2960                           
  2961                           ;incstack = 0
  2962                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2963                           ;Lcd_Cmd@a stored from wreg
  2964  0492  00F8               	movwf	Lcd_Cmd@a
  2965  0493                     l1304:
  2966                           
  2967                           ;lcd.c: 80: void Lcd_Cmd(char a);lcd.c: 81: {;lcd.c: 82:  RD2 = 0;
  2968  0493  1283               	bcf	3,5	;RP0=0, select bank0
  2969  0494  1303               	bcf	3,6	;RP1=0, select bank0
  2970  0495  1108               	bcf	8,2	;volatile
  2971  0496                     l1306:
  2972                           
  2973                           ;lcd.c: 83:  Lcd_Port(a);
  2974  0496  0878               	movf	Lcd_Cmd@a,w
  2975  0497  120A  118A  2450  120A  118A  	fcall	_Lcd_Port
  2976  049C                     l1308:
  2977                           
  2978                           ;lcd.c: 84:  RD3 = 1;
  2979  049C  1283               	bcf	3,5	;RP0=0, select bank0
  2980  049D  1303               	bcf	3,6	;RP1=0, select bank0
  2981  049E  1588               	bsf	8,3	;volatile
  2982  049F                     l1310:
  2983                           
  2984                           ;lcd.c: 85:         _delay((unsigned long)((4)*(8000000/4000.0)));
  2985  049F  300B               	movlw	11
  2986  04A0  00F7               	movwf	??_Lcd_Cmd+1
  2987  04A1  3062               	movlw	98
  2988  04A2  00F6               	movwf	??_Lcd_Cmd
  2989  04A3                     u1007:
  2990  04A3  0BF6               	decfsz	??_Lcd_Cmd,f
  2991  04A4  2CA3               	goto	u1007
  2992  04A5  0BF7               	decfsz	??_Lcd_Cmd+1,f
  2993  04A6  2CA3               	goto	u1007
  2994  04A7  0000               	nop
  2995  04A8                     l1312:
  2996                           
  2997                           ;lcd.c: 86:         RD3 = 0;
  2998  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2999  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  3000  04AA  1188               	bcf	8,3	;volatile
  3001  04AB                     l54:
  3002  04AB  0008               	return
  3003  04AC                     __end_of_Lcd_Cmd:
  3004                           
  3005                           	psect	text17
  3006  0450                     __ptext17:	
  3007 ;; *************** function _Lcd_Port *****************
  3008 ;; Defined at:
  3009 ;;		line 58 in file "lcd.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  a               1    wreg     unsigned char 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  a               1    5[COMMON] unsigned char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3023 ;;      Params:         0       0       0       0       0
  3024 ;;      Locals:         1       0       0       0       0
  3025 ;;      Temps:          0       0       0       0       0
  3026 ;;      Totals:         1       0       0       0       0
  3027 ;;Total ram usage:        1 bytes
  3028 ;; Hardware stack levels used: 1
  3029 ;; Hardware stack levels required when called: 2
  3030 ;; This function calls:
  3031 ;;		Nothing
  3032 ;; This function is called by:
  3033 ;;		_Lcd_Cmd
  3034 ;;		_Lcd_Init
  3035 ;;		_Lcd_Write_Char
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039  0450                     _Lcd_Port:	
  3040                           ;psect for function _Lcd_Port
  3041                           
  3042                           
  3043                           ;incstack = 0
  3044                           ; Regs used in _Lcd_Port: [wreg]
  3045                           ;Lcd_Port@a stored from wreg
  3046  0450  00F5               	movwf	Lcd_Port@a
  3047  0451                     l1226:
  3048                           
  3049                           ;lcd.c: 58: void Lcd_Port(char a);lcd.c: 59: {;lcd.c: 60:  if(a & 1)
  3050  0451  1C75               	btfss	Lcd_Port@a,0
  3051  0452  2C54               	goto	u481
  3052  0453  2C55               	goto	u480
  3053  0454                     u481:
  3054  0454  2C59               	goto	l43
  3055  0455                     u480:
  3056  0455                     l1228:
  3057                           
  3058                           ;lcd.c: 61:   RD4 = 1;
  3059  0455  1283               	bcf	3,5	;RP0=0, select bank0
  3060  0456  1303               	bcf	3,6	;RP1=0, select bank0
  3061  0457  1608               	bsf	8,4	;volatile
  3062  0458  2C5C               	goto	l44
  3063  0459                     l43:	
  3064                           ;lcd.c: 62:  else
  3065                           
  3066                           
  3067                           ;lcd.c: 63:   RD4 = 0;
  3068  0459  1283               	bcf	3,5	;RP0=0, select bank0
  3069  045A  1303               	bcf	3,6	;RP1=0, select bank0
  3070  045B  1208               	bcf	8,4	;volatile
  3071  045C                     l44:
  3072                           
  3073                           ;lcd.c: 65:  if(a & 2)
  3074  045C  1CF5               	btfss	Lcd_Port@a,1
  3075  045D  2C5F               	goto	u491
  3076  045E  2C60               	goto	u490
  3077  045F                     u491:
  3078  045F  2C62               	goto	l45
  3079  0460                     u490:
  3080  0460                     l1230:
  3081                           
  3082                           ;lcd.c: 66:   RD5 = 1;
  3083  0460  1688               	bsf	8,5	;volatile
  3084  0461  2C63               	goto	l46
  3085  0462                     l45:	
  3086                           ;lcd.c: 67:  else
  3087                           
  3088                           
  3089                           ;lcd.c: 68:   RD5 = 0;
  3090  0462  1288               	bcf	8,5	;volatile
  3091  0463                     l46:
  3092                           
  3093                           ;lcd.c: 70:  if(a & 4)
  3094  0463  1D75               	btfss	Lcd_Port@a,2
  3095  0464  2C66               	goto	u501
  3096  0465  2C67               	goto	u500
  3097  0466                     u501:
  3098  0466  2C69               	goto	l47
  3099  0467                     u500:
  3100  0467                     l1232:
  3101                           
  3102                           ;lcd.c: 71:   RD6 = 1;
  3103  0467  1708               	bsf	8,6	;volatile
  3104  0468  2C6A               	goto	l48
  3105  0469                     l47:	
  3106                           ;lcd.c: 72:  else
  3107                           
  3108                           
  3109                           ;lcd.c: 73:   RD6 = 0;
  3110  0469  1308               	bcf	8,6	;volatile
  3111  046A                     l48:
  3112                           
  3113                           ;lcd.c: 75:  if(a & 8)
  3114  046A  1DF5               	btfss	Lcd_Port@a,3
  3115  046B  2C6D               	goto	u511
  3116  046C  2C6E               	goto	u510
  3117  046D                     u511:
  3118  046D  2C70               	goto	l49
  3119  046E                     u510:
  3120  046E                     l1234:
  3121                           
  3122                           ;lcd.c: 76:   RD7 = 1;
  3123  046E  1788               	bsf	8,7	;volatile
  3124  046F  2C71               	goto	l51
  3125  0470                     l49:	
  3126                           ;lcd.c: 77:  else
  3127                           
  3128                           
  3129                           ;lcd.c: 78:   RD7 = 0;
  3130  0470  1388               	bcf	8,7	;volatile
  3131  0471                     l51:
  3132  0471  0008               	return
  3133  0472                     __end_of_Lcd_Port:
  3134                           
  3135                           	psect	text18
  3136  0472                     __ptext18:	
  3137 ;; *************** function _isr *****************
  3138 ;; Defined at:
  3139 ;;		line 52 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;		None
  3142 ;; Auto vars:     Size  Location     Type
  3143 ;;		None
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		wreg, status,2, status,0, pclath, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3153 ;;      Params:         0       0       0       0       0
  3154 ;;      Locals:         0       0       0       0       0
  3155 ;;      Temps:          3       0       0       0       0
  3156 ;;      Totals:         3       0       0       0       0
  3157 ;;Total ram usage:        3 bytes
  3158 ;; Hardware stack levels used: 1
  3159 ;; Hardware stack levels required when called: 1
  3160 ;; This function calls:
  3161 ;;		_adc_read
  3162 ;; This function is called by:
  3163 ;;		Interrupt level 1
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167  0472                     _isr:	
  3168                           ;psect for function _isr
  3169                           
  3170  0472                     i1l1558:
  3171                           
  3172                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 54:     intToString(c, buff
      +                          er);
  3173  0472  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0473  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0474  1F0C               	btfss	12,6	;volatile
  3176  0475  2C77               	goto	u89_21
  3177  0476  2C78               	goto	u89_20
  3178  0477                     u89_21:
  3179  0477  2C85               	goto	i1l1566
  3180  0478                     u89_20:
  3181  0478                     i1l1560:
  3182                           
  3183                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 56: 
  3184  0478  3000               	movlw	0
  3185  0479  120A  118A  24AC  120A  118A  	fcall	_adc_read
  3186  047E  00F2               	movwf	??_isr
  3187  047F  0872               	movf	??_isr,w
  3188  0480  1283               	bcf	3,5	;RP0=0, select bank0
  3189  0481  1303               	bcf	3,6	;RP1=0, select bank0
  3190  0482  00CB               	movwf	_c
  3191  0483                     i1l1562:
  3192                           
  3193                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 57: 
  3194  0483  130C               	bcf	12,6	;volatile
  3195  0484                     i1l1564:
  3196                           
  3197                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 58:     _delay((unsigned lo
      +                          ng)((2000)*(8000000/4000.0)));
  3198  0484  109F               	bcf	31,1	;volatile
  3199  0485                     i1l1566:
  3200  0485  1D0B               	btfss	11,2	;volatile
  3201  0486  2C88               	goto	u90_21
  3202  0487  2C89               	goto	u90_20
  3203  0488                     u90_21:
  3204  0488  2C8B               	goto	i1l196
  3205  0489                     u90_20:
  3206  0489                     i1l1568:
  3207  0489  0181               	clrf	1	;volatile
  3208  048A                     i1l1570:
  3209  048A  110B               	bcf	11,2	;volatile
  3210  048B                     i1l196:
  3211  048B  0874               	movf	??_isr+2,w
  3212  048C  008A               	movwf	10
  3213  048D  0E73               	swapf	??_isr+1,w
  3214  048E  0083               	movwf	3
  3215  048F  0EFE               	swapf	btemp,f
  3216  0490  0E7E               	swapf	btemp,w
  3217  0491  0009               	retfie
  3218  0492                     __end_of_isr:
  3219                           
  3220                           	psect	intentry
  3221  0004                     __pintentry:	
  3222                           ;incstack = 0
  3223                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  3224                           
  3225  0004                     interrupt_function:
  3226  007E                     saved_w	set	btemp
  3227  0004  00FE               	movwf	btemp
  3228  0005  0E03               	swapf	3,w
  3229  0006  00F3               	movwf	??_isr+1
  3230  0007  080A               	movf	10,w
  3231  0008  00F4               	movwf	??_isr+2
  3232  0009  120A  118A  2C72   	ljmp	_isr
  3233                           
  3234                           	psect	text19
  3235  04AC                     __ptext19:	
  3236 ;; *************** function _adc_read *****************
  3237 ;; Defined at:
  3238 ;;		line 33 in file "ADC_Interrupt.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  channel         1    wreg     unsigned char 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  channel         1    1[COMMON] unsigned char 
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      unsigned char 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3252 ;;      Params:         0       0       0       0       0
  3253 ;;      Locals:         1       0       0       0       0
  3254 ;;      Temps:          1       0       0       0       0
  3255 ;;      Totals:         2       0       0       0       0
  3256 ;;Total ram usage:        2 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_isr
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265  04AC                     _adc_read:	
  3266                           ;psect for function _adc_read
  3267                           
  3268                           
  3269                           ;incstack = 0
  3270                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  3271                           ;adc_read@channel stored from wreg
  3272  04AC  00F1               	movwf	adc_read@channel
  3273  04AD                     i1l1472:
  3274                           
  3275                           ;ADC_Interrupt.c: 34:     ADCON0bits.CHS = channel;
  3276  04AD  0871               	movf	adc_read@channel,w
  3277  04AE  00F0               	movwf	??_adc_read
  3278  04AF  0DF0               	rlf	??_adc_read,f
  3279  04B0  0DF0               	rlf	??_adc_read,f
  3280  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  3281  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  3282  04B3  081F               	movf	31,w	;volatile
  3283  04B4  0670               	xorwf	??_adc_read,w
  3284  04B5  39C3               	andlw	-61
  3285  04B6  0670               	xorwf	??_adc_read,w
  3286  04B7  009F               	movwf	31	;volatile
  3287  04B8                     i1l1474:
  3288                           
  3289                           ;ADC_Interrupt.c: 35:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  3290  04B8  300D               	movlw	13
  3291  04B9  00F0               	movwf	??_adc_read
  3292  04BA                     u101_27:
  3293  04BA  0BF0               	decfsz	??_adc_read,f
  3294  04BB  2CBA               	goto	u101_27
  3295  04BC                     i1l1476:
  3296                           
  3297                           ;ADC_Interrupt.c: 36:     return ADRESH;
  3298  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  3299  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  3300  04BE  081E               	movf	30,w	;volatile
  3301  04BF                     i1l145:
  3302  04BF  0008               	return
  3303  04C0                     __end_of_adc_read:
  3304  007E                     btemp	set	126	;btemp
  3305  007E                     wtemp0	set	126
  3306                           
  3307                           	psect	idloc
  3308                           
  3309                           ;Config register IDLOC0 @ 0x2000
  3310                           ;	unspecified, using default values
  3311  2000                     	org	8192
  3312  2000  3FFF               	dw	16383
  3313                           
  3314                           ;Config register IDLOC1 @ 0x2001
  3315                           ;	unspecified, using default values
  3316  2001                     	org	8193
  3317  2001  3FFF               	dw	16383
  3318                           
  3319                           ;Config register IDLOC2 @ 0x2002
  3320                           ;	unspecified, using default values
  3321  2002                     	org	8194
  3322  2002  3FFF               	dw	16383
  3323                           
  3324                           ;Config register IDLOC3 @ 0x2003
  3325                           ;	unspecified, using default values
  3326  2003                     	org	8195
  3327  2003  3FFF               	dw	16383
  3328                           
  3329                           	psect	config
  3330                           
  3331                           ;Config register CONFIG1 @ 0x2007
  3332                           ;	Oscillator Selection bits
  3333                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3334                           ;	Watchdog Timer Enable bit
  3335                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3336                           ;	Power-up Timer Enable bit
  3337                           ;	PWRTE = OFF, PWRT disabled
  3338                           ;	RE3/MCLR pin function select bit
  3339                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3340                           ;	Code Protection bit
  3341                           ;	CP = OFF, Program memory code protection is disabled
  3342                           ;	Data Code Protection bit
  3343                           ;	CPD = OFF, Data memory code protection is disabled
  3344                           ;	Brown Out Reset Selection bits
  3345                           ;	BOREN = OFF, BOR disabled
  3346                           ;	Internal External Switchover bit
  3347                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3348                           ;	Fail-Safe Clock Monitor Enabled bit
  3349                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3350                           ;	Low Voltage Programming Enable bit
  3351                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3352                           ;	In-Circuit Debugger Mode bit
  3353                           ;	DEBUG = 0x1, unprogrammed default
  3354  2007                     	org	8199
  3355  2007  20D4               	dw	8404
  3356                           
  3357                           ;Config register CONFIG2 @ 0x2008
  3358                           ;	Brown-out Reset Selection bit
  3359                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3360                           ;	Flash Program Memory Self Write Enable bits
  3361                           ;	WRT = OFF, Write protection off
  3362  2008                     	org	8200
  3363  2008  3FFF               	dw	16383

Data Sizes:
    Strings     94
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     43      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_7(CODE[3]), STR_6(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_Test@buffer(BANK0[12]), Lcd_Write_Integer@buffer(COMMON[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    intToString@buffer	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_Test@buffer(BANK0[12]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> LCD_Test@buffer(BANK0[12]), STR_8(CODE[16]), Lcd_Write_Integer@buffer(COMMON[5]), STR_5(CODE[20]), 
		 -> STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_adc_init
    _setupF->_configOsc
    _adc_init->_adc_change_channel
    _Lcd_Init->_Lcd_Cmd
    _LCD_Test->_Lcd_Write_String
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    _isr->_adc_read

Critical Paths under _main in BANK0

    _main->_LCD_Test
    _LCD_Test->_intToString
    _intToString->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4063
                                             42 BANK0      1     1      0
                           _LCD_Test
                           _Lcd_Init
                           _adc_init
                             _setupF
 ---------------------------------------------------------------------------------
 (1) _setupF                                               0     0      0     230
                          _configOsc
                           _ioc_init
 ---------------------------------------------------------------------------------
 (2) _ioc_init                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _configOsc                                            2     0      2     230
                                              5 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             3     1      2      91
                                              7 COMMON     2     0      2
                                              0 BANK0      1     1      0
                 _adc_change_channel
 ---------------------------------------------------------------------------------
 (2) _adc_change_channel                                   2     2      0      15
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Test                                            15    15      0    3544
                                             27 BANK0     15    15      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _intToString
 ---------------------------------------------------------------------------------
 (2) _intToString                                          4     1      3    1516
                                             23 BANK0      4     1      3
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    18      3    1320
                                             10 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              4 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              5 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     876
                                              7 COMMON     2     0      2
                                              3 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              6 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1     988
                                              0 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              6 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0      88
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0      22
                                              2 COMMON     3     3      0
                           _adc_read
 ---------------------------------------------------------------------------------
 (6) _adc_read                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Test
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _intToString
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _adc_init
     _adc_change_channel
   _setupF
     _configOsc
     _ioc_init

 _isr (ROOT)
   _adc_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      35       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2B      2C       5       55.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      35      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Jul 26 06:39:07 2023

                         _c 004B                           pc 0002                          l51 0471  
                        l43 0459                          l44 045C                          l45 0462  
                        l46 0463                          l54 04AB                          l47 0469  
                        l63 028D                          l48 046A                          l49 0470  
                        l57 04EA                          l81 04D0                          l66 01D9  
                        l75 0366                          l92 01E5                          l69 03DB  
                        l93 01F2                          l94 01FE                          l95 020D  
                        l96 021A                          l97 0227                          l99 0235  
                        fsr 0004                         l122 042D                         l125 04ED  
                       l142 044F                         l208 02DA                         l148 04DD  
                       l318 00FF                         l604 03A2                         l594 0320  
                       _RD2 0042                         _RD3 0043                         _RD4 0044  
                       _RD5 0045                         _RD6 0046                         _RD7 0047  
                       u500 0467                         u501 0466                         u510 046E  
                       u511 046D                         u520 02E5                         u521 02E4  
                       u610 0381                         u611 0380                         u540 02F7  
                       u620 038B                         u700 0095                         u541 02F6  
                       u621 038A                         u605 0373                         u701 0094  
                       u710 00E9                         u535 02E9                         u711 00E8  
                       u480 0455                         u560 0308                         u640 039E  
                       u720 00FB                         u800 01E1                         u481 0454  
                       u561 0307                         u641 039D                         u625 0387  
                       u721 00FA                         u801 01E0                         u490 0460  
                       u730 023E                         u810 01EC                         u491 045F  
                       u731 023D                         u555 02F8                         u635 0392  
                       u811 01EB                         u580 031C                         u660 0024  
                       u820 01F8                         u581 031B                         u565 0304  
                       u661 0023                         u821 01F7                         u750 0269  
                       u590 036F                         u670 005E                         u830 0207  
                       u910 03FA                         u751 0268                         u655 03B4  
                       u575 0310                         u591 036E                         u671 005D  
                       u831 0206                         u911 03F9                         u680 0084  
                       u840 0214                         u745 0246                         u681 0083  
                       u841 0213                         u770 0330                         u690 008F  
                       u850 0221                         u691 008E                         u851 0220  
                       u780 0354                         u860 022E                         u765 0271  
                       u685 0080                         u861 022D                         u790 0366  
                       u791 0365                         u927 03FE                         u937 044C  
                       u947 0184                         u957 0194                         u967 01A4  
                       u977 02D3                         u987 03C4                         u997 03D5  
                       _isr 0472                         fsr0 0004                         indf 0000  
                      l1030 04D2                        l1300 03D3                        l1028 04EB  
                      l1230 0460                        l1310 049F                        l1302 03D8  
                      l1232 0467                        l1312 04A8                        l1304 0493  
                      l1400 0326                        l1240 02E5                        l1320 002B  
                      l1234 046E                        l1226 0451                        l1306 0496  
                      l1402 0342                        l1250 0308                        l1242 02E8  
                      l1330 0056                        l1322 0030                        l1314 0019  
                      l1410 01E1                        l1228 0455                        l1308 049C  
                      l1404 034A                        l1252 030E                        l1244 02EF  
                      l1236 02DB                        l1332 005A                        l1316 001E  
                      l1420 0221                        l1412 01EC                        l1254 030F  
                      l1246 02F3                        l1238 02DF                        l1270 037D  
                      l1262 0367                        l1350 008F                        l1334 005E  
                      l1326 0031                        l1318 0024                        l1406 04C0  
                      l1430 0188                        l1422 022E                        l1414 01F8  
                      l1256 0316                        l1248 02F7                        l1272 0381  
                      l1264 036F                        l1280 039E                        l1360 00D5  
                      l1352 0095                        l1344 0069                        l1336 0062  
                      l1328 004E                        l1432 0198                        l1424 0232  
                      l1416 0207                        l1408 01DA                        l1440 0418  
                      l1290 03BF                        l1258 031C                        l1274 038B  
                      l1266 0372                        l1362 00DC                        l1354 009C  
                      l1338 0067                        l1602 0043                        l1434 019E  
                      l1426 0178                        l1450 042E                        l1418 0214  
                      l1442 041B                        l1380 023E                        l1292 03C2  
                      l1284 03A6                        l1276 0391                        l1268 0379  
                      l1364 00E0                        l1356 00A0                        l1348 0085  
                      l1428 017E                        l1460 0438                        l1452 0432  
                      l1444 041C                        l1436 0408                        l1390 0269  
                      l1382 024F                        l1294 03C7                        l1286 03B0  
                      l1278 0398                        l1358 00A5                        l1366 00E9  
                      l1470 0448                        l1462 0439                        l1454 0433  
                      l1446 041E                        l1438 040B                        l1376 04DE  
                      l1392 027A                        l1384 0254                        l1296 03CA  
                      l1288 03B1                        l1368 00FB                        l1480 028E  
                      l1464 043F                        l1456 0434                        l1448 0427  
                      l1394 027F                        l1386 025A                        l1378 0239  
                      l1298 03D0                        l1482 029D                        l1466 0442  
                      l1458 0437                        l1396 0285                        l1388 0263  
                      l1484 02A6                        l1468 0445                        l1580 0401  
                      l1572 03DC                        l1398 0321                        l1486 02CB  
                      l1574 03EF                        l1576 03F4                        l1578 03FA  
                      _ADIF 0066                        ?_isr 0070                        STR_1 013E  
                      STR_2 0167                        STR_3 014E                        STR_4 015B  
                      STR_5 011A                        STR_6 0171                        STR_7 0175  
                      STR_8 012E                        _T0IF 005A                        u1007 04A3  
                      _TMR0 0001           ?_Lcd_Write_String 0077                        _main 03DC  
                      btemp 007E                        start 000C          ??_Lcd_Write_String 0023  
           __end_of_Lcd_Cmd 04AC                       ??_isr 0072                ?_intToString 0037  
          __end_of_LCD_Test 02DB               configOsc@frec 0075                       ?_main 0070  
           __end_of___lwdiv 0321                       i1l145 04BF             __end_of___lwmod 03A3  
                     i1l196 048B                       _PORTA 0005                       _PORTD 0008  
                     _TRISA 0085                       _TRISD 0088                       u90_20 0489  
                     u90_21 0488                       u89_20 0478                       u89_21 0477  
           __end_of_dpowers 011A                       pclath 000A                       status 0003  
                     wtemp0 007E             __end_of_sprintf 0100                 ioc_init@pin 0070  
          __end_of_Lcd_Init 01DA            __end_of_Lcd_Port 0472             __initialization 000F  
              __end_of_main 0408                      ??_main 004A                      _ADRESH 001E  
                    _ANSELH 0189            __end_of_adc_init 0450            __end_of_adc_read 04C0  
                    u101_27 04BA                      i1l1472 04AD                      i1l1560 0478  
                    i1l1474 04B8                      i1l1570 048A                      i1l1562 0483  
                    i1l1476 04BC                      i1l1564 0484                      i1l1566 0485  
                    i1l1558 0472                      i1l1568 0489                   ??_Lcd_Cmd 0076  
 adc_change_channel@channel 0076            __end_of_ioc_init 04EE                   ??___lwdiv 0020  
                 ??___lwmod 0028                      _setupF 0408                      saved_w 007E  
                 ??_sprintf 002D             Lcd_Set_Cursor@a 0023             Lcd_Set_Cursor@b 0020  
           Lcd_Set_Cursor@y 0025             Lcd_Set_Cursor@z 0024     __end_of__initialization 0012  
                 ?_LCD_Test 0070           __end_of_Lcd_Clear 04EB              __pcstackCOMMON 0070  
            _Lcd_Set_Cursor 0236              _OPTION_REGbits 0081                   ?_Lcd_Init 0070  
                 ?_Lcd_Port 0070                  __pbssBANK0 004B                  ??_LCD_Test 003B  
                __pmaintext 03DC                  __pintentry 0004      __end_of_Lcd_Set_Cursor 028E  
                   ?_setupF 0070                   ?_adc_init 0077                   ?_adc_read 0070  
                ??_Lcd_Init 0020                  ??_Lcd_Port 0075                  __stringtab 0100  
                 ?_ioc_init 0070              _Lcd_Write_Char 03A3                     _Lcd_Cmd 0492  
         __end_of_configOsc 0236                     ___lwdiv 02DB                     ___lwmod 0367  
                 _ANSELbits 0188             ?_Lcd_Set_Cursor 0020                  ??_adc_init 0020  
                ??_adc_read 0070                     __ptext1 0408                     __ptext2 04EB  
                   __ptext3 01DA                     __ptext4 042E                     __ptext5 04D1  
                   __ptext6 0178                     __ptext7 028E                     __ptext8 04C0  
                   __ptext9 0016                     _dpowers 0110                     _sprintf 0016  
    __end_of_Lcd_Write_Char 03DC        end_of_initialization 0012                  ??_ioc_init 0075  
                 Lcd_Port@a 0075             ?_Lcd_Write_Char 0070           Lcd_Write_String@a 0077  
         Lcd_Write_String@i 0026           intToString@buffer 0039                   _Lcd_Clear 04DE  
          _Lcd_Write_String 0321              __end_of_setupF 042E  __end_of_adc_change_channel 04DE  
       start_initialization 000F              intToString@num 0037                 __end_of_isr 0492  
                ?_Lcd_Clear 0070               ??_intToString 003A             adc_init@channel 0077  
           Lcd_Write_Char@a 0022             Lcd_Write_Char@y 0021                    ??_setupF 0077  
           adc_read@channel 0071                   ___latbits 0002               __pcstackBANK0 0020  
                  ?_Lcd_Cmd 0070                 sprintf@flag 0031                 sprintf@prec 0032  
            LCD_Test@buffer 003E            ___lwdiv@dividend 0077            ??_Lcd_Set_Cursor 0021  
                  ?___lwdiv 0075                    ?___lwmod 0024                   _configOsc 01DA  
                 __pstrings 0100         __end_of_intToString 04D1            ___lwdiv@quotient 0021  
                  ?_sprintf 002A           interrupt_function 0004                    _LCD_Test 028E  
                  _PIE1bits 008C                    Lcd_Cmd@a 0078                    _PIR1bits 000C  
               ??_Lcd_Clear 0079                  ?_configOsc 0075                  _ADCON0bits 001F  
               __stringbase 010F                  _ADCON1bits 009F            ??_Lcd_Write_Char 0076  
                  _Lcd_Init 0178                    _Lcd_Port 0450    __end_of_Lcd_Write_String 0367  
               _intToString 04C0          __end_of__stringtab 0110                    _adc_init 042E  
                  _adc_read 04AC                  sprintf@val 0033             ___lwdiv@divisor 0075  
           ___lwdiv@counter 0023                    __ptext10 0367                    __ptext11 02DB  
                  __ptext12 0321                    __ptext13 03A3                    __ptext14 0236  
                  __ptext15 04DE                    __ptext16 0492                    __ptext17 0450  
                  __ptext18 0472                    __ptext19 04AC                    _ioc_init 04EB  
        _adc_change_channel 04D1         ?_adc_change_channel 0070                 ??_configOsc 0077  
                _INTCONbits 000B        ??_adc_change_channel 0075          Lcd_Write_Char@temp 0020  
                  intlevel1 0000                   sprintf@ap 0030                   sprintf@sp 0035  
          ___lwmod@dividend 0026                   stringcode 010A                  _OSCCONbits 008F  
        Lcd_Set_Cursor@temp 0026                    sprintf@c 0036                    sprintf@f 002A  
           ___lwmod@divisor 0024             ___lwmod@counter 0029                    stringdir 010A  
                  stringtab 0100  
