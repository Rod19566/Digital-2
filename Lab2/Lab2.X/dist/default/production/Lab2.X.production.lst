

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Jul 26 20:53:40 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  008F                     	;# 
   116  0090                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  0105                     	;# 
   135  0107                     	;# 
   136  0108                     	;# 
   137  0109                     	;# 
   138  010C                     	;# 
   139  010C                     	;# 
   140  010D                     	;# 
   141  010E                     	;# 
   142  010F                     	;# 
   143  0185                     	;# 
   144  0187                     	;# 
   145  0188                     	;# 
   146  0189                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  0000                     	;# 
   150  0001                     	;# 
   151  0002                     	;# 
   152  0003                     	;# 
   153  0004                     	;# 
   154  0005                     	;# 
   155  0006                     	;# 
   156  0007                     	;# 
   157  0008                     	;# 
   158  0009                     	;# 
   159  000A                     	;# 
   160  000B                     	;# 
   161  000C                     	;# 
   162  000D                     	;# 
   163  000E                     	;# 
   164  000E                     	;# 
   165  000F                     	;# 
   166  0010                     	;# 
   167  0011                     	;# 
   168  0012                     	;# 
   169  0013                     	;# 
   170  0014                     	;# 
   171  0015                     	;# 
   172  0015                     	;# 
   173  0016                     	;# 
   174  0017                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001B                     	;# 
   179  001B                     	;# 
   180  001C                     	;# 
   181  001D                     	;# 
   182  001E                     	;# 
   183  001F                     	;# 
   184  0081                     	;# 
   185  0085                     	;# 
   186  0086                     	;# 
   187  0087                     	;# 
   188  0088                     	;# 
   189  0089                     	;# 
   190  008C                     	;# 
   191  008D                     	;# 
   192  008E                     	;# 
   193  008F                     	;# 
   194  0090                     	;# 
   195  0091                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0094                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009C                     	;# 
   209  009D                     	;# 
   210  009E                     	;# 
   211  009F                     	;# 
   212  0105                     	;# 
   213  0107                     	;# 
   214  0108                     	;# 
   215  0109                     	;# 
   216  010C                     	;# 
   217  010C                     	;# 
   218  010D                     	;# 
   219  010E                     	;# 
   220  010F                     	;# 
   221  0185                     	;# 
   222  0187                     	;# 
   223  0188                     	;# 
   224  0189                     	;# 
   225  018C                     	;# 
   226  018D                     	;# 
   227  0000                     	;# 
   228  0001                     	;# 
   229  0002                     	;# 
   230  0003                     	;# 
   231  0004                     	;# 
   232  0005                     	;# 
   233  0006                     	;# 
   234  0007                     	;# 
   235  0008                     	;# 
   236  0009                     	;# 
   237  000A                     	;# 
   238  000B                     	;# 
   239  000C                     	;# 
   240  000D                     	;# 
   241  000E                     	;# 
   242  000E                     	;# 
   243  000F                     	;# 
   244  0010                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001D                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  0081                     	;# 
   263  0085                     	;# 
   264  0086                     	;# 
   265  0087                     	;# 
   266  0088                     	;# 
   267  0089                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0094                     	;# 
   279  0095                     	;# 
   280  0096                     	;# 
   281  0097                     	;# 
   282  0098                     	;# 
   283  0099                     	;# 
   284  009A                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  0105                     	;# 
   291  0107                     	;# 
   292  0108                     	;# 
   293  0109                     	;# 
   294  010C                     	;# 
   295  010C                     	;# 
   296  010D                     	;# 
   297  010E                     	;# 
   298  010F                     	;# 
   299  0185                     	;# 
   300  0187                     	;# 
   301  0188                     	;# 
   302  0189                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  008F                     	;# 
   350  0090                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0095                     	;# 
   358  0096                     	;# 
   359  0097                     	;# 
   360  0098                     	;# 
   361  0099                     	;# 
   362  009A                     	;# 
   363  009B                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  0105                     	;# 
   369  0107                     	;# 
   370  0108                     	;# 
   371  0109                     	;# 
   372  010C                     	;# 
   373  010C                     	;# 
   374  010D                     	;# 
   375  010E                     	;# 
   376  010F                     	;# 
   377  0185                     	;# 
   378  0187                     	;# 
   379  0188                     	;# 
   380  0189                     	;# 
   381  018C                     	;# 
   382  018D                     	;# 
   383  0000                     	;# 
   384  0001                     	;# 
   385  0002                     	;# 
   386  0003                     	;# 
   387  0004                     	;# 
   388  0005                     	;# 
   389  0006                     	;# 
   390  0007                     	;# 
   391  0008                     	;# 
   392  0009                     	;# 
   393  000A                     	;# 
   394  000B                     	;# 
   395  000C                     	;# 
   396  000D                     	;# 
   397  000E                     	;# 
   398  000E                     	;# 
   399  000F                     	;# 
   400  0010                     	;# 
   401  0011                     	;# 
   402  0012                     	;# 
   403  0013                     	;# 
   404  0014                     	;# 
   405  0015                     	;# 
   406  0015                     	;# 
   407  0016                     	;# 
   408  0017                     	;# 
   409  0018                     	;# 
   410  0019                     	;# 
   411  001A                     	;# 
   412  001B                     	;# 
   413  001B                     	;# 
   414  001C                     	;# 
   415  001D                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  0081                     	;# 
   419  0085                     	;# 
   420  0086                     	;# 
   421  0087                     	;# 
   422  0088                     	;# 
   423  0089                     	;# 
   424  008C                     	;# 
   425  008D                     	;# 
   426  008E                     	;# 
   427  008F                     	;# 
   428  0090                     	;# 
   429  0091                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0095                     	;# 
   436  0096                     	;# 
   437  0097                     	;# 
   438  0098                     	;# 
   439  0099                     	;# 
   440  009A                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  0105                     	;# 
   447  0107                     	;# 
   448  0108                     	;# 
   449  0109                     	;# 
   450  010C                     	;# 
   451  010C                     	;# 
   452  010D                     	;# 
   453  010E                     	;# 
   454  010F                     	;# 
   455  0185                     	;# 
   456  0187                     	;# 
   457  0188                     	;# 
   458  0189                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461  0000                     	;# 
   462  0001                     	;# 
   463  0002                     	;# 
   464  0003                     	;# 
   465  0004                     	;# 
   466  0005                     	;# 
   467  0006                     	;# 
   468  0007                     	;# 
   469  0008                     	;# 
   470  0009                     	;# 
   471  000A                     	;# 
   472  000B                     	;# 
   473  000C                     	;# 
   474  000D                     	;# 
   475  000E                     	;# 
   476  000E                     	;# 
   477  000F                     	;# 
   478  0010                     	;# 
   479  0011                     	;# 
   480  0012                     	;# 
   481  0013                     	;# 
   482  0014                     	;# 
   483  0015                     	;# 
   484  0015                     	;# 
   485  0016                     	;# 
   486  0017                     	;# 
   487  0018                     	;# 
   488  0019                     	;# 
   489  001A                     	;# 
   490  001B                     	;# 
   491  001B                     	;# 
   492  001C                     	;# 
   493  001D                     	;# 
   494  001E                     	;# 
   495  001F                     	;# 
   496  0081                     	;# 
   497  0085                     	;# 
   498  0086                     	;# 
   499  0087                     	;# 
   500  0088                     	;# 
   501  0089                     	;# 
   502  008C                     	;# 
   503  008D                     	;# 
   504  008E                     	;# 
   505  008F                     	;# 
   506  0090                     	;# 
   507  0091                     	;# 
   508  0092                     	;# 
   509  0093                     	;# 
   510  0093                     	;# 
   511  0093                     	;# 
   512  0094                     	;# 
   513  0095                     	;# 
   514  0096                     	;# 
   515  0097                     	;# 
   516  0098                     	;# 
   517  0099                     	;# 
   518  009A                     	;# 
   519  009B                     	;# 
   520  009C                     	;# 
   521  009D                     	;# 
   522  009E                     	;# 
   523  009F                     	;# 
   524  0105                     	;# 
   525  0107                     	;# 
   526  0108                     	;# 
   527  0109                     	;# 
   528  010C                     	;# 
   529  010C                     	;# 
   530  010D                     	;# 
   531  010E                     	;# 
   532  010F                     	;# 
   533  0185                     	;# 
   534  0187                     	;# 
   535  0188                     	;# 
   536  0189                     	;# 
   537  018C                     	;# 
   538  018D                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  000D                     	;# 
   553  000E                     	;# 
   554  000E                     	;# 
   555  000F                     	;# 
   556  0010                     	;# 
   557  0011                     	;# 
   558  0012                     	;# 
   559  0013                     	;# 
   560  0014                     	;# 
   561  0015                     	;# 
   562  0015                     	;# 
   563  0016                     	;# 
   564  0017                     	;# 
   565  0018                     	;# 
   566  0019                     	;# 
   567  001A                     	;# 
   568  001B                     	;# 
   569  001B                     	;# 
   570  001C                     	;# 
   571  001D                     	;# 
   572  001E                     	;# 
   573  001F                     	;# 
   574  0081                     	;# 
   575  0085                     	;# 
   576  0086                     	;# 
   577  0087                     	;# 
   578  0088                     	;# 
   579  0089                     	;# 
   580  008C                     	;# 
   581  008D                     	;# 
   582  008E                     	;# 
   583  008F                     	;# 
   584  0090                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0093                     	;# 
   589  0093                     	;# 
   590  0094                     	;# 
   591  0095                     	;# 
   592  0096                     	;# 
   593  0097                     	;# 
   594  0098                     	;# 
   595  0099                     	;# 
   596  009A                     	;# 
   597  009B                     	;# 
   598  009C                     	;# 
   599  009D                     	;# 
   600  009E                     	;# 
   601  009F                     	;# 
   602  0105                     	;# 
   603  0107                     	;# 
   604  0108                     	;# 
   605  0109                     	;# 
   606  010C                     	;# 
   607  010C                     	;# 
   608  010D                     	;# 
   609  010E                     	;# 
   610  010F                     	;# 
   611  0185                     	;# 
   612  0187                     	;# 
   613  0188                     	;# 
   614  0189                     	;# 
   615  018C                     	;# 
   616  018D                     	;# 
   617                           
   618                           	psect	strings
   619  0100                     __pstrings:
   620  0100                     stringtab:
   621  0100                     __stringtab:
   622                           
   623                           ;	String table - string pointers are 1 byte each
   624  0100  1BFF               	btfsc	btemp+1,7
   625  0101  290A               	ljmp	stringcode
   626  0102  1383               	bcf	3,7
   627  0103  187F               	btfsc	btemp+1,0
   628  0104  1783               	bsf	3,7
   629  0105  0800               	movf	0,w
   630  0106  0A84               	incf	4,f
   631  0107  1903               	skipnz
   632  0108  0AFF               	incf	btemp+1,f
   633  0109  0008               	return
   634  010A                     stringcode:
   635  010A                     stringdir:
   636  010A  3001               	movlw	high stringdir
   637  010B  008A               	movwf	10
   638  010C  0804               	movf	4,w
   639  010D  0A84               	incf	4,f
   640  010E  0782               	addwf	2,f
   641  010F                     __stringbase:
   642  010F  3400               	retlw	0
   643  0110                     __end_of__stringtab:
   644  0110                     _dpowers:
   645  0110  3401               	retlw	1
   646  0111  3400               	retlw	0
   647  0112  340A               	retlw	10
   648  0113  3400               	retlw	0
   649  0114  3464               	retlw	100
   650  0115  3400               	retlw	0
   651  0116  34E8               	retlw	232
   652  0117  3403               	retlw	3
   653  0118  3410               	retlw	16
   654  0119  3427               	retlw	39
   655  011A                     __end_of_dpowers:
   656  000D                     _PIR2bits	set	13
   657  0019                     _TXREG	set	25
   658  0018                     _RCSTAbits	set	24
   659  0001                     _TMR0	set	1
   660  001E                     _ADRESH	set	30
   661  000C                     _PIR1bits	set	12
   662  001F                     _ADCON0bits	set	31
   663  000B                     _INTCONbits	set	11
   664  0008                     _PORTD	set	8
   665  0005                     _PORTA	set	5
   666  005A                     _T0IF	set	90
   667  0043                     _RD3	set	67
   668  0042                     _RD2	set	66
   669  0047                     _RD7	set	71
   670  0046                     _RD6	set	70
   671  0045                     _RD5	set	69
   672  0044                     _RD4	set	68
   673  009A                     _SPBRGH	set	154
   674  0099                     _SPBRG	set	153
   675  0098                     _TXSTAbits	set	152
   676  008C                     _PIE1bits	set	140
   677  009F                     _ADCON1bits	set	159
   678  0081                     _OPTION_REGbits	set	129
   679  0087                     _TRISC	set	135
   680  0085                     _TRISA	set	133
   681  008F                     _OSCCONbits	set	143
   682  0088                     _TRISD	set	136
   683  010C                     _EEDAT	set	268
   684  010D                     _EEADR	set	269
   685  018D                     _EECON2	set	397
   686  018C                     _EECON1bits	set	396
   687  0187                     _BAUDCTLbits	set	391
   688  0188                     _ANSELbits	set	392
   689  0189                     _ANSELH	set	393
   690  011A                     STR_5:
   691  011A  3477               	retlw	119	;'w'
   692  011B  3477               	retlw	119	;'w'
   693  011C  3477               	retlw	119	;'w'
   694  011D  342E               	retlw	46	;'.'
   695  011E  3465               	retlw	101	;'e'
   696  011F  346C               	retlw	108	;'l'
   697  0120  3465               	retlw	101	;'e'
   698  0121  3463               	retlw	99	;'c'
   699  0122  3474               	retlw	116	;'t'
   700  0123  3472               	retlw	114	;'r'
   701  0124  346F               	retlw	111	;'o'
   702  0125  3453               	retlw	83	;'S'
   703  0126  346F               	retlw	111	;'o'
   704  0127  346D               	retlw	109	;'m'
   705  0128  3465               	retlw	101	;'e'
   706  0129  342E               	retlw	46	;'.'
   707  012A  3463               	retlw	99	;'c'
   708  012B  346F               	retlw	111	;'o'
   709  012C  346D               	retlw	109	;'m'
   710  012D  3400               	retlw	0
   711  012E                     STR_8:
   712  012E  3450               	retlw	80	;'P'
   713  012F  346F               	retlw	111	;'o'
   714  0130  3474               	retlw	116	;'t'
   715  0131  3420               	retlw	32	;' '
   716  0132  3431               	retlw	49	;'1'
   717  0133  343A               	retlw	58	;':'
   718  0134  3420               	retlw	32	;' '
   719  0135  3420               	retlw	32	;' '
   720  0136  3420               	retlw	32	;' '
   721  0137  3420               	retlw	32	;' '
   722  0138  3420               	retlw	32	;' '
   723  0139  3443               	retlw	67	;'C'
   724  013A  3450               	retlw	80	;'P'
   725  013B  3455               	retlw	85	;'U'
   726  013C  343A               	retlw	58	;':'
   727  013D  3400               	retlw	0
   728  013E                     STR_1:
   729  013E  344C               	retlw	76	;'L'
   730  013F  3443               	retlw	67	;'C'
   731  0140  3444               	retlw	68	;'D'
   732  0141  3420               	retlw	32	;' '
   733  0142  344C               	retlw	76	;'L'
   734  0143  3469               	retlw	105	;'i'
   735  0144  3462               	retlw	98	;'b'
   736  0145  3472               	retlw	114	;'r'
   737  0146  3461               	retlw	97	;'a'
   738  0147  3472               	retlw	114	;'r'
   739  0148  3479               	retlw	121	;'y'
   740  0149  3420               	retlw	32	;' '
   741  014A  3466               	retlw	102	;'f'
   742  014B  346F               	retlw	111	;'o'
   743  014C  3472               	retlw	114	;'r'
   744  014D  3400               	retlw	0
   745  014E                     STR_3:
   746  014E  3444               	retlw	68	;'D'
   747  014F  3465               	retlw	101	;'e'
   748  0150  3476               	retlw	118	;'v'
   749  0151  3465               	retlw	101	;'e'
   750  0152  346C               	retlw	108	;'l'
   751  0153  346F               	retlw	111	;'o'
   752  0154  3470               	retlw	112	;'p'
   753  0155  3465               	retlw	101	;'e'
   754  0156  3464               	retlw	100	;'d'
   755  0157  3420               	retlw	32	;' '
   756  0158  3442               	retlw	66	;'B'
   757  0159  3479               	retlw	121	;'y'
   758  015A  3400               	retlw	0
   759  015B                     STR_4:
   760  015B  3465               	retlw	101	;'e'
   761  015C  346C               	retlw	108	;'l'
   762  015D  3465               	retlw	101	;'e'
   763  015E  3463               	retlw	99	;'c'
   764  015F  3474               	retlw	116	;'t'
   765  0160  3472               	retlw	114	;'r'
   766  0161  346F               	retlw	111	;'o'
   767  0162  3453               	retlw	83	;'S'
   768  0163  346F               	retlw	111	;'o'
   769  0164  346D               	retlw	109	;'m'
   770  0165  3465               	retlw	101	;'e'
   771  0166  3400               	retlw	0
   772  0167                     STR_2:
   773  0167  344D               	retlw	77	;'M'
   774  0168  3450               	retlw	80	;'P'
   775  0169  344C               	retlw	76	;'L'
   776  016A  3441               	retlw	65	;'A'
   777  016B  3442               	retlw	66	;'B'
   778  016C  3420               	retlw	32	;' '
   779  016D  3458               	retlw	88	;'X'
   780  016E  3443               	retlw	67	;'C'
   781  016F  3438               	retlw	56	;'8'
   782  0170  3400               	retlw	0
   783  0171                     STR_6:
   784  0171  3425               	retlw	37	;'%'
   785  0172  3464               	retlw	100	;'d'
   786  0173  3420               	retlw	32	;' '
   787  0174  3400               	retlw	0
   788  0175                     STR_7:
   789  0175  3425               	retlw	37	;'%'
   790  0176  3464               	retlw	100	;'d'
   791  0177  3400               	retlw	0
   792                           
   793                           	psect	cinit
   794  000F                     start_initialization:	
   795                           ; #config settings
   796                           
   797  000F                     __initialization:
   798                           
   799                           ; Clear objects allocated to BANK0
   800  000F  1283               	bcf	3,5	;RP0=0, select bank0
   801  0010  1303               	bcf	3,6	;RP1=0, select bank0
   802  0011  01C5               	clrf	__pbssBANK0& (0+127)
   803  0012                     end_of_initialization:	
   804                           ;End of C runtime variable initialization code
   805                           
   806  0012                     __end_of__initialization:
   807  0012  0183               	clrf	3
   808  0013  120A  118A  2B5C   	ljmp	_main	;jump to C main() function
   809                           
   810                           	psect	bssBANK0
   811  0045                     __pbssBANK0:
   812  0045                     _lcd1:
   813  0045                     	ds	1
   814                           
   815                           	psect	cstackCOMMON
   816  0070                     __pcstackCOMMON:
   817  0070                     ?_Lcd_Clear:
   818  0070                     ?_Lcd_Write_Char:	
   819                           ; 1 bytes @ 0x0
   820                           
   821  0070                     ?_ioc_init:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?_adc_change_channel:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ?_setupUart:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_LCD_Test:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_Lcd_Port:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ?_Lcd_Cmd:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_Lcd_Init:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0070                     ?_setupF:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0070                     ?_adc_read:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0070                     ?_isr:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0070                     ??_isr:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0070                     ?_main:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0070                     ioc_init@pin:	
   858                           ; 1 bytes @ 0x0
   859                           
   860                           
   861                           ; 1 bytes @ 0x0
   862  0070                     	ds	2
   863  0072                     ??_ioc_init:
   864  0072                     ??_adc_change_channel:	
   865                           ; 1 bytes @ 0x2
   866                           
   867  0072                     ?_UART_TX_config:	
   868                           ; 1 bytes @ 0x2
   869                           
   870  0072                     ??_Lcd_Port:	
   871                           ; 1 bytes @ 0x2
   872                           
   873  0072                     ?_configOsc:	
   874                           ; 1 bytes @ 0x2
   875                           
   876  0072                     ?___lwdiv:	
   877                           ; 1 bytes @ 0x2
   878                           
   879  0072                     Lcd_Port@a:	
   880                           ; 2 bytes @ 0x2
   881                           
   882  0072                     configOsc@frec:	
   883                           ; 1 bytes @ 0x2
   884                           
   885  0072                     UART_TX_config@baudrate:	
   886                           ; 2 bytes @ 0x2
   887                           
   888  0072                     ___lwdiv@divisor:	
   889                           ; 2 bytes @ 0x2
   890                           
   891                           
   892                           ; 2 bytes @ 0x2
   893  0072                     	ds	1
   894  0073                     ??_Lcd_Write_Char:
   895  0073                     ??_Lcd_Cmd:	
   896                           ; 1 bytes @ 0x3
   897                           
   898  0073                     adc_change_channel@channel:	
   899                           ; 1 bytes @ 0x3
   900                           
   901                           
   902                           ; 1 bytes @ 0x3
   903  0073                     	ds	1
   904  0074                     ??_setupUart:
   905  0074                     ??_UART_TX_config:	
   906                           ; 1 bytes @ 0x4
   907                           
   908  0074                     ??_configOsc:	
   909                           ; 1 bytes @ 0x4
   910                           
   911  0074                     ??_setupF:	
   912                           ; 1 bytes @ 0x4
   913                           
   914  0074                     ?_adc_init:	
   915                           ; 1 bytes @ 0x4
   916                           
   917  0074                     ??_adc_read:	
   918                           ; 1 bytes @ 0x4
   919                           
   920  0074                     Lcd_Write_Char@temp:	
   921                           ; 1 bytes @ 0x4
   922                           
   923  0074                     adc_init@channel:	
   924                           ; 1 bytes @ 0x4
   925                           
   926  0074                     ___lwdiv@dividend:	
   927                           ; 2 bytes @ 0x4
   928                           
   929                           
   930                           ; 2 bytes @ 0x4
   931  0074                     	ds	1
   932  0075                     Lcd_Cmd@a:
   933  0075                     Lcd_Write_Char@y:	
   934                           ; 1 bytes @ 0x5
   935                           
   936  0075                     adc_read@channel:	
   937                           ; 1 bytes @ 0x5
   938                           
   939                           
   940                           ; 1 bytes @ 0x5
   941  0075                     	ds	1
   942  0076                     ??_Lcd_Clear:
   943  0076                     ?_Lcd_Set_Cursor:	
   944                           ; 1 bytes @ 0x6
   945                           
   946  0076                     ??_Lcd_Init:	
   947                           ; 1 bytes @ 0x6
   948                           
   949  0076                     ??_adc_init:	
   950                           ; 1 bytes @ 0x6
   951                           
   952  0076                     ??___lwdiv:	
   953                           ; 1 bytes @ 0x6
   954                           
   955  0076                     Lcd_Set_Cursor@b:	
   956                           ; 1 bytes @ 0x6
   957                           
   958  0076                     Lcd_Write_Char@a:	
   959                           ; 1 bytes @ 0x6
   960                           
   961                           
   962                           ; 1 bytes @ 0x6
   963  0076                     	ds	1
   964  0077                     ??_Lcd_Set_Cursor:
   965  0077                     ?_Lcd_Write_String:	
   966                           ; 1 bytes @ 0x7
   967                           
   968  0077                     Lcd_Write_String@a:	
   969                           ; 1 bytes @ 0x7
   970                           
   971  0077                     ___lwdiv@quotient:	
   972                           ; 2 bytes @ 0x7
   973                           
   974                           
   975                           ; 2 bytes @ 0x7
   976  0077                     	ds	2
   977  0079                     ??_Lcd_Write_String:
   978  0079                     ___lwdiv@counter:	
   979                           ; 1 bytes @ 0x9
   980                           
   981                           
   982                           ; 1 bytes @ 0x9
   983  0079                     	ds	1
   984  007A                     ??___lwmod:
   985                           
   986                           ; 1 bytes @ 0xA
   987  007A                     	ds	1
   988  007B                     ___lwmod@counter:
   989                           
   990                           ; 1 bytes @ 0xB
   991  007B                     	ds	1
   992                           
   993                           	psect	cstackBANK0
   994  0020                     __pcstackBANK0:
   995  0020                     ?___lwmod:
   996  0020                     Lcd_Set_Cursor@a:	
   997                           ; 2 bytes @ 0x0
   998                           
   999  0020                     Lcd_Write_String@i:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  0020                     ___lwmod@divisor:	
  1003                           ; 2 bytes @ 0x0
  1004                           
  1005                           
  1006                           ; 2 bytes @ 0x0
  1007  0020                     	ds	1
  1008  0021                     Lcd_Set_Cursor@z:
  1009                           
  1010                           ; 1 bytes @ 0x1
  1011  0021                     	ds	1
  1012  0022                     Lcd_Set_Cursor@y:
  1013  0022                     ___lwmod@dividend:	
  1014                           ; 1 bytes @ 0x2
  1015                           
  1016                           
  1017                           ; 2 bytes @ 0x2
  1018  0022                     	ds	1
  1019  0023                     Lcd_Set_Cursor@temp:
  1020                           
  1021                           ; 1 bytes @ 0x3
  1022  0023                     	ds	1
  1023  0024                     ?_sprintf:
  1024  0024                     sprintf@f:	
  1025                           ; 2 bytes @ 0x4
  1026                           
  1027                           
  1028                           ; 1 bytes @ 0x4
  1029  0024                     	ds	3
  1030  0027                     ??_sprintf:
  1031                           
  1032                           ; 1 bytes @ 0x7
  1033  0027                     	ds	3
  1034  002A                     sprintf@ap:
  1035                           
  1036                           ; 1 bytes @ 0xA
  1037  002A                     	ds	1
  1038  002B                     sprintf@flag:
  1039                           
  1040                           ; 1 bytes @ 0xB
  1041  002B                     	ds	1
  1042  002C                     sprintf@prec:
  1043                           
  1044                           ; 1 bytes @ 0xC
  1045  002C                     	ds	1
  1046  002D                     sprintf@val:
  1047                           
  1048                           ; 2 bytes @ 0xD
  1049  002D                     	ds	2
  1050  002F                     sprintf@sp:
  1051                           
  1052                           ; 1 bytes @ 0xF
  1053  002F                     	ds	1
  1054  0030                     sprintf@c:
  1055                           
  1056                           ; 1 bytes @ 0x10
  1057  0030                     	ds	1
  1058  0031                     ?_intToString:
  1059  0031                     intToString@num:	
  1060                           ; 1 bytes @ 0x11
  1061                           
  1062                           
  1063                           ; 2 bytes @ 0x11
  1064  0031                     	ds	2
  1065  0033                     intToString@buffer:
  1066                           
  1067                           ; 1 bytes @ 0x13
  1068  0033                     	ds	1
  1069  0034                     ??_intToString:
  1070                           
  1071                           ; 1 bytes @ 0x14
  1072  0034                     	ds	1
  1073  0035                     ??_LCD_Test:
  1074                           
  1075                           ; 1 bytes @ 0x15
  1076  0035                     	ds	3
  1077  0038                     LCD_Test@buffer:
  1078                           
  1079                           ; 12 bytes @ 0x18
  1080  0038                     	ds	12
  1081  0044                     ??_main:
  1082                           
  1083                           ; 1 bytes @ 0x24
  1084  0044                     	ds	1
  1085                           
  1086                           	psect	maintext
  1087  035C                     __pmaintext:	
  1088 ;;
  1089 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1090 ;;
  1091 ;; *************** function _main *****************
  1092 ;; Defined at:
  1093 ;;		line 71 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : B00/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0
  1109 ;;      Temps:          0       1       0       0       0
  1110 ;;      Totals:         0       1       0       0       0
  1111 ;;Total ram usage:        1 bytes
  1112 ;; Hardware stack levels required when called: 5
  1113 ;; This function calls:
  1114 ;;		_LCD_Test
  1115 ;;		_Lcd_Init
  1116 ;;		_adc_init
  1117 ;;		_adc_read
  1118 ;;		_setupF
  1119 ;;		_setupUart
  1120 ;; This function is called by:
  1121 ;;		Startup code after reset
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125  035C                     _main:	
  1126                           ;psect for function _main
  1127                           
  1128  035C                     l1720:	
  1129                           ;incstack = 0
  1130                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1131                           
  1132                           
  1133                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 72:     setupF();
  1134  035C  120A  118A  2411  120A  118A  	fcall	_setupF
  1135                           
  1136                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 73:     adc_init(0);
  1137  0361  3000               	movlw	0
  1138  0362  00F4               	movwf	adc_init@channel
  1139  0363  00F5               	movwf	adc_init@channel+1
  1140  0364  120A  118A  245D  120A  118A  	fcall	_adc_init
  1141                           
  1142                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 74:     setupUart();
  1143  0369  120A  118A  2497  120A  118A  	fcall	_setupUart
  1144                           
  1145                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 75:     Lcd_Init();
  1146  036E  120A  118A  2178  120A  118A  	fcall	_Lcd_Init
  1147  0373                     l1722:
  1148                           
  1149                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 77:         LCD_Test();
  1150  0373  120A  118A  2289  120A  118A  	fcall	_LCD_Test
  1151  0378                     l1724:
  1152                           
  1153                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 78:         if(ADCON0bits.G
      +                          O == 0){
  1154  0378  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0379  1303               	bcf	3,6	;RP1=0, select bank0
  1156  037A  189F               	btfsc	31,1	;volatile
  1157  037B  2B7D               	goto	u941
  1158  037C  2B7E               	goto	u940
  1159  037D                     u941:
  1160  037D  2B92               	goto	l1734
  1161  037E                     u940:
  1162  037E                     l1726:
  1163                           
  1164                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 79:             _delay((uns
      +                          igned long)((20)*(8000000/4000000.0)));
  1165  037E  300C               	movlw	12
  1166  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1167  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1168  0381  00C4               	movwf	??_main
  1169  0382                     u967:
  1170  0382  0BC4               	decfsz	??_main,f
  1171  0383  2B82               	goto	u967
  1172  0384  0000               	nop
  1173  0385                     l1728:
  1174                           
  1175                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 80:             lcd1 = adc_
      +                          read(0);
  1176  0385  3000               	movlw	0
  1177  0386  120A  118A  24BE  120A  118A  	fcall	_adc_read
  1178  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1179  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1180  038D  00C4               	movwf	??_main
  1181  038E  0844               	movf	??_main,w
  1182  038F  00C5               	movwf	_lcd1
  1183  0390                     l1730:
  1184                           
  1185                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 81:             PIR1bits.AD
      +                          IF = 0;
  1186  0390  130C               	bcf	12,6	;volatile
  1187  0391                     l1732:
  1188                           
  1189                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 82:             ADCON0bits.
      +                          GO = 1;
  1190  0391  149F               	bsf	31,1	;volatile
  1191  0392                     l1734:
  1192                           
  1193                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 84:         if(ADCON0bits.G
      +                          O == 1){
  1194  0392  1C9F               	btfss	31,1	;volatile
  1195  0393  2B95               	goto	u951
  1196  0394  2B96               	goto	u950
  1197  0395                     u951:
  1198  0395  2B73               	goto	l1722
  1199  0396                     u950:
  1200  0396                     l1736:
  1201                           
  1202                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 85:             PIR1bits.AD
      +                          IF = 0;
  1203  0396  130C               	bcf	12,6	;volatile
  1204                           
  1205                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 86:             ADCON0bits.
      +                          GO = 0;
  1206  0397  109F               	bcf	31,1	;volatile
  1207  0398  2B73               	goto	l1722
  1208  0399  120A  118A  280C   	ljmp	start
  1209  039C                     __end_of_main:
  1210                           
  1211                           	psect	text1
  1212  0497                     __ptext1:	
  1213 ;; *************** function _setupUart *****************
  1214 ;; Defined at:
  1215 ;;		line 12 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/uart.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0, pclath, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1229 ;;      Params:         0       0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0
  1232 ;;      Totals:         0       0       0       0       0
  1233 ;;Total ram usage:        0 bytes
  1234 ;; Hardware stack levels used: 1
  1235 ;; Hardware stack levels required when called: 2
  1236 ;; This function calls:
  1237 ;;		_UART_TX_config
  1238 ;; This function is called by:
  1239 ;;		_main
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243  0497                     _setupUart:	
  1244                           ;psect for function _setupUart
  1245                           
  1246  0497                     l1630:	
  1247                           ;incstack = 0
  1248                           ; Regs used in _setupUart: [wreg+status,2+status,0+pclath+cstack]
  1249                           
  1250                           
  1251                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/uart.c: 15:     TXSTAbits.SYNC = 0;
  1252  0497  1683               	bsf	3,5	;RP0=1, select bank1
  1253  0498  1303               	bcf	3,6	;RP1=0, select bank1
  1254  0499  1218               	bcf	24,4	;volatile
  1255                           
  1256                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/uart.c: 16:     TXSTAbits.BRGH = 1;
  1257  049A  1518               	bsf	24,2	;volatile
  1258  049B                     l1632:
  1259                           
  1260                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/uart.c: 18:     UART_TX_config(1);
  1261  049B  3001               	movlw	1
  1262  049C  00F2               	movwf	UART_TX_config@baudrate
  1263  049D  3000               	movlw	0
  1264  049E  00F3               	movwf	UART_TX_config@baudrate+1
  1265  049F  120A  118A  24DC  120A  118A  	fcall	_UART_TX_config
  1266  04A4                     l1634:
  1267                           
  1268                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/uart.c: 20:     RCSTAbits.SPEN = 1;
  1269  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  1270  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  1271  04A6  1798               	bsf	24,7	;volatile
  1272  04A7                     l1636:
  1273                           
  1274                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/uart.c: 21:     RCSTAbits.RX9 = 0;
  1275  04A7  1318               	bcf	24,6	;volatile
  1276  04A8                     l1638:
  1277                           
  1278                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/uart.c: 22:     RCSTAbits.CREN = 1;
  1279  04A8  1618               	bsf	24,4	;volatile
  1280  04A9                     l1640:
  1281                           
  1282                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/uart.c: 23:     TXSTAbits.TXEN = 1;
  1283  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  1284  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  1285  04AB  1698               	bsf	24,5	;volatile
  1286  04AC                     l244:
  1287  04AC  0008               	return
  1288  04AD                     __end_of_setupUart:
  1289                           
  1290                           	psect	text2
  1291  04DC                     __ptext2:	
  1292 ;; *************** function _UART_TX_config *****************
  1293 ;; Defined at:
  1294 ;;		line 26 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/uart.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  baudrate        2    2[COMMON] unsigned int 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, status,2, status,0
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1308 ;;      Params:         2       0       0       0       0
  1309 ;;      Locals:         0       0       0       0       0
  1310 ;;      Temps:          0       0       0       0       0
  1311 ;;      Totals:         2       0       0       0       0
  1312 ;;Total ram usage:        2 bytes
  1313 ;; Hardware stack levels used: 1
  1314 ;; Hardware stack levels required when called: 1
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_setupUart
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322  04DC                     _UART_TX_config:	
  1323                           ;psect for function _UART_TX_config
  1324                           
  1325  04DC                     l1558:	
  1326                           ;incstack = 0
  1327                           ; Regs used in _UART_TX_config: [wreg+status,2+status,0]
  1328                           
  1329                           
  1330                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/uart.c: 27:     BAUDCTLbits.BRG16 =
      +                           baudrate;
  1331  04DC  0C72               	rrf	UART_TX_config@baudrate,w
  1332  04DD  1683               	bsf	3,5	;RP0=1, select bank3
  1333  04DE  1703               	bsf	3,6	;RP1=1, select bank3
  1334  04DF  1C03               	skipc
  1335  04E0  1187               	bcf	7,3	;volatile
  1336  04E1  1803               	skipnc
  1337  04E2  1587               	bsf	7,3	;volatile
  1338  04E3                     l1560:
  1339                           
  1340                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/uart.c: 28:     SPBRG = 207;
  1341  04E3  30CF               	movlw	207
  1342  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  1343  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  1344  04E6  0099               	movwf	25	;volatile
  1345  04E7                     l1562:
  1346                           
  1347                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/uart.c: 29:     SPBRGH = 0;
  1348  04E7  019A               	clrf	26	;volatile
  1349  04E8                     l247:
  1350  04E8  0008               	return
  1351  04E9                     __end_of_UART_TX_config:
  1352                           
  1353                           	psect	text3
  1354  0411                     __ptext3:	
  1355 ;; *************** function _setupF *****************
  1356 ;; Defined at:
  1357 ;;		line 8 in file "setup.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, status,2, status,0, pclath, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1371 ;;      Params:         0       0       0       0       0
  1372 ;;      Locals:         0       0       0       0       0
  1373 ;;      Temps:          0       0       0       0       0
  1374 ;;      Totals:         0       0       0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 2
  1378 ;; This function calls:
  1379 ;;		_configOsc
  1380 ;;		_ioc_init
  1381 ;; This function is called by:
  1382 ;;		_main
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386  0411                     _setupF:	
  1387                           ;psect for function _setupF
  1388                           
  1389  0411                     l1574:	
  1390                           ;incstack = 0
  1391                           ; Regs used in _setupF: [wreg+status,2+status,0+pclath+cstack]
  1392                           
  1393                           
  1394                           ;setup.c: 9:     configOsc(8);
  1395  0411  3008               	movlw	8
  1396  0412  00F2               	movwf	configOsc@frec
  1397  0413  3000               	movlw	0
  1398  0414  00F3               	movwf	configOsc@frec+1
  1399  0415  120A  118A  21D5  120A  118A  	fcall	_configOsc
  1400  041A                     l1576:
  1401                           
  1402                           ;setup.c: 11:     ANSELH = 0;
  1403  041A  1683               	bsf	3,5	;RP0=1, select bank3
  1404  041B  1703               	bsf	3,6	;RP1=1, select bank3
  1405  041C  0189               	clrf	9	;volatile
  1406  041D                     l1578:
  1407                           
  1408                           ;setup.c: 12:     ANSELbits.ANS0 = 1;
  1409  041D  1408               	bsf	8,0	;volatile
  1410  041E                     l1580:
  1411                           
  1412                           ;setup.c: 13:     ANSELbits.ANS1 = 1;
  1413  041E  1488               	bsf	8,1	;volatile
  1414  041F                     l1582:
  1415                           
  1416                           ;setup.c: 14:     TRISA = 3;
  1417  041F  3003               	movlw	3
  1418  0420  1683               	bsf	3,5	;RP0=1, select bank1
  1419  0421  1303               	bcf	3,6	;RP1=0, select bank1
  1420  0422  0085               	movwf	5	;volatile
  1421  0423                     l1584:
  1422                           
  1423                           ;setup.c: 15:     TRISC = 128;
  1424  0423  3080               	movlw	128
  1425  0424  0087               	movwf	7	;volatile
  1426  0425                     l1586:
  1427                           
  1428                           ;setup.c: 16:     PORTA = 0;
  1429  0425  1283               	bcf	3,5	;RP0=0, select bank0
  1430  0426  1303               	bcf	3,6	;RP1=0, select bank0
  1431  0427  0185               	clrf	5	;volatile
  1432  0428                     l1588:
  1433                           
  1434                           ;setup.c: 19:     TRISD = 0x00;
  1435  0428  1683               	bsf	3,5	;RP0=1, select bank1
  1436  0429  1303               	bcf	3,6	;RP1=0, select bank1
  1437  042A  0188               	clrf	8	;volatile
  1438  042B                     l1590:
  1439                           
  1440                           ;setup.c: 20:     PORTD = 0;
  1441  042B  1283               	bcf	3,5	;RP0=0, select bank0
  1442  042C  1303               	bcf	3,6	;RP1=0, select bank0
  1443  042D  0188               	clrf	8	;volatile
  1444  042E                     l1592:
  1445                           
  1446                           ;setup.c: 23:     OPTION_REGbits.T0CS = 0;
  1447  042E  1683               	bsf	3,5	;RP0=1, select bank1
  1448  042F  1303               	bcf	3,6	;RP1=0, select bank1
  1449  0430  1281               	bcf	1,5	;volatile
  1450  0431                     l1594:
  1451                           
  1452                           ;setup.c: 24:     OPTION_REGbits.PSA = 0;
  1453  0431  1181               	bcf	1,3	;volatile
  1454  0432                     l1596:
  1455                           
  1456                           ;setup.c: 25:     OPTION_REGbits.PS = 0;
  1457  0432  30F8               	movlw	-8
  1458  0433  0581               	andwf	1,f	;volatile
  1459  0434                     l1598:
  1460                           
  1461                           ;setup.c: 27:     ioc_init(1);
  1462  0434  3001               	movlw	1
  1463  0435  120A  118A  2503  120A  118A  	fcall	_ioc_init
  1464  043A                     l124:
  1465  043A  0008               	return
  1466  043B                     __end_of_setupF:
  1467                           
  1468                           	psect	text4
  1469  0503                     __ptext4:	
  1470 ;; *************** function _ioc_init *****************
  1471 ;; Defined at:
  1472 ;;		line 30 in file "setup.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  pin             1    wreg     unsigned char 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  pin             1    0[COMMON] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0
  1489 ;;      Totals:         0       0       0       0       0
  1490 ;;Total ram usage:        0 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 1
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_setupF
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500  0503                     _ioc_init:	
  1501                           ;psect for function _ioc_init
  1502                           
  1503  0503                     l1554:	
  1504                           ;incstack = 0
  1505                           ; Regs used in _ioc_init: [wreg]
  1506                           
  1507                           
  1508                           ;setup.c: 32:     INTCONbits.GIE = 1;
  1509  0503  178B               	bsf	11,7	;volatile
  1510                           
  1511                           ;setup.c: 33:     INTCONbits.PEIE = 1;
  1512  0504  170B               	bsf	11,6	;volatile
  1513  0505                     l127:
  1514  0505  0008               	return
  1515  0506                     __end_of_ioc_init:
  1516                           
  1517                           	psect	text5
  1518  01D5                     __ptext5:	
  1519 ;; *************** function _configOsc *****************
  1520 ;; Defined at:
  1521 ;;		line 4 in file "oscilador.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  frec            2    2[COMMON] unsigned int 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;		None
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  1    wreg      void 
  1528 ;; Registers used:
  1529 ;;		wreg, status,2, status,0
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1535 ;;      Params:         2       0       0       0       0
  1536 ;;      Locals:         0       0       0       0       0
  1537 ;;      Temps:          0       0       0       0       0
  1538 ;;      Totals:         2       0       0       0       0
  1539 ;;Total ram usage:        2 bytes
  1540 ;; Hardware stack levels used: 1
  1541 ;; Hardware stack levels required when called: 1
  1542 ;; This function calls:
  1543 ;;		Nothing
  1544 ;; This function is called by:
  1545 ;;		_setupF
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549  01D5                     _configOsc:	
  1550                           ;psect for function _configOsc
  1551                           
  1552  01D5                     l1536:	
  1553                           ;incstack = 0
  1554                           ; Regs used in _configOsc: [wreg+status,2+status,0]
  1555                           
  1556                           
  1557                           ;oscilador.c: 5:         if (frec == 8) OSCCONbits.IRCF = 0b111;
  1558  01D5  3008               	movlw	8
  1559  01D6  0672               	xorwf	configOsc@frec,w
  1560  01D7  0473               	iorwf	configOsc@frec+1,w
  1561  01D8  1D03               	btfss	3,2
  1562  01D9  29DB               	goto	u851
  1563  01DA  29DC               	goto	u850
  1564  01DB                     u851:
  1565  01DB  29E0               	goto	l92
  1566  01DC                     u850:
  1567  01DC                     l1538:
  1568  01DC  3070               	movlw	112
  1569  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  1570  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  1571  01DF  048F               	iorwf	15,f	;volatile
  1572  01E0                     l92:
  1573                           
  1574                           ;oscilador.c: 6:         if (frec == 4) OSCCONbits.IRCF = 0b110;
  1575  01E0  3004               	movlw	4
  1576  01E1  0672               	xorwf	configOsc@frec,w
  1577  01E2  0473               	iorwf	configOsc@frec+1,w
  1578  01E3  1D03               	btfss	3,2
  1579  01E4  29E6               	goto	u861
  1580  01E5  29E7               	goto	u860
  1581  01E6                     u861:
  1582  01E6  29ED               	goto	l93
  1583  01E7                     u860:
  1584  01E7                     l1540:
  1585  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  1586  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  1587  01E9  080F               	movf	15,w	;volatile
  1588  01EA  398F               	andlw	-113
  1589  01EB  3860               	iorlw	96
  1590  01EC  008F               	movwf	15	;volatile
  1591  01ED                     l93:
  1592                           
  1593                           ;oscilador.c: 7:         if (frec == 1) OSCCONbits.IRCF = 0b100;
  1594  01ED  0372               	decf	configOsc@frec,w
  1595  01EE  0473               	iorwf	configOsc@frec+1,w
  1596  01EF  1D03               	btfss	3,2
  1597  01F0  29F2               	goto	u871
  1598  01F1  29F3               	goto	u870
  1599  01F2                     u871:
  1600  01F2  29F9               	goto	l94
  1601  01F3                     u870:
  1602  01F3                     l1542:
  1603  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  1604  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  1605  01F5  080F               	movf	15,w	;volatile
  1606  01F6  398F               	andlw	-113
  1607  01F7  3840               	iorlw	64
  1608  01F8  008F               	movwf	15	;volatile
  1609  01F9                     l94:
  1610                           
  1611                           ;oscilador.c: 8:         if (frec == 500) OSCCONbits.IRCF = 0b011;
  1612  01F9  30F4               	movlw	244
  1613  01FA  0672               	xorwf	configOsc@frec,w
  1614  01FB  1D03               	skipz
  1615  01FC  2A01               	goto	u881
  1616  01FD  0373               	decf	configOsc@frec+1,w
  1617  01FE  1D03               	btfss	3,2
  1618  01FF  2A01               	goto	u881
  1619  0200  2A02               	goto	u880
  1620  0201                     u881:
  1621  0201  2A08               	goto	l95
  1622  0202                     u880:
  1623  0202                     l1544:
  1624  0202  1683               	bsf	3,5	;RP0=1, select bank1
  1625  0203  1303               	bcf	3,6	;RP1=0, select bank1
  1626  0204  080F               	movf	15,w	;volatile
  1627  0205  398F               	andlw	-113
  1628  0206  3830               	iorlw	48
  1629  0207  008F               	movwf	15	;volatile
  1630  0208                     l95:
  1631                           
  1632                           ;oscilador.c: 9:         if (frec == 250) OSCCONbits.IRCF = 0b101;
  1633  0208  30FA               	movlw	250
  1634  0209  0672               	xorwf	configOsc@frec,w
  1635  020A  0473               	iorwf	configOsc@frec+1,w
  1636  020B  1D03               	btfss	3,2
  1637  020C  2A0E               	goto	u891
  1638  020D  2A0F               	goto	u890
  1639  020E                     u891:
  1640  020E  2A15               	goto	l96
  1641  020F                     u890:
  1642  020F                     l1546:
  1643  020F  1683               	bsf	3,5	;RP0=1, select bank1
  1644  0210  1303               	bcf	3,6	;RP1=0, select bank1
  1645  0211  080F               	movf	15,w	;volatile
  1646  0212  398F               	andlw	-113
  1647  0213  3850               	iorlw	80
  1648  0214  008F               	movwf	15	;volatile
  1649  0215                     l96:
  1650                           
  1651                           ;oscilador.c: 10:         if (frec == 125) OSCCONbits.IRCF = 0b001;
  1652  0215  307D               	movlw	125
  1653  0216  0672               	xorwf	configOsc@frec,w
  1654  0217  0473               	iorwf	configOsc@frec+1,w
  1655  0218  1D03               	btfss	3,2
  1656  0219  2A1B               	goto	u901
  1657  021A  2A1C               	goto	u900
  1658  021B                     u901:
  1659  021B  2A22               	goto	l97
  1660  021C                     u900:
  1661  021C                     l1548:
  1662  021C  1683               	bsf	3,5	;RP0=1, select bank1
  1663  021D  1303               	bcf	3,6	;RP1=0, select bank1
  1664  021E  080F               	movf	15,w	;volatile
  1665  021F  398F               	andlw	-113
  1666  0220  3810               	iorlw	16
  1667  0221  008F               	movwf	15	;volatile
  1668  0222                     l97:
  1669                           
  1670                           ;oscilador.c: 11:         if (frec == 31) OSCCONbits.IRCF = 0b000;
  1671  0222  301F               	movlw	31
  1672  0223  0672               	xorwf	configOsc@frec,w
  1673  0224  0473               	iorwf	configOsc@frec+1,w
  1674  0225  1D03               	btfss	3,2
  1675  0226  2A28               	goto	u911
  1676  0227  2A29               	goto	u910
  1677  0228                     u911:
  1678  0228  2A2D               	goto	l1552
  1679  0229                     u910:
  1680  0229                     l1550:
  1681  0229  308F               	movlw	-113
  1682  022A  1683               	bsf	3,5	;RP0=1, select bank1
  1683  022B  1303               	bcf	3,6	;RP1=0, select bank1
  1684  022C  058F               	andwf	15,f	;volatile
  1685  022D                     l1552:
  1686                           
  1687                           ;oscilador.c: 12:         OSCCONbits.SCS = 1;
  1688  022D  1683               	bsf	3,5	;RP0=1, select bank1
  1689  022E  1303               	bcf	3,6	;RP1=0, select bank1
  1690  022F  140F               	bsf	15,0	;volatile
  1691  0230                     l99:
  1692  0230  0008               	return
  1693  0231                     __end_of_configOsc:
  1694                           
  1695                           	psect	text6
  1696  04BE                     __ptext6:	
  1697 ;; *************** function _adc_read *****************
  1698 ;; Defined at:
  1699 ;;		line 33 in file "ADC_Interrupt.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  channel         1    wreg     unsigned char 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  channel         1    5[COMMON] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      unsigned char 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0, pclath, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1713 ;;      Params:         0       0       0       0       0
  1714 ;;      Locals:         1       0       0       0       0
  1715 ;;      Temps:          1       0       0       0       0
  1716 ;;      Totals:         2       0       0       0       0
  1717 ;;Total ram usage:        2 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 2
  1720 ;; This function calls:
  1721 ;;		_adc_change_channel
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727  04BE                     _adc_read:	
  1728                           ;psect for function _adc_read
  1729                           
  1730                           
  1731                           ;incstack = 0
  1732                           ; Regs used in _adc_read: [wreg+status,2+status,0+pclath+cstack]
  1733                           ;adc_read@channel stored from wreg
  1734  04BE  00F5               	movwf	adc_read@channel
  1735  04BF                     l1622:
  1736                           
  1737                           ;ADC_Interrupt.c: 34:     adc_change_channel(channel);
  1738  04BF  0875               	movf	adc_read@channel,w
  1739  04C0  120A  118A  24E9  120A  118A  	fcall	_adc_change_channel
  1740  04C5                     l1624:
  1741                           
  1742                           ;ADC_Interrupt.c: 35:     _delay((unsigned long)((20)*(8000000/4000000.0)));
  1743  04C5  300D               	movlw	13
  1744  04C6  00F4               	movwf	??_adc_read
  1745  04C7                     u977:
  1746  04C7  0BF4               	decfsz	??_adc_read,f
  1747  04C8  2CC7               	goto	u977
  1748  04C9                     l1626:
  1749                           
  1750                           ;ADC_Interrupt.c: 36:     return ADRESH;
  1751  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1752  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1753  04CB  081E               	movf	30,w	;volatile
  1754  04CC                     l147:
  1755  04CC  0008               	return
  1756  04CD                     __end_of_adc_read:
  1757                           
  1758                           	psect	text7
  1759  045D                     __ptext7:	
  1760 ;; *************** function _adc_init *****************
  1761 ;; Defined at:
  1762 ;;		line 17 in file "ADC_Interrupt.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  channel         2    4[COMMON] int 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0, pclath, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1776 ;;      Params:         2       0       0       0       0
  1777 ;;      Locals:         0       0       0       0       0
  1778 ;;      Temps:          1       0       0       0       0
  1779 ;;      Totals:         3       0       0       0       0
  1780 ;;Total ram usage:        3 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; Hardware stack levels required when called: 2
  1783 ;; This function calls:
  1784 ;;		_adc_change_channel
  1785 ;; This function is called by:
  1786 ;;		_main
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790  045D                     _adc_init:	
  1791                           ;psect for function _adc_init
  1792                           
  1793  045D                     l1600:	
  1794                           ;incstack = 0
  1795                           ; Regs used in _adc_init: [wreg+status,2+status,0+pclath+cstack]
  1796                           
  1797                           
  1798                           ;ADC_Interrupt.c: 18:     ADCON0bits.ADCS = 0;
  1799  045D  303F               	movlw	-193
  1800  045E  1283               	bcf	3,5	;RP0=0, select bank0
  1801  045F  1303               	bcf	3,6	;RP1=0, select bank0
  1802  0460  059F               	andwf	31,f	;volatile
  1803  0461                     l1602:
  1804                           
  1805                           ;ADC_Interrupt.c: 19:     ADCON0bits.CHS0 = 0;
  1806  0461  111F               	bcf	31,2	;volatile
  1807  0462                     l1604:
  1808                           
  1809                           ;ADC_Interrupt.c: 20:     ADCON0bits.ADON = 1;
  1810  0462  141F               	bsf	31,0	;volatile
  1811  0463                     l1606:
  1812                           
  1813                           ;ADC_Interrupt.c: 21:     ADCON1bits.VCFG1 = 0;
  1814  0463  1683               	bsf	3,5	;RP0=1, select bank1
  1815  0464  1303               	bcf	3,6	;RP1=0, select bank1
  1816  0465  129F               	bcf	31,5	;volatile
  1817  0466                     l1608:
  1818                           
  1819                           ;ADC_Interrupt.c: 22:     ADCON1bits.VCFG0 = 0;
  1820  0466  121F               	bcf	31,4	;volatile
  1821  0467                     l1610:
  1822                           
  1823                           ;ADC_Interrupt.c: 23:     ADCON1bits.ADFM = 0;
  1824  0467  139F               	bcf	31,7	;volatile
  1825  0468                     l1612:
  1826                           
  1827                           ;ADC_Interrupt.c: 24:     adc_change_channel(channel);
  1828  0468  0874               	movf	adc_init@channel,w
  1829  0469  120A  118A  24E9  120A  118A  	fcall	_adc_change_channel
  1830  046E                     l1614:
  1831                           
  1832                           ;ADC_Interrupt.c: 26:     PIR1bits.ADIF = 0;
  1833  046E  1283               	bcf	3,5	;RP0=0, select bank0
  1834  046F  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0470  130C               	bcf	12,6	;volatile
  1836  0471                     l1616:
  1837                           
  1838                           ;ADC_Interrupt.c: 27:     PIE1bits.ADIE = 1;
  1839  0471  1683               	bsf	3,5	;RP0=1, select bank1
  1840  0472  1303               	bcf	3,6	;RP1=0, select bank1
  1841  0473  170C               	bsf	12,6	;volatile
  1842  0474                     l1618:
  1843                           
  1844                           ;ADC_Interrupt.c: 28:     ADCON0bits.GO = 1;
  1845  0474  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0475  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0476  149F               	bsf	31,1	;volatile
  1848  0477                     l1620:
  1849                           
  1850                           ;ADC_Interrupt.c: 29:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1851  0477  301A               	movlw	26
  1852  0478  00F6               	movwf	??_adc_init
  1853  0479                     u987:
  1854  0479  0BF6               	decfsz	??_adc_init,f
  1855  047A  2C79               	goto	u987
  1856  047B  0000               	nop
  1857  047C                     l144:
  1858  047C  0008               	return
  1859  047D                     __end_of_adc_init:
  1860                           
  1861                           	psect	text8
  1862  04E9                     __ptext8:	
  1863 ;; *************** function _adc_change_channel *****************
  1864 ;; Defined at:
  1865 ;;		line 39 in file "ADC_Interrupt.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  channel         1    wreg     unsigned char 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  channel         1    3[COMMON] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1879 ;;      Params:         0       0       0       0       0
  1880 ;;      Locals:         1       0       0       0       0
  1881 ;;      Temps:          1       0       0       0       0
  1882 ;;      Totals:         2       0       0       0       0
  1883 ;;Total ram usage:        2 bytes
  1884 ;; Hardware stack levels used: 1
  1885 ;; Hardware stack levels required when called: 1
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_adc_init
  1890 ;;		_adc_read
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894  04E9                     _adc_change_channel:	
  1895                           ;psect for function _adc_change_channel
  1896                           
  1897                           
  1898                           ;incstack = 0
  1899                           ; Regs used in _adc_change_channel: [wreg+status,2+status,0]
  1900                           ;adc_change_channel@channel stored from wreg
  1901  04E9  00F3               	movwf	adc_change_channel@channel
  1902  04EA                     l1556:
  1903                           
  1904                           ;ADC_Interrupt.c: 40:     ADCON0bits.CHS = channel;
  1905  04EA  0873               	movf	adc_change_channel@channel,w
  1906  04EB  00F2               	movwf	??_adc_change_channel
  1907  04EC  0DF2               	rlf	??_adc_change_channel,f
  1908  04ED  0DF2               	rlf	??_adc_change_channel,f
  1909  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  1910  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  1911  04F0  081F               	movf	31,w	;volatile
  1912  04F1  0672               	xorwf	??_adc_change_channel,w
  1913  04F2  39C3               	andlw	-61
  1914  04F3  0672               	xorwf	??_adc_change_channel,w
  1915  04F4  009F               	movwf	31	;volatile
  1916  04F5                     l150:
  1917  04F5  0008               	return
  1918  04F6                     __end_of_adc_change_channel:
  1919                           
  1920                           	psect	text9
  1921  0178                     __ptext9:	
  1922 ;; *************** function _Lcd_Init *****************
  1923 ;; Defined at:
  1924 ;;		line 116 in file "lcd.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;		None
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0, pclath, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1938 ;;      Params:         0       0       0       0       0
  1939 ;;      Locals:         0       0       0       0       0
  1940 ;;      Temps:          2       0       0       0       0
  1941 ;;      Totals:         2       0       0       0       0
  1942 ;;Total ram usage:        2 bytes
  1943 ;; Hardware stack levels used: 1
  1944 ;; Hardware stack levels required when called: 3
  1945 ;; This function calls:
  1946 ;;		_Lcd_Cmd
  1947 ;;		_Lcd_Port
  1948 ;; This function is called by:
  1949 ;;		_main
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953  0178                     _Lcd_Init:	
  1954                           ;psect for function _Lcd_Init
  1955                           
  1956  0178                     l1564:	
  1957                           ;incstack = 0
  1958                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1959                           
  1960                           
  1961                           ;lcd.c: 118:   Lcd_Port(0x00);
  1962  0178  3000               	movlw	0
  1963  0179  120A  118A  243B  120A  118A  	fcall	_Lcd_Port
  1964  017E                     l1566:
  1965                           
  1966                           ;lcd.c: 119:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1967  017E  3034               	movlw	52
  1968  017F  00F7               	movwf	??_Lcd_Init+1
  1969  0180  30F1               	movlw	241
  1970  0181  00F6               	movwf	??_Lcd_Init
  1971  0182                     u997:
  1972  0182  0BF6               	decfsz	??_Lcd_Init,f
  1973  0183  2982               	goto	u997
  1974  0184  0BF7               	decfsz	??_Lcd_Init+1,f
  1975  0185  2982               	goto	u997
  1976  0186  2987               	nop2
  1977  0187                     l1568:
  1978                           
  1979                           ;lcd.c: 120:   Lcd_Cmd(0x03);
  1980  0187  3003               	movlw	3
  1981  0188  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1982                           
  1983                           ;lcd.c: 121:  _delay((unsigned long)((5)*(8000000/4000.0)));
  1984  018D  300D               	movlw	13
  1985  018E  00F7               	movwf	??_Lcd_Init+1
  1986  018F  30FB               	movlw	251
  1987  0190  00F6               	movwf	??_Lcd_Init
  1988  0191                     u1007:
  1989  0191  0BF6               	decfsz	??_Lcd_Init,f
  1990  0192  2991               	goto	u1007
  1991  0193  0BF7               	decfsz	??_Lcd_Init+1,f
  1992  0194  2991               	goto	u1007
  1993  0195  2996               	nop2
  1994  0196                     l1570:
  1995                           
  1996                           ;lcd.c: 122:   Lcd_Cmd(0x03);
  1997  0196  3003               	movlw	3
  1998  0197  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  1999  019C                     l1572:
  2000                           
  2001                           ;lcd.c: 123:  _delay((unsigned long)((11)*(8000000/4000.0)));
  2002  019C  301D               	movlw	29
  2003  019D  00F7               	movwf	??_Lcd_Init+1
  2004  019E  3091               	movlw	145
  2005  019F  00F6               	movwf	??_Lcd_Init
  2006  01A0                     u1017:
  2007  01A0  0BF6               	decfsz	??_Lcd_Init,f
  2008  01A1  29A0               	goto	u1017
  2009  01A2  0BF7               	decfsz	??_Lcd_Init+1,f
  2010  01A3  29A0               	goto	u1017
  2011                           
  2012                           ;lcd.c: 124:   Lcd_Cmd(0x03);
  2013  01A4  3003               	movlw	3
  2014  01A5  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  2015                           
  2016                           ;lcd.c: 126:   Lcd_Cmd(0x02);
  2017  01AA  3002               	movlw	2
  2018  01AB  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  2019                           
  2020                           ;lcd.c: 127:   Lcd_Cmd(0x02);
  2021  01B0  3002               	movlw	2
  2022  01B1  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  2023                           
  2024                           ;lcd.c: 128:   Lcd_Cmd(0x08);
  2025  01B6  3008               	movlw	8
  2026  01B7  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  2027                           
  2028                           ;lcd.c: 129:   Lcd_Cmd(0x00);
  2029  01BC  3000               	movlw	0
  2030  01BD  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  2031                           
  2032                           ;lcd.c: 130:   Lcd_Cmd(0x0C);
  2033  01C2  300C               	movlw	12
  2034  01C3  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  2035                           
  2036                           ;lcd.c: 131:   Lcd_Cmd(0x00);
  2037  01C8  3000               	movlw	0
  2038  01C9  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  2039                           
  2040                           ;lcd.c: 132:   Lcd_Cmd(0x06);
  2041  01CE  3006               	movlw	6
  2042  01CF  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  2043  01D4                     l66:
  2044  01D4  0008               	return
  2045  01D5                     __end_of_Lcd_Init:
  2046                           
  2047                           	psect	text10
  2048  0289                     __ptext10:	
  2049 ;; *************** function _LCD_Test *****************
  2050 ;; Defined at:
  2051 ;;		line 93 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  buffer         12   24[BANK0 ] unsigned char [12]
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2065 ;;      Params:         0       0       0       0       0
  2066 ;;      Locals:         0      12       0       0       0
  2067 ;;      Temps:          0       3       0       0       0
  2068 ;;      Totals:         0      15       0       0       0
  2069 ;;Total ram usage:       15 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 4
  2072 ;; This function calls:
  2073 ;;		_Lcd_Clear
  2074 ;;		_Lcd_Set_Cursor
  2075 ;;		_Lcd_Write_String
  2076 ;;		_intToString
  2077 ;; This function is called by:
  2078 ;;		_main
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082  0289                     _LCD_Test:	
  2083                           ;psect for function _LCD_Test
  2084                           
  2085  0289                     l1642:	
  2086                           ;incstack = 0
  2087                           ; Regs used in _LCD_Test: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2088                           
  2089                           
  2090                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 94:     char buffer[12];;E:
      +                          /Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 95:     Lcd_Clear();
  2091  0289  120A  118A  24F6  120A  118A  	fcall	_Lcd_Clear
  2092                           
  2093                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 96:     Lcd_Set_Cursor(1,1)
      +                          ;
  2094  028E  01F6               	clrf	Lcd_Set_Cursor@b
  2095  028F  0AF6               	incf	Lcd_Set_Cursor@b,f
  2096  0290  3001               	movlw	1
  2097  0291  120A  118A  2231  120A  118A  	fcall	_Lcd_Set_Cursor
  2098  0296                     l1644:
  2099                           
  2100                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 97:     Lcd_Write_String("P
      +                          ot 1:     CPU:");
  2101  0296  301F               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2102  0297  00F7               	movwf	Lcd_Write_String@a
  2103  0298  3080               	movlw	128
  2104  0299  00F8               	movwf	Lcd_Write_String@a+1
  2105  029A  120A  118A  22D2  120A  118A  	fcall	_Lcd_Write_String
  2106  029F                     l1646:
  2107                           
  2108                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 98:     Lcd_Set_Cursor(2,1)
      +                          ;
  2109  029F  01F6               	clrf	Lcd_Set_Cursor@b
  2110  02A0  0AF6               	incf	Lcd_Set_Cursor@b,f
  2111  02A1  3002               	movlw	2
  2112  02A2  120A  118A  2231  120A  118A  	fcall	_Lcd_Set_Cursor
  2113                           
  2114                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 100:     intToString(lcd1, 
      +                          buffer);
  2115  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  2116  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  2117  02A9  0845               	movf	_lcd1,w
  2118  02AA  00B5               	movwf	??_LCD_Test
  2119  02AB  01B6               	clrf	??_LCD_Test+1
  2120  02AC  0835               	movf	??_LCD_Test,w
  2121  02AD  00B1               	movwf	intToString@num
  2122  02AE  0836               	movf	??_LCD_Test+1,w
  2123  02AF  00B2               	movwf	intToString@num+1
  2124  02B0  3038               	movlw	(low (LCD_Test@buffer| 0))& (0+255)
  2125  02B1  00B7               	movwf	??_LCD_Test+2
  2126  02B2  0837               	movf	??_LCD_Test+2,w
  2127  02B3  00B3               	movwf	intToString@buffer
  2128  02B4  120A  118A  24AD  120A  118A  	fcall	_intToString
  2129                           
  2130                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 101:     Lcd_Write_String(b
      +                          uffer);
  2131  02B9  3038               	movlw	(low (LCD_Test@buffer| 0))& (0+255)
  2132  02BA  00F7               	movwf	Lcd_Write_String@a
  2133  02BB  3000               	movlw	0
  2134  02BC  00F8               	movwf	Lcd_Write_String@a+1
  2135  02BD  120A  118A  22D2  120A  118A  	fcall	_Lcd_Write_String
  2136  02C2                     l1648:
  2137                           
  2138                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 102:     _delay((unsigned l
      +                          ong)((2000)*(8000000/4000.0)));
  2139  02C2  3015               	movlw	21
  2140  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  2141  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  2142  02C5  00B7               	movwf	??_LCD_Test+2
  2143  02C6  304B               	movlw	75
  2144  02C7  00B6               	movwf	??_LCD_Test+1
  2145  02C8  30BD               	movlw	189
  2146  02C9  00B5               	movwf	??_LCD_Test
  2147  02CA                     u1027:
  2148  02CA  0BB5               	decfsz	??_LCD_Test,f
  2149  02CB  2ACA               	goto	u1027
  2150  02CC  0BB6               	decfsz	??_LCD_Test+1,f
  2151  02CD  2ACA               	goto	u1027
  2152  02CE  0BB7               	decfsz	??_LCD_Test+2,f
  2153  02CF  2ACA               	goto	u1027
  2154  02D0  2AD1               	nop2
  2155  02D1                     l210:
  2156  02D1  0008               	return
  2157  02D2                     __end_of_LCD_Test:
  2158                           
  2159                           	psect	text11
  2160  04AD                     __ptext11:	
  2161 ;; *************** function _intToString *****************
  2162 ;; Defined at:
  2163 ;;		line 165 in file "lcd.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  num             2   17[BANK0 ] int 
  2166 ;;  buffer          1   19[BANK0 ] PTR unsigned char 
  2167 ;;		 -> LCD_Test@buffer(12), 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2179 ;;      Params:         0       3       0       0       0
  2180 ;;      Locals:         0       0       0       0       0
  2181 ;;      Temps:          0       1       0       0       0
  2182 ;;      Totals:         0       4       0       0       0
  2183 ;;Total ram usage:        4 bytes
  2184 ;; Hardware stack levels used: 1
  2185 ;; Hardware stack levels required when called: 3
  2186 ;; This function calls:
  2187 ;;		_sprintf
  2188 ;; This function is called by:
  2189 ;;		_LCD_Test
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193  04AD                     _intToString:	
  2194                           ;psect for function _intToString
  2195                           
  2196  04AD                     l1534:	
  2197                           ;incstack = 0
  2198                           ; Regs used in _intToString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2199                           
  2200                           
  2201                           ;lcd.c: 166:     sprintf(buffer, "%d", num);
  2202  04AD  3066               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2203  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  2204  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  2205  04B0  00B4               	movwf	??_intToString
  2206  04B1  0834               	movf	??_intToString,w
  2207  04B2  00A4               	movwf	sprintf@f
  2208  04B3  0832               	movf	intToString@num+1,w
  2209  04B4  00A6               	movwf	?_sprintf+2
  2210  04B5  0831               	movf	intToString@num,w
  2211  04B6  00A5               	movwf	?_sprintf+1
  2212  04B7  0833               	movf	intToString@buffer,w
  2213  04B8  120A  118A  2016  120A  118A  	fcall	_sprintf
  2214  04BD                     l81:
  2215  04BD  0008               	return
  2216  04BE                     __end_of_intToString:
  2217                           
  2218                           	psect	text12
  2219  0016                     __ptext12:	
  2220 ;; *************** function _sprintf *****************
  2221 ;; Defined at:
  2222 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  sp              1    wreg     PTR unsigned char 
  2225 ;;		 -> LCD_Test@buffer(12), Lcd_Write_Integer@buffer(5), 
  2226 ;;  f               1    4[BANK0 ] PTR const unsigned char 
  2227 ;;		 -> STR_7(3), STR_6(4), 
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  2230 ;;		 -> LCD_Test@buffer(12), Lcd_Write_Integer@buffer(5), 
  2231 ;;  tmpval          4    0        struct .
  2232 ;;  val             2   13[BANK0 ] unsigned int 
  2233 ;;  cp              2    0        PTR const unsigned char 
  2234 ;;  len             2    0        unsigned int 
  2235 ;;  c               1   16[BANK0 ] unsigned char 
  2236 ;;  prec            1   12[BANK0 ] char 
  2237 ;;  flag            1   11[BANK0 ] unsigned char 
  2238 ;;  ap              1   10[BANK0 ] PTR void [1]
  2239 ;;		 -> ?_sprintf(2), 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  2    4[BANK0 ] int 
  2242 ;; Registers used:
  2243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2249 ;;      Params:         0       3       0       0       0
  2250 ;;      Locals:         0       7       0       0       0
  2251 ;;      Temps:          0       3       0       0       0
  2252 ;;      Totals:         0      13       0       0       0
  2253 ;;Total ram usage:       13 bytes
  2254 ;; Hardware stack levels used: 1
  2255 ;; Hardware stack levels required when called: 2
  2256 ;; This function calls:
  2257 ;;		___lwdiv
  2258 ;;		___lwmod
  2259 ;; This function is called by:
  2260 ;;		_intToString
  2261 ;;		_Lcd_Write_Integer
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265  0016                     _sprintf:	
  2266                           ;psect for function _sprintf
  2267                           
  2268                           
  2269                           ;incstack = 0
  2270                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2271                           ;sprintf@sp stored from wreg
  2272  0016  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0017  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0018  00AF               	movwf	sprintf@sp
  2275  0019                     l1442:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2278  0019  3025               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2279  001A  00A7               	movwf	??_sprintf
  2280  001B  0827               	movf	??_sprintf,w
  2281  001C  00AA               	movwf	sprintf@ap
  2282                           
  2283                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2284  001D  28E9               	goto	l1494
  2285  001E                     l1444:
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2288  001E  3025               	movlw	37
  2289  001F  0630               	xorwf	sprintf@c,w
  2290  0020  1903               	btfsc	3,2
  2291  0021  2823               	goto	u711
  2292  0022  2824               	goto	u710
  2293  0023                     u711:
  2294  0023  2830               	goto	l1450
  2295  0024                     u710:
  2296  0024                     l1446:
  2297                           
  2298                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2299  0024  0830               	movf	sprintf@c,w
  2300  0025  00A7               	movwf	??_sprintf
  2301  0026  082F               	movf	sprintf@sp,w
  2302  0027  0084               	movwf	4
  2303  0028  0827               	movf	??_sprintf,w
  2304  0029  1383               	bcf	3,7	;select IRP bank0
  2305  002A  0080               	movwf	0
  2306  002B                     l1448:
  2307  002B  3001               	movlw	1
  2308  002C  00A7               	movwf	??_sprintf
  2309  002D  0827               	movf	??_sprintf,w
  2310  002E  07AF               	addwf	sprintf@sp,f
  2311                           
  2312                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 559:    continue;
  2313  002F  28E9               	goto	l1494
  2314  0030                     l1450:
  2315                           
  2316                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2317  0030  01AB               	clrf	sprintf@flag
  2318  0031                     l1454:	
  2319                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2320                           
  2321  0031  3001               	movlw	1
  2322  0032  07A4               	addwf	sprintf@f,f
  2323  0033  30FF               	movlw	-1
  2324  0034  0724               	addwf	sprintf@f,w
  2325  0035  0084               	movwf	4
  2326  0036  120A  118A  210A  120A  118A  	fcall	stringdir
  2327  003B  00B0               	movwf	sprintf@c
  2328  003C  00A7               	movwf	??_sprintf
  2329  003D  01A8               	clrf	??_sprintf+1
  2330                           
  2331                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2332                           ; Switch size 1, requested type "simple"
  2333                           ; Number of cases is 1, Range of values is 0 to 0
  2334                           ; switch strategies available:
  2335                           ; Name         Instructions Cycles
  2336                           ; simple_byte            4     3 (average)
  2337                           ; direct_byte           11     8 (fixed)
  2338                           ; jumptable            260     6 (fixed)
  2339                           ;	Chosen strategy is simple_byte
  2340  003E  0828               	movf	??_sprintf+1,w
  2341  003F  3A00               	xorlw	0	; case 0
  2342  0040  1903               	skipnz
  2343  0041  2843               	goto	l1758
  2344  0042  28E9               	goto	l1494
  2345  0043                     l1758:
  2346                           
  2347                           ; Switch size 1, requested type "simple"
  2348                           ; Number of cases is 3, Range of values is 0 to 105
  2349                           ; switch strategies available:
  2350                           ; Name         Instructions Cycles
  2351                           ; simple_byte           10     6 (average)
  2352                           ; jumptable            260     6 (fixed)
  2353                           ;	Chosen strategy is simple_byte
  2354  0043  0827               	movf	??_sprintf,w
  2355  0044  3A00               	xorlw	0	; case 0
  2356  0045  1903               	skipnz
  2357  0046  28FB               	goto	l1496
  2358  0047  3A64               	xorlw	100	; case 100
  2359  0048  1903               	skipnz
  2360  0049  284E               	goto	l1456
  2361  004A  3A0D               	xorlw	13	; case 105
  2362  004B  1903               	skipnz
  2363  004C  284E               	goto	l1456
  2364  004D  28E9               	goto	l1494
  2365  004E                     l1456:
  2366                           
  2367                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2368  004E  082A               	movf	sprintf@ap,w
  2369  004F  0084               	movwf	4
  2370  0050  1383               	bcf	3,7	;select IRP bank0
  2371  0051  0800               	movf	0,w
  2372  0052  00AD               	movwf	sprintf@val
  2373  0053  0A84               	incf	4,f
  2374  0054  0800               	movf	0,w
  2375  0055  00AE               	movwf	sprintf@val+1
  2376  0056                     l1458:
  2377  0056  3002               	movlw	2
  2378  0057  00A7               	movwf	??_sprintf
  2379  0058  0827               	movf	??_sprintf,w
  2380  0059  07AA               	addwf	sprintf@ap,f
  2381  005A                     l1460:
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2384  005A  1FAE               	btfss	sprintf@val+1,7
  2385  005B  285D               	goto	u721
  2386  005C  285E               	goto	u720
  2387  005D                     u721:
  2388  005D  2867               	goto	l1466
  2389  005E                     u720:
  2390  005E                     l1462:
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2393  005E  3003               	movlw	3
  2394  005F  00A7               	movwf	??_sprintf
  2395  0060  0827               	movf	??_sprintf,w
  2396  0061  04AB               	iorwf	sprintf@flag,f
  2397  0062                     l1464:
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2400  0062  09AD               	comf	sprintf@val,f
  2401  0063  09AE               	comf	sprintf@val+1,f
  2402  0064  0AAD               	incf	sprintf@val,f
  2403  0065  1903               	skipnz
  2404  0066  0AAE               	incf	sprintf@val+1,f
  2405  0067                     l1466:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2408  0067  01B0               	clrf	sprintf@c
  2409  0068  0AB0               	incf	sprintf@c,f
  2410  0069                     l1472:
  2411                           
  2412                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2413  0069  0830               	movf	sprintf@c,w
  2414  006A  00A7               	movwf	??_sprintf
  2415  006B  0727               	addwf	??_sprintf,w
  2416  006C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2417  006D  0084               	movwf	4
  2418  006E  120A  118A  210A  120A  118A  	fcall	stringdir
  2419  0073  00A8               	movwf	??_sprintf+1
  2420  0074  120A  118A  210A  120A  118A  	fcall	stringdir
  2421  0079  00A9               	movwf	??_sprintf+2
  2422  007A  0829               	movf	??_sprintf+2,w
  2423  007B  022E               	subwf	sprintf@val+1,w
  2424  007C  1D03               	skipz
  2425  007D  2880               	goto	u735
  2426  007E  0828               	movf	??_sprintf+1,w
  2427  007F  022D               	subwf	sprintf@val,w
  2428  0080                     u735:
  2429  0080  1803               	skipnc
  2430  0081  2883               	goto	u731
  2431  0082  2884               	goto	u730
  2432  0083                     u731:
  2433  0083  2885               	goto	l1476
  2434  0084                     u730:
  2435  0084  288F               	goto	l1478
  2436  0085                     l1476:
  2437  0085  3001               	movlw	1
  2438  0086  00A7               	movwf	??_sprintf
  2439  0087  0827               	movf	??_sprintf,w
  2440  0088  07B0               	addwf	sprintf@c,f
  2441  0089  3005               	movlw	5
  2442  008A  0630               	xorwf	sprintf@c,w
  2443  008B  1D03               	btfss	3,2
  2444  008C  288E               	goto	u741
  2445  008D  288F               	goto	u740
  2446  008E                     u741:
  2447  008E  2869               	goto	l1472
  2448  008F                     u740:
  2449  008F                     l1478:
  2450                           
  2451                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2452  008F  082B               	movf	sprintf@flag,w
  2453  0090  3903               	andlw	3
  2454  0091  1903               	btfsc	3,2
  2455  0092  2894               	goto	u751
  2456  0093  2895               	goto	u750
  2457  0094                     u751:
  2458  0094  28A0               	goto	l1484
  2459  0095                     u750:
  2460  0095                     l1480:
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2463  0095  302D               	movlw	45
  2464  0096  00A7               	movwf	??_sprintf
  2465  0097  082F               	movf	sprintf@sp,w
  2466  0098  0084               	movwf	4
  2467  0099  0827               	movf	??_sprintf,w
  2468  009A  1383               	bcf	3,7	;select IRP bank0
  2469  009B  0080               	movwf	0
  2470  009C                     l1482:
  2471  009C  3001               	movlw	1
  2472  009D  00A7               	movwf	??_sprintf
  2473  009E  0827               	movf	??_sprintf,w
  2474  009F  07AF               	addwf	sprintf@sp,f
  2475  00A0                     l1484:
  2476                           
  2477                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2478  00A0  0830               	movf	sprintf@c,w
  2479  00A1  00A7               	movwf	??_sprintf
  2480  00A2  0827               	movf	??_sprintf,w
  2481  00A3  00AC               	movwf	sprintf@prec
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2484  00A4  28E0               	goto	l1492
  2485  00A5                     l1486:
  2486                           
  2487                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2488  00A5  300A               	movlw	10
  2489  00A6  00A0               	movwf	___lwmod@divisor
  2490  00A7  3000               	movlw	0
  2491  00A8  00A1               	movwf	___lwmod@divisor+1
  2492  00A9  082C               	movf	sprintf@prec,w
  2493  00AA  00A7               	movwf	??_sprintf
  2494  00AB  0727               	addwf	??_sprintf,w
  2495  00AC  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2496  00AD  0084               	movwf	4
  2497  00AE  120A  118A  210A  120A  118A  	fcall	stringdir
  2498  00B3  00F2               	movwf	___lwdiv@divisor
  2499  00B4  120A  118A  210A  120A  118A  	fcall	stringdir
  2500  00B9  00F3               	movwf	___lwdiv@divisor+1
  2501  00BA  082E               	movf	sprintf@val+1,w
  2502  00BB  00F5               	movwf	___lwdiv@dividend+1
  2503  00BC  082D               	movf	sprintf@val,w
  2504  00BD  00F4               	movwf	___lwdiv@dividend
  2505  00BE  120A  118A  2318  120A  118A  	fcall	___lwdiv
  2506  00C3  0873               	movf	?___lwdiv+1,w
  2507  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  2508  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  2509  00C6  00A3               	movwf	___lwmod@dividend+1
  2510  00C7  0872               	movf	?___lwdiv,w
  2511  00C8  00A2               	movwf	___lwmod@dividend
  2512  00C9  120A  118A  239C  120A  118A  	fcall	___lwmod
  2513  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  2514  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  2515  00D0  0820               	movf	?___lwmod,w
  2516  00D1  3E30               	addlw	48
  2517  00D2  00A8               	movwf	??_sprintf+1
  2518  00D3  0828               	movf	??_sprintf+1,w
  2519  00D4  00B0               	movwf	sprintf@c
  2520  00D5                     l1488:
  2521                           
  2522                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2523  00D5  0830               	movf	sprintf@c,w
  2524  00D6  00A7               	movwf	??_sprintf
  2525  00D7  082F               	movf	sprintf@sp,w
  2526  00D8  0084               	movwf	4
  2527  00D9  0827               	movf	??_sprintf,w
  2528  00DA  1383               	bcf	3,7	;select IRP bank0
  2529  00DB  0080               	movwf	0
  2530  00DC                     l1490:
  2531  00DC  3001               	movlw	1
  2532  00DD  00A7               	movwf	??_sprintf
  2533  00DE  0827               	movf	??_sprintf,w
  2534  00DF  07AF               	addwf	sprintf@sp,f
  2535  00E0                     l1492:
  2536                           
  2537                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2538  00E0  30FF               	movlw	255
  2539  00E1  00A7               	movwf	??_sprintf
  2540  00E2  0827               	movf	??_sprintf,w
  2541  00E3  07AC               	addwf	sprintf@prec,f
  2542  00E4  0A2C               	incf	sprintf@prec,w
  2543  00E5  1D03               	btfss	3,2
  2544  00E6  28E8               	goto	u761
  2545  00E7  28E9               	goto	u760
  2546  00E8                     u761:
  2547  00E8  28A5               	goto	l1486
  2548  00E9                     u760:
  2549  00E9                     l1494:
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2552  00E9  3001               	movlw	1
  2553  00EA  07A4               	addwf	sprintf@f,f
  2554  00EB  30FF               	movlw	-1
  2555  00EC  0724               	addwf	sprintf@f,w
  2556  00ED  0084               	movwf	4
  2557  00EE  120A  118A  210A  120A  118A  	fcall	stringdir
  2558  00F3  00A7               	movwf	??_sprintf
  2559  00F4  0827               	movf	??_sprintf,w
  2560  00F5  00B0               	movwf	sprintf@c
  2561  00F6  0830               	movf	sprintf@c,w
  2562  00F7  1D03               	btfss	3,2
  2563  00F8  28FA               	goto	u771
  2564  00F9  28FB               	goto	u770
  2565  00FA                     u771:
  2566  00FA  281E               	goto	l1444
  2567  00FB                     u770:
  2568  00FB                     l1496:
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2571  00FB  082F               	movf	sprintf@sp,w
  2572  00FC  0084               	movwf	4
  2573  00FD  1383               	bcf	3,7	;select IRP bank0
  2574  00FE  0180               	clrf	0
  2575  00FF                     l380:
  2576  00FF  0008               	return
  2577  0100                     __end_of_sprintf:
  2578                           
  2579                           	psect	text13
  2580  039C                     __ptext13:	
  2581 ;; *************** function ___lwmod *****************
  2582 ;; Defined at:
  2583 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  divisor         2    0[BANK0 ] unsigned int 
  2586 ;;  dividend        2    2[BANK0 ] unsigned int 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  counter         1   11[COMMON] unsigned char 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  2    0[BANK0 ] unsigned int 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2598 ;;      Params:         0       4       0       0       0
  2599 ;;      Locals:         1       0       0       0       0
  2600 ;;      Temps:          1       0       0       0       0
  2601 ;;      Totals:         2       4       0       0       0
  2602 ;;Total ram usage:        6 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; Hardware stack levels required when called: 1
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_sprintf
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612  039C                     ___lwmod:	
  2613                           ;psect for function ___lwmod
  2614                           
  2615  039C                     l1390:	
  2616                           ;incstack = 0
  2617                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2618                           
  2619  039C  1283               	bcf	3,5	;RP0=0, select bank0
  2620  039D  1303               	bcf	3,6	;RP1=0, select bank0
  2621  039E  0820               	movf	___lwmod@divisor,w
  2622  039F  0421               	iorwf	___lwmod@divisor+1,w
  2623  03A0  1903               	btfsc	3,2
  2624  03A1  2BA3               	goto	u641
  2625  03A2  2BA4               	goto	u640
  2626  03A3                     u641:
  2627  03A3  2BD3               	goto	l1408
  2628  03A4                     u640:
  2629  03A4                     l1392:
  2630  03A4  01FB               	clrf	___lwmod@counter
  2631  03A5  0AFB               	incf	___lwmod@counter,f
  2632  03A6  2BB2               	goto	l1398
  2633  03A7                     l1394:
  2634  03A7  3001               	movlw	1
  2635  03A8                     u655:
  2636  03A8  1003               	clrc
  2637  03A9  0DA0               	rlf	___lwmod@divisor,f
  2638  03AA  0DA1               	rlf	___lwmod@divisor+1,f
  2639  03AB  3EFF               	addlw	-1
  2640  03AC  1D03               	skipz
  2641  03AD  2BA8               	goto	u655
  2642  03AE                     l1396:
  2643  03AE  3001               	movlw	1
  2644  03AF  00FA               	movwf	??___lwmod
  2645  03B0  087A               	movf	??___lwmod,w
  2646  03B1  07FB               	addwf	___lwmod@counter,f
  2647  03B2                     l1398:
  2648  03B2  1FA1               	btfss	___lwmod@divisor+1,7
  2649  03B3  2BB5               	goto	u661
  2650  03B4  2BB6               	goto	u660
  2651  03B5                     u661:
  2652  03B5  2BA7               	goto	l1394
  2653  03B6                     u660:
  2654  03B6                     l1400:
  2655  03B6  0821               	movf	___lwmod@divisor+1,w
  2656  03B7  0223               	subwf	___lwmod@dividend+1,w
  2657  03B8  1D03               	skipz
  2658  03B9  2BBC               	goto	u675
  2659  03BA  0820               	movf	___lwmod@divisor,w
  2660  03BB  0222               	subwf	___lwmod@dividend,w
  2661  03BC                     u675:
  2662  03BC  1C03               	skipc
  2663  03BD  2BBF               	goto	u671
  2664  03BE  2BC0               	goto	u670
  2665  03BF                     u671:
  2666  03BF  2BC6               	goto	l1404
  2667  03C0                     u670:
  2668  03C0                     l1402:
  2669  03C0  0820               	movf	___lwmod@divisor,w
  2670  03C1  02A2               	subwf	___lwmod@dividend,f
  2671  03C2  0821               	movf	___lwmod@divisor+1,w
  2672  03C3  1C03               	skipc
  2673  03C4  03A3               	decf	___lwmod@dividend+1,f
  2674  03C5  02A3               	subwf	___lwmod@dividend+1,f
  2675  03C6                     l1404:
  2676  03C6  3001               	movlw	1
  2677  03C7                     u685:
  2678  03C7  1003               	clrc
  2679  03C8  0CA1               	rrf	___lwmod@divisor+1,f
  2680  03C9  0CA0               	rrf	___lwmod@divisor,f
  2681  03CA  3EFF               	addlw	-1
  2682  03CB  1D03               	skipz
  2683  03CC  2BC7               	goto	u685
  2684  03CD                     l1406:
  2685  03CD  3001               	movlw	1
  2686  03CE  02FB               	subwf	___lwmod@counter,f
  2687  03CF  1D03               	btfss	3,2
  2688  03D0  2BD2               	goto	u691
  2689  03D1  2BD3               	goto	u690
  2690  03D2                     u691:
  2691  03D2  2BB6               	goto	l1400
  2692  03D3                     u690:
  2693  03D3                     l1408:
  2694  03D3  0823               	movf	___lwmod@dividend+1,w
  2695  03D4  00A1               	movwf	?___lwmod+1
  2696  03D5  0822               	movf	___lwmod@dividend,w
  2697  03D6  00A0               	movwf	?___lwmod
  2698  03D7                     l666:
  2699  03D7  0008               	return
  2700  03D8                     __end_of___lwmod:
  2701                           
  2702                           	psect	text14
  2703  0318                     __ptext14:	
  2704 ;; *************** function ___lwdiv *****************
  2705 ;; Defined at:
  2706 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  divisor         2    2[COMMON] unsigned int 
  2709 ;;  dividend        2    4[COMMON] unsigned int 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  quotient        2    7[COMMON] unsigned int 
  2712 ;;  counter         1    9[COMMON] unsigned char 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  2    2[COMMON] unsigned int 
  2715 ;; Registers used:
  2716 ;;		wreg, status,2, status,0
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2722 ;;      Params:         4       0       0       0       0
  2723 ;;      Locals:         3       0       0       0       0
  2724 ;;      Temps:          1       0       0       0       0
  2725 ;;      Totals:         8       0       0       0       0
  2726 ;;Total ram usage:        8 bytes
  2727 ;; Hardware stack levels used: 1
  2728 ;; Hardware stack levels required when called: 1
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_sprintf
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736  0318                     ___lwdiv:	
  2737                           ;psect for function ___lwdiv
  2738                           
  2739  0318                     l1364:	
  2740                           ;incstack = 0
  2741                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2742                           
  2743  0318  01F7               	clrf	___lwdiv@quotient
  2744  0319  01F8               	clrf	___lwdiv@quotient+1
  2745  031A                     l1366:
  2746  031A  0872               	movf	___lwdiv@divisor,w
  2747  031B  0473               	iorwf	___lwdiv@divisor+1,w
  2748  031C  1903               	btfsc	3,2
  2749  031D  2B1F               	goto	u571
  2750  031E  2B20               	goto	u570
  2751  031F                     u571:
  2752  031F  2B57               	goto	l1386
  2753  0320                     u570:
  2754  0320                     l1368:
  2755  0320  01F9               	clrf	___lwdiv@counter
  2756  0321  0AF9               	incf	___lwdiv@counter,f
  2757  0322  2B2E               	goto	l1374
  2758  0323                     l1370:
  2759  0323  3001               	movlw	1
  2760  0324                     u585:
  2761  0324  1003               	clrc
  2762  0325  0DF2               	rlf	___lwdiv@divisor,f
  2763  0326  0DF3               	rlf	___lwdiv@divisor+1,f
  2764  0327  3EFF               	addlw	-1
  2765  0328  1D03               	skipz
  2766  0329  2B24               	goto	u585
  2767  032A                     l1372:
  2768  032A  3001               	movlw	1
  2769  032B  00F6               	movwf	??___lwdiv
  2770  032C  0876               	movf	??___lwdiv,w
  2771  032D  07F9               	addwf	___lwdiv@counter,f
  2772  032E                     l1374:
  2773  032E  1FF3               	btfss	___lwdiv@divisor+1,7
  2774  032F  2B31               	goto	u591
  2775  0330  2B32               	goto	u590
  2776  0331                     u591:
  2777  0331  2B23               	goto	l1370
  2778  0332                     u590:
  2779  0332                     l1376:
  2780  0332  3001               	movlw	1
  2781  0333                     u605:
  2782  0333  1003               	clrc
  2783  0334  0DF7               	rlf	___lwdiv@quotient,f
  2784  0335  0DF8               	rlf	___lwdiv@quotient+1,f
  2785  0336  3EFF               	addlw	-1
  2786  0337  1D03               	skipz
  2787  0338  2B33               	goto	u605
  2788  0339  0873               	movf	___lwdiv@divisor+1,w
  2789  033A  0275               	subwf	___lwdiv@dividend+1,w
  2790  033B  1D03               	skipz
  2791  033C  2B3F               	goto	u615
  2792  033D  0872               	movf	___lwdiv@divisor,w
  2793  033E  0274               	subwf	___lwdiv@dividend,w
  2794  033F                     u615:
  2795  033F  1C03               	skipc
  2796  0340  2B42               	goto	u611
  2797  0341  2B43               	goto	u610
  2798  0342                     u611:
  2799  0342  2B4A               	goto	l1382
  2800  0343                     u610:
  2801  0343                     l1378:
  2802  0343  0872               	movf	___lwdiv@divisor,w
  2803  0344  02F4               	subwf	___lwdiv@dividend,f
  2804  0345  0873               	movf	___lwdiv@divisor+1,w
  2805  0346  1C03               	skipc
  2806  0347  03F5               	decf	___lwdiv@dividend+1,f
  2807  0348  02F5               	subwf	___lwdiv@dividend+1,f
  2808  0349                     l1380:
  2809  0349  1477               	bsf	___lwdiv@quotient,0
  2810  034A                     l1382:
  2811  034A  3001               	movlw	1
  2812  034B                     u625:
  2813  034B  1003               	clrc
  2814  034C  0CF3               	rrf	___lwdiv@divisor+1,f
  2815  034D  0CF2               	rrf	___lwdiv@divisor,f
  2816  034E  3EFF               	addlw	-1
  2817  034F  1D03               	skipz
  2818  0350  2B4B               	goto	u625
  2819  0351                     l1384:
  2820  0351  3001               	movlw	1
  2821  0352  02F9               	subwf	___lwdiv@counter,f
  2822  0353  1D03               	btfss	3,2
  2823  0354  2B56               	goto	u631
  2824  0355  2B57               	goto	u630
  2825  0356                     u631:
  2826  0356  2B32               	goto	l1376
  2827  0357                     u630:
  2828  0357                     l1386:
  2829  0357  0878               	movf	___lwdiv@quotient+1,w
  2830  0358  00F3               	movwf	?___lwdiv+1
  2831  0359  0877               	movf	___lwdiv@quotient,w
  2832  035A  00F2               	movwf	?___lwdiv
  2833  035B                     l656:
  2834  035B  0008               	return
  2835  035C                     __end_of___lwdiv:
  2836                           
  2837                           	psect	text15
  2838  02D2                     __ptext15:	
  2839 ;; *************** function _Lcd_Write_String *****************
  2840 ;; Defined at:
  2841 ;;		line 151 in file "lcd.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  a               2    7[COMMON] PTR unsigned char 
  2844 ;;		 -> LCD_Test@buffer(12), STR_8(16), Lcd_Write_Integer@buffer(5), STR_5(20), 
  2845 ;;		 -> STR_4(12), STR_3(13), STR_2(10), STR_1(16), 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;  i               2    0[BANK0 ] int 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  1    wreg      void 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2857 ;;      Params:         2       0       0       0       0
  2858 ;;      Locals:         0       2       0       0       0
  2859 ;;      Temps:          3       0       0       0       0
  2860 ;;      Totals:         5       2       0       0       0
  2861 ;;Total ram usage:        7 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; Hardware stack levels required when called: 3
  2864 ;; This function calls:
  2865 ;;		_Lcd_Write_Char
  2866 ;; This function is called by:
  2867 ;;		_LCD_Test
  2868 ;;		_example
  2869 ;;		_Lcd_Write_Integer
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873  02D2                     _Lcd_Write_String:	
  2874                           ;psect for function _Lcd_Write_String
  2875                           
  2876  02D2                     l1526:	
  2877                           ;incstack = 0
  2878                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2879                           
  2880                           
  2881                           ;lcd.c: 151: void Lcd_Write_String(char *a);lcd.c: 152: {;lcd.c: 153:  int i;;lcd.c: 154
      +                          :  for(i=0;a[i]!='\0';i++)
  2882  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2883  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2884  02D4  01A0               	clrf	Lcd_Write_String@i
  2885  02D5  01A1               	clrf	Lcd_Write_String@i+1
  2886  02D6  2AFB               	goto	l1532
  2887  02D7                     l1528:
  2888                           
  2889                           ;lcd.c: 155:     Lcd_Write_Char(a[i]);
  2890  02D7  0820               	movf	Lcd_Write_String@i,w
  2891  02D8  0777               	addwf	Lcd_Write_String@a,w
  2892  02D9  00FA               	movwf	??_Lcd_Write_String+1
  2893  02DA  0878               	movf	Lcd_Write_String@a+1,w
  2894  02DB  00F9               	movwf	??_Lcd_Write_String
  2895  02DC  1803               	skipnc
  2896  02DD  0AF9               	incf	??_Lcd_Write_String,f
  2897  02DE  1FA0               	btfss	Lcd_Write_String@i,7
  2898  02DF  2AE1               	goto	u820
  2899  02E0  03F9               	decf	??_Lcd_Write_String,f
  2900  02E1                     u820:
  2901  02E1  0879               	movf	??_Lcd_Write_String,w
  2902  02E2  00FB               	movwf	??_Lcd_Write_String+2
  2903  02E3  087B               	movf	??_Lcd_Write_String+2,w
  2904  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2905  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2906  02E6  00FF               	movwf	btemp+1
  2907  02E7  087A               	movf	??_Lcd_Write_String+1,w
  2908  02E8  0084               	movwf	4
  2909  02E9  120A  118A  2100  120A  118A  	fcall	stringtab
  2910  02EE  120A  118A  23D8  120A  118A  	fcall	_Lcd_Write_Char
  2911  02F3                     l1530:
  2912  02F3  3001               	movlw	1
  2913  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2914  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2915  02F6  07A0               	addwf	Lcd_Write_String@i,f
  2916  02F7  1803               	skipnc
  2917  02F8  0AA1               	incf	Lcd_Write_String@i+1,f
  2918  02F9  3000               	movlw	0
  2919  02FA  07A1               	addwf	Lcd_Write_String@i+1,f
  2920  02FB                     l1532:
  2921  02FB  0820               	movf	Lcd_Write_String@i,w
  2922  02FC  0777               	addwf	Lcd_Write_String@a,w
  2923  02FD  00FA               	movwf	??_Lcd_Write_String+1
  2924  02FE  0878               	movf	Lcd_Write_String@a+1,w
  2925  02FF  00F9               	movwf	??_Lcd_Write_String
  2926  0300  1803               	skipnc
  2927  0301  0AF9               	incf	??_Lcd_Write_String,f
  2928  0302  1FA0               	btfss	Lcd_Write_String@i,7
  2929  0303  2B05               	goto	u830
  2930  0304  03F9               	decf	??_Lcd_Write_String,f
  2931  0305                     u830:
  2932  0305  0879               	movf	??_Lcd_Write_String,w
  2933  0306  00FB               	movwf	??_Lcd_Write_String+2
  2934  0307  087B               	movf	??_Lcd_Write_String+2,w
  2935  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2936  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2937  030A  00FF               	movwf	btemp+1
  2938  030B  087A               	movf	??_Lcd_Write_String+1,w
  2939  030C  0084               	movwf	4
  2940  030D  120A  118A  2100  120A  118A  	fcall	stringtab
  2941  0312  3A00               	xorlw	0
  2942  0313  1D03               	skipz
  2943  0314  2B16               	goto	u841
  2944  0315  2B17               	goto	u840
  2945  0316                     u841:
  2946  0316  2AD7               	goto	l1528
  2947  0317                     u840:
  2948  0317                     l75:
  2949  0317  0008               	return
  2950  0318                     __end_of_Lcd_Write_String:
  2951                           
  2952                           	psect	text16
  2953  03D8                     __ptext16:	
  2954 ;; *************** function _Lcd_Write_Char *****************
  2955 ;; Defined at:
  2956 ;;		line 135 in file "lcd.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  a               1    wreg     unsigned char 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  a               1    6[COMMON] unsigned char 
  2961 ;;  y               1    5[COMMON] unsigned char 
  2962 ;;  temp            1    4[COMMON] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      void 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0, pclath, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2972 ;;      Params:         0       0       0       0       0
  2973 ;;      Locals:         3       0       0       0       0
  2974 ;;      Temps:          1       0       0       0       0
  2975 ;;      Totals:         4       0       0       0       0
  2976 ;;Total ram usage:        4 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; Hardware stack levels required when called: 2
  2979 ;; This function calls:
  2980 ;;		_Lcd_Port
  2981 ;; This function is called by:
  2982 ;;		_Lcd_Write_String
  2983 ;;		_example
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987  03D8                     _Lcd_Write_Char:	
  2988                           ;psect for function _Lcd_Write_Char
  2989                           
  2990                           
  2991                           ;incstack = 0
  2992                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2993                           ;Lcd_Write_Char@a stored from wreg
  2994  03D8  00F6               	movwf	Lcd_Write_Char@a
  2995  03D9                     l1412:
  2996                           
  2997                           ;lcd.c: 135: void Lcd_Write_Char(char a);lcd.c: 136: {;lcd.c: 137:    char temp,y;;lcd.c
      +                          : 138:    temp = a&0x0F;
  2998  03D9  0876               	movf	Lcd_Write_Char@a,w
  2999  03DA  390F               	andlw	15
  3000  03DB  00F3               	movwf	??_Lcd_Write_Char
  3001  03DC  0873               	movf	??_Lcd_Write_Char,w
  3002  03DD  00F4               	movwf	Lcd_Write_Char@temp
  3003                           
  3004                           ;lcd.c: 139:    y = a&0xF0;
  3005  03DE  0876               	movf	Lcd_Write_Char@a,w
  3006  03DF  39F0               	andlw	240
  3007  03E0  00F3               	movwf	??_Lcd_Write_Char
  3008  03E1  0873               	movf	??_Lcd_Write_Char,w
  3009  03E2  00F5               	movwf	Lcd_Write_Char@y
  3010  03E3                     l1414:
  3011                           
  3012                           ;lcd.c: 140:    RD2 = 1;
  3013  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  3014  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  3015  03E5  1508               	bsf	8,2	;volatile
  3016  03E6                     l1416:
  3017                           
  3018                           ;lcd.c: 141:    Lcd_Port(y>>4);
  3019  03E6  0875               	movf	Lcd_Write_Char@y,w
  3020  03E7  00F3               	movwf	??_Lcd_Write_Char
  3021  03E8  3004               	movlw	4
  3022  03E9                     u705:
  3023  03E9  1003               	clrc
  3024  03EA  0CF3               	rrf	??_Lcd_Write_Char,f
  3025  03EB  3EFF               	addlw	-1
  3026  03EC  1D03               	skipz
  3027  03ED  2BE9               	goto	u705
  3028  03EE  0873               	movf	??_Lcd_Write_Char,w
  3029  03EF  120A  118A  243B  120A  118A  	fcall	_Lcd_Port
  3030  03F4                     l1418:
  3031                           
  3032                           ;lcd.c: 142:    RD3 = 1;
  3033  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  3034  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  3035  03F6  1588               	bsf	8,3	;volatile
  3036  03F7                     l1420:
  3037                           
  3038                           ;lcd.c: 143:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3039  03F7  301A               	movlw	26
  3040  03F8  00F3               	movwf	??_Lcd_Write_Char
  3041  03F9                     u1037:
  3042  03F9  0BF3               	decfsz	??_Lcd_Write_Char,f
  3043  03FA  2BF9               	goto	u1037
  3044  03FB  0000               	nop
  3045  03FC                     l1422:
  3046                           
  3047                           ;lcd.c: 144:    RD3 = 0;
  3048  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  3049  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  3050  03FE  1188               	bcf	8,3	;volatile
  3051  03FF                     l1424:
  3052                           
  3053                           ;lcd.c: 145:    Lcd_Port(temp);
  3054  03FF  0874               	movf	Lcd_Write_Char@temp,w
  3055  0400  120A  118A  243B  120A  118A  	fcall	_Lcd_Port
  3056  0405                     l1426:
  3057                           
  3058                           ;lcd.c: 146:    RD3 = 1;
  3059  0405  1283               	bcf	3,5	;RP0=0, select bank0
  3060  0406  1303               	bcf	3,6	;RP1=0, select bank0
  3061  0407  1588               	bsf	8,3	;volatile
  3062  0408                     l1428:
  3063                           
  3064                           ;lcd.c: 147:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3065  0408  301A               	movlw	26
  3066  0409  00F3               	movwf	??_Lcd_Write_Char
  3067  040A                     u1047:
  3068  040A  0BF3               	decfsz	??_Lcd_Write_Char,f
  3069  040B  2C0A               	goto	u1047
  3070  040C  0000               	nop
  3071  040D                     l1430:
  3072                           
  3073                           ;lcd.c: 148:    RD3 = 0;
  3074  040D  1283               	bcf	3,5	;RP0=0, select bank0
  3075  040E  1303               	bcf	3,6	;RP1=0, select bank0
  3076  040F  1188               	bcf	8,3	;volatile
  3077  0410                     l69:
  3078  0410  0008               	return
  3079  0411                     __end_of_Lcd_Write_Char:
  3080                           
  3081                           	psect	text17
  3082  0231                     __ptext17:	
  3083 ;; *************** function _Lcd_Set_Cursor *****************
  3084 ;; Defined at:
  3085 ;;		line 95 in file "lcd.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  a               1    wreg     unsigned char 
  3088 ;;  b               1    6[COMMON] unsigned char 
  3089 ;; Auto vars:     Size  Location     Type
  3090 ;;  a               1    0[BANK0 ] unsigned char 
  3091 ;;  temp            1    3[BANK0 ] unsigned char 
  3092 ;;  y               1    2[BANK0 ] unsigned char 
  3093 ;;  z               1    1[BANK0 ] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0, pclath, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3103 ;;      Params:         1       0       0       0       0
  3104 ;;      Locals:         0       4       0       0       0
  3105 ;;      Temps:          2       0       0       0       0
  3106 ;;      Totals:         3       4       0       0       0
  3107 ;;Total ram usage:        7 bytes
  3108 ;; Hardware stack levels used: 1
  3109 ;; Hardware stack levels required when called: 3
  3110 ;; This function calls:
  3111 ;;		_Lcd_Cmd
  3112 ;; This function is called by:
  3113 ;;		_LCD_Test
  3114 ;;		_example
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118  0231                     _Lcd_Set_Cursor:	
  3119                           ;psect for function _Lcd_Set_Cursor
  3120                           
  3121                           
  3122                           ;incstack = 0
  3123                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3124                           ;Lcd_Set_Cursor@a stored from wreg
  3125  0231  1283               	bcf	3,5	;RP0=0, select bank0
  3126  0232  1303               	bcf	3,6	;RP1=0, select bank0
  3127  0233  00A0               	movwf	Lcd_Set_Cursor@a
  3128  0234                     l1506:
  3129                           
  3130                           ;lcd.c: 95: void Lcd_Set_Cursor(char a, char b);lcd.c: 96: {;lcd.c: 97:  char temp,z,y;;
      +                          lcd.c: 98:  if(a == 1)
  3131  0234  0320               	decf	Lcd_Set_Cursor@a,w
  3132  0235  1D03               	btfss	3,2
  3133  0236  2A38               	goto	u781
  3134  0237  2A39               	goto	u780
  3135  0238                     u781:
  3136  0238  2A5E               	goto	l1516
  3137  0239                     u780:
  3138  0239                     l1508:
  3139                           
  3140                           ;lcd.c: 99:  {;lcd.c: 100:    temp = 0x80 + b - 1;
  3141  0239  0876               	movf	Lcd_Set_Cursor@b,w
  3142  023A  3E7F               	addlw	127
  3143  023B  00F7               	movwf	??_Lcd_Set_Cursor
  3144  023C  0877               	movf	??_Lcd_Set_Cursor,w
  3145  023D  00A3               	movwf	Lcd_Set_Cursor@temp
  3146                           
  3147                           ;lcd.c: 101:   z = temp>>4;
  3148  023E  0823               	movf	Lcd_Set_Cursor@temp,w
  3149  023F  00F7               	movwf	??_Lcd_Set_Cursor
  3150  0240  3004               	movlw	4
  3151  0241                     u795:
  3152  0241  1003               	clrc
  3153  0242  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3154  0243  3EFF               	addlw	-1
  3155  0244  1D03               	skipz
  3156  0245  2A41               	goto	u795
  3157  0246  0877               	movf	??_Lcd_Set_Cursor,w
  3158  0247  00F8               	movwf	??_Lcd_Set_Cursor+1
  3159  0248  0878               	movf	??_Lcd_Set_Cursor+1,w
  3160  0249  00A1               	movwf	Lcd_Set_Cursor@z
  3161  024A                     l1510:
  3162                           
  3163                           ;lcd.c: 102:   y = temp & 0x0F;
  3164  024A  0823               	movf	Lcd_Set_Cursor@temp,w
  3165  024B  390F               	andlw	15
  3166  024C  00F7               	movwf	??_Lcd_Set_Cursor
  3167  024D  0877               	movf	??_Lcd_Set_Cursor,w
  3168  024E  00A2               	movwf	Lcd_Set_Cursor@y
  3169  024F                     l1512:
  3170                           
  3171                           ;lcd.c: 103:   Lcd_Cmd(z);
  3172  024F  0821               	movf	Lcd_Set_Cursor@z,w
  3173  0250  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  3174  0255                     l1514:
  3175                           
  3176                           ;lcd.c: 104:   Lcd_Cmd(y);
  3177  0255  1283               	bcf	3,5	;RP0=0, select bank0
  3178  0256  1303               	bcf	3,6	;RP1=0, select bank0
  3179  0257  0822               	movf	Lcd_Set_Cursor@y,w
  3180  0258  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  3181                           
  3182                           ;lcd.c: 105:  }
  3183  025D  2A88               	goto	l63
  3184  025E                     l1516:
  3185  025E  3002               	movlw	2
  3186  025F  0620               	xorwf	Lcd_Set_Cursor@a,w
  3187  0260  1D03               	btfss	3,2
  3188  0261  2A63               	goto	u801
  3189  0262  2A64               	goto	u800
  3190  0263                     u801:
  3191  0263  2A88               	goto	l63
  3192  0264                     u800:
  3193  0264                     l1518:
  3194                           
  3195                           ;lcd.c: 107:  {;lcd.c: 108:   temp = 0xC0 + b - 1;
  3196  0264  0876               	movf	Lcd_Set_Cursor@b,w
  3197  0265  3EBF               	addlw	191
  3198  0266  00F7               	movwf	??_Lcd_Set_Cursor
  3199  0267  0877               	movf	??_Lcd_Set_Cursor,w
  3200  0268  00A3               	movwf	Lcd_Set_Cursor@temp
  3201                           
  3202                           ;lcd.c: 109:   z = temp>>4;
  3203  0269  0823               	movf	Lcd_Set_Cursor@temp,w
  3204  026A  00F7               	movwf	??_Lcd_Set_Cursor
  3205  026B  3004               	movlw	4
  3206  026C                     u815:
  3207  026C  1003               	clrc
  3208  026D  0CF7               	rrf	??_Lcd_Set_Cursor,f
  3209  026E  3EFF               	addlw	-1
  3210  026F  1D03               	skipz
  3211  0270  2A6C               	goto	u815
  3212  0271  0877               	movf	??_Lcd_Set_Cursor,w
  3213  0272  00F8               	movwf	??_Lcd_Set_Cursor+1
  3214  0273  0878               	movf	??_Lcd_Set_Cursor+1,w
  3215  0274  00A1               	movwf	Lcd_Set_Cursor@z
  3216  0275                     l1520:
  3217                           
  3218                           ;lcd.c: 110:   y = temp & 0x0F;
  3219  0275  0823               	movf	Lcd_Set_Cursor@temp,w
  3220  0276  390F               	andlw	15
  3221  0277  00F7               	movwf	??_Lcd_Set_Cursor
  3222  0278  0877               	movf	??_Lcd_Set_Cursor,w
  3223  0279  00A2               	movwf	Lcd_Set_Cursor@y
  3224  027A                     l1522:
  3225                           
  3226                           ;lcd.c: 111:   Lcd_Cmd(z);
  3227  027A  0821               	movf	Lcd_Set_Cursor@z,w
  3228  027B  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  3229  0280                     l1524:
  3230                           
  3231                           ;lcd.c: 112:   Lcd_Cmd(y);
  3232  0280  1283               	bcf	3,5	;RP0=0, select bank0
  3233  0281  1303               	bcf	3,6	;RP1=0, select bank0
  3234  0282  0822               	movf	Lcd_Set_Cursor@y,w
  3235  0283  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  3236  0288                     l63:
  3237  0288  0008               	return
  3238  0289                     __end_of_Lcd_Set_Cursor:
  3239                           
  3240                           	psect	text18
  3241  04F6                     __ptext18:	
  3242 ;; *************** function _Lcd_Clear *****************
  3243 ;; Defined at:
  3244 ;;		line 89 in file "lcd.c"
  3245 ;; Parameters:    Size  Location     Type
  3246 ;;		None
  3247 ;; Auto vars:     Size  Location     Type
  3248 ;;		None
  3249 ;; Return value:  Size  Location     Type
  3250 ;;                  1    wreg      void 
  3251 ;; Registers used:
  3252 ;;		wreg, status,2, status,0, pclath, cstack
  3253 ;; Tracked objects:
  3254 ;;		On entry : 0/0
  3255 ;;		On exit  : 0/0
  3256 ;;		Unchanged: 0/0
  3257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3258 ;;      Params:         0       0       0       0       0
  3259 ;;      Locals:         0       0       0       0       0
  3260 ;;      Temps:          0       0       0       0       0
  3261 ;;      Totals:         0       0       0       0       0
  3262 ;;Total ram usage:        0 bytes
  3263 ;; Hardware stack levels used: 1
  3264 ;; Hardware stack levels required when called: 3
  3265 ;; This function calls:
  3266 ;;		_Lcd_Cmd
  3267 ;; This function is called by:
  3268 ;;		_LCD_Test
  3269 ;;		_example
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273  04F6                     _Lcd_Clear:	
  3274                           ;psect for function _Lcd_Clear
  3275                           
  3276  04F6                     l1504:	
  3277                           ;incstack = 0
  3278                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3279                           
  3280                           
  3281                           ;lcd.c: 91:  Lcd_Cmd(0);
  3282  04F6  3000               	movlw	0
  3283  04F7  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  3284                           
  3285                           ;lcd.c: 92:  Lcd_Cmd(1);
  3286  04FC  3001               	movlw	1
  3287  04FD  120A  118A  247D  120A  118A  	fcall	_Lcd_Cmd
  3288  0502                     l57:
  3289  0502  0008               	return
  3290  0503                     __end_of_Lcd_Clear:
  3291                           
  3292                           	psect	text19
  3293  047D                     __ptext19:	
  3294 ;; *************** function _Lcd_Cmd *****************
  3295 ;; Defined at:
  3296 ;;		line 80 in file "lcd.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;  a               1    wreg     unsigned char 
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;  a               1    5[COMMON] unsigned char 
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      void 
  3303 ;; Registers used:
  3304 ;;		wreg, status,2, status,0, pclath, cstack
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3310 ;;      Params:         0       0       0       0       0
  3311 ;;      Locals:         1       0       0       0       0
  3312 ;;      Temps:          2       0       0       0       0
  3313 ;;      Totals:         3       0       0       0       0
  3314 ;;Total ram usage:        3 bytes
  3315 ;; Hardware stack levels used: 1
  3316 ;; Hardware stack levels required when called: 2
  3317 ;; This function calls:
  3318 ;;		_Lcd_Port
  3319 ;; This function is called by:
  3320 ;;		_Lcd_Clear
  3321 ;;		_Lcd_Set_Cursor
  3322 ;;		_Lcd_Init
  3323 ;;		_Lcd_Shift_Right
  3324 ;;		_Lcd_Shift_Left
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328  047D                     _Lcd_Cmd:	
  3329                           ;psect for function _Lcd_Cmd
  3330                           
  3331                           
  3332                           ;incstack = 0
  3333                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3334                           ;Lcd_Cmd@a stored from wreg
  3335  047D  00F5               	movwf	Lcd_Cmd@a
  3336  047E                     l1432:
  3337                           
  3338                           ;lcd.c: 80: void Lcd_Cmd(char a);lcd.c: 81: {;lcd.c: 82:  RD2 = 0;
  3339  047E  1283               	bcf	3,5	;RP0=0, select bank0
  3340  047F  1303               	bcf	3,6	;RP1=0, select bank0
  3341  0480  1108               	bcf	8,2	;volatile
  3342  0481                     l1434:
  3343                           
  3344                           ;lcd.c: 83:  Lcd_Port(a);
  3345  0481  0875               	movf	Lcd_Cmd@a,w
  3346  0482  120A  118A  243B  120A  118A  	fcall	_Lcd_Port
  3347  0487                     l1436:
  3348                           
  3349                           ;lcd.c: 84:  RD3 = 1;
  3350  0487  1283               	bcf	3,5	;RP0=0, select bank0
  3351  0488  1303               	bcf	3,6	;RP1=0, select bank0
  3352  0489  1588               	bsf	8,3	;volatile
  3353  048A                     l1438:
  3354                           
  3355                           ;lcd.c: 85:         _delay((unsigned long)((4)*(8000000/4000.0)));
  3356  048A  300B               	movlw	11
  3357  048B  00F4               	movwf	??_Lcd_Cmd+1
  3358  048C  3062               	movlw	98
  3359  048D  00F3               	movwf	??_Lcd_Cmd
  3360  048E                     u1057:
  3361  048E  0BF3               	decfsz	??_Lcd_Cmd,f
  3362  048F  2C8E               	goto	u1057
  3363  0490  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3364  0491  2C8E               	goto	u1057
  3365  0492  0000               	nop
  3366  0493                     l1440:
  3367                           
  3368                           ;lcd.c: 86:         RD3 = 0;
  3369  0493  1283               	bcf	3,5	;RP0=0, select bank0
  3370  0494  1303               	bcf	3,6	;RP1=0, select bank0
  3371  0495  1188               	bcf	8,3	;volatile
  3372  0496                     l54:
  3373  0496  0008               	return
  3374  0497                     __end_of_Lcd_Cmd:
  3375                           
  3376                           	psect	text20
  3377  043B                     __ptext20:	
  3378 ;; *************** function _Lcd_Port *****************
  3379 ;; Defined at:
  3380 ;;		line 58 in file "lcd.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  a               1    wreg     unsigned char 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;  a               1    2[COMMON] unsigned char 
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      void 
  3387 ;; Registers used:
  3388 ;;		wreg
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3394 ;;      Params:         0       0       0       0       0
  3395 ;;      Locals:         1       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0
  3397 ;;      Totals:         1       0       0       0       0
  3398 ;;Total ram usage:        1 bytes
  3399 ;; Hardware stack levels used: 1
  3400 ;; Hardware stack levels required when called: 1
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_Lcd_Cmd
  3405 ;;		_Lcd_Init
  3406 ;;		_Lcd_Write_Char
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410  043B                     _Lcd_Port:	
  3411                           ;psect for function _Lcd_Port
  3412                           
  3413                           
  3414                           ;incstack = 0
  3415                           ; Regs used in _Lcd_Port: [wreg]
  3416                           ;Lcd_Port@a stored from wreg
  3417  043B  00F2               	movwf	Lcd_Port@a
  3418  043C                     l1354:
  3419                           
  3420                           ;lcd.c: 58: void Lcd_Port(char a);lcd.c: 59: {;lcd.c: 60:  if(a & 1)
  3421  043C  1C72               	btfss	Lcd_Port@a,0
  3422  043D  2C3F               	goto	u531
  3423  043E  2C40               	goto	u530
  3424  043F                     u531:
  3425  043F  2C44               	goto	l43
  3426  0440                     u530:
  3427  0440                     l1356:
  3428                           
  3429                           ;lcd.c: 61:   RD4 = 1;
  3430  0440  1283               	bcf	3,5	;RP0=0, select bank0
  3431  0441  1303               	bcf	3,6	;RP1=0, select bank0
  3432  0442  1608               	bsf	8,4	;volatile
  3433  0443  2C47               	goto	l44
  3434  0444                     l43:	
  3435                           ;lcd.c: 62:  else
  3436                           
  3437                           
  3438                           ;lcd.c: 63:   RD4 = 0;
  3439  0444  1283               	bcf	3,5	;RP0=0, select bank0
  3440  0445  1303               	bcf	3,6	;RP1=0, select bank0
  3441  0446  1208               	bcf	8,4	;volatile
  3442  0447                     l44:
  3443                           
  3444                           ;lcd.c: 65:  if(a & 2)
  3445  0447  1CF2               	btfss	Lcd_Port@a,1
  3446  0448  2C4A               	goto	u541
  3447  0449  2C4B               	goto	u540
  3448  044A                     u541:
  3449  044A  2C4D               	goto	l45
  3450  044B                     u540:
  3451  044B                     l1358:
  3452                           
  3453                           ;lcd.c: 66:   RD5 = 1;
  3454  044B  1688               	bsf	8,5	;volatile
  3455  044C  2C4E               	goto	l46
  3456  044D                     l45:	
  3457                           ;lcd.c: 67:  else
  3458                           
  3459                           
  3460                           ;lcd.c: 68:   RD5 = 0;
  3461  044D  1288               	bcf	8,5	;volatile
  3462  044E                     l46:
  3463                           
  3464                           ;lcd.c: 70:  if(a & 4)
  3465  044E  1D72               	btfss	Lcd_Port@a,2
  3466  044F  2C51               	goto	u551
  3467  0450  2C52               	goto	u550
  3468  0451                     u551:
  3469  0451  2C54               	goto	l47
  3470  0452                     u550:
  3471  0452                     l1360:
  3472                           
  3473                           ;lcd.c: 71:   RD6 = 1;
  3474  0452  1708               	bsf	8,6	;volatile
  3475  0453  2C55               	goto	l48
  3476  0454                     l47:	
  3477                           ;lcd.c: 72:  else
  3478                           
  3479                           
  3480                           ;lcd.c: 73:   RD6 = 0;
  3481  0454  1308               	bcf	8,6	;volatile
  3482  0455                     l48:
  3483                           
  3484                           ;lcd.c: 75:  if(a & 8)
  3485  0455  1DF2               	btfss	Lcd_Port@a,3
  3486  0456  2C58               	goto	u561
  3487  0457  2C59               	goto	u560
  3488  0458                     u561:
  3489  0458  2C5B               	goto	l49
  3490  0459                     u560:
  3491  0459                     l1362:
  3492                           
  3493                           ;lcd.c: 76:   RD7 = 1;
  3494  0459  1788               	bsf	8,7	;volatile
  3495  045A  2C5C               	goto	l51
  3496  045B                     l49:	
  3497                           ;lcd.c: 77:  else
  3498                           
  3499                           
  3500                           ;lcd.c: 78:   RD7 = 0;
  3501  045B  1388               	bcf	8,7	;volatile
  3502  045C                     l51:
  3503  045C  0008               	return
  3504  045D                     __end_of_Lcd_Port:
  3505                           
  3506                           	psect	text21
  3507  04CD                     __ptext21:	
  3508 ;; *************** function _isr *****************
  3509 ;; Defined at:
  3510 ;;		line 52 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;		None
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;		None
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      void 
  3517 ;; Registers used:
  3518 ;;		status,2
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3524 ;;      Params:         0       0       0       0       0
  3525 ;;      Locals:         0       0       0       0       0
  3526 ;;      Temps:          2       0       0       0       0
  3527 ;;      Totals:         2       0       0       0       0
  3528 ;;Total ram usage:        2 bytes
  3529 ;; Hardware stack levels used: 1
  3530 ;; This function calls:
  3531 ;;		Nothing
  3532 ;; This function is called by:
  3533 ;;		Interrupt level 1
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537  04CD                     _isr:	
  3538                           ;psect for function _isr
  3539                           
  3540  04CD                     i1l1278:
  3541                           
  3542                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 63:      if (T0IF == 1) {
  3543  04CD  1D0B               	btfss	11,2	;volatile
  3544  04CE  2CD0               	goto	u47_21
  3545  04CF  2CD1               	goto	u47_20
  3546  04D0                     u47_21:
  3547  04D0  2CD5               	goto	i1l197
  3548  04D1                     u47_20:
  3549  04D1                     i1l1280:
  3550                           
  3551                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 64:         TMR0 = 0;
  3552  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  3553  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  3554  04D3  0181               	clrf	1	;volatile
  3555  04D4                     i1l1282:
  3556                           
  3557                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab2/Lab2.X/main.c: 65:         INTCONbits.T0IF
      +                           = 0;
  3558  04D4  110B               	bcf	11,2	;volatile
  3559  04D5                     i1l197:
  3560  04D5  0871               	movf	??_isr+1,w
  3561  04D6  008A               	movwf	10
  3562  04D7  0E70               	swapf	??_isr,w
  3563  04D8  0083               	movwf	3
  3564  04D9  0EFE               	swapf	btemp,f
  3565  04DA  0E7E               	swapf	btemp,w
  3566  04DB  0009               	retfie
  3567  04DC                     __end_of_isr:
  3568  007E                     btemp	set	126	;btemp
  3569  007E                     wtemp0	set	126
  3570                           
  3571                           	psect	intentry
  3572  0004                     __pintentry:	
  3573                           ;incstack = 0
  3574                           ; Regs used in _isr: [status,2]
  3575                           
  3576  0004                     interrupt_function:
  3577  007E                     saved_w	set	btemp
  3578  0004  00FE               	movwf	btemp
  3579  0005  0E03               	swapf	3,w
  3580  0006  00F0               	movwf	??_isr
  3581  0007  080A               	movf	10,w
  3582  0008  00F1               	movwf	??_isr+1
  3583  0009  120A  118A  2CCD   	ljmp	_isr
  3584                           
  3585                           	psect	idloc
  3586                           
  3587                           ;Config register IDLOC0 @ 0x2000
  3588                           ;	unspecified, using default values
  3589  2000                     	org	8192
  3590  2000  3FFF               	dw	16383
  3591                           
  3592                           ;Config register IDLOC1 @ 0x2001
  3593                           ;	unspecified, using default values
  3594  2001                     	org	8193
  3595  2001  3FFF               	dw	16383
  3596                           
  3597                           ;Config register IDLOC2 @ 0x2002
  3598                           ;	unspecified, using default values
  3599  2002                     	org	8194
  3600  2002  3FFF               	dw	16383
  3601                           
  3602                           ;Config register IDLOC3 @ 0x2003
  3603                           ;	unspecified, using default values
  3604  2003                     	org	8195
  3605  2003  3FFF               	dw	16383
  3606                           
  3607                           	psect	config
  3608                           
  3609                           ;Config register CONFIG1 @ 0x2007
  3610                           ;	Oscillator Selection bits
  3611                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3612                           ;	Watchdog Timer Enable bit
  3613                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3614                           ;	Power-up Timer Enable bit
  3615                           ;	PWRTE = OFF, PWRT disabled
  3616                           ;	RE3/MCLR pin function select bit
  3617                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3618                           ;	Code Protection bit
  3619                           ;	CP = OFF, Program memory code protection is disabled
  3620                           ;	Data Code Protection bit
  3621                           ;	CPD = OFF, Data memory code protection is disabled
  3622                           ;	Brown Out Reset Selection bits
  3623                           ;	BOREN = OFF, BOR disabled
  3624                           ;	Internal External Switchover bit
  3625                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3626                           ;	Fail-Safe Clock Monitor Enabled bit
  3627                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3628                           ;	Low Voltage Programming Enable bit
  3629                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3630                           ;	In-Circuit Debugger Mode bit
  3631                           ;	DEBUG = 0x1, unprogrammed default
  3632  2007                     	org	8199
  3633  2007  20D4               	dw	8404
  3634                           
  3635                           ;Config register CONFIG2 @ 0x2008
  3636                           ;	Brown-out Reset Selection bit
  3637                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3638                           ;	Flash Program Memory Self Write Enable bits
  3639                           ;	WRT = OFF, Write protection off
  3640  2008                     	org	8200
  3641  2008  3FFF               	dw	16383

Data Sizes:
    Strings     94
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     37      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_7(CODE[3]), STR_6(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_Test@buffer(BANK0[12]), Lcd_Write_Integer@buffer(COMMON[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    intToString@buffer	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_Test@buffer(BANK0[12]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> LCD_Test@buffer(BANK0[12]), STR_8(CODE[16]), Lcd_Write_Integer@buffer(COMMON[5]), STR_5(CODE[20]), 
		 -> STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[10]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _setupUart->_UART_TX_config
    _setupF->_configOsc
    _adc_read->_adc_change_channel
    _adc_init->_adc_change_channel
    _Lcd_Init->_Lcd_Cmd
    _LCD_Test->_Lcd_Write_String
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_Test
    _LCD_Test->_intToString
    _intToString->_sprintf
    _sprintf->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4234
                                             36 BANK0      1     1      0
                           _LCD_Test
                           _Lcd_Init
                           _adc_init
                           _adc_read
                             _setupF
                          _setupUart
 ---------------------------------------------------------------------------------
 (1) _setupUart                                            0     0      0      98
                     _UART_TX_config
 ---------------------------------------------------------------------------------
 (2) _UART_TX_config                                       2     0      2      98
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _setupF                                               0     0      0     230
                          _configOsc
                           _ioc_init
 ---------------------------------------------------------------------------------
 (2) _ioc_init                                             1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _configOsc                                            2     0      2     230
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             2     2      0      44
                                              4 COMMON     2     2      0
                 _adc_change_channel
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             3     1      2     120
                                              4 COMMON     3     1      2
                 _adc_change_channel
 ---------------------------------------------------------------------------------
 (2) _adc_change_channel                                   2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_Test                                            15    15      0    3544
                                             21 BANK0     15    15      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _intToString
 ---------------------------------------------------------------------------------
 (2) _intToString                                          4     1      3    1516
                                             17 BANK0      4     1      3
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             21    18      3    1320
                                              4 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                             10 COMMON     2     2      0
                                              0 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     876
                                              7 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1     988
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Test
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _intToString
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _adc_init
     _adc_change_channel
   _adc_read
     _adc_change_channel
   _setupF
     _configOsc
     _ioc_init
   _setupUart
     _UART_TX_config

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      32       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     25      26       5       47.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      32      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Jul 26 20:53:40 2023

                         pc 0002                          l51 045C                          l43 0444  
                        l44 0447                          l45 044D                          l46 044E  
                        l54 0496                          l47 0454                          l63 0288  
                        l48 0455                          l49 045B                          l57 0502  
                        l81 04BD                          l66 01D4                          l75 0317  
                        l92 01E0                          l69 0410                          l93 01ED  
                        l94 01F9                          l95 0208                          l96 0215  
                        l97 0222                          l99 0230                          fsr 0004  
                       l210 02D1                         l124 043A                         l150 04F5  
                       l127 0505                         l144 047C                         l147 04CC  
                       l244 04AC                         l247 04E8                         l380 00FF  
                       l656 035B                         l666 03D7                         _RD2 0042  
                       _RD3 0043                         _RD4 0044                         _RD5 0045  
                       _RD6 0046                         _RD7 0047                         u530 0440  
                       u610 0343                         u531 043F                         u611 0342  
                       u540 044B                         u541 044A                         u605 0333  
                       u550 0452                         u630 0357                         u710 0024  
                       u551 0451                         u631 0356                         u615 033F  
                       u711 0023                         u560 0459                         u800 0264  
                       u640 03A4                         u720 005E                         u561 0458  
                       u801 0263                         u705 03E9                         u625 034B  
                       u641 03A3                         u721 005D                         u570 0320  
                       u730 0084                         u571 031F                         u731 0083  
                       u820 02E1                         u660 03B6                         u740 008F  
                       u900 021C                         u661 03B5                         u741 008E  
                       u901 021B                         u830 0305                         u590 0332  
                       u670 03C0                         u750 0095                         u910 0229  
                       u815 026C                         u591 0331                         u671 03BF  
                       u655 03A8                         u751 0094                         u735 0080  
                       u911 0228                         u840 0317                         u760 00E9  
                       u841 0316                         u585 0324                         u761 00E8  
                       u690 03D3                         u770 00FB                         u850 01DC  
                       u691 03D2                         u675 03BC                         u771 00FA  
                       u851 01DB                         u780 0239                         u860 01E7  
                       u940 037E                         u781 0238                         u685 03C7  
                       u861 01E6                         u941 037D                         u870 01F3  
                       u950 0396                         u871 01F2                         u951 0395  
                       u880 0202                         u881 0201                         u890 020F  
                       u795 0241                         u891 020E                         u967 0382  
                       u977 04C7                         u987 0479                         u997 0182  
                       _isr 04CD                         fsr0 0004                         indf 0000  
                      l1400 03B6                        l1402 03C0                        l1420 03F7  
                      l1412 03D9                        l1404 03C6                        l1510 024A  
                      l1430 040D                        l1422 03FC                        l1414 03E3  
                      l1406 03CD                        l1360 0452                        l1440 0493  
                      l1432 047E                        l1504 04F6                        l1520 0275  
                      l1512 024F                        l1424 03FF                        l1416 03E6  
                      l1408 03D3                        l1600 045D                        l1362 0459  
                      l1354 043C                        l1434 0481                        l1522 027A  
                      l1514 0255                        l1506 0234                        l1426 0405  
                      l1418 03F4                        l1530 02F3                        l1370 0323  
                      l1450 0030                        l1442 0019                        l1610 0467  
                      l1602 0461                        l1356 0440                        l1436 0487  
                      l1524 0280                        l1508 0239                        l1516 025E  
                      l1428 0408                        l1532 02FB                        l1380 0349  
                      l1372 032A                        l1364 0318                        l1460 005A  
                      l1444 001E                        l1620 0477                        l1612 0468  
                      l1604 0462                        l1540 01E7                        l1358 044B  
                      l1438 048A                        l1518 0264                        l1526 02D2  
                      l1382 034A                        l1374 032E                        l1366 031A  
                      l1390 039C                        l1462 005E                        l1454 0031  
                      l1446 0024                        l1534 04AD                        l1614 046E  
                      l1606 0463                        l1622 04BF                        l1550 0229  
                      l1542 01F3                        l1630 0497                        l1528 02D7  
                      l1384 0351                        l1376 0332                        l1368 0320  
                      l1392 03A4                        l1480 0095                        l1472 0069  
                      l1464 0062                        l1456 004E                        l1448 002B  
                      l1616 0471                        l1608 0466                        l1624 04C5  
                      l1552 022D                        l1544 0202                        l1536 01D5  
                      l1560 04E3                        l1640 04A9                        l1632 049B  
                      l1720 035C                        l1378 0343                        l1386 0357  
                      l1394 03A7                        l1490 00DC                        l1482 009C  
                      l1466 0067                        l1458 0056                        l1642 0289  
                      l1570 0196                        l1618 0474                        l1626 04C9  
                      l1546 020F                        l1538 01DC                        l1554 0503  
                      l1562 04E7                        l1634 04A4                        l1730 0390  
                      l1722 0373                        l1396 03AE                        l1492 00E0  
                      l1484 00A0                        l1476 0085                        l1644 0296  
                      l1572 019C                        l1564 0178                        l1556 04EA  
                      l1548 021C                        l1580 041E                        l1636 04A7  
                      l1732 0391                        l1724 0378                        l1398 03B2  
                      l1486 00A5                        l1478 008F                        l1494 00E9  
                      l1646 029F                        l1566 017E                        l1590 042B  
                      l1582 041F                        l1574 0411                        l1558 04DC  
                      l1638 04A8                        l1726 037E                        l1734 0392  
                      l1488 00D5                        l1496 00FB                        l1648 02C2  
                      l1568 0187                        l1592 042E                        l1584 0423  
                      l1576 041A                        l1736 0396                        l1728 0385  
                      l1594 0431                        l1586 0425                        l1578 041D  
                      l1596 0432                        l1588 0428                        l1758 0043  
                      l1598 0434                        ?_isr 0070                        STR_1 013E  
                      STR_2 0167                        STR_3 014E                        STR_4 015B  
                      STR_5 011A                        STR_6 0171                        STR_7 0175  
                      STR_8 012E                        _T0IF 005A                        u1007 0191  
                      u1017 01A0                        u1027 02CA                        u1037 03F9  
                      u1047 040A                        u1057 048E                        _TMR0 0001  
                      _lcd1 0045           ?_Lcd_Write_String 0077                        _main 035C  
                      btemp 007E                        start 000C          ??_Lcd_Write_String 0079  
           __end_of_Lcd_Cmd 0497                       ??_isr 0070                ?_intToString 0031  
          __end_of_LCD_Test 02D2               configOsc@frec 0072                       ?_main 0070  
                     _EEADR 010D                       _EEDAT 010C             __end_of___lwdiv 035C  
           __end_of___lwmod 03D8                       i1l197 04D5                       _SPBRG 0099  
                     _PORTA 0005                       _PORTD 0008                       u47_20 04D1  
                     u47_21 04D0                       _TRISA 0085                       _TRISC 0087  
                     _TRISD 0088                       _TXREG 0019             __end_of_dpowers 011A  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __end_of_sprintf 0100                 ioc_init@pin 0070            __end_of_Lcd_Init 01D5  
          __end_of_Lcd_Port 045D             __initialization 000F                __end_of_main 039C  
                    ??_main 0044                      _ADRESH 001E                      _EECON2 018D  
                    _ANSELH 0189            __end_of_adc_init 047D            __end_of_adc_read 04CD  
                    i1l1280 04D1                      i1l1282 04D4                      i1l1278 04CD  
                 ??_Lcd_Cmd 0073                      _SPBRGH 009A   adc_change_channel@channel 0073  
          __end_of_ioc_init 0506                   ??___lwdiv 0076                   ??___lwmod 007A  
                    _setupF 0411                      saved_w 007E                   ??_sprintf 0027  
           Lcd_Set_Cursor@a 0020             Lcd_Set_Cursor@b 0076             Lcd_Set_Cursor@y 0022  
           Lcd_Set_Cursor@z 0021     __end_of__initialization 0012                   ?_LCD_Test 0070  
         __end_of_Lcd_Clear 0503              __pcstackCOMMON 0070              _Lcd_Set_Cursor 0231  
            _OPTION_REGbits 0081                   ?_Lcd_Init 0070                   ?_Lcd_Port 0070  
                __pbssBANK0 0045                  ??_LCD_Test 0035                  __pmaintext 035C  
                __pintentry 0004      __end_of_Lcd_Set_Cursor 0289                     ?_setupF 0070  
                 ?_adc_init 0074                   ?_adc_read 0070                  ??_Lcd_Init 0076  
                ??_Lcd_Port 0072                  __stringtab 0100                   ?_ioc_init 0070  
            _Lcd_Write_Char 03D8                     _Lcd_Cmd 047D              _UART_TX_config 04DC  
         __end_of_configOsc 0231                     ___lwdiv 0318                     ___lwmod 039C  
                 _ANSELbits 0188             ?_Lcd_Set_Cursor 0076                  ??_adc_init 0076  
                ??_adc_read 0074                     __ptext1 0497                     __ptext2 04DC  
                   __ptext3 0411                     __ptext4 0503                     __ptext5 01D5  
                   __ptext6 04BE                     __ptext7 045D                     __ptext8 04E9  
                   __ptext9 0178                     _dpowers 0110                     _sprintf 0016  
    __end_of_Lcd_Write_Char 0411        end_of_initialization 0012                  ??_ioc_init 0072  
    __end_of_UART_TX_config 04E9           __end_of_setupUart 04AD                   _RCSTAbits 0018  
                 Lcd_Port@a 0072             ?_Lcd_Write_Char 0070           Lcd_Write_String@a 0077  
         Lcd_Write_String@i 0020           intToString@buffer 0033             ?_UART_TX_config 0072  
                 _TXSTAbits 0098                   _Lcd_Clear 04F6            _Lcd_Write_String 02D2  
               _BAUDCTLbits 0187              __end_of_setupF 043B  __end_of_adc_change_channel 04F6  
       start_initialization 000F              intToString@num 0031                 __end_of_isr 04DC  
                ?_Lcd_Clear 0070               ??_intToString 0034             adc_init@channel 0074  
           Lcd_Write_Char@a 0076             Lcd_Write_Char@y 0075                    ??_setupF 0074  
           adc_read@channel 0075                   ___latbits 0002               __pcstackBANK0 0020  
                  ?_Lcd_Cmd 0070                 sprintf@flag 002B                 sprintf@prec 002C  
            LCD_Test@buffer 0038            ___lwdiv@dividend 0074            ??_Lcd_Set_Cursor 0077  
                  ?___lwdiv 0072                    ?___lwmod 0020                   _configOsc 01D5  
                 __pstrings 0100         __end_of_intToString 04BE            ___lwdiv@quotient 0077  
                  ?_sprintf 0024           interrupt_function 0004                    _LCD_Test 0289  
                  _PIE1bits 008C                    Lcd_Cmd@a 0075                    _PIR1bits 000C  
                  _PIR2bits 000D                 ??_Lcd_Clear 0076                   _setupUart 0497  
                ?_configOsc 0072                  _ADCON0bits 001F                 __stringbase 010F  
                _ADCON1bits 009F            ??_Lcd_Write_Char 0073                    _Lcd_Init 0178  
                  _Lcd_Port 043B            ??_UART_TX_config 0074    __end_of_Lcd_Write_String 0318  
                _EECON1bits 018C                  ?_setupUart 0070                 _intToString 04AD  
        __end_of__stringtab 0110                    _adc_init 045D                    _adc_read 04BE  
                sprintf@val 002D             ___lwdiv@divisor 0072             ___lwdiv@counter 0079  
                  __ptext10 0289                    __ptext11 04AD                    __ptext20 043B  
                  __ptext12 0016                    __ptext21 04CD                    __ptext13 039C  
                  __ptext14 0318                    __ptext15 02D2                    __ptext16 03D8  
                  __ptext17 0231                    __ptext18 04F6                    __ptext19 047D  
                  _ioc_init 0503          _adc_change_channel 04E9         ?_adc_change_channel 0070  
    UART_TX_config@baudrate 0072                 ??_configOsc 0074                  _INTCONbits 000B  
      ??_adc_change_channel 0072          Lcd_Write_Char@temp 0074                    intlevel1 0000  
                 sprintf@ap 002A                   sprintf@sp 002F            ___lwmod@dividend 0022  
                 stringcode 010A                  _OSCCONbits 008F                 ??_setupUart 0074  
        Lcd_Set_Cursor@temp 0023                    sprintf@c 0030                    sprintf@f 0024  
           ___lwmod@divisor 0020             ___lwmod@counter 007B                    stringdir 010A  
                  stringtab 0100  
