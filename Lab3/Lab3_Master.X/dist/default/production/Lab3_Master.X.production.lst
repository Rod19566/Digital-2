

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Aug 02 18:57:18 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52     0000                     
    53                           ; Version 2.40
    54                           ; Generated 17/11/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F887 Definitions
    86                           ; 
    87                           ; SFR Addresses
    88     0000                     	;# 
    89     0001                     	;# 
    90     0002                     	;# 
    91     0003                     	;# 
    92     0004                     	;# 
    93     0005                     	;# 
    94     0006                     	;# 
    95     0007                     	;# 
    96     0008                     	;# 
    97     0009                     	;# 
    98     000A                     	;# 
    99     000B                     	;# 
   100     000C                     	;# 
   101     000D                     	;# 
   102     000E                     	;# 
   103     000E                     	;# 
   104     000F                     	;# 
   105     0010                     	;# 
   106     0011                     	;# 
   107     0012                     	;# 
   108     0013                     	;# 
   109     0014                     	;# 
   110     0015                     	;# 
   111     0015                     	;# 
   112     0016                     	;# 
   113     0017                     	;# 
   114     0018                     	;# 
   115     0019                     	;# 
   116     001A                     	;# 
   117     001B                     	;# 
   118     001B                     	;# 
   119     001C                     	;# 
   120     001D                     	;# 
   121     001E                     	;# 
   122     001F                     	;# 
   123     0081                     	;# 
   124     0085                     	;# 
   125     0086                     	;# 
   126     0087                     	;# 
   127     0088                     	;# 
   128     0089                     	;# 
   129     008C                     	;# 
   130     008D                     	;# 
   131     008E                     	;# 
   132     008F                     	;# 
   133     0090                     	;# 
   134     0091                     	;# 
   135     0092                     	;# 
   136     0093                     	;# 
   137     0093                     	;# 
   138     0093                     	;# 
   139     0094                     	;# 
   140     0095                     	;# 
   141     0096                     	;# 
   142     0097                     	;# 
   143     0098                     	;# 
   144     0099                     	;# 
   145     009A                     	;# 
   146     009B                     	;# 
   147     009C                     	;# 
   148     009D                     	;# 
   149     009E                     	;# 
   150     009F                     	;# 
   151     0105                     	;# 
   152     0107                     	;# 
   153     0108                     	;# 
   154     0109                     	;# 
   155     010C                     	;# 
   156     010C                     	;# 
   157     010D                     	;# 
   158     010E                     	;# 
   159     010F                     	;# 
   160     0185                     	;# 
   161     0187                     	;# 
   162     0188                     	;# 
   163     0189                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0000                     	;# 
   167     0001                     	;# 
   168     0002                     	;# 
   169     0003                     	;# 
   170     0004                     	;# 
   171     0005                     	;# 
   172     0006                     	;# 
   173     0007                     	;# 
   174     0008                     	;# 
   175     0009                     	;# 
   176     000A                     	;# 
   177     000B                     	;# 
   178     000C                     	;# 
   179     000D                     	;# 
   180     000E                     	;# 
   181     000E                     	;# 
   182     000F                     	;# 
   183     0010                     	;# 
   184     0011                     	;# 
   185     0012                     	;# 
   186     0013                     	;# 
   187     0014                     	;# 
   188     0015                     	;# 
   189     0015                     	;# 
   190     0016                     	;# 
   191     0017                     	;# 
   192     0018                     	;# 
   193     0019                     	;# 
   194     001A                     	;# 
   195     001B                     	;# 
   196     001B                     	;# 
   197     001C                     	;# 
   198     001D                     	;# 
   199     001E                     	;# 
   200     001F                     	;# 
   201     0081                     	;# 
   202     0085                     	;# 
   203     0086                     	;# 
   204     0087                     	;# 
   205     0088                     	;# 
   206     0089                     	;# 
   207     008C                     	;# 
   208     008D                     	;# 
   209     008E                     	;# 
   210     008F                     	;# 
   211     0090                     	;# 
   212     0091                     	;# 
   213     0092                     	;# 
   214     0093                     	;# 
   215     0093                     	;# 
   216     0093                     	;# 
   217     0094                     	;# 
   218     0095                     	;# 
   219     0096                     	;# 
   220     0097                     	;# 
   221     0098                     	;# 
   222     0099                     	;# 
   223     009A                     	;# 
   224     009B                     	;# 
   225     009C                     	;# 
   226     009D                     	;# 
   227     009E                     	;# 
   228     009F                     	;# 
   229     0105                     	;# 
   230     0107                     	;# 
   231     0108                     	;# 
   232     0109                     	;# 
   233     010C                     	;# 
   234     010C                     	;# 
   235     010D                     	;# 
   236     010E                     	;# 
   237     010F                     	;# 
   238     0185                     	;# 
   239     0187                     	;# 
   240     0188                     	;# 
   241     0189                     	;# 
   242     018C                     	;# 
   243     018D                     	;# 
   244     0000                     	;# 
   245     0001                     	;# 
   246     0002                     	;# 
   247     0003                     	;# 
   248     0004                     	;# 
   249     0005                     	;# 
   250     0006                     	;# 
   251     0007                     	;# 
   252     0008                     	;# 
   253     0009                     	;# 
   254     000A                     	;# 
   255     000B                     	;# 
   256     000C                     	;# 
   257     000D                     	;# 
   258     000E                     	;# 
   259     000E                     	;# 
   260     000F                     	;# 
   261     0010                     	;# 
   262     0011                     	;# 
   263     0012                     	;# 
   264     0013                     	;# 
   265     0014                     	;# 
   266     0015                     	;# 
   267     0015                     	;# 
   268     0016                     	;# 
   269     0017                     	;# 
   270     0018                     	;# 
   271     0019                     	;# 
   272     001A                     	;# 
   273     001B                     	;# 
   274     001B                     	;# 
   275     001C                     	;# 
   276     001D                     	;# 
   277     001E                     	;# 
   278     001F                     	;# 
   279     0081                     	;# 
   280     0085                     	;# 
   281     0086                     	;# 
   282     0087                     	;# 
   283     0088                     	;# 
   284     0089                     	;# 
   285     008C                     	;# 
   286     008D                     	;# 
   287     008E                     	;# 
   288     008F                     	;# 
   289     0090                     	;# 
   290     0091                     	;# 
   291     0092                     	;# 
   292     0093                     	;# 
   293     0093                     	;# 
   294     0093                     	;# 
   295     0094                     	;# 
   296     0095                     	;# 
   297     0096                     	;# 
   298     0097                     	;# 
   299     0098                     	;# 
   300     0099                     	;# 
   301     009A                     	;# 
   302     009B                     	;# 
   303     009C                     	;# 
   304     009D                     	;# 
   305     009E                     	;# 
   306     009F                     	;# 
   307     0105                     	;# 
   308     0107                     	;# 
   309     0108                     	;# 
   310     0109                     	;# 
   311     010C                     	;# 
   312     010C                     	;# 
   313     010D                     	;# 
   314     010E                     	;# 
   315     010F                     	;# 
   316     0185                     	;# 
   317     0187                     	;# 
   318     0188                     	;# 
   319     0189                     	;# 
   320     018C                     	;# 
   321     018D                     	;# 
   322     0000                     	;# 
   323     0001                     	;# 
   324     0002                     	;# 
   325     0003                     	;# 
   326     0004                     	;# 
   327     0005                     	;# 
   328     0006                     	;# 
   329     0007                     	;# 
   330     0008                     	;# 
   331     0009                     	;# 
   332     000A                     	;# 
   333     000B                     	;# 
   334     000C                     	;# 
   335     000D                     	;# 
   336     000E                     	;# 
   337     000E                     	;# 
   338     000F                     	;# 
   339     0010                     	;# 
   340     0011                     	;# 
   341     0012                     	;# 
   342     0013                     	;# 
   343     0014                     	;# 
   344     0015                     	;# 
   345     0015                     	;# 
   346     0016                     	;# 
   347     0017                     	;# 
   348     0018                     	;# 
   349     0019                     	;# 
   350     001A                     	;# 
   351     001B                     	;# 
   352     001B                     	;# 
   353     001C                     	;# 
   354     001D                     	;# 
   355     001E                     	;# 
   356     001F                     	;# 
   357     0081                     	;# 
   358     0085                     	;# 
   359     0086                     	;# 
   360     0087                     	;# 
   361     0088                     	;# 
   362     0089                     	;# 
   363     008C                     	;# 
   364     008D                     	;# 
   365     008E                     	;# 
   366     008F                     	;# 
   367     0090                     	;# 
   368     0091                     	;# 
   369     0092                     	;# 
   370     0093                     	;# 
   371     0093                     	;# 
   372     0093                     	;# 
   373     0094                     	;# 
   374     0095                     	;# 
   375     0096                     	;# 
   376     0097                     	;# 
   377     0098                     	;# 
   378     0099                     	;# 
   379     009A                     	;# 
   380     009B                     	;# 
   381     009C                     	;# 
   382     009D                     	;# 
   383     009E                     	;# 
   384     009F                     	;# 
   385     0105                     	;# 
   386     0107                     	;# 
   387     0108                     	;# 
   388     0109                     	;# 
   389     010C                     	;# 
   390     010C                     	;# 
   391     010D                     	;# 
   392     010E                     	;# 
   393     010F                     	;# 
   394     0185                     	;# 
   395     0187                     	;# 
   396     0188                     	;# 
   397     0189                     	;# 
   398     018C                     	;# 
   399     018D                     	;# 
   400     0000                     	;# 
   401     0001                     	;# 
   402     0002                     	;# 
   403     0003                     	;# 
   404     0004                     	;# 
   405     0005                     	;# 
   406     0006                     	;# 
   407     0007                     	;# 
   408     0008                     	;# 
   409     0009                     	;# 
   410     000A                     	;# 
   411     000B                     	;# 
   412     000C                     	;# 
   413     000D                     	;# 
   414     000E                     	;# 
   415     000E                     	;# 
   416     000F                     	;# 
   417     0010                     	;# 
   418     0011                     	;# 
   419     0012                     	;# 
   420     0013                     	;# 
   421     0014                     	;# 
   422     0015                     	;# 
   423     0015                     	;# 
   424     0016                     	;# 
   425     0017                     	;# 
   426     0018                     	;# 
   427     0019                     	;# 
   428     001A                     	;# 
   429     001B                     	;# 
   430     001B                     	;# 
   431     001C                     	;# 
   432     001D                     	;# 
   433     001E                     	;# 
   434     001F                     	;# 
   435     0081                     	;# 
   436     0085                     	;# 
   437     0086                     	;# 
   438     0087                     	;# 
   439     0088                     	;# 
   440     0089                     	;# 
   441     008C                     	;# 
   442     008D                     	;# 
   443     008E                     	;# 
   444     008F                     	;# 
   445     0090                     	;# 
   446     0091                     	;# 
   447     0092                     	;# 
   448     0093                     	;# 
   449     0093                     	;# 
   450     0093                     	;# 
   451     0094                     	;# 
   452     0095                     	;# 
   453     0096                     	;# 
   454     0097                     	;# 
   455     0098                     	;# 
   456     0099                     	;# 
   457     009A                     	;# 
   458     009B                     	;# 
   459     009C                     	;# 
   460     009D                     	;# 
   461     009E                     	;# 
   462     009F                     	;# 
   463     0105                     	;# 
   464     0107                     	;# 
   465     0108                     	;# 
   466     0109                     	;# 
   467     010C                     	;# 
   468     010C                     	;# 
   469     010D                     	;# 
   470     010E                     	;# 
   471     010F                     	;# 
   472     0185                     	;# 
   473     0187                     	;# 
   474     0188                     	;# 
   475     0189                     	;# 
   476     018C                     	;# 
   477     018D                     	;# 
   478                           
   479                           	psect	idataBANK0
   480     0003                     __pidataBANK0:
   481                           
   482                           ;initializer for _slaveSelect
   483     0003  3401               	retlw	1
   484                           
   485                           	psect	strings
   486     1000                     __pstrings:
   487     1000                     stringtab:
   488     1000                     __stringtab:
   489                           
   490                           ;	String table - string pointers are 1 byte each
   491     1000  1BFF               	btfsc	btemp+1,7
   492     1001  280A               	ljmp	stringcode
   493     1002  1383               	bcf	3,7
   494     1003  187F               	btfsc	btemp+1,0
   495     1004  1783               	bsf	3,7
   496     1005  0800               	movf	0,w
   497     1006  0A84               	incf	4,f
   498     1007  1903               	skipnz
   499     1008  0AFF               	incf	btemp+1,f
   500     1009  0008               	return
   501     100A                     stringcode:
   502     100A                     stringdir:
   503     100A  3010               	movlw	high stringdir
   504     100B  008A               	movwf	10
   505     100C  0804               	movf	4,w
   506     100D  0A84               	incf	4,f
   507     100E  0782               	addwf	2,f
   508     100F                     __stringbase:
   509     100F  3400               	retlw	0
   510     1010                     __end_of__stringtab:
   511     1010                     __powers_:
   512     1010  3400               	retlw	0
   513     1011  3400               	retlw	0
   514     1012  3480               	retlw	128
   515     1013  343F               	retlw	63
   516     1014  3400               	retlw	0
   517     1015  3400               	retlw	0
   518     1016  3420               	retlw	32
   519     1017  3441               	retlw	65
   520     1018  3400               	retlw	0
   521     1019  3400               	retlw	0
   522     101A  34C8               	retlw	200
   523     101B  3442               	retlw	66
   524     101C  3400               	retlw	0
   525     101D  3400               	retlw	0
   526     101E  347A               	retlw	122
   527     101F  3444               	retlw	68
   528     1020  3400               	retlw	0
   529     1021  3440               	retlw	64
   530     1022  341C               	retlw	28
   531     1023  3446               	retlw	70
   532     1024  3400               	retlw	0
   533     1025  3450               	retlw	80
   534     1026  34C3               	retlw	195
   535     1027  3447               	retlw	71
   536     1028  3400               	retlw	0
   537     1029  3424               	retlw	36
   538     102A  3474               	retlw	116
   539     102B  3449               	retlw	73
   540     102C  3480               	retlw	128
   541     102D  3496               	retlw	150
   542     102E  3418               	retlw	24
   543     102F  344B               	retlw	75
   544     1030  3420               	retlw	32
   545     1031  34BC               	retlw	188
   546     1032  34BE               	retlw	190
   547     1033  344C               	retlw	76
   548     1034  3428               	retlw	40
   549     1035  346B               	retlw	107
   550     1036  346E               	retlw	110
   551     1037  344E               	retlw	78
   552     1038  34F9               	retlw	249
   553     1039  3402               	retlw	2
   554     103A  3415               	retlw	21
   555     103B  3450               	retlw	80
   556     103C  34EC               	retlw	236
   557     103D  3478               	retlw	120
   558     103E  34AD               	retlw	173
   559     103F  3460               	retlw	96
   560     1040  34CA               	retlw	202
   561     1041  34F2               	retlw	242
   562     1042  3449               	retlw	73
   563     1043  3471               	retlw	113
   564     1044                     __end_of__powers_:
   565     1044                     __npowers_:
   566     1044  3400               	retlw	0
   567     1045  3400               	retlw	0
   568     1046  3480               	retlw	128
   569     1047  343F               	retlw	63
   570     1048  34CD               	retlw	205
   571     1049  34CC               	retlw	204
   572     104A  34CC               	retlw	204
   573     104B  343D               	retlw	61
   574     104C  340A               	retlw	10
   575     104D  34D7               	retlw	215
   576     104E  3423               	retlw	35
   577     104F  343C               	retlw	60
   578     1050  346F               	retlw	111
   579     1051  3412               	retlw	18
   580     1052  3483               	retlw	131
   581     1053  343A               	retlw	58
   582     1054  3417               	retlw	23
   583     1055  34B7               	retlw	183
   584     1056  34D1               	retlw	209
   585     1057  3438               	retlw	56
   586     1058  34AC               	retlw	172
   587     1059  34C5               	retlw	197
   588     105A  3427               	retlw	39
   589     105B  3437               	retlw	55
   590     105C  34BD               	retlw	189
   591     105D  3437               	retlw	55
   592     105E  3486               	retlw	134
   593     105F  3435               	retlw	53
   594     1060  3495               	retlw	149
   595     1061  34BF               	retlw	191
   596     1062  34D6               	retlw	214
   597     1063  3433               	retlw	51
   598     1064  3477               	retlw	119
   599     1065  34CC               	retlw	204
   600     1066  342B               	retlw	43
   601     1067  3432               	retlw	50
   602     1068  345F               	retlw	95
   603     1069  3470               	retlw	112
   604     106A  3489               	retlw	137
   605     106B  3430               	retlw	48
   606     106C  34FF               	retlw	255
   607     106D  34E6               	retlw	230
   608     106E  34DB               	retlw	219
   609     106F  342E               	retlw	46
   610     1070  3408               	retlw	8
   611     1071  34E5               	retlw	229
   612     1072  343C               	retlw	60
   613     1073  341E               	retlw	30
   614     1074  3460               	retlw	96
   615     1075  3442               	retlw	66
   616     1076  34A2               	retlw	162
   617     1077  340D               	retlw	13
   618     1078                     __end_of__npowers_:
   619     1078                     _dpowers:
   620     1078  3401               	retlw	1
   621     1079  3400               	retlw	0
   622     107A  3400               	retlw	0
   623     107B  3400               	retlw	0
   624     107C  340A               	retlw	10
   625     107D  3400               	retlw	0
   626     107E  3400               	retlw	0
   627     107F  3400               	retlw	0
   628     1080  3464               	retlw	100
   629     1081  3400               	retlw	0
   630     1082  3400               	retlw	0
   631     1083  3400               	retlw	0
   632     1084  34E8               	retlw	232
   633     1085  3403               	retlw	3
   634     1086  3400               	retlw	0
   635     1087  3400               	retlw	0
   636     1088  3410               	retlw	16
   637     1089  3427               	retlw	39
   638     108A  3400               	retlw	0
   639     108B  3400               	retlw	0
   640     108C  34A0               	retlw	160
   641     108D  3486               	retlw	134
   642     108E  3401               	retlw	1
   643     108F  3400               	retlw	0
   644     1090  3440               	retlw	64
   645     1091  3442               	retlw	66
   646     1092  340F               	retlw	15
   647     1093  3400               	retlw	0
   648     1094  3480               	retlw	128
   649     1095  3496               	retlw	150
   650     1096  3498               	retlw	152
   651     1097  3400               	retlw	0
   652     1098  3400               	retlw	0
   653     1099  34E1               	retlw	225
   654     109A  34F5               	retlw	245
   655     109B  3405               	retlw	5
   656     109C  3400               	retlw	0
   657     109D  34CA               	retlw	202
   658     109E  349A               	retlw	154
   659     109F  343B               	retlw	59
   660     10A0                     __end_of_dpowers:
   661     0013                     _SSPBUF	set	19
   662     0014                     _SSPCON	set	20
   663     0008                     _PORTD	set	8
   664     0007                     _PORTC	set	7
   665     0006                     _PORTB	set	6
   666     0007                     _PORTCbits	set	7
   667     0039                     _RC1	set	57
   668     0038                     _RC0	set	56
   669     0047                     _RD7	set	71
   670     0046                     _RD6	set	70
   671     0045                     _RD5	set	69
   672     0044                     _RD4	set	68
   673     0043                     _RD3	set	67
   674     0042                     _RD2	set	66
   675     0041                     _RD1	set	65
   676     0040                     _RD0	set	64
   677     0094                     _SSPSTATbits	set	148
   678     0094                     _SSPSTAT	set	148
   679     0088                     _TRISD	set	136
   680     0086                     _TRISB	set	134
   681     0087                     _TRISC	set	135
   682     008F                     _OSCCONbits	set	143
   683     043B                     _TRISC3	set	1083
   684     043D                     _TRISC5	set	1085
   685     043A                     _TRISC2	set	1082
   686     0189                     _ANSELH	set	393
   687     10A0                     STR_1:
   688     10A0  3453               	retlw	83	;'S'
   689     10A1  346C               	retlw	108	;'l'
   690     10A2  3461               	retlw	97	;'a'
   691     10A3  3476               	retlw	118	;'v'
   692     10A4  3465               	retlw	101	;'e'
   693     10A5  3431               	retlw	49	;'1'
   694     10A6  3420               	retlw	32	;' '
   695     10A7  3450               	retlw	80	;'P'
   696     10A8  346F               	retlw	111	;'o'
   697     10A9  3474               	retlw	116	;'t'
   698     10AA  343A               	retlw	58	;':'
   699     10AB  3400               	retlw	0
   700     10AC                     STR_2:
   701     10AC  3425               	retlw	37	;'%'
   702     10AD  342E               	retlw	46	;'.'
   703     10AE  3432               	retlw	50	;'2'
   704     10AF  3466               	retlw	102	;'f'
   705     10B0  3420               	retlw	32	;' '
   706     10B1  3400               	retlw	0
   707                           
   708                           	psect	cinit
   709     07ED                     start_initialization:	
   710                           ; #config settings
   711                           
   712     07ED                     __initialization:
   713                           
   714                           ; Initialize objects allocated to BANK0
   715     07ED  120A  118A  2003  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   716     07F2  00EF               	movwf	__pdataBANK0& (0+127)
   717                           
   718                           ; Clear objects allocated to BANK1
   719     07F3  1383               	bcf	3,7	;select IRP bank0
   720     07F4  30C2               	movlw	low __pbssBANK1
   721     07F5  0084               	movwf	4
   722     07F6  30DB               	movlw	low (__pbssBANK1+25)
   723     07F7  160A  158A  2510  120A  118A  	fcall	clear_ram0
   724     07FC                     end_of_initialization:	
   725                           ;End of C runtime variable initialization code
   726                           
   727     07FC                     __end_of__initialization:
   728     07FC  0183               	clrf	3
   729     07FD  120A  118A  28BC   	ljmp	_main	;jump to C main() function
   730                           
   731                           	psect	dataBANK0
   732     006F                     __pdataBANK0:
   733     006F                     _slaveSelect:
   734     006F                     	ds	1
   735                           
   736                           	psect	bssBANK1
   737     00C2                     __pbssBANK1:
   738     00C2                     _s2:
   739     00C2                     	ds	4
   740     00C6                     _s1:
   741     00C6                     	ds	4
   742     00CA                     _a:
   743     00CA                     	ds	1
   744     00CB                     _volt:
   745     00CB                     	ds	16
   746                           
   747                           	psect	clrtext
   748     1D10                     clear_ram0:	
   749                           ;	Called with FSR containing the base address, and
   750                           ;	W with the last address+1
   751                           
   752     1D10  0064               	clrwdt	;clear the watchdog before getting into this loop
   753     1D11                     clrloop0:
   754     1D11  0180               	clrf	0	;clear RAM location pointed to by FSR
   755     1D12  0A84               	incf	4,f	;increment pointer
   756     1D13  0604               	xorwf	4,w	;XOR with final address
   757     1D14  1903               	btfsc	3,2	;have we reached the end yet?
   758     1D15  3400               	retlw	0	;all done for this memory range, return
   759     1D16  0604               	xorwf	4,w	;XOR again to restore value
   760     1D17  2D11               	goto	clrloop0	;do the next byte
   761                           
   762                           	psect	cstackBANK1
   763     00A0                     __pcstackBANK1:
   764     00A0                     ??_sprintf:
   765                           
   766                           ; 1 bytes @ 0x0
   767     00A0                     	ds	5
   768     00A5                     _sprintf$1032:
   769                           
   770                           ; 4 bytes @ 0x5
   771     00A5                     	ds	4
   772     00A9                     sprintf@ap:
   773                           
   774                           ; 1 bytes @ 0x9
   775     00A9                     	ds	1
   776     00AA                     sprintf@flag:
   777                           
   778                           ; 2 bytes @ 0xA
   779     00AA                     	ds	2
   780     00AC                     sprintf@val:
   781                           
   782                           ; 4 bytes @ 0xC
   783     00AC                     	ds	4
   784     00B0                     sprintf@eexp:
   785                           
   786                           ; 2 bytes @ 0x10
   787     00B0                     	ds	2
   788     00B2                     sprintf@tmpval:
   789                           
   790                           ; 4 bytes @ 0x12
   791     00B2                     	ds	4
   792     00B6                     sprintf@sp:
   793                           
   794                           ; 1 bytes @ 0x16
   795     00B6                     	ds	1
   796     00B7                     sprintf@prec:
   797                           
   798                           ; 2 bytes @ 0x17
   799     00B7                     	ds	2
   800     00B9                     sprintf@fval:
   801                           
   802                           ; 4 bytes @ 0x19
   803     00B9                     	ds	4
   804     00BD                     sprintf@c:
   805                           
   806                           ; 1 bytes @ 0x1D
   807     00BD                     	ds	1
   808     00BE                     ??_main:
   809                           
   810                           ; 1 bytes @ 0x1E
   811     00BE                     	ds	4
   812                           
   813                           	psect	cstackCOMMON
   814     0070                     __pcstackCOMMON:
   815     0070                     ?_isdigit:
   816     0070                     ?___fleq:	
   817                           ; 1 bit 
   818                           
   819     0070                     ?___flge:	
   820                           ; 1 bit 
   821                           
   822     0070                     ?_setup:	
   823                           ; 1 bit 
   824                           
   825     0070                     ?_spiWrite:	
   826                           ; 1 bytes @ 0x0
   827                           
   828     0070                     ??_spiWrite:	
   829                           ; 1 bytes @ 0x0
   830                           
   831     0070                     ?_spiRead:	
   832                           ; 1 bytes @ 0x0
   833                           
   834     0070                     ??_spiRead:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     ?_spiInit:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ??_isdigit:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     ?_configOsc:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ?_Lcd_Port:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     ??_Lcd_Port:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     ?_Lcd_Cmd:	
   853                           ; 1 bytes @ 0x0
   854                           
   855     0070                     ?_Lcd_Clear:	
   856                           ; 1 bytes @ 0x0
   857                           
   858     0070                     ?_Lcd_Init:	
   859                           ; 1 bytes @ 0x0
   860                           
   861     0070                     ?_Lcd_Write_Char:	
   862                           ; 1 bytes @ 0x0
   863                           
   864     0070                     ?_main:	
   865                           ; 1 bytes @ 0x0
   866                           
   867     0070                     ?_spiReceiveWait:	
   868                           ; 1 bytes @ 0x0
   869                           
   870     0070                     ??_spiReceiveWait:	
   871                           ; 1 bytes @ 0x0
   872                           
   873     0070                     ?__Umul8_16:	
   874                           ; 1 bytes @ 0x0
   875                           
   876     0070                     ?___wmul:	
   877                           ; 2 bytes @ 0x0
   878                           
   879     0070                     ?___awmod:	
   880                           ; 2 bytes @ 0x0
   881                           
   882     0070                     ?___lwmod:	
   883                           ; 2 bytes @ 0x0
   884                           
   885     0070                     ?__tdiv_to_l_:	
   886                           ; 2 bytes @ 0x0
   887                           
   888     0070                     ?__div_to_l_:	
   889                           ; 4 bytes @ 0x0
   890                           
   891     0070                     ?___lldiv:	
   892                           ; 4 bytes @ 0x0
   893                           
   894     0070                     ?___flneg:	
   895                           ; 4 bytes @ 0x0
   896                           
   897     0070                     ?___llmod:	
   898                           ; 4 bytes @ 0x0
   899                           
   900     0070                     ?___xxtofl:	
   901                           ; 4 bytes @ 0x0
   902                           
   903     0070                     Lcd_Port@a:	
   904                           ; 4 bytes @ 0x0
   905                           
   906     0070                     spiInit@sDataSample:	
   907                           ; 1 bytes @ 0x0
   908                           
   909     0070                     spiWrite@dat:	
   910                           ; 1 bytes @ 0x0
   911                           
   912     0070                     __Umul8_16@multiplicand:	
   913                           ; 1 bytes @ 0x0
   914                           
   915     0070                     _isdigit$836:	
   916                           ; 1 bytes @ 0x0
   917                           
   918     0070                     configOsc@frec:	
   919                           ; 1 bytes @ 0x0
   920                           
   921     0070                     ___wmul@multiplier:	
   922                           ; 2 bytes @ 0x0
   923                           
   924     0070                     ___awmod@divisor:	
   925                           ; 2 bytes @ 0x0
   926                           
   927     0070                     ___lwmod@divisor:	
   928                           ; 2 bytes @ 0x0
   929                           
   930     0070                     ___lldiv@divisor:	
   931                           ; 2 bytes @ 0x0
   932                           
   933     0070                     __div_to_l_@f1:	
   934                           ; 4 bytes @ 0x0
   935                           
   936     0070                     ___fleq@ff1:	
   937                           ; 4 bytes @ 0x0
   938                           
   939     0070                     ___flge@ff1:	
   940                           ; 4 bytes @ 0x0
   941                           
   942     0070                     ___flneg@f1:	
   943                           ; 4 bytes @ 0x0
   944                           
   945     0070                     __tdiv_to_l_@f1:	
   946                           ; 4 bytes @ 0x0
   947                           
   948     0070                     ___llmod@divisor:	
   949                           ; 4 bytes @ 0x0
   950                           
   951     0070                     ___xxtofl@val:	
   952                           ; 4 bytes @ 0x0
   953                           
   954                           
   955                           ; 4 bytes @ 0x0
   956     0070                     	ds	1
   957     0071                     ??_Lcd_Cmd:
   958     0071                     ??_Lcd_Write_Char:	
   959                           ; 1 bytes @ 0x1
   960                           
   961     0071                     spiInit@sClockIdle:	
   962                           ; 1 bytes @ 0x1
   963                           
   964     0071                     isdigit@c:	
   965                           ; 1 bytes @ 0x1
   966                           
   967                           
   968                           ; 1 bytes @ 0x1
   969     0071                     	ds	1
   970     0072                     ??__Umul8_16:
   971     0072                     ??_configOsc:	
   972                           ; 1 bytes @ 0x2
   973                           
   974     0072                     Lcd_Write_Char@a:	
   975                           ; 1 bytes @ 0x2
   976                           
   977     0072                     spiInit@sTransmitEdge:	
   978                           ; 1 bytes @ 0x2
   979                           
   980     0072                     ___wmul@multiplicand:	
   981                           ; 1 bytes @ 0x2
   982                           
   983     0072                     ___awmod@dividend:	
   984                           ; 2 bytes @ 0x2
   985                           
   986     0072                     ___lwmod@dividend:	
   987                           ; 2 bytes @ 0x2
   988                           
   989                           
   990                           ; 2 bytes @ 0x2
   991     0072                     	ds	1
   992     0073                     ??_spiInit:
   993     0073                     ?_Lcd_Write_String:	
   994                           ; 1 bytes @ 0x3
   995                           
   996     0073                     Lcd_Cmd@a:	
   997                           ; 1 bytes @ 0x3
   998                           
   999     0073                     spiInit@sType:	
  1000                           ; 1 bytes @ 0x3
  1001                           
  1002     0073                     Lcd_Write_String@a:	
  1003                           ; 1 bytes @ 0x3
  1004                           
  1005                           
  1006                           ; 2 bytes @ 0x3
  1007     0073                     	ds	1
  1008     0074                     ??_Lcd_Clear:
  1009     0074                     ?_Lcd_Set_Cursor:	
  1010                           ; 1 bytes @ 0x4
  1011                           
  1012     0074                     ??_Lcd_Init:	
  1013                           ; 1 bytes @ 0x4
  1014                           
  1015     0074                     ??___wmul:	
  1016                           ; 1 bytes @ 0x4
  1017                           
  1018     0074                     ??___awmod:	
  1019                           ; 1 bytes @ 0x4
  1020                           
  1021     0074                     ??___flneg:	
  1022                           ; 1 bytes @ 0x4
  1023                           
  1024     0074                     ??___lwmod:	
  1025                           ; 1 bytes @ 0x4
  1026                           
  1027     0074                     ??___xxtofl:	
  1028                           ; 1 bytes @ 0x4
  1029                           
  1030     0074                     Lcd_Set_Cursor@b:	
  1031                           ; 1 bytes @ 0x4
  1032                           
  1033     0074                     ___awmod@counter:	
  1034                           ; 1 bytes @ 0x4
  1035                           
  1036     0074                     ___lwmod@counter:	
  1037                           ; 1 bytes @ 0x4
  1038                           
  1039     0074                     ___wmul@product:	
  1040                           ; 1 bytes @ 0x4
  1041                           
  1042     0074                     __Umul8_16@product:	
  1043                           ; 2 bytes @ 0x4
  1044                           
  1045     0074                     ___lldiv@dividend:	
  1046                           ; 2 bytes @ 0x4
  1047                           
  1048     0074                     __div_to_l_@f2:	
  1049                           ; 4 bytes @ 0x4
  1050                           
  1051     0074                     ___fleq@ff2:	
  1052                           ; 4 bytes @ 0x4
  1053                           
  1054     0074                     ___flge@ff2:	
  1055                           ; 4 bytes @ 0x4
  1056                           
  1057     0074                     __tdiv_to_l_@f2:	
  1058                           ; 4 bytes @ 0x4
  1059                           
  1060     0074                     ___llmod@dividend:	
  1061                           ; 4 bytes @ 0x4
  1062                           
  1063                           
  1064                           ; 4 bytes @ 0x4
  1065     0074                     	ds	1
  1066     0075                     ??_Lcd_Set_Cursor:
  1067     0075                     ??_Lcd_Write_String:	
  1068                           ; 1 bytes @ 0x5
  1069                           
  1070     0075                     ?___lwdiv:	
  1071                           ; 1 bytes @ 0x5
  1072                           
  1073     0075                     Lcd_Set_Cursor@a:	
  1074                           ; 2 bytes @ 0x5
  1075                           
  1076     0075                     ___awmod@sign:	
  1077                           ; 1 bytes @ 0x5
  1078                           
  1079     0075                     ___lwdiv@divisor:	
  1080                           ; 1 bytes @ 0x5
  1081                           
  1082                           
  1083                           ; 2 bytes @ 0x5
  1084     0075                     	ds	1
  1085     0076                     ??_setup:
  1086     0076                     ?___awdiv:	
  1087                           ; 1 bytes @ 0x6
  1088                           
  1089     0076                     Lcd_Set_Cursor@temp:	
  1090                           ; 2 bytes @ 0x6
  1091                           
  1092     0076                     ___awdiv@divisor:	
  1093                           ; 1 bytes @ 0x6
  1094                           
  1095     0076                     __Umul8_16@word_mpld:	
  1096                           ; 2 bytes @ 0x6
  1097                           
  1098                           
  1099                           ; 2 bytes @ 0x6
  1100     0076                     	ds	1
  1101     0077                     ___lwdiv@dividend:
  1102                           
  1103                           ; 2 bytes @ 0x7
  1104     0077                     	ds	1
  1105     0078                     ??__tdiv_to_l_:
  1106     0078                     ??__div_to_l_:	
  1107                           ; 1 bytes @ 0x8
  1108                           
  1109     0078                     ??___lldiv:	
  1110                           ; 1 bytes @ 0x8
  1111                           
  1112     0078                     ??___fleq:	
  1113                           ; 1 bytes @ 0x8
  1114                           
  1115     0078                     ??___flge:	
  1116                           ; 1 bytes @ 0x8
  1117                           
  1118     0078                     ??___llmod:	
  1119                           ; 1 bytes @ 0x8
  1120                           
  1121     0078                     __Umul8_16@multiplier:	
  1122                           ; 1 bytes @ 0x8
  1123                           
  1124     0078                     ___xxtofl@sign:	
  1125                           ; 1 bytes @ 0x8
  1126                           
  1127     0078                     Lcd_Write_String@i:	
  1128                           ; 1 bytes @ 0x8
  1129                           
  1130     0078                     ___awdiv@dividend:	
  1131                           ; 2 bytes @ 0x8
  1132                           
  1133                           
  1134                           ; 2 bytes @ 0x8
  1135     0078                     	ds	1
  1136     0079                     ??___lwdiv:
  1137     0079                     ___llmod@counter:	
  1138                           ; 1 bytes @ 0x9
  1139                           
  1140     0079                     ___xxtofl@exp:	
  1141                           ; 1 bytes @ 0x9
  1142                           
  1143     0079                     ___lwdiv@quotient:	
  1144                           ; 1 bytes @ 0x9
  1145                           
  1146     0079                     ___lldiv@quotient:	
  1147                           ; 2 bytes @ 0x9
  1148                           
  1149                           
  1150                           ; 4 bytes @ 0x9
  1151     0079                     	ds	1
  1152     007A                     ??___awdiv:
  1153     007A                     ___awdiv@counter:	
  1154                           ; 1 bytes @ 0xA
  1155                           
  1156     007A                     ___xxtofl@arg:	
  1157                           ; 1 bytes @ 0xA
  1158                           
  1159                           
  1160                           ; 4 bytes @ 0xA
  1161     007A                     	ds	1
  1162     007B                     ___awdiv@sign:
  1163     007B                     ___lwdiv@counter:	
  1164                           ; 1 bytes @ 0xB
  1165                           
  1166                           
  1167                           ; 1 bytes @ 0xB
  1168     007B                     	ds	1
  1169     007C                     ___awdiv@quotient:
  1170                           
  1171                           ; 2 bytes @ 0xC
  1172     007C                     	ds	1
  1173     007D                     ___lldiv@counter:
  1174                           
  1175                           ; 1 bytes @ 0xD
  1176     007D                     	ds	1
  1177     007E                     ??___flsub:
  1178                           
  1179                           	psect	cstackBANK0
  1180     0020                     __pcstackBANK0:	
  1181                           ; 1 bytes @ 0xE
  1182                           
  1183     0020                     ?___flmul:
  1184     0020                     __div_to_l_@quot:	
  1185                           ; 4 bytes @ 0x0
  1186                           
  1187     0020                     __tdiv_to_l_@quot:	
  1188                           ; 4 bytes @ 0x0
  1189                           
  1190     0020                     ___flmul@b:	
  1191                           ; 4 bytes @ 0x0
  1192                           
  1193                           
  1194                           ; 4 bytes @ 0x0
  1195     0020                     	ds	4
  1196     0024                     __div_to_l_@cntr:
  1197     0024                     __tdiv_to_l_@cntr:	
  1198                           ; 1 bytes @ 0x4
  1199                           
  1200     0024                     ___flmul@a:	
  1201                           ; 1 bytes @ 0x4
  1202                           
  1203                           
  1204                           ; 4 bytes @ 0x4
  1205     0024                     	ds	1
  1206     0025                     __div_to_l_@exp1:
  1207     0025                     __tdiv_to_l_@exp1:	
  1208                           ; 1 bytes @ 0x5
  1209                           
  1210                           
  1211                           ; 1 bytes @ 0x5
  1212     0025                     	ds	3
  1213     0028                     ??___flmul:
  1214                           
  1215                           ; 1 bytes @ 0x8
  1216     0028                     	ds	5
  1217     002D                     ___flmul@sign:
  1218                           
  1219                           ; 1 bytes @ 0xD
  1220     002D                     	ds	1
  1221     002E                     ___flmul@grs:
  1222                           
  1223                           ; 4 bytes @ 0xE
  1224     002E                     	ds	4
  1225     0032                     ___flmul@aexp:
  1226                           
  1227                           ; 1 bytes @ 0x12
  1228     0032                     	ds	1
  1229     0033                     ___flmul@bexp:
  1230                           
  1231                           ; 1 bytes @ 0x13
  1232     0033                     	ds	1
  1233     0034                     ___flmul@prod:
  1234                           
  1235                           ; 4 bytes @ 0x14
  1236     0034                     	ds	4
  1237     0038                     ___flmul@temp:
  1238                           
  1239                           ; 2 bytes @ 0x18
  1240     0038                     	ds	2
  1241     003A                     ?_fround:
  1242     003A                     ?_scale:	
  1243                           ; 4 bytes @ 0x1A
  1244                           
  1245                           
  1246                           ; 4 bytes @ 0x1A
  1247     003A                     	ds	4
  1248     003E                     ??_fround:
  1249     003E                     ??_scale:	
  1250                           ; 1 bytes @ 0x1E
  1251                           
  1252                           
  1253                           ; 1 bytes @ 0x1E
  1254     003E                     	ds	7
  1255     0045                     _fround$1030:
  1256                           
  1257                           ; 4 bytes @ 0x25
  1258     0045                     	ds	3
  1259     0048                     _scale$1031:
  1260                           
  1261                           ; 4 bytes @ 0x28
  1262     0048                     	ds	1
  1263     0049                     _fround$1029:
  1264                           
  1265                           ; 4 bytes @ 0x29
  1266     0049                     	ds	3
  1267     004C                     scale@scl:
  1268                           
  1269                           ; 1 bytes @ 0x2C
  1270     004C                     	ds	1
  1271     004D                     ?___fltol:
  1272     004D                     fround@prec:	
  1273                           ; 4 bytes @ 0x2D
  1274                           
  1275     004D                     ___fltol@f1:	
  1276                           ; 1 bytes @ 0x2D
  1277                           
  1278                           
  1279                           ; 4 bytes @ 0x2D
  1280     004D                     	ds	1
  1281     004E                     ?___fladd:
  1282     004E                     ___fladd@b:	
  1283                           ; 4 bytes @ 0x2E
  1284                           
  1285                           
  1286                           ; 4 bytes @ 0x2E
  1287     004E                     	ds	3
  1288     0051                     ??___fltol:
  1289                           
  1290                           ; 1 bytes @ 0x31
  1291     0051                     	ds	1
  1292     0052                     ___fladd@a:
  1293                           
  1294                           ; 4 bytes @ 0x32
  1295     0052                     	ds	3
  1296     0055                     ___fltol@sign1:
  1297                           
  1298                           ; 1 bytes @ 0x35
  1299     0055                     	ds	1
  1300     0056                     ??___fladd:
  1301     0056                     ___fltol@exp1:	
  1302                           ; 1 bytes @ 0x36
  1303                           
  1304                           
  1305                           ; 1 bytes @ 0x36
  1306     0056                     	ds	8
  1307     005E                     ___fladd@signs:
  1308                           
  1309                           ; 1 bytes @ 0x3E
  1310     005E                     	ds	1
  1311     005F                     ___fladd@aexp:
  1312                           
  1313                           ; 1 bytes @ 0x3F
  1314     005F                     	ds	1
  1315     0060                     ___fladd@bexp:
  1316                           
  1317                           ; 1 bytes @ 0x40
  1318     0060                     	ds	1
  1319     0061                     ___fladd@grs:
  1320                           
  1321                           ; 1 bytes @ 0x41
  1322     0061                     	ds	1
  1323     0062                     ?___flsub:
  1324     0062                     ___flsub@a:	
  1325                           ; 4 bytes @ 0x42
  1326                           
  1327                           
  1328                           ; 4 bytes @ 0x42
  1329     0062                     	ds	4
  1330     0066                     ___flsub@b:
  1331                           
  1332                           ; 4 bytes @ 0x46
  1333     0066                     	ds	4
  1334     006A                     ?_sprintf:
  1335     006A                     sprintf@f:	
  1336                           ; 2 bytes @ 0x4A
  1337                           
  1338                           
  1339                           ; 1 bytes @ 0x4A
  1340     006A                     	ds	5
  1341                           
  1342                           	psect	maintext
  1343     00BC                     __pmaintext:	
  1344 ;;
  1345 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1346 ;;
  1347 ;; *************** function _main *****************
  1348 ;; Defined at:
  1349 ;;		line 69 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;		None
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : B00/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1363 ;;      Params:         0       0       0       0       0
  1364 ;;      Locals:         0       0       0       0       0
  1365 ;;      Temps:          0       0       4       0       0
  1366 ;;      Totals:         0       0       4       0       0
  1367 ;;Total ram usage:        4 bytes
  1368 ;; Hardware stack levels required when called: 4
  1369 ;; This function calls:
  1370 ;;		_Lcd_Clear
  1371 ;;		_Lcd_Set_Cursor
  1372 ;;		_Lcd_Write_String
  1373 ;;		___xxtofl
  1374 ;;		_setup
  1375 ;;		_spiRead
  1376 ;;		_spiWrite
  1377 ;;		_sprintf
  1378 ;; This function is called by:
  1379 ;;		Startup code after reset
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383     00BC                     _main:	
  1384                           ;psect for function _main
  1385                           
  1386     00BC                     l3432:	
  1387                           ;incstack = 0
  1388                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1389                           
  1390                           
  1391                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 70:     setup(
      +                          );
  1392     00BC  160A  158A  2621  120A  118A  	fcall	_setup
  1393     00C1                     l3434:
  1394                           
  1395                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 75:         PO
      +                          RTCbits.RC2 = 0;
  1396     00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1397     00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1398     00C3  1107               	bcf	7,2	;volatile
  1399     00C4                     l3436:
  1400                           
  1401                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 76:        _de
      +                          lay((unsigned long)((1)*(8000000/4000.0)));
  1402     00C4  3003               	movlw	3
  1403     00C5  1683               	bsf	3,5	;RP0=1, select bank1
  1404     00C6  1303               	bcf	3,6	;RP1=0, select bank1
  1405     00C7  00BF               	movwf	(??_main^(0+128)+1)
  1406     00C8  3097               	movlw	151
  1407     00C9  00BE               	movwf	??_main^(0+128)
  1408     00CA                     u5637:
  1409     00CA  0BBE               	decfsz	??_main^(0+128),f
  1410     00CB  28CA               	goto	u5637
  1411     00CC  0BBF               	decfsz	(??_main^(0+128)+1),f
  1412     00CD  28CA               	goto	u5637
  1413     00CE                     l3438:
  1414                           
  1415                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 79:         if
      +                           (slaveSelect == 0){
  1416     00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1417     00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1418     00D0  086F               	movf	_slaveSelect,w
  1419     00D1  1D03               	btfss	3,2
  1420     00D2  28D4               	goto	u5621
  1421     00D3  28D5               	goto	u5620
  1422     00D4                     u5621:
  1423     00D4  292C               	goto	l3456
  1424     00D5                     u5620:
  1425     00D5                     l3440:
  1426                           
  1427                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 80:           
      +                            PORTCbits.RC2 = 0;
  1428     00D5  1107               	bcf	7,2	;volatile
  1429     00D6                     l3442:
  1430                           
  1431                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 81:           
      +                            _delay((unsigned long)((1)*(8000000/4000.0)));
  1432     00D6  3003               	movlw	3
  1433     00D7  1683               	bsf	3,5	;RP0=1, select bank1
  1434     00D8  1303               	bcf	3,6	;RP1=0, select bank1
  1435     00D9  00BF               	movwf	(??_main^(0+128)+1)
  1436     00DA  3097               	movlw	151
  1437     00DB  00BE               	movwf	??_main^(0+128)
  1438     00DC                     u5647:
  1439     00DC  0BBE               	decfsz	??_main^(0+128),f
  1440     00DD  28DC               	goto	u5647
  1441     00DE  0BBF               	decfsz	(??_main^(0+128)+1),f
  1442     00DF  28DC               	goto	u5647
  1443     00E0                     l3444:
  1444                           
  1445                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 83:           
      +                            spiWrite(slaveSelect);
  1446     00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1447     00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1448     00E2  086F               	movf	_slaveSelect,w
  1449     00E3  160A  158A  2503  120A  118A  	fcall	_spiWrite
  1450     00E8                     l3446:
  1451                           
  1452                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 84:           
      +                            s1 = spiRead();
  1453     00E8  160A  158A  2518  120A  118A  	fcall	_spiRead
  1454     00ED  1683               	bsf	3,5	;RP0=1, select bank1
  1455     00EE  1303               	bcf	3,6	;RP1=0, select bank1
  1456     00EF  00BE               	movwf	??_main^(0+128)
  1457     00F0  01BF               	clrf	(??_main^(0+128)+1)
  1458     00F1  01C0               	clrf	(??_main^(0+128)+2)
  1459     00F2  01C1               	clrf	(??_main^(0+128)+3)
  1460     00F3  0841               	movf	(??_main+3)^(0+128),w
  1461     00F4  00F3               	movwf	___xxtofl@val+3
  1462     00F5  0840               	movf	(??_main+2)^(0+128),w
  1463     00F6  00F2               	movwf	___xxtofl@val+2
  1464     00F7  083F               	movf	(??_main+1)^(0+128),w
  1465     00F8  00F1               	movwf	___xxtofl@val+1
  1466     00F9  083E               	movf	??_main^(0+128),w
  1467     00FA  00F0               	movwf	___xxtofl@val
  1468     00FB  3000               	movlw	0
  1469     00FC  120A  158A  20A4  120A  118A  	fcall	___xxtofl
  1470     0101  0873               	movf	?___xxtofl+3,w
  1471     0102  1683               	bsf	3,5	;RP0=1, select bank1
  1472     0103  1303               	bcf	3,6	;RP1=0, select bank1
  1473     0104  00C9               	movwf	(_s1+3)^(0+128)
  1474     0105  0872               	movf	?___xxtofl+2,w
  1475     0106  00C8               	movwf	(_s1+2)^(0+128)
  1476     0107  0871               	movf	?___xxtofl+1,w
  1477     0108  00C7               	movwf	(_s1+1)^(0+128)
  1478     0109  0870               	movf	?___xxtofl,w
  1479     010A  00C6               	movwf	_s1^(0+128)
  1480     010B                     l3448:
  1481                           
  1482                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 86:           
      +                            _delay((unsigned long)((1)*(8000000/4000.0)));
  1483     010B  3003               	movlw	3
  1484     010C  1683               	bsf	3,5	;RP0=1, select bank1
  1485     010D  1303               	bcf	3,6	;RP1=0, select bank1
  1486     010E  00BF               	movwf	(??_main^(0+128)+1)
  1487     010F  3097               	movlw	151
  1488     0110  00BE               	movwf	??_main^(0+128)
  1489     0111                     u5657:
  1490     0111  0BBE               	decfsz	??_main^(0+128),f
  1491     0112  2911               	goto	u5657
  1492     0113  0BBF               	decfsz	(??_main^(0+128)+1),f
  1493     0114  2911               	goto	u5657
  1494     0115                     l3450:
  1495                           
  1496                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 88:           
      +                            PORTCbits.RC2 = 1;
  1497     0115  1283               	bcf	3,5	;RP0=0, select bank0
  1498     0116  1303               	bcf	3,6	;RP1=0, select bank0
  1499     0117  1507               	bsf	7,2	;volatile
  1500     0118                     l3452:
  1501                           
  1502                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 89:           
      +                            _delay((unsigned long)((100)*(8000000/4000.0)));
  1503     0118  3002               	movlw	2
  1504     0119  1683               	bsf	3,5	;RP0=1, select bank1
  1505     011A  1303               	bcf	3,6	;RP1=0, select bank1
  1506     011B  00C0               	movwf	(??_main^(0+128)+2)
  1507     011C  3004               	movlw	4
  1508     011D  00BF               	movwf	(??_main^(0+128)+1)
  1509     011E  30B9               	movlw	185
  1510     011F  00BE               	movwf	??_main^(0+128)
  1511     0120                     u5667:
  1512     0120  0BBE               	decfsz	??_main^(0+128),f
  1513     0121  2920               	goto	u5667
  1514     0122  0BBF               	decfsz	(??_main^(0+128)+1),f
  1515     0123  2920               	goto	u5667
  1516     0124  0BC0               	decfsz	(??_main^(0+128)+2),f
  1517     0125  2920               	goto	u5667
  1518     0126  2927               	nop2
  1519     0127                     l3454:
  1520                           
  1521                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 90:           
      +                            slaveSelect = 1;
  1522     0127  1283               	bcf	3,5	;RP0=0, select bank0
  1523     0128  1303               	bcf	3,6	;RP1=0, select bank0
  1524     0129  01EF               	clrf	_slaveSelect
  1525     012A  0AEF               	incf	_slaveSelect,f
  1526                           
  1527                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 91:        }
  1528     012B  293E               	goto	l3460
  1529     012C                     l3456:
  1530                           
  1531                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 103:          
      +                             _delay((unsigned long)((100)*(8000000/4000.0)));
  1532     012C  3002               	movlw	2
  1533     012D  1683               	bsf	3,5	;RP0=1, select bank1
  1534     012E  1303               	bcf	3,6	;RP1=0, select bank1
  1535     012F  00C0               	movwf	(??_main^(0+128)+2)
  1536     0130  3004               	movlw	4
  1537     0131  00BF               	movwf	(??_main^(0+128)+1)
  1538     0132  30B9               	movlw	185
  1539     0133  00BE               	movwf	??_main^(0+128)
  1540     0134                     u5677:
  1541     0134  0BBE               	decfsz	??_main^(0+128),f
  1542     0135  2934               	goto	u5677
  1543     0136  0BBF               	decfsz	(??_main^(0+128)+1),f
  1544     0137  2934               	goto	u5677
  1545     0138  0BC0               	decfsz	(??_main^(0+128)+2),f
  1546     0139  2934               	goto	u5677
  1547     013A  293B               	nop2
  1548     013B                     l3458:
  1549                           
  1550                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 104:          
      +                             slaveSelect = 0;
  1551     013B  1283               	bcf	3,5	;RP0=0, select bank0
  1552     013C  1303               	bcf	3,6	;RP1=0, select bank0
  1553     013D  01EF               	clrf	_slaveSelect
  1554     013E                     l3460:
  1555                           
  1556                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 107:        Lc
      +                          d_Clear();
  1557     013E  160A  158A  252C  120A  118A  	fcall	_Lcd_Clear
  1558     0143                     l3462:
  1559                           
  1560                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 108:        Lc
      +                          d_Set_Cursor(1,1);
  1561     0143  01F4               	clrf	Lcd_Set_Cursor@b
  1562     0144  0AF4               	incf	Lcd_Set_Cursor@b,f
  1563     0145  3001               	movlw	1
  1564     0146  160A  158A  2591  120A  118A  	fcall	_Lcd_Set_Cursor
  1565     014B                     l3464:
  1566                           
  1567                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 109:        Lc
      +                          d_Write_String("Slave1 Pot:");
  1568     014B  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1569     014C  00F3               	movwf	Lcd_Write_String@a
  1570     014D  3080               	movlw	128
  1571     014E  00F4               	movwf	Lcd_Write_String@a+1
  1572     014F  160A  158A  2687  120A  118A  	fcall	_Lcd_Write_String
  1573     0154                     l3466:
  1574                           
  1575                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 110:        Lc
      +                          d_Set_Cursor(2,1);
  1576     0154  01F4               	clrf	Lcd_Set_Cursor@b
  1577     0155  0AF4               	incf	Lcd_Set_Cursor@b,f
  1578     0156  3002               	movlw	2
  1579     0157  160A  158A  2591  120A  118A  	fcall	_Lcd_Set_Cursor
  1580     015C                     l3468:
  1581                           
  1582                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 111:        sp
      +                          rintf(volt, "%.2f ", s1);
  1583     015C  309D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1584     015D  1283               	bcf	3,5	;RP0=0, select bank0
  1585     015E  1303               	bcf	3,6	;RP1=0, select bank0
  1586     015F  00EA               	movwf	sprintf@f
  1587     0160  1683               	bsf	3,5	;RP0=1, select bank1
  1588     0161  1303               	bcf	3,6	;RP1=0, select bank1
  1589     0162  0849               	movf	(_s1+3)^(0+128),w
  1590     0163  1283               	bcf	3,5	;RP0=0, select bank0
  1591     0164  1303               	bcf	3,6	;RP1=0, select bank0
  1592     0165  00EE               	movwf	?_sprintf+4
  1593     0166  1683               	bsf	3,5	;RP0=1, select bank1
  1594     0167  1303               	bcf	3,6	;RP1=0, select bank1
  1595     0168  0848               	movf	(_s1+2)^(0+128),w
  1596     0169  1283               	bcf	3,5	;RP0=0, select bank0
  1597     016A  1303               	bcf	3,6	;RP1=0, select bank0
  1598     016B  00ED               	movwf	?_sprintf+3
  1599     016C  1683               	bsf	3,5	;RP0=1, select bank1
  1600     016D  1303               	bcf	3,6	;RP1=0, select bank1
  1601     016E  0847               	movf	(_s1+1)^(0+128),w
  1602     016F  1283               	bcf	3,5	;RP0=0, select bank0
  1603     0170  1303               	bcf	3,6	;RP1=0, select bank0
  1604     0171  00EC               	movwf	?_sprintf+2
  1605     0172  1683               	bsf	3,5	;RP0=1, select bank1
  1606     0173  1303               	bcf	3,6	;RP1=0, select bank1
  1607     0174  0846               	movf	_s1^(0+128),w
  1608     0175  1283               	bcf	3,5	;RP0=0, select bank0
  1609     0176  1303               	bcf	3,6	;RP1=0, select bank0
  1610     0177  00EB               	movwf	?_sprintf+1
  1611     0178  30CB               	movlw	(low (_volt| 0))& (0+255)
  1612     0179  120A  118A  2199  120A  118A  	fcall	_sprintf
  1613     017E                     l3470:
  1614                           
  1615                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 112:        Lc
      +                          d_Write_String(volt);
  1616     017E  30CB               	movlw	(low (_volt| 0))& (0+255)
  1617     017F  00F3               	movwf	Lcd_Write_String@a
  1618     0180  3000               	movlw	0
  1619     0181  00F4               	movwf	Lcd_Write_String@a+1
  1620     0182  160A  158A  2687  120A  118A  	fcall	_Lcd_Write_String
  1621     0187                     l3472:
  1622                           
  1623                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 113:        _d
      +                          elay((unsigned long)((500)*(8000000/4000.0)));
  1624     0187  3006               	movlw	6
  1625     0188  1683               	bsf	3,5	;RP0=1, select bank1
  1626     0189  1303               	bcf	3,6	;RP1=0, select bank1
  1627     018A  00C0               	movwf	(??_main^(0+128)+2)
  1628     018B  3013               	movlw	19
  1629     018C  00BF               	movwf	(??_main^(0+128)+1)
  1630     018D  30AD               	movlw	173
  1631     018E  00BE               	movwf	??_main^(0+128)
  1632     018F                     u5687:
  1633     018F  0BBE               	decfsz	??_main^(0+128),f
  1634     0190  298F               	goto	u5687
  1635     0191  0BBF               	decfsz	(??_main^(0+128)+1),f
  1636     0192  298F               	goto	u5687
  1637     0193  0BC0               	decfsz	(??_main^(0+128)+2),f
  1638     0194  298F               	goto	u5687
  1639     0195  28C1               	goto	l3434
  1640     0196  120A  118A  2800   	ljmp	start
  1641     0199                     __end_of_main:
  1642                           
  1643                           	psect	text1
  1644     0199                     __ptext1:	
  1645 ;; *************** function _sprintf *****************
  1646 ;; Defined at:
  1647 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  sp              1    wreg     PTR unsigned char 
  1650 ;;		 -> volt(16), 
  1651 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1652 ;;		 -> STR_2(6), 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  sp              1   22[BANK1 ] PTR unsigned char 
  1655 ;;		 -> volt(16), 
  1656 ;;  fval            4   25[BANK1 ] PTR unsigned char 
  1657 ;;  tmpval          4   18[BANK1 ] struct .
  1658 ;;  val             4   12[BANK1 ] unsigned long 
  1659 ;;  prec            2   23[BANK1 ] int 
  1660 ;;  eexp            2   16[BANK1 ] int 
  1661 ;;  flag            2   10[BANK1 ] unsigned short 
  1662 ;;  cp              2    0        PTR const unsigned char 
  1663 ;;  len             2    0        unsigned int 
  1664 ;;  width           2    0        int 
  1665 ;;  c               1   29[BANK1 ] unsigned char 
  1666 ;;  ap              1    9[BANK1 ] PTR void [1]
  1667 ;;		 -> ?_sprintf(2), 
  1668 ;;  d               1    0        unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  2   74[BANK0 ] int 
  1671 ;; Registers used:
  1672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       5       0       0       0
  1679 ;;      Locals:         0       0      25       0       0
  1680 ;;      Temps:          0       0       5       0       0
  1681 ;;      Totals:         0       5      30       0       0
  1682 ;;Total ram usage:       35 bytes
  1683 ;; Hardware stack levels used: 1
  1684 ;; Hardware stack levels required when called: 3
  1685 ;; This function calls:
  1686 ;;		___awdiv
  1687 ;;		___fladd
  1688 ;;		___fleq
  1689 ;;		___flge
  1690 ;;		___flmul
  1691 ;;		___flneg
  1692 ;;		___flsub
  1693 ;;		___fltol
  1694 ;;		___lldiv
  1695 ;;		___llmod
  1696 ;;		___wmul
  1697 ;;		___xxtofl
  1698 ;;		__div_to_l_
  1699 ;;		__tdiv_to_l_
  1700 ;;		_fround
  1701 ;;		_isdigit
  1702 ;;		_scale
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708     0199                     _sprintf:	
  1709                           ;psect for function _sprintf
  1710                           
  1711                           
  1712                           ;incstack = 0
  1713                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1714                           ;sprintf@sp stored from wreg
  1715     0199  1683               	bsf	3,5	;RP0=1, select bank1
  1716     019A  1303               	bcf	3,6	;RP1=0, select bank1
  1717     019B  00B6               	movwf	sprintf@sp^(0+128)
  1718     019C                     l3216:
  1719                           
  1720                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1721     019C  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1722     019D  00A9               	movwf	sprintf@ap^(0+128)
  1723                           
  1724                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1725     019E  2FD4               	goto	l3416
  1726     019F                     l3218:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1729     019F  3025               	movlw	37
  1730     01A0  063D               	xorwf	sprintf@c^(0+128),w
  1731     01A1  1903               	btfsc	3,2
  1732     01A2  29A4               	goto	u5271
  1733     01A3  29A5               	goto	u5270
  1734     01A4                     u5271:
  1735     01A4  29AF               	goto	l3224
  1736     01A5                     u5270:
  1737     01A5                     l3220:
  1738                           
  1739                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1740     01A5  0836               	movf	sprintf@sp^(0+128),w
  1741     01A6  0084               	movwf	4
  1742     01A7  083D               	movf	sprintf@c^(0+128),w
  1743     01A8  1383               	bcf	3,7	;select IRP bank0
  1744     01A9  0080               	movwf	0
  1745     01AA                     l3222:
  1746     01AA  3001               	movlw	1
  1747     01AB  00FF               	movwf	btemp+1
  1748     01AC  087F               	movf	btemp+1,w
  1749     01AD  07B6               	addwf	sprintf@sp^(0+128),f
  1750                           
  1751                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1752     01AE  2FD4               	goto	l3416
  1753     01AF                     l3224:
  1754                           
  1755                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1756     01AF  01AA               	clrf	sprintf@flag^(0+128)
  1757     01B0  01AB               	clrf	(sprintf@flag+1)^(0+128)
  1758     01B1                     l3226:
  1759                           
  1760                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1761     01B1  1283               	bcf	3,5	;RP0=0, select bank0
  1762     01B2  1303               	bcf	3,6	;RP1=0, select bank0
  1763     01B3  086A               	movf	sprintf@f,w
  1764     01B4  0084               	movwf	4
  1765     01B5  160A  118A  200A  120A  118A  	fcall	stringdir
  1766     01BA  3A2E               	xorlw	46
  1767     01BB  1D03               	skipz
  1768     01BC  29BE               	goto	u5281
  1769     01BD  29BF               	goto	u5280
  1770     01BE                     u5281:
  1771     01BE  2A11               	goto	l3242
  1772     01BF                     u5280:
  1773     01BF                     l3228:
  1774                           
  1775                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1776     01BF  1683               	bsf	3,5	;RP0=1, select bank1
  1777     01C0  1303               	bcf	3,6	;RP1=0, select bank1
  1778     01C1  172B               	bsf	(sprintf@flag^(0+128)+1),6
  1779     01C2                     l3230:
  1780                           
  1781                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 630:    f++;
  1782     01C2  3001               	movlw	1
  1783     01C3  00FF               	movwf	btemp+1
  1784     01C4  087F               	movf	btemp+1,w
  1785     01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1786     01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1787     01C7  07EA               	addwf	sprintf@f,f
  1788     01C8                     l3232:
  1789                           
  1790                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1791     01C8  1683               	bsf	3,5	;RP0=1, select bank1
  1792     01C9  1303               	bcf	3,6	;RP1=0, select bank1
  1793     01CA  01B7               	clrf	sprintf@prec^(0+128)
  1794     01CB  01B8               	clrf	(sprintf@prec+1)^(0+128)
  1795                           
  1796                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1797     01CC  29FF               	goto	l3240
  1798     01CD                     l3234:
  1799                           
  1800                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1801     01CD  300A               	movlw	10
  1802     01CE  00F0               	movwf	___wmul@multiplier
  1803     01CF  3000               	movlw	0
  1804     01D0  00F1               	movwf	___wmul@multiplier+1
  1805     01D1  1683               	bsf	3,5	;RP0=1, select bank1
  1806     01D2  1303               	bcf	3,6	;RP1=0, select bank1
  1807     01D3  0838               	movf	(sprintf@prec+1)^(0+128),w
  1808     01D4  00F3               	movwf	___wmul@multiplicand+1
  1809     01D5  0837               	movf	sprintf@prec^(0+128),w
  1810     01D6  00F2               	movwf	___wmul@multiplicand
  1811     01D7  160A  158A  25D5  120A  118A  	fcall	___wmul
  1812     01DC  0871               	movf	?___wmul+1,w
  1813     01DD  1683               	bsf	3,5	;RP0=1, select bank1
  1814     01DE  1303               	bcf	3,6	;RP1=0, select bank1
  1815     01DF  00B8               	movwf	(sprintf@prec+1)^(0+128)
  1816     01E0  0870               	movf	?___wmul,w
  1817     01E1  00B7               	movwf	sprintf@prec^(0+128)
  1818     01E2                     l3236:
  1819                           
  1820                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1821     01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1822     01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1823     01E4  086A               	movf	sprintf@f,w
  1824     01E5  0084               	movwf	4
  1825     01E6  160A  118A  200A  120A  118A  	fcall	stringdir
  1826     01EB  3ED0               	addlw	208
  1827     01EC  1683               	bsf	3,5	;RP0=1, select bank1
  1828     01ED  1303               	bcf	3,6	;RP1=0, select bank1
  1829     01EE  00A0               	movwf	??_sprintf^(0+128)
  1830     01EF  30FF               	movlw	255
  1831     01F0  1803               	skipnc
  1832     01F1  3000               	movlw	0
  1833     01F2  00A1               	movwf	(??_sprintf^(0+128)+1)
  1834     01F3  0820               	movf	??_sprintf^(0+128),w
  1835     01F4  07B7               	addwf	sprintf@prec^(0+128),f
  1836     01F5  1803               	skipnc
  1837     01F6  0AB8               	incf	(sprintf@prec+1)^(0+128),f
  1838     01F7  0821               	movf	(??_sprintf+1)^(0+128),w
  1839     01F8  07B8               	addwf	(sprintf@prec+1)^(0+128),f
  1840     01F9                     l3238:
  1841     01F9  3001               	movlw	1
  1842     01FA  00FF               	movwf	btemp+1
  1843     01FB  087F               	movf	btemp+1,w
  1844     01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1845     01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1846     01FE  07EA               	addwf	sprintf@f,f
  1847     01FF                     l3240:
  1848                           
  1849                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1850     01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1851     0200  086A               	movf	sprintf@f,w
  1852     0201  0084               	movwf	4
  1853     0202  160A  118A  200A  120A  118A  	fcall	stringdir
  1854     0207  160A  158A  2539  120A  118A  	fcall	_isdigit
  1855     020C  1803               	btfsc	3,0
  1856     020D  2A0F               	goto	u5291
  1857     020E  2A10               	goto	u5290
  1858     020F                     u5291:
  1859     020F  29CD               	goto	l3234
  1860     0210                     u5290:
  1861     0210  2A19               	goto	l3248
  1862     0211                     l3242:
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1865     0211  1683               	bsf	3,5	;RP0=1, select bank1
  1866     0212  1303               	bcf	3,6	;RP1=0, select bank1
  1867     0213  01B7               	clrf	sprintf@prec^(0+128)
  1868     0214  01B8               	clrf	(sprintf@prec+1)^(0+128)
  1869     0215                     l3244:
  1870                           
  1871                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1872     0215  162B               	bsf	(sprintf@flag^(0+128)+1),4
  1873     0216  2A19               	goto	l3248
  1874     0217                     l310:	
  1875                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1876                           
  1877                           
  1878                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1879     0217  152B               	bsf	(sprintf@flag^(0+128)+1),2
  1880                           
  1881                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 690:    break;
  1882     0218  2A37               	goto	l3250
  1883     0219                     l3248:
  1884     0219  3001               	movlw	1
  1885     021A  1283               	bcf	3,5	;RP0=0, select bank0
  1886     021B  1303               	bcf	3,6	;RP1=0, select bank0
  1887     021C  07EA               	addwf	sprintf@f,f
  1888     021D  30FF               	movlw	-1
  1889     021E  076A               	addwf	sprintf@f,w
  1890     021F  0084               	movwf	4
  1891     0220  160A  118A  200A  120A  118A  	fcall	stringdir
  1892     0225  1683               	bsf	3,5	;RP0=1, select bank1
  1893     0226  1303               	bcf	3,6	;RP1=0, select bank1
  1894     0227  00BD               	movwf	sprintf@c^(0+128)
  1895     0228  00A0               	movwf	??_sprintf^(0+128)
  1896     0229  01A1               	clrf	(??_sprintf^(0+128)+1)
  1897                           
  1898                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1899                           ; Switch size 1, requested type "simple"
  1900                           ; Number of cases is 1, Range of values is 0 to 0
  1901                           ; switch strategies available:
  1902                           ; Name         Instructions Cycles
  1903                           ; simple_byte            4     3 (average)
  1904                           ; direct_byte           11     8 (fixed)
  1905                           ; jumptable            260     6 (fixed)
  1906                           ;	Chosen strategy is simple_byte
  1907     022A  0821               	movf	(??_sprintf+1)^(0+128),w
  1908     022B  3A00               	xorlw	0	; case 0
  1909     022C  1903               	skipnz
  1910     022D  2A2F               	goto	l3504
  1911     022E  2FD4               	goto	l3416
  1912     022F                     l3504:
  1913                           
  1914                           ; Switch size 1, requested type "simple"
  1915                           ; Number of cases is 2, Range of values is 0 to 102
  1916                           ; switch strategies available:
  1917                           ; Name         Instructions Cycles
  1918                           ; simple_byte            7     4 (average)
  1919                           ; jumptable            260     6 (fixed)
  1920                           ;	Chosen strategy is simple_byte
  1921     022F  0820               	movf	??_sprintf^(0+128),w
  1922     0230  3A00               	xorlw	0	; case 0
  1923     0231  1903               	skipnz
  1924     0232  2FE8               	goto	l3418
  1925     0233  3A66               	xorlw	102	; case 102
  1926     0234  1903               	skipnz
  1927     0235  2A17               	goto	l310
  1928     0236  2FD4               	goto	l3416
  1929     0237                     l3250:
  1930                           
  1931                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1932     0237  3000               	movlw	0
  1933     0238  052A               	andwf	sprintf@flag^(0+128),w
  1934     0239  00A0               	movwf	??_sprintf^(0+128)
  1935     023A  3007               	movlw	7
  1936     023B  052B               	andwf	(sprintf@flag+1)^(0+128),w
  1937     023C  00A1               	movwf	(??_sprintf+1)^(0+128)
  1938     023D  0820               	movf	??_sprintf^(0+128),w
  1939     023E  0421               	iorwf	(??_sprintf^(0+128)+1),w
  1940     023F  1903               	btfsc	3,2
  1941     0240  2A42               	goto	u5301
  1942     0241  2A43               	goto	u5300
  1943     0242                     u5301:
  1944     0242  2F91               	goto	l3398
  1945     0243                     u5300:
  1946     0243                     l3252:
  1947                           
  1948                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1949     0243  1E2B               	btfss	(sprintf@flag+1)^(0+128),4
  1950     0244  2A46               	goto	u5311
  1951     0245  2A47               	goto	u5310
  1952     0246                     u5311:
  1953     0246  2A4B               	goto	l3256
  1954     0247                     u5310:
  1955     0247                     l3254:
  1956                           
  1957                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1958     0247  3006               	movlw	6
  1959     0248  00B7               	movwf	sprintf@prec^(0+128)
  1960     0249  3000               	movlw	0
  1961     024A  00B8               	movwf	(sprintf@prec^(0+128)+1)
  1962     024B                     l3256:
  1963                           
  1964                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1965     024B  0829               	movf	sprintf@ap^(0+128),w
  1966     024C  0084               	movwf	4
  1967     024D  1383               	bcf	3,7	;select IRP bank0
  1968     024E  0800               	movf	0,w
  1969     024F  00B9               	movwf	sprintf@fval^(0+128)
  1970     0250  0A84               	incf	4,f
  1971     0251  0800               	movf	0,w
  1972     0252  00BA               	movwf	(sprintf@fval+1)^(0+128)
  1973     0253  0A84               	incf	4,f
  1974     0254  0800               	movf	0,w
  1975     0255  00BB               	movwf	(sprintf@fval+2)^(0+128)
  1976     0256  0A84               	incf	4,f
  1977     0257  0800               	movf	0,w
  1978     0258  00BC               	movwf	(sprintf@fval+3)^(0+128)
  1979     0259                     l3258:
  1980     0259  3004               	movlw	4
  1981     025A  00FF               	movwf	btemp+1
  1982     025B  087F               	movf	btemp+1,w
  1983     025C  07A9               	addwf	sprintf@ap^(0+128),f
  1984     025D                     l3260:
  1985                           
  1986                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1987     025D  083C               	movf	(sprintf@fval+3)^(0+128),w
  1988     025E  00F3               	movwf	___flge@ff1+3
  1989     025F  083B               	movf	(sprintf@fval+2)^(0+128),w
  1990     0260  00F2               	movwf	___flge@ff1+2
  1991     0261  083A               	movf	(sprintf@fval+1)^(0+128),w
  1992     0262  00F1               	movwf	___flge@ff1+1
  1993     0263  0839               	movf	sprintf@fval^(0+128),w
  1994     0264  00F0               	movwf	___flge@ff1
  1995     0265  3000               	movlw	0
  1996     0266  00F7               	movwf	___flge@ff2+3
  1997     0267  3000               	movlw	0
  1998     0268  00F6               	movwf	___flge@ff2+2
  1999     0269  3000               	movlw	0
  2000     026A  00F5               	movwf	___flge@ff2+1
  2001     026B  3000               	movlw	0
  2002     026C  00F4               	movwf	___flge@ff2
  2003     026D  120A  158A  2002  120A  118A  	fcall	___flge
  2004     0272  1803               	btfsc	3,0
  2005     0273  2A75               	goto	u5321
  2006     0274  2A76               	goto	u5320
  2007     0275                     u5321:
  2008     0275  2A93               	goto	l3266
  2009     0276                     u5320:
  2010     0276                     l3262:
  2011                           
  2012                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2013     0276  1683               	bsf	3,5	;RP0=1, select bank1
  2014     0277  1303               	bcf	3,6	;RP1=0, select bank1
  2015     0278  083C               	movf	(sprintf@fval+3)^(0+128),w
  2016     0279  00F3               	movwf	___flneg@f1+3
  2017     027A  083B               	movf	(sprintf@fval+2)^(0+128),w
  2018     027B  00F2               	movwf	___flneg@f1+2
  2019     027C  083A               	movf	(sprintf@fval+1)^(0+128),w
  2020     027D  00F1               	movwf	___flneg@f1+1
  2021     027E  0839               	movf	sprintf@fval^(0+128),w
  2022     027F  00F0               	movwf	___flneg@f1
  2023     0280  160A  158A  2521  120A  118A  	fcall	___flneg
  2024     0285  0873               	movf	?___flneg+3,w
  2025     0286  1683               	bsf	3,5	;RP0=1, select bank1
  2026     0287  1303               	bcf	3,6	;RP1=0, select bank1
  2027     0288  00BC               	movwf	(sprintf@fval+3)^(0+128)
  2028     0289  0872               	movf	?___flneg+2,w
  2029     028A  00BB               	movwf	(sprintf@fval+2)^(0+128)
  2030     028B  0871               	movf	?___flneg+1,w
  2031     028C  00BA               	movwf	(sprintf@fval+1)^(0+128)
  2032     028D  0870               	movf	?___flneg,w
  2033     028E  00B9               	movwf	sprintf@fval^(0+128)
  2034     028F                     l3264:
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2037     028F  3003               	movlw	3
  2038     0290  04AA               	iorwf	sprintf@flag^(0+128),f
  2039     0291  3000               	movlw	0
  2040     0292  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
  2041     0293                     l3266:
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2044     0293  1683               	bsf	3,5	;RP0=1, select bank1
  2045     0294  1303               	bcf	3,6	;RP1=0, select bank1
  2046     0295  01B0               	clrf	sprintf@eexp^(0+128)
  2047     0296  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  2048     0297                     l3268:
  2049                           
  2050                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2051     0297  083C               	movf	(sprintf@fval+3)^(0+128),w
  2052     0298  00F3               	movwf	___fleq@ff1+3
  2053     0299  083B               	movf	(sprintf@fval+2)^(0+128),w
  2054     029A  00F2               	movwf	___fleq@ff1+2
  2055     029B  083A               	movf	(sprintf@fval+1)^(0+128),w
  2056     029C  00F1               	movwf	___fleq@ff1+1
  2057     029D  0839               	movf	sprintf@fval^(0+128),w
  2058     029E  00F0               	movwf	___fleq@ff1
  2059     029F  3000               	movlw	0
  2060     02A0  00F7               	movwf	___fleq@ff2+3
  2061     02A1  3000               	movlw	0
  2062     02A2  00F6               	movwf	___fleq@ff2+2
  2063     02A3  3000               	movlw	0
  2064     02A4  00F5               	movwf	___fleq@ff2+1
  2065     02A5  3000               	movlw	0
  2066     02A6  00F4               	movwf	___fleq@ff2
  2067     02A7  160A  158A  270D  120A  118A  	fcall	___fleq
  2068     02AC  1803               	btfsc	3,0
  2069     02AD  2AAF               	goto	u5331
  2070     02AE  2AB0               	goto	u5330
  2071     02AF                     u5331:
  2072     02AF  2BA0               	goto	l3294
  2073     02B0                     u5330:
  2074     02B0                     l3270:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2077     02B0  1003               	clrc
  2078     02B1  1683               	bsf	3,5	;RP0=1, select bank1
  2079     02B2  1303               	bcf	3,6	;RP1=0, select bank1
  2080     02B3  0D3B               	rlf	(sprintf@fval+2)^(0+128),w
  2081     02B4  0D3C               	rlf	(sprintf@fval+3)^(0+128),w
  2082     02B5  3E82               	addlw	130
  2083     02B6  00B0               	movwf	sprintf@eexp^(0+128)
  2084     02B7  30FF               	movlw	255
  2085     02B8  1803               	skipnc
  2086     02B9  3000               	movlw	0
  2087     02BA  00B1               	movwf	(sprintf@eexp^(0+128)+1)
  2088     02BB                     l3272:
  2089                           
  2090                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2091     02BB  30FF               	movlw	255
  2092     02BC  07B0               	addwf	sprintf@eexp^(0+128),f
  2093     02BD  1803               	skipnc
  2094     02BE  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2095     02BF  30FF               	movlw	255
  2096     02C0  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2097     02C1                     l3274:
  2098                           
  2099                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2100     02C1  3003               	movlw	3
  2101     02C2  00F0               	movwf	___wmul@multiplier
  2102     02C3  3000               	movlw	0
  2103     02C4  00F1               	movwf	___wmul@multiplier+1
  2104     02C5  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2105     02C6  00F3               	movwf	___wmul@multiplicand+1
  2106     02C7  0830               	movf	sprintf@eexp^(0+128),w
  2107     02C8  00F2               	movwf	___wmul@multiplicand
  2108     02C9  160A  158A  25D5  120A  118A  	fcall	___wmul
  2109     02CE  0871               	movf	?___wmul+1,w
  2110     02CF  1683               	bsf	3,5	;RP0=1, select bank1
  2111     02D0  1303               	bcf	3,6	;RP1=0, select bank1
  2112     02D1  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2113     02D2  0870               	movf	?___wmul,w
  2114     02D3  00B0               	movwf	sprintf@eexp^(0+128)
  2115     02D4                     l3276:
  2116                           
  2117                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2118     02D4  300A               	movlw	10
  2119     02D5  00F6               	movwf	___awdiv@divisor
  2120     02D6  3000               	movlw	0
  2121     02D7  00F7               	movwf	___awdiv@divisor+1
  2122     02D8  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2123     02D9  00F9               	movwf	___awdiv@dividend+1
  2124     02DA  0830               	movf	sprintf@eexp^(0+128),w
  2125     02DB  00F8               	movwf	___awdiv@dividend
  2126     02DC  160A  118A  2207  120A  118A  	fcall	___awdiv
  2127     02E1  0877               	movf	?___awdiv+1,w
  2128     02E2  1683               	bsf	3,5	;RP0=1, select bank1
  2129     02E3  1303               	bcf	3,6	;RP1=0, select bank1
  2130     02E4  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  2131     02E5  0876               	movf	?___awdiv,w
  2132     02E6  00B0               	movwf	sprintf@eexp^(0+128)
  2133     02E7                     l3278:
  2134                           
  2135                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2136     02E7  1FB1               	btfss	(sprintf@eexp+1)^(0+128),7
  2137     02E8  2AEA               	goto	u5341
  2138     02E9  2AEB               	goto	u5340
  2139     02EA                     u5341:
  2140     02EA  2AF1               	goto	l3282
  2141     02EB                     u5340:
  2142     02EB                     l3280:
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2145     02EB  30FF               	movlw	255
  2146     02EC  07B0               	addwf	sprintf@eexp^(0+128),f
  2147     02ED  1803               	skipnc
  2148     02EE  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2149     02EF  30FF               	movlw	255
  2150     02F0  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2151     02F1                     l3282:
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2154     02F1  0330               	decf	sprintf@eexp^(0+128),w
  2155     02F2  3AFF               	xorlw	255
  2156     02F3  120A  158A  24A1  120A  118A  	fcall	_scale
  2157     02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2158     02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2159     02FA  083D               	movf	?_scale+3,w
  2160     02FB  1683               	bsf	3,5	;RP0=1, select bank1
  2161     02FC  1303               	bcf	3,6	;RP1=0, select bank1
  2162     02FD  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  2163     02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2164     02FF  1303               	bcf	3,6	;RP1=0, select bank0
  2165     0300  083C               	movf	?_scale+2,w
  2166     0301  1683               	bsf	3,5	;RP0=1, select bank1
  2167     0302  1303               	bcf	3,6	;RP1=0, select bank1
  2168     0303  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  2169     0304  1283               	bcf	3,5	;RP0=0, select bank0
  2170     0305  1303               	bcf	3,6	;RP1=0, select bank0
  2171     0306  083B               	movf	?_scale+1,w
  2172     0307  1683               	bsf	3,5	;RP0=1, select bank1
  2173     0308  1303               	bcf	3,6	;RP1=0, select bank1
  2174     0309  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  2175     030A  1283               	bcf	3,5	;RP0=0, select bank0
  2176     030B  1303               	bcf	3,6	;RP1=0, select bank0
  2177     030C  083A               	movf	?_scale,w
  2178     030D  1683               	bsf	3,5	;RP0=1, select bank1
  2179     030E  1303               	bcf	3,6	;RP1=0, select bank1
  2180     030F  00B2               	movwf	sprintf@tmpval^(0+128)
  2181     0310                     l3284:
  2182                           
  2183                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2184     0310  083C               	movf	(sprintf@fval+3)^(0+128),w
  2185     0311  1283               	bcf	3,5	;RP0=0, select bank0
  2186     0312  1303               	bcf	3,6	;RP1=0, select bank0
  2187     0313  00A3               	movwf	___flmul@b+3
  2188     0314  1683               	bsf	3,5	;RP0=1, select bank1
  2189     0315  1303               	bcf	3,6	;RP1=0, select bank1
  2190     0316  083B               	movf	(sprintf@fval+2)^(0+128),w
  2191     0317  1283               	bcf	3,5	;RP0=0, select bank0
  2192     0318  1303               	bcf	3,6	;RP1=0, select bank0
  2193     0319  00A2               	movwf	___flmul@b+2
  2194     031A  1683               	bsf	3,5	;RP0=1, select bank1
  2195     031B  1303               	bcf	3,6	;RP1=0, select bank1
  2196     031C  083A               	movf	(sprintf@fval+1)^(0+128),w
  2197     031D  1283               	bcf	3,5	;RP0=0, select bank0
  2198     031E  1303               	bcf	3,6	;RP1=0, select bank0
  2199     031F  00A1               	movwf	___flmul@b+1
  2200     0320  1683               	bsf	3,5	;RP0=1, select bank1
  2201     0321  1303               	bcf	3,6	;RP1=0, select bank1
  2202     0322  0839               	movf	sprintf@fval^(0+128),w
  2203     0323  1283               	bcf	3,5	;RP0=0, select bank0
  2204     0324  1303               	bcf	3,6	;RP1=0, select bank0
  2205     0325  00A0               	movwf	___flmul@b
  2206     0326  1683               	bsf	3,5	;RP0=1, select bank1
  2207     0327  1303               	bcf	3,6	;RP1=0, select bank1
  2208     0328  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  2209     0329  1283               	bcf	3,5	;RP0=0, select bank0
  2210     032A  1303               	bcf	3,6	;RP1=0, select bank0
  2211     032B  00A7               	movwf	___flmul@a+3
  2212     032C  1683               	bsf	3,5	;RP0=1, select bank1
  2213     032D  1303               	bcf	3,6	;RP1=0, select bank1
  2214     032E  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  2215     032F  1283               	bcf	3,5	;RP0=0, select bank0
  2216     0330  1303               	bcf	3,6	;RP1=0, select bank0
  2217     0331  00A6               	movwf	___flmul@a+2
  2218     0332  1683               	bsf	3,5	;RP0=1, select bank1
  2219     0333  1303               	bcf	3,6	;RP1=0, select bank1
  2220     0334  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  2221     0335  1283               	bcf	3,5	;RP0=0, select bank0
  2222     0336  1303               	bcf	3,6	;RP1=0, select bank0
  2223     0337  00A5               	movwf	___flmul@a+1
  2224     0338  1683               	bsf	3,5	;RP0=1, select bank1
  2225     0339  1303               	bcf	3,6	;RP1=0, select bank1
  2226     033A  0832               	movf	sprintf@tmpval^(0+128),w
  2227     033B  1283               	bcf	3,5	;RP0=0, select bank0
  2228     033C  1303               	bcf	3,6	;RP1=0, select bank0
  2229     033D  00A4               	movwf	___flmul@a
  2230     033E  120A  158A  215C  120A  118A  	fcall	___flmul
  2231     0343  1283               	bcf	3,5	;RP0=0, select bank0
  2232     0344  1303               	bcf	3,6	;RP1=0, select bank0
  2233     0345  0823               	movf	?___flmul+3,w
  2234     0346  1683               	bsf	3,5	;RP0=1, select bank1
  2235     0347  1303               	bcf	3,6	;RP1=0, select bank1
  2236     0348  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  2237     0349  1283               	bcf	3,5	;RP0=0, select bank0
  2238     034A  1303               	bcf	3,6	;RP1=0, select bank0
  2239     034B  0822               	movf	?___flmul+2,w
  2240     034C  1683               	bsf	3,5	;RP0=1, select bank1
  2241     034D  1303               	bcf	3,6	;RP1=0, select bank1
  2242     034E  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  2243     034F  1283               	bcf	3,5	;RP0=0, select bank0
  2244     0350  1303               	bcf	3,6	;RP1=0, select bank0
  2245     0351  0821               	movf	?___flmul+1,w
  2246     0352  1683               	bsf	3,5	;RP0=1, select bank1
  2247     0353  1303               	bcf	3,6	;RP1=0, select bank1
  2248     0354  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  2249     0355  1283               	bcf	3,5	;RP0=0, select bank0
  2250     0356  1303               	bcf	3,6	;RP1=0, select bank0
  2251     0357  0820               	movf	?___flmul,w
  2252     0358  1683               	bsf	3,5	;RP0=1, select bank1
  2253     0359  1303               	bcf	3,6	;RP1=0, select bank1
  2254     035A  00B2               	movwf	sprintf@tmpval^(0+128)
  2255     035B                     l3286:
  2256                           
  2257                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2258     035B  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  2259     035C  00F3               	movwf	___flge@ff1+3
  2260     035D  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  2261     035E  00F2               	movwf	___flge@ff1+2
  2262     035F  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  2263     0360  00F1               	movwf	___flge@ff1+1
  2264     0361  0832               	movf	sprintf@tmpval^(0+128),w
  2265     0362  00F0               	movwf	___flge@ff1
  2266     0363  303F               	movlw	63
  2267     0364  00F7               	movwf	___flge@ff2+3
  2268     0365  3080               	movlw	128
  2269     0366  00F6               	movwf	___flge@ff2+2
  2270     0367  3000               	movlw	0
  2271     0368  00F5               	movwf	___flge@ff2+1
  2272     0369  3000               	movlw	0
  2273     036A  00F4               	movwf	___flge@ff2
  2274     036B  120A  158A  2002  120A  118A  	fcall	___flge
  2275     0370  1803               	btfsc	3,0
  2276     0371  2B73               	goto	u5351
  2277     0372  2B74               	goto	u5350
  2278     0373                     u5351:
  2279     0373  2B7D               	goto	l3290
  2280     0374                     u5350:
  2281     0374                     l3288:
  2282                           
  2283                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2284     0374  30FF               	movlw	255
  2285     0375  1683               	bsf	3,5	;RP0=1, select bank1
  2286     0376  1303               	bcf	3,6	;RP1=0, select bank1
  2287     0377  07B0               	addwf	sprintf@eexp^(0+128),f
  2288     0378  1803               	skipnc
  2289     0379  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2290     037A  30FF               	movlw	255
  2291     037B  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2292     037C  2BA0               	goto	l3294
  2293     037D                     l3290:
  2294     037D  1683               	bsf	3,5	;RP0=1, select bank1
  2295     037E  1303               	bcf	3,6	;RP1=0, select bank1
  2296     037F  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  2297     0380  00F3               	movwf	___flge@ff1+3
  2298     0381  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  2299     0382  00F2               	movwf	___flge@ff1+2
  2300     0383  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  2301     0384  00F1               	movwf	___flge@ff1+1
  2302     0385  0832               	movf	sprintf@tmpval^(0+128),w
  2303     0386  00F0               	movwf	___flge@ff1
  2304     0387  3041               	movlw	65
  2305     0388  00F7               	movwf	___flge@ff2+3
  2306     0389  3020               	movlw	32
  2307     038A  00F6               	movwf	___flge@ff2+2
  2308     038B  3000               	movlw	0
  2309     038C  00F5               	movwf	___flge@ff2+1
  2310     038D  3000               	movlw	0
  2311     038E  00F4               	movwf	___flge@ff2
  2312     038F  120A  158A  2002  120A  118A  	fcall	___flge
  2313     0394  1C03               	btfss	3,0
  2314     0395  2B97               	goto	u5361
  2315     0396  2B98               	goto	u5360
  2316     0397                     u5361:
  2317     0397  2BA0               	goto	l3294
  2318     0398                     u5360:
  2319     0398                     l3292:
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2322     0398  3001               	movlw	1
  2323     0399  1683               	bsf	3,5	;RP0=1, select bank1
  2324     039A  1303               	bcf	3,6	;RP1=0, select bank1
  2325     039B  07B0               	addwf	sprintf@eexp^(0+128),f
  2326     039C  1803               	skipnc
  2327     039D  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2328     039E  3000               	movlw	0
  2329     039F  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2330     03A0                     l3294:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2333     03A0  1683               	bsf	3,5	;RP0=1, select bank1
  2334     03A1  1303               	bcf	3,6	;RP1=0, select bank1
  2335     03A2  0838               	movf	(sprintf@prec+1)^(0+128),w
  2336     03A3  3A80               	xorlw	128
  2337     03A4  00FF               	movwf	btemp+1
  2338     03A5  3080               	movlw	128
  2339     03A6  027F               	subwf	btemp+1,w
  2340     03A7  1D03               	skipz
  2341     03A8  2BAB               	goto	u5375
  2342     03A9  300D               	movlw	13
  2343     03AA  0237               	subwf	sprintf@prec^(0+128),w
  2344     03AB                     u5375:
  2345     03AB  1803               	skipnc
  2346     03AC  2BAE               	goto	u5371
  2347     03AD  2BAF               	goto	u5370
  2348     03AE                     u5371:
  2349     03AE  2BF6               	goto	l3298
  2350     03AF                     u5370:
  2351     03AF                     l3296:
  2352                           
  2353                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2354     03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2355     03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2356     03B1  0837               	movf	sprintf@prec^(0+128),w
  2357     03B2  160A  118A  239D  120A  118A  	fcall	_fround
  2358     03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2359     03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2360     03B9  083D               	movf	?_fround+3,w
  2361     03BA  00D1               	movwf	___fladd@b+3
  2362     03BB  083C               	movf	?_fround+2,w
  2363     03BC  00D0               	movwf	___fladd@b+2
  2364     03BD  083B               	movf	?_fround+1,w
  2365     03BE  00CF               	movwf	___fladd@b+1
  2366     03BF  083A               	movf	?_fround,w
  2367     03C0  00CE               	movwf	___fladd@b
  2368     03C1  1683               	bsf	3,5	;RP0=1, select bank1
  2369     03C2  1303               	bcf	3,6	;RP1=0, select bank1
  2370     03C3  083C               	movf	(sprintf@fval+3)^(0+128),w
  2371     03C4  1283               	bcf	3,5	;RP0=0, select bank0
  2372     03C5  1303               	bcf	3,6	;RP1=0, select bank0
  2373     03C6  00D5               	movwf	___fladd@a+3
  2374     03C7  1683               	bsf	3,5	;RP0=1, select bank1
  2375     03C8  1303               	bcf	3,6	;RP1=0, select bank1
  2376     03C9  083B               	movf	(sprintf@fval+2)^(0+128),w
  2377     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  2378     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  2379     03CC  00D4               	movwf	___fladd@a+2
  2380     03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2381     03CE  1303               	bcf	3,6	;RP1=0, select bank1
  2382     03CF  083A               	movf	(sprintf@fval+1)^(0+128),w
  2383     03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2384     03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2385     03D2  00D3               	movwf	___fladd@a+1
  2386     03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2387     03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2388     03D5  0839               	movf	sprintf@fval^(0+128),w
  2389     03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2390     03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2391     03D8  00D2               	movwf	___fladd@a
  2392     03D9  160A  118A  25A8  120A  118A  	fcall	___fladd
  2393     03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2394     03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2395     03E0  0851               	movf	?___fladd+3,w
  2396     03E1  1683               	bsf	3,5	;RP0=1, select bank1
  2397     03E2  1303               	bcf	3,6	;RP1=0, select bank1
  2398     03E3  00BC               	movwf	(sprintf@fval+3)^(0+128)
  2399     03E4  1283               	bcf	3,5	;RP0=0, select bank0
  2400     03E5  1303               	bcf	3,6	;RP1=0, select bank0
  2401     03E6  0850               	movf	?___fladd+2,w
  2402     03E7  1683               	bsf	3,5	;RP0=1, select bank1
  2403     03E8  1303               	bcf	3,6	;RP1=0, select bank1
  2404     03E9  00BB               	movwf	(sprintf@fval+2)^(0+128)
  2405     03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2406     03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2407     03EC  084F               	movf	?___fladd+1,w
  2408     03ED  1683               	bsf	3,5	;RP0=1, select bank1
  2409     03EE  1303               	bcf	3,6	;RP1=0, select bank1
  2410     03EF  00BA               	movwf	(sprintf@fval+1)^(0+128)
  2411     03F0  1283               	bcf	3,5	;RP0=0, select bank0
  2412     03F1  1303               	bcf	3,6	;RP1=0, select bank0
  2413     03F2  084E               	movf	?___fladd,w
  2414     03F3  1683               	bsf	3,5	;RP0=1, select bank1
  2415     03F4  1303               	bcf	3,6	;RP1=0, select bank1
  2416     03F5  00B9               	movwf	sprintf@fval^(0+128)
  2417     03F6                     l3298:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2420     03F6  1683               	bsf	3,5	;RP0=1, select bank1
  2421     03F7  1303               	bcf	3,6	;RP1=0, select bank1
  2422     03F8  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2423     03F9  3A80               	xorlw	128
  2424     03FA  00FF               	movwf	btemp+1
  2425     03FB  3080               	movlw	128
  2426     03FC  027F               	subwf	btemp+1,w
  2427     03FD  1D03               	skipz
  2428     03FE  2C01               	goto	u5385
  2429     03FF  300A               	movlw	10
  2430     0400  0230               	subwf	sprintf@eexp^(0+128),w
  2431     0401                     u5385:
  2432     0401  1803               	skipnc
  2433     0402  2C04               	goto	u5381
  2434     0403  2C05               	goto	u5380
  2435     0404                     u5381:
  2436     0404  2C56               	goto	l3306
  2437     0405                     u5380:
  2438     0405                     l3300:
  2439     0405  1683               	bsf	3,5	;RP0=1, select bank1
  2440     0406  1303               	bcf	3,6	;RP1=0, select bank1
  2441     0407  083C               	movf	(sprintf@fval+3)^(0+128),w
  2442     0408  00F3               	movwf	___fleq@ff1+3
  2443     0409  083B               	movf	(sprintf@fval+2)^(0+128),w
  2444     040A  00F2               	movwf	___fleq@ff1+2
  2445     040B  083A               	movf	(sprintf@fval+1)^(0+128),w
  2446     040C  00F1               	movwf	___fleq@ff1+1
  2447     040D  0839               	movf	sprintf@fval^(0+128),w
  2448     040E  00F0               	movwf	___fleq@ff1
  2449     040F  3000               	movlw	0
  2450     0410  00F7               	movwf	___fleq@ff2+3
  2451     0411  3000               	movlw	0
  2452     0412  00F6               	movwf	___fleq@ff2+2
  2453     0413  3000               	movlw	0
  2454     0414  00F5               	movwf	___fleq@ff2+1
  2455     0415  3000               	movlw	0
  2456     0416  00F4               	movwf	___fleq@ff2
  2457     0417  160A  158A  270D  120A  118A  	fcall	___fleq
  2458     041C  1803               	btfsc	3,0
  2459     041D  2C1F               	goto	u5391
  2460     041E  2C20               	goto	u5390
  2461     041F                     u5391:
  2462     041F  2CC8               	goto	l3320
  2463     0420                     u5390:
  2464     0420                     l3302:
  2465     0420  1683               	bsf	3,5	;RP0=1, select bank1
  2466     0421  1303               	bcf	3,6	;RP1=0, select bank1
  2467     0422  083C               	movf	(sprintf@fval+3)^(0+128),w
  2468     0423  1283               	bcf	3,5	;RP0=0, select bank0
  2469     0424  1303               	bcf	3,6	;RP1=0, select bank0
  2470     0425  00D0               	movwf	___fltol@f1+3
  2471     0426  1683               	bsf	3,5	;RP0=1, select bank1
  2472     0427  1303               	bcf	3,6	;RP1=0, select bank1
  2473     0428  083B               	movf	(sprintf@fval+2)^(0+128),w
  2474     0429  1283               	bcf	3,5	;RP0=0, select bank0
  2475     042A  1303               	bcf	3,6	;RP1=0, select bank0
  2476     042B  00CF               	movwf	___fltol@f1+2
  2477     042C  1683               	bsf	3,5	;RP0=1, select bank1
  2478     042D  1303               	bcf	3,6	;RP1=0, select bank1
  2479     042E  083A               	movf	(sprintf@fval+1)^(0+128),w
  2480     042F  1283               	bcf	3,5	;RP0=0, select bank0
  2481     0430  1303               	bcf	3,6	;RP1=0, select bank0
  2482     0431  00CE               	movwf	___fltol@f1+1
  2483     0432  1683               	bsf	3,5	;RP0=1, select bank1
  2484     0433  1303               	bcf	3,6	;RP1=0, select bank1
  2485     0434  0839               	movf	sprintf@fval^(0+128),w
  2486     0435  1283               	bcf	3,5	;RP0=0, select bank0
  2487     0436  1303               	bcf	3,6	;RP1=0, select bank0
  2488     0437  00CD               	movwf	___fltol@f1
  2489     0438  160A  118A  226E  120A  118A  	fcall	___fltol
  2490     043D  1283               	bcf	3,5	;RP0=0, select bank0
  2491     043E  1303               	bcf	3,6	;RP1=0, select bank0
  2492     043F  0850               	movf	?___fltol+3,w
  2493     0440  044F               	iorwf	?___fltol+2,w
  2494     0441  044E               	iorwf	?___fltol+1,w
  2495     0442  044D               	iorwf	?___fltol,w
  2496     0443  1D03               	skipz
  2497     0444  2C46               	goto	u5401
  2498     0445  2C47               	goto	u5400
  2499     0446                     u5401:
  2500     0446  2CC8               	goto	l3320
  2501     0447                     u5400:
  2502     0447                     l3304:
  2503     0447  1683               	bsf	3,5	;RP0=1, select bank1
  2504     0448  1303               	bcf	3,6	;RP1=0, select bank1
  2505     0449  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2506     044A  3A80               	xorlw	128
  2507     044B  00FF               	movwf	btemp+1
  2508     044C  3080               	movlw	128
  2509     044D  027F               	subwf	btemp+1,w
  2510     044E  1D03               	skipz
  2511     044F  2C52               	goto	u5415
  2512     0450  3002               	movlw	2
  2513     0451  0230               	subwf	sprintf@eexp^(0+128),w
  2514     0452                     u5415:
  2515     0452  1C03               	skipc
  2516     0453  2C55               	goto	u5411
  2517     0454  2C56               	goto	u5410
  2518     0455                     u5411:
  2519     0455  2CC8               	goto	l3320
  2520     0456                     u5410:
  2521     0456                     l3306:
  2522                           
  2523                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2524     0456  1683               	bsf	3,5	;RP0=1, select bank1
  2525     0457  1303               	bcf	3,6	;RP1=0, select bank1
  2526     0458  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  2527     0459  00F3               	movwf	___flge@ff1+3
  2528     045A  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  2529     045B  00F2               	movwf	___flge@ff1+2
  2530     045C  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  2531     045D  00F1               	movwf	___flge@ff1+1
  2532     045E  0832               	movf	sprintf@tmpval^(0+128),w
  2533     045F  00F0               	movwf	___flge@ff1
  2534     0460  3040               	movlw	64
  2535     0461  00F7               	movwf	___flge@ff2+3
  2536     0462  3089               	movlw	137
  2537     0463  00F6               	movwf	___flge@ff2+2
  2538     0464  3070               	movlw	112
  2539     0465  00F5               	movwf	___flge@ff2+1
  2540     0466  305F               	movlw	95
  2541     0467  00F4               	movwf	___flge@ff2
  2542     0468  120A  158A  2002  120A  118A  	fcall	___flge
  2543     046D  1803               	btfsc	3,0
  2544     046E  2C70               	goto	u5421
  2545     046F  2C71               	goto	u5420
  2546     0470                     u5421:
  2547     0470  2C7A               	goto	l3310
  2548     0471                     u5420:
  2549     0471                     l3308:
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2552     0471  30F7               	movlw	247
  2553     0472  1683               	bsf	3,5	;RP0=1, select bank1
  2554     0473  1303               	bcf	3,6	;RP1=0, select bank1
  2555     0474  07B0               	addwf	sprintf@eexp^(0+128),f
  2556     0475  1803               	skipnc
  2557     0476  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2558     0477  30FF               	movlw	255
  2559     0478  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2562     0479  2C82               	goto	l3312
  2563     047A                     l3310:
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2566     047A  30F8               	movlw	248
  2567     047B  1683               	bsf	3,5	;RP0=1, select bank1
  2568     047C  1303               	bcf	3,6	;RP1=0, select bank1
  2569     047D  07B0               	addwf	sprintf@eexp^(0+128),f
  2570     047E  1803               	skipnc
  2571     047F  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2572     0480  30FF               	movlw	255
  2573     0481  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2574     0482                     l3312:
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2577     0482  0830               	movf	sprintf@eexp^(0+128),w
  2578     0483  120A  158A  24A1  120A  118A  	fcall	_scale
  2579     0488  1283               	bcf	3,5	;RP0=0, select bank0
  2580     0489  1303               	bcf	3,6	;RP1=0, select bank0
  2581     048A  083D               	movf	?_scale+3,w
  2582     048B  1683               	bsf	3,5	;RP0=1, select bank1
  2583     048C  1303               	bcf	3,6	;RP1=0, select bank1
  2584     048D  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  2585     048E  1283               	bcf	3,5	;RP0=0, select bank0
  2586     048F  1303               	bcf	3,6	;RP1=0, select bank0
  2587     0490  083C               	movf	?_scale+2,w
  2588     0491  1683               	bsf	3,5	;RP0=1, select bank1
  2589     0492  1303               	bcf	3,6	;RP1=0, select bank1
  2590     0493  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  2591     0494  1283               	bcf	3,5	;RP0=0, select bank0
  2592     0495  1303               	bcf	3,6	;RP1=0, select bank0
  2593     0496  083B               	movf	?_scale+1,w
  2594     0497  1683               	bsf	3,5	;RP0=1, select bank1
  2595     0498  1303               	bcf	3,6	;RP1=0, select bank1
  2596     0499  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  2597     049A  1283               	bcf	3,5	;RP0=0, select bank0
  2598     049B  1303               	bcf	3,6	;RP1=0, select bank0
  2599     049C  083A               	movf	?_scale,w
  2600     049D  1683               	bsf	3,5	;RP0=1, select bank1
  2601     049E  1303               	bcf	3,6	;RP1=0, select bank1
  2602     049F  00B2               	movwf	sprintf@tmpval^(0+128)
  2603     04A0                     l3314:
  2604     04A0  083C               	movf	(sprintf@fval+3)^(0+128),w
  2605     04A1  00F3               	movwf	__div_to_l_@f1+3
  2606     04A2  083B               	movf	(sprintf@fval+2)^(0+128),w
  2607     04A3  00F2               	movwf	__div_to_l_@f1+2
  2608     04A4  083A               	movf	(sprintf@fval+1)^(0+128),w
  2609     04A5  00F1               	movwf	__div_to_l_@f1+1
  2610     04A6  0839               	movf	sprintf@fval^(0+128),w
  2611     04A7  00F0               	movwf	__div_to_l_@f1
  2612     04A8  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  2613     04A9  00F7               	movwf	__div_to_l_@f2+3
  2614     04AA  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  2615     04AB  00F6               	movwf	__div_to_l_@f2+2
  2616     04AC  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  2617     04AD  00F5               	movwf	__div_to_l_@f2+1
  2618     04AE  0832               	movf	sprintf@tmpval^(0+128),w
  2619     04AF  00F4               	movwf	__div_to_l_@f2
  2620     04B0  120A  118A  2004  120A  118A  	fcall	__div_to_l_
  2621     04B5  0873               	movf	?__div_to_l_+3,w
  2622     04B6  1683               	bsf	3,5	;RP0=1, select bank1
  2623     04B7  1303               	bcf	3,6	;RP1=0, select bank1
  2624     04B8  00AF               	movwf	(sprintf@val+3)^(0+128)
  2625     04B9  0872               	movf	?__div_to_l_+2,w
  2626     04BA  00AE               	movwf	(sprintf@val+2)^(0+128)
  2627     04BB  0871               	movf	?__div_to_l_+1,w
  2628     04BC  00AD               	movwf	(sprintf@val+1)^(0+128)
  2629     04BD  0870               	movf	?__div_to_l_,w
  2630     04BE  00AC               	movwf	sprintf@val^(0+128)
  2631     04BF                     l3318:
  2632                           
  2633                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2634     04BF  3000               	movlw	0
  2635     04C0  00BC               	movwf	(sprintf@fval+3)^(0+128)
  2636     04C1  3000               	movlw	0
  2637     04C2  00BB               	movwf	(sprintf@fval+2)^(0+128)
  2638     04C3  3000               	movlw	0
  2639     04C4  00BA               	movwf	(sprintf@fval+1)^(0+128)
  2640     04C5  3000               	movlw	0
  2641     04C6  00B9               	movwf	sprintf@fval^(0+128)
  2642                           
  2643                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2644     04C7  2D4C               	goto	l3324
  2645     04C8                     l3320:
  2646                           
  2647                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2648     04C8  1683               	bsf	3,5	;RP0=1, select bank1
  2649     04C9  1303               	bcf	3,6	;RP1=0, select bank1
  2650     04CA  083C               	movf	(sprintf@fval+3)^(0+128),w
  2651     04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2652     04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2653     04CD  00D0               	movwf	___fltol@f1+3
  2654     04CE  1683               	bsf	3,5	;RP0=1, select bank1
  2655     04CF  1303               	bcf	3,6	;RP1=0, select bank1
  2656     04D0  083B               	movf	(sprintf@fval+2)^(0+128),w
  2657     04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2658     04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2659     04D3  00CF               	movwf	___fltol@f1+2
  2660     04D4  1683               	bsf	3,5	;RP0=1, select bank1
  2661     04D5  1303               	bcf	3,6	;RP1=0, select bank1
  2662     04D6  083A               	movf	(sprintf@fval+1)^(0+128),w
  2663     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2664     04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2665     04D9  00CE               	movwf	___fltol@f1+1
  2666     04DA  1683               	bsf	3,5	;RP0=1, select bank1
  2667     04DB  1303               	bcf	3,6	;RP1=0, select bank1
  2668     04DC  0839               	movf	sprintf@fval^(0+128),w
  2669     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2670     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2671     04DF  00CD               	movwf	___fltol@f1
  2672     04E0  160A  118A  226E  120A  118A  	fcall	___fltol
  2673     04E5  1283               	bcf	3,5	;RP0=0, select bank0
  2674     04E6  1303               	bcf	3,6	;RP1=0, select bank0
  2675     04E7  0850               	movf	?___fltol+3,w
  2676     04E8  1683               	bsf	3,5	;RP0=1, select bank1
  2677     04E9  1303               	bcf	3,6	;RP1=0, select bank1
  2678     04EA  00AF               	movwf	(sprintf@val+3)^(0+128)
  2679     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2680     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2681     04ED  084F               	movf	?___fltol+2,w
  2682     04EE  1683               	bsf	3,5	;RP0=1, select bank1
  2683     04EF  1303               	bcf	3,6	;RP1=0, select bank1
  2684     04F0  00AE               	movwf	(sprintf@val+2)^(0+128)
  2685     04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2686     04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2687     04F3  084E               	movf	?___fltol+1,w
  2688     04F4  1683               	bsf	3,5	;RP0=1, select bank1
  2689     04F5  1303               	bcf	3,6	;RP1=0, select bank1
  2690     04F6  00AD               	movwf	(sprintf@val+1)^(0+128)
  2691     04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2692     04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2693     04F9  084D               	movf	?___fltol,w
  2694     04FA  1683               	bsf	3,5	;RP0=1, select bank1
  2695     04FB  1303               	bcf	3,6	;RP1=0, select bank1
  2696     04FC  00AC               	movwf	sprintf@val^(0+128)
  2697                           
  2698                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2699     04FD  082F               	movf	(sprintf@val+3)^(0+128),w
  2700     04FE  00F3               	movwf	___xxtofl@val+3
  2701     04FF  082E               	movf	(sprintf@val+2)^(0+128),w
  2702     0500  00F2               	movwf	___xxtofl@val+2
  2703     0501  082D               	movf	(sprintf@val+1)^(0+128),w
  2704     0502  00F1               	movwf	___xxtofl@val+1
  2705     0503  082C               	movf	sprintf@val^(0+128),w
  2706     0504  00F0               	movwf	___xxtofl@val
  2707     0505  3000               	movlw	0
  2708     0506  120A  158A  20A4  120A  118A  	fcall	___xxtofl
  2709     050B  0873               	movf	?___xxtofl+3,w
  2710     050C  1283               	bcf	3,5	;RP0=0, select bank0
  2711     050D  1303               	bcf	3,6	;RP1=0, select bank0
  2712     050E  00E5               	movwf	___flsub@a+3
  2713     050F  0872               	movf	?___xxtofl+2,w
  2714     0510  00E4               	movwf	___flsub@a+2
  2715     0511  0871               	movf	?___xxtofl+1,w
  2716     0512  00E3               	movwf	___flsub@a+1
  2717     0513  0870               	movf	?___xxtofl,w
  2718     0514  00E2               	movwf	___flsub@a
  2719     0515  1683               	bsf	3,5	;RP0=1, select bank1
  2720     0516  1303               	bcf	3,6	;RP1=0, select bank1
  2721     0517  083C               	movf	(sprintf@fval+3)^(0+128),w
  2722     0518  1283               	bcf	3,5	;RP0=0, select bank0
  2723     0519  1303               	bcf	3,6	;RP1=0, select bank0
  2724     051A  00E9               	movwf	___flsub@b+3
  2725     051B  1683               	bsf	3,5	;RP0=1, select bank1
  2726     051C  1303               	bcf	3,6	;RP1=0, select bank1
  2727     051D  083B               	movf	(sprintf@fval+2)^(0+128),w
  2728     051E  1283               	bcf	3,5	;RP0=0, select bank0
  2729     051F  1303               	bcf	3,6	;RP1=0, select bank0
  2730     0520  00E8               	movwf	___flsub@b+2
  2731     0521  1683               	bsf	3,5	;RP0=1, select bank1
  2732     0522  1303               	bcf	3,6	;RP1=0, select bank1
  2733     0523  083A               	movf	(sprintf@fval+1)^(0+128),w
  2734     0524  1283               	bcf	3,5	;RP0=0, select bank0
  2735     0525  1303               	bcf	3,6	;RP1=0, select bank0
  2736     0526  00E7               	movwf	___flsub@b+1
  2737     0527  1683               	bsf	3,5	;RP0=1, select bank1
  2738     0528  1303               	bcf	3,6	;RP1=0, select bank1
  2739     0529  0839               	movf	sprintf@fval^(0+128),w
  2740     052A  1283               	bcf	3,5	;RP0=0, select bank0
  2741     052B  1303               	bcf	3,6	;RP1=0, select bank0
  2742     052C  00E6               	movwf	___flsub@b
  2743     052D  160A  158A  25B1  120A  118A  	fcall	___flsub
  2744     0532  1283               	bcf	3,5	;RP0=0, select bank0
  2745     0533  1303               	bcf	3,6	;RP1=0, select bank0
  2746     0534  0865               	movf	?___flsub+3,w
  2747     0535  1683               	bsf	3,5	;RP0=1, select bank1
  2748     0536  1303               	bcf	3,6	;RP1=0, select bank1
  2749     0537  00BC               	movwf	(sprintf@fval+3)^(0+128)
  2750     0538  1283               	bcf	3,5	;RP0=0, select bank0
  2751     0539  1303               	bcf	3,6	;RP1=0, select bank0
  2752     053A  0864               	movf	?___flsub+2,w
  2753     053B  1683               	bsf	3,5	;RP0=1, select bank1
  2754     053C  1303               	bcf	3,6	;RP1=0, select bank1
  2755     053D  00BB               	movwf	(sprintf@fval+2)^(0+128)
  2756     053E  1283               	bcf	3,5	;RP0=0, select bank0
  2757     053F  1303               	bcf	3,6	;RP1=0, select bank0
  2758     0540  0863               	movf	?___flsub+1,w
  2759     0541  1683               	bsf	3,5	;RP0=1, select bank1
  2760     0542  1303               	bcf	3,6	;RP1=0, select bank1
  2761     0543  00BA               	movwf	(sprintf@fval+1)^(0+128)
  2762     0544  1283               	bcf	3,5	;RP0=0, select bank0
  2763     0545  1303               	bcf	3,6	;RP1=0, select bank0
  2764     0546  0862               	movf	?___flsub,w
  2765     0547  1683               	bsf	3,5	;RP0=1, select bank1
  2766     0548  1303               	bcf	3,6	;RP1=0, select bank1
  2767     0549  00B9               	movwf	sprintf@fval^(0+128)
  2768     054A                     l3322:
  2769                           
  2770                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2771     054A  01B0               	clrf	sprintf@eexp^(0+128)
  2772     054B  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  2773     054C                     l3324:
  2774                           
  2775                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2776     054C  01BD               	clrf	sprintf@c^(0+128)
  2777     054D  0ABD               	incf	sprintf@c^(0+128),f
  2778     054E                     l3330:
  2779                           
  2780                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2781     054E  083D               	movf	sprintf@c^(0+128),w
  2782     054F  00A0               	movwf	??_sprintf^(0+128)
  2783     0550  3001               	movlw	1
  2784     0551                     u5435:
  2785     0551  1003               	clrc
  2786     0552  0DA0               	rlf	??_sprintf^(0+128),f
  2787     0553  3EFF               	addlw	-1
  2788     0554  1D03               	skipz
  2789     0555  2D51               	goto	u5435
  2790     0556  1003               	clrc
  2791     0557  0D20               	rlf	??_sprintf^(0+128),w
  2792     0558  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2793     0559  0084               	movwf	4
  2794     055A  160A  118A  200A  120A  118A  	fcall	stringdir
  2795     055F  00A1               	movwf	(??_sprintf+1)^(0+128)
  2796     0560  160A  118A  200A  120A  118A  	fcall	stringdir
  2797     0565  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  2798     0566  160A  118A  200A  120A  118A  	fcall	stringdir
  2799     056B  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
  2800     056C  160A  118A  200A  120A  118A  	fcall	stringdir
  2801     0571  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
  2802     0572  0824               	movf	(??_sprintf+4)^(0+128),w
  2803     0573  022F               	subwf	(sprintf@val+3)^(0+128),w
  2804     0574  1D03               	skipz
  2805     0575  2D80               	goto	u5445
  2806     0576  0823               	movf	(??_sprintf+3)^(0+128),w
  2807     0577  022E               	subwf	(sprintf@val+2)^(0+128),w
  2808     0578  1D03               	skipz
  2809     0579  2D80               	goto	u5445
  2810     057A  0822               	movf	(??_sprintf+2)^(0+128),w
  2811     057B  022D               	subwf	(sprintf@val+1)^(0+128),w
  2812     057C  1D03               	skipz
  2813     057D  2D80               	goto	u5445
  2814     057E  0821               	movf	(??_sprintf+1)^(0+128),w
  2815     057F  022C               	subwf	sprintf@val^(0+128),w
  2816     0580                     u5445:
  2817     0580  1803               	skipnc
  2818     0581  2D83               	goto	u5441
  2819     0582  2D84               	goto	u5440
  2820     0583                     u5441:
  2821     0583  2D85               	goto	l3334
  2822     0584                     u5440:
  2823     0584  2D8F               	goto	l3338
  2824     0585                     l3334:
  2825     0585  3001               	movlw	1
  2826     0586  00FF               	movwf	btemp+1
  2827     0587  087F               	movf	btemp+1,w
  2828     0588  07BD               	addwf	sprintf@c^(0+128),f
  2829     0589                     l3336:
  2830     0589  300A               	movlw	10
  2831     058A  063D               	xorwf	sprintf@c^(0+128),w
  2832     058B  1D03               	btfss	3,2
  2833     058C  2D8E               	goto	u5451
  2834     058D  2D8F               	goto	u5450
  2835     058E                     u5451:
  2836     058E  2D4E               	goto	l3330
  2837     058F                     u5450:
  2838     058F                     l3338:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2841     058F  3003               	movlw	3
  2842     0590  052A               	andwf	sprintf@flag^(0+128),w
  2843     0591  00A0               	movwf	??_sprintf^(0+128)
  2844     0592  3000               	movlw	0
  2845     0593  052B               	andwf	(sprintf@flag+1)^(0+128),w
  2846     0594  00A1               	movwf	(??_sprintf+1)^(0+128)
  2847     0595  0820               	movf	??_sprintf^(0+128),w
  2848     0596  0421               	iorwf	(??_sprintf^(0+128)+1),w
  2849     0597  1903               	btfsc	3,2
  2850     0598  2D9A               	goto	u5461
  2851     0599  2D9B               	goto	u5460
  2852     059A                     u5461:
  2853     059A  2E06               	goto	l3352
  2854     059B                     u5460:
  2855     059B                     l3340:
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2858     059B  0836               	movf	sprintf@sp^(0+128),w
  2859     059C  0084               	movwf	4
  2860     059D  302D               	movlw	45
  2861     059E  1383               	bcf	3,7	;select IRP bank0
  2862     059F  0080               	movwf	0
  2863     05A0                     l3342:
  2864     05A0  3001               	movlw	1
  2865     05A1  00FF               	movwf	btemp+1
  2866     05A2  087F               	movf	btemp+1,w
  2867     05A3  07B6               	addwf	sprintf@sp^(0+128),f
  2868     05A4  2E06               	goto	l3352
  2869     05A5                     l3344:
  2870                           
  2871                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2872     05A5  083D               	movf	sprintf@c^(0+128),w
  2873     05A6  00A0               	movwf	??_sprintf^(0+128)
  2874     05A7  3001               	movlw	1
  2875     05A8                     u5475:
  2876     05A8  1003               	clrc
  2877     05A9  0DA0               	rlf	??_sprintf^(0+128),f
  2878     05AA  3EFF               	addlw	-1
  2879     05AB  1D03               	skipz
  2880     05AC  2DA8               	goto	u5475
  2881     05AD  1003               	clrc
  2882     05AE  0D20               	rlf	??_sprintf^(0+128),w
  2883     05AF  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2884     05B0  0084               	movwf	4
  2885     05B1  160A  118A  200A  120A  118A  	fcall	stringdir
  2886     05B6  00F0               	movwf	___lldiv@divisor
  2887     05B7  160A  118A  200A  120A  118A  	fcall	stringdir
  2888     05BC  00F1               	movwf	___lldiv@divisor+1
  2889     05BD  160A  118A  200A  120A  118A  	fcall	stringdir
  2890     05C2  00F2               	movwf	___lldiv@divisor+2
  2891     05C3  160A  118A  200A  120A  118A  	fcall	stringdir
  2892     05C8  00F3               	movwf	___lldiv@divisor+3
  2893     05C9  082F               	movf	(sprintf@val+3)^(0+128),w
  2894     05CA  00F7               	movwf	___lldiv@dividend+3
  2895     05CB  082E               	movf	(sprintf@val+2)^(0+128),w
  2896     05CC  00F6               	movwf	___lldiv@dividend+2
  2897     05CD  082D               	movf	(sprintf@val+1)^(0+128),w
  2898     05CE  00F5               	movwf	___lldiv@dividend+1
  2899     05CF  082C               	movf	sprintf@val^(0+128),w
  2900     05D0  00F4               	movwf	___lldiv@dividend
  2901     05D1  160A  118A  21A1  120A  118A  	fcall	___lldiv
  2902     05D6  0873               	movf	?___lldiv+3,w
  2903     05D7  1683               	bsf	3,5	;RP0=1, select bank1
  2904     05D8  1303               	bcf	3,6	;RP1=0, select bank1
  2905     05D9  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  2906     05DA  0872               	movf	?___lldiv+2,w
  2907     05DB  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  2908     05DC  0871               	movf	?___lldiv+1,w
  2909     05DD  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  2910     05DE  0870               	movf	?___lldiv,w
  2911     05DF  00B2               	movwf	sprintf@tmpval^(0+128)
  2912     05E0                     l3346:
  2913                           
  2914                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2915     05E0  3000               	movlw	0
  2916     05E1  00F3               	movwf	___llmod@divisor+3
  2917     05E2  3000               	movlw	0
  2918     05E3  00F2               	movwf	___llmod@divisor+2
  2919     05E4  3000               	movlw	0
  2920     05E5  00F1               	movwf	___llmod@divisor+1
  2921     05E6  300A               	movlw	10
  2922     05E7  00F0               	movwf	___llmod@divisor
  2923     05E8  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  2924     05E9  00F7               	movwf	___llmod@dividend+3
  2925     05EA  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  2926     05EB  00F6               	movwf	___llmod@dividend+2
  2927     05EC  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  2928     05ED  00F5               	movwf	___llmod@dividend+1
  2929     05EE  0832               	movf	sprintf@tmpval^(0+128),w
  2930     05EF  00F4               	movwf	___llmod@dividend
  2931     05F0  160A  158A  27AC  120A  118A  	fcall	___llmod
  2932     05F5  0873               	movf	?___llmod+3,w
  2933     05F6  1683               	bsf	3,5	;RP0=1, select bank1
  2934     05F7  1303               	bcf	3,6	;RP1=0, select bank1
  2935     05F8  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  2936     05F9  0872               	movf	?___llmod+2,w
  2937     05FA  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  2938     05FB  0871               	movf	?___llmod+1,w
  2939     05FC  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  2940     05FD  0870               	movf	?___llmod,w
  2941     05FE  00B2               	movwf	sprintf@tmpval^(0+128)
  2942     05FF                     l3348:
  2943                           
  2944                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  2945     05FF  0836               	movf	sprintf@sp^(0+128),w
  2946     0600  0084               	movwf	4
  2947     0601  0832               	movf	sprintf@tmpval^(0+128),w
  2948     0602  3E30               	addlw	48
  2949     0603  1383               	bcf	3,7	;select IRP bank0
  2950     0604  0080               	movwf	0
  2951     0605  2DA0               	goto	l3342
  2952     0606                     l3352:
  2953                           
  2954                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  2955     0606  3001               	movlw	1
  2956     0607  02BD               	subwf	sprintf@c^(0+128),f
  2957     0608  0A3D               	incf	sprintf@c^(0+128),w
  2958     0609  1D03               	btfss	3,2
  2959     060A  2E0C               	goto	u5481
  2960     060B  2E0D               	goto	u5480
  2961     060C                     u5481:
  2962     060C  2DA5               	goto	l3344
  2963     060D                     u5480:
  2964     060D  2E1F               	goto	l3360
  2965     060E                     l3354:
  2966                           
  2967                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  2968     060E  1683               	bsf	3,5	;RP0=1, select bank1
  2969     060F  1303               	bcf	3,6	;RP1=0, select bank1
  2970     0610  0836               	movf	sprintf@sp^(0+128),w
  2971     0611  0084               	movwf	4
  2972     0612  3030               	movlw	48
  2973     0613  1383               	bcf	3,7	;select IRP bank0
  2974     0614  0080               	movwf	0
  2975     0615                     l3356:
  2976     0615  3001               	movlw	1
  2977     0616  00FF               	movwf	btemp+1
  2978     0617  087F               	movf	btemp+1,w
  2979     0618  07B6               	addwf	sprintf@sp^(0+128),f
  2980     0619                     l3358:
  2981                           
  2982                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  2983     0619  30FF               	movlw	255
  2984     061A  07B0               	addwf	sprintf@eexp^(0+128),f
  2985     061B  1803               	skipnc
  2986     061C  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  2987     061D  30FF               	movlw	255
  2988     061E  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  2989     061F                     l3360:
  2990                           
  2991                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  2992     061F  0831               	movf	(sprintf@eexp+1)^(0+128),w
  2993     0620  3A80               	xorlw	128
  2994     0621  00FF               	movwf	btemp+1
  2995     0622  3080               	movlw	128
  2996     0623  027F               	subwf	btemp+1,w
  2997     0624  1D03               	skipz
  2998     0625  2E28               	goto	u5495
  2999     0626  3001               	movlw	1
  3000     0627  0230               	subwf	sprintf@eexp^(0+128),w
  3001     0628                     u5495:
  3002     0628  1803               	skipnc
  3003     0629  2E2B               	goto	u5491
  3004     062A  2E2C               	goto	u5490
  3005     062B                     u5491:
  3006     062B  2E0E               	goto	l3354
  3007     062C                     u5490:
  3008     062C                     l3362:
  3009                           
  3010                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3011     062C  1683               	bsf	3,5	;RP0=1, select bank1
  3012     062D  1303               	bcf	3,6	;RP1=0, select bank1
  3013     062E  0838               	movf	(sprintf@prec+1)^(0+128),w
  3014     062F  3A80               	xorlw	128
  3015     0630  00FF               	movwf	btemp+1
  3016     0631  3080               	movlw	128
  3017     0632  027F               	subwf	btemp+1,w
  3018     0633  1D03               	skipz
  3019     0634  2E37               	goto	u5505
  3020     0635  3009               	movlw	9
  3021     0636  0237               	subwf	sprintf@prec^(0+128),w
  3022     0637                     u5505:
  3023     0637  1C03               	skipc
  3024     0638  2E3A               	goto	u5501
  3025     0639  2E3B               	goto	u5500
  3026     063A                     u5501:
  3027     063A  2E40               	goto	l3366
  3028     063B                     u5500:
  3029     063B                     l3364:
  3030                           
  3031                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3032     063B  3008               	movlw	8
  3033     063C  1683               	bsf	3,5	;RP0=1, select bank1
  3034     063D  1303               	bcf	3,6	;RP1=0, select bank1
  3035     063E  00BD               	movwf	sprintf@c^(0+128)
  3036     063F  2E44               	goto	l343
  3037     0640                     l3366:
  3038                           
  3039                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3040     0640  1683               	bsf	3,5	;RP0=1, select bank1
  3041     0641  1303               	bcf	3,6	;RP1=0, select bank1
  3042     0642  0837               	movf	sprintf@prec^(0+128),w
  3043     0643  00BD               	movwf	sprintf@c^(0+128)
  3044     0644                     l343:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3047     0644  083D               	movf	sprintf@c^(0+128),w
  3048     0645  00A0               	movwf	??_sprintf^(0+128)
  3049     0646  01A1               	clrf	(??_sprintf^(0+128)+1)
  3050     0647  0820               	movf	??_sprintf^(0+128),w
  3051     0648  02B7               	subwf	sprintf@prec^(0+128),f
  3052     0649  0821               	movf	(??_sprintf+1)^(0+128),w
  3053     064A  1C03               	skipc
  3054     064B  03B8               	decf	(sprintf@prec+1)^(0+128),f
  3055     064C  02B8               	subwf	(sprintf@prec+1)^(0+128),f
  3056     064D                     l3368:
  3057                           
  3058                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3059     064D  083D               	movf	sprintf@c^(0+128),w
  3060     064E  1903               	btfsc	3,2
  3061     064F  2E51               	goto	u5511
  3062     0650  2E52               	goto	u5510
  3063     0651                     u5511:
  3064     0651  2E5B               	goto	l3374
  3065     0652                     u5510:
  3066     0652                     l3370:
  3067                           
  3068                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3069     0652  0836               	movf	sprintf@sp^(0+128),w
  3070     0653  0084               	movwf	4
  3071     0654  302E               	movlw	46
  3072     0655  1383               	bcf	3,7	;select IRP bank0
  3073     0656  0080               	movwf	0
  3074     0657                     l3372:
  3075     0657  3001               	movlw	1
  3076     0658  00FF               	movwf	btemp+1
  3077     0659  087F               	movf	btemp+1,w
  3078     065A  07B6               	addwf	sprintf@sp^(0+128),f
  3079     065B                     l3374:
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3082     065B  083D               	movf	sprintf@c^(0+128),w
  3083     065C  120A  158A  24A1  120A  118A  	fcall	_scale
  3084     0661  1283               	bcf	3,5	;RP0=0, select bank0
  3085     0662  1303               	bcf	3,6	;RP1=0, select bank0
  3086     0663  083D               	movf	?_scale+3,w
  3087     0664  1683               	bsf	3,5	;RP0=1, select bank1
  3088     0665  1303               	bcf	3,6	;RP1=0, select bank1
  3089     0666  00A8               	movwf	(_sprintf$1032+3)^(0+128)
  3090     0667  1283               	bcf	3,5	;RP0=0, select bank0
  3091     0668  1303               	bcf	3,6	;RP1=0, select bank0
  3092     0669  083C               	movf	?_scale+2,w
  3093     066A  1683               	bsf	3,5	;RP0=1, select bank1
  3094     066B  1303               	bcf	3,6	;RP1=0, select bank1
  3095     066C  00A7               	movwf	(_sprintf$1032+2)^(0+128)
  3096     066D  1283               	bcf	3,5	;RP0=0, select bank0
  3097     066E  1303               	bcf	3,6	;RP1=0, select bank0
  3098     066F  083B               	movf	?_scale+1,w
  3099     0670  1683               	bsf	3,5	;RP0=1, select bank1
  3100     0671  1303               	bcf	3,6	;RP1=0, select bank1
  3101     0672  00A6               	movwf	(_sprintf$1032+1)^(0+128)
  3102     0673  1283               	bcf	3,5	;RP0=0, select bank0
  3103     0674  1303               	bcf	3,6	;RP1=0, select bank0
  3104     0675  083A               	movf	?_scale,w
  3105     0676  1683               	bsf	3,5	;RP0=1, select bank1
  3106     0677  1303               	bcf	3,6	;RP1=0, select bank1
  3107     0678  00A5               	movwf	_sprintf$1032^(0+128)
  3108     0679                     l3376:
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3111     0679  0828               	movf	(_sprintf$1032+3)^(0+128),w
  3112     067A  1283               	bcf	3,5	;RP0=0, select bank0
  3113     067B  1303               	bcf	3,6	;RP1=0, select bank0
  3114     067C  00A7               	movwf	___flmul@a+3
  3115     067D  1683               	bsf	3,5	;RP0=1, select bank1
  3116     067E  1303               	bcf	3,6	;RP1=0, select bank1
  3117     067F  0827               	movf	(_sprintf$1032+2)^(0+128),w
  3118     0680  1283               	bcf	3,5	;RP0=0, select bank0
  3119     0681  1303               	bcf	3,6	;RP1=0, select bank0
  3120     0682  00A6               	movwf	___flmul@a+2
  3121     0683  1683               	bsf	3,5	;RP0=1, select bank1
  3122     0684  1303               	bcf	3,6	;RP1=0, select bank1
  3123     0685  0826               	movf	(_sprintf$1032+1)^(0+128),w
  3124     0686  1283               	bcf	3,5	;RP0=0, select bank0
  3125     0687  1303               	bcf	3,6	;RP1=0, select bank0
  3126     0688  00A5               	movwf	___flmul@a+1
  3127     0689  1683               	bsf	3,5	;RP0=1, select bank1
  3128     068A  1303               	bcf	3,6	;RP1=0, select bank1
  3129     068B  0825               	movf	_sprintf$1032^(0+128),w
  3130     068C  1283               	bcf	3,5	;RP0=0, select bank0
  3131     068D  1303               	bcf	3,6	;RP1=0, select bank0
  3132     068E  00A4               	movwf	___flmul@a
  3133     068F  1683               	bsf	3,5	;RP0=1, select bank1
  3134     0690  1303               	bcf	3,6	;RP1=0, select bank1
  3135     0691  083C               	movf	(sprintf@fval+3)^(0+128),w
  3136     0692  1283               	bcf	3,5	;RP0=0, select bank0
  3137     0693  1303               	bcf	3,6	;RP1=0, select bank0
  3138     0694  00A3               	movwf	___flmul@b+3
  3139     0695  1683               	bsf	3,5	;RP0=1, select bank1
  3140     0696  1303               	bcf	3,6	;RP1=0, select bank1
  3141     0697  083B               	movf	(sprintf@fval+2)^(0+128),w
  3142     0698  1283               	bcf	3,5	;RP0=0, select bank0
  3143     0699  1303               	bcf	3,6	;RP1=0, select bank0
  3144     069A  00A2               	movwf	___flmul@b+2
  3145     069B  1683               	bsf	3,5	;RP0=1, select bank1
  3146     069C  1303               	bcf	3,6	;RP1=0, select bank1
  3147     069D  083A               	movf	(sprintf@fval+1)^(0+128),w
  3148     069E  1283               	bcf	3,5	;RP0=0, select bank0
  3149     069F  1303               	bcf	3,6	;RP1=0, select bank0
  3150     06A0  00A1               	movwf	___flmul@b+1
  3151     06A1  1683               	bsf	3,5	;RP0=1, select bank1
  3152     06A2  1303               	bcf	3,6	;RP1=0, select bank1
  3153     06A3  0839               	movf	sprintf@fval^(0+128),w
  3154     06A4  1283               	bcf	3,5	;RP0=0, select bank0
  3155     06A5  1303               	bcf	3,6	;RP1=0, select bank0
  3156     06A6  00A0               	movwf	___flmul@b
  3157     06A7  120A  158A  215C  120A  118A  	fcall	___flmul
  3158     06AC  1283               	bcf	3,5	;RP0=0, select bank0
  3159     06AD  1303               	bcf	3,6	;RP1=0, select bank0
  3160     06AE  0823               	movf	?___flmul+3,w
  3161     06AF  00D0               	movwf	___fltol@f1+3
  3162     06B0  0822               	movf	?___flmul+2,w
  3163     06B1  00CF               	movwf	___fltol@f1+2
  3164     06B2  0821               	movf	?___flmul+1,w
  3165     06B3  00CE               	movwf	___fltol@f1+1
  3166     06B4  0820               	movf	?___flmul,w
  3167     06B5  00CD               	movwf	___fltol@f1
  3168     06B6  160A  118A  226E  120A  118A  	fcall	___fltol
  3169     06BB  1283               	bcf	3,5	;RP0=0, select bank0
  3170     06BC  1303               	bcf	3,6	;RP1=0, select bank0
  3171     06BD  0850               	movf	?___fltol+3,w
  3172     06BE  1683               	bsf	3,5	;RP0=1, select bank1
  3173     06BF  1303               	bcf	3,6	;RP1=0, select bank1
  3174     06C0  00AF               	movwf	(sprintf@val+3)^(0+128)
  3175     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  3176     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  3177     06C3  084F               	movf	?___fltol+2,w
  3178     06C4  1683               	bsf	3,5	;RP0=1, select bank1
  3179     06C5  1303               	bcf	3,6	;RP1=0, select bank1
  3180     06C6  00AE               	movwf	(sprintf@val+2)^(0+128)
  3181     06C7  1283               	bcf	3,5	;RP0=0, select bank0
  3182     06C8  1303               	bcf	3,6	;RP1=0, select bank0
  3183     06C9  084E               	movf	?___fltol+1,w
  3184     06CA  1683               	bsf	3,5	;RP0=1, select bank1
  3185     06CB  1303               	bcf	3,6	;RP1=0, select bank1
  3186     06CC  00AD               	movwf	(sprintf@val+1)^(0+128)
  3187     06CD  1283               	bcf	3,5	;RP0=0, select bank0
  3188     06CE  1303               	bcf	3,6	;RP1=0, select bank0
  3189     06CF  084D               	movf	?___fltol,w
  3190     06D0  1683               	bsf	3,5	;RP0=1, select bank1
  3191     06D1  1303               	bcf	3,6	;RP1=0, select bank1
  3192     06D2  00AC               	movwf	sprintf@val^(0+128)
  3193                           
  3194                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3195     06D3  2F73               	goto	l3388
  3196     06D4                     l3378:
  3197                           
  3198                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3199     06D4  083D               	movf	sprintf@c^(0+128),w
  3200     06D5  00A0               	movwf	??_sprintf^(0+128)
  3201     06D6  3001               	movlw	1
  3202     06D7                     u5525:
  3203     06D7  1003               	clrc
  3204     06D8  0DA0               	rlf	??_sprintf^(0+128),f
  3205     06D9  3EFF               	addlw	-1
  3206     06DA  1D03               	skipz
  3207     06DB  2ED7               	goto	u5525
  3208     06DC  1003               	clrc
  3209     06DD  0D20               	rlf	??_sprintf^(0+128),w
  3210     06DE  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3211     06DF  0084               	movwf	4
  3212     06E0  160A  118A  200A  120A  118A  	fcall	stringdir
  3213     06E5  00F0               	movwf	___lldiv@divisor
  3214     06E6  160A  118A  200A  120A  118A  	fcall	stringdir
  3215     06EB  00F1               	movwf	___lldiv@divisor+1
  3216     06EC  160A  118A  200A  120A  118A  	fcall	stringdir
  3217     06F1  00F2               	movwf	___lldiv@divisor+2
  3218     06F2  160A  118A  200A  120A  118A  	fcall	stringdir
  3219     06F7  00F3               	movwf	___lldiv@divisor+3
  3220     06F8  082F               	movf	(sprintf@val+3)^(0+128),w
  3221     06F9  00F7               	movwf	___lldiv@dividend+3
  3222     06FA  082E               	movf	(sprintf@val+2)^(0+128),w
  3223     06FB  00F6               	movwf	___lldiv@dividend+2
  3224     06FC  082D               	movf	(sprintf@val+1)^(0+128),w
  3225     06FD  00F5               	movwf	___lldiv@dividend+1
  3226     06FE  082C               	movf	sprintf@val^(0+128),w
  3227     06FF  00F4               	movwf	___lldiv@dividend
  3228     0700  160A  118A  21A1  120A  118A  	fcall	___lldiv
  3229     0705  0873               	movf	?___lldiv+3,w
  3230     0706  1683               	bsf	3,5	;RP0=1, select bank1
  3231     0707  1303               	bcf	3,6	;RP1=0, select bank1
  3232     0708  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  3233     0709  0872               	movf	?___lldiv+2,w
  3234     070A  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  3235     070B  0871               	movf	?___lldiv+1,w
  3236     070C  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  3237     070D  0870               	movf	?___lldiv,w
  3238     070E  00B2               	movwf	sprintf@tmpval^(0+128)
  3239     070F                     l3380:
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3242     070F  3000               	movlw	0
  3243     0710  00F3               	movwf	___llmod@divisor+3
  3244     0711  3000               	movlw	0
  3245     0712  00F2               	movwf	___llmod@divisor+2
  3246     0713  3000               	movlw	0
  3247     0714  00F1               	movwf	___llmod@divisor+1
  3248     0715  300A               	movlw	10
  3249     0716  00F0               	movwf	___llmod@divisor
  3250     0717  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  3251     0718  00F7               	movwf	___llmod@dividend+3
  3252     0719  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  3253     071A  00F6               	movwf	___llmod@dividend+2
  3254     071B  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  3255     071C  00F5               	movwf	___llmod@dividend+1
  3256     071D  0832               	movf	sprintf@tmpval^(0+128),w
  3257     071E  00F4               	movwf	___llmod@dividend
  3258     071F  160A  158A  27AC  120A  118A  	fcall	___llmod
  3259     0724  0873               	movf	?___llmod+3,w
  3260     0725  1683               	bsf	3,5	;RP0=1, select bank1
  3261     0726  1303               	bcf	3,6	;RP1=0, select bank1
  3262     0727  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  3263     0728  0872               	movf	?___llmod+2,w
  3264     0729  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  3265     072A  0871               	movf	?___llmod+1,w
  3266     072B  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  3267     072C  0870               	movf	?___llmod,w
  3268     072D  00B2               	movwf	sprintf@tmpval^(0+128)
  3269     072E                     l3382:
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3272     072E  0836               	movf	sprintf@sp^(0+128),w
  3273     072F  0084               	movwf	4
  3274     0730  0832               	movf	sprintf@tmpval^(0+128),w
  3275     0731  3E30               	addlw	48
  3276     0732  1383               	bcf	3,7	;select IRP bank0
  3277     0733  0080               	movwf	0
  3278     0734                     l3384:
  3279     0734  3001               	movlw	1
  3280     0735  00FF               	movwf	btemp+1
  3281     0736  087F               	movf	btemp+1,w
  3282     0737  07B6               	addwf	sprintf@sp^(0+128),f
  3283     0738                     l3386:
  3284                           
  3285                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3286     0738  083D               	movf	sprintf@c^(0+128),w
  3287     0739  00A0               	movwf	??_sprintf^(0+128)
  3288     073A  3001               	movlw	1
  3289     073B                     u5535:
  3290     073B  1003               	clrc
  3291     073C  0DA0               	rlf	??_sprintf^(0+128),f
  3292     073D  3EFF               	addlw	-1
  3293     073E  1D03               	skipz
  3294     073F  2F3B               	goto	u5535
  3295     0740  1003               	clrc
  3296     0741  0D20               	rlf	??_sprintf^(0+128),w
  3297     0742  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3298     0743  0084               	movwf	4
  3299     0744  160A  118A  200A  120A  118A  	fcall	stringdir
  3300     0749  00F0               	movwf	___llmod@divisor
  3301     074A  160A  118A  200A  120A  118A  	fcall	stringdir
  3302     074F  00F1               	movwf	___llmod@divisor+1
  3303     0750  160A  118A  200A  120A  118A  	fcall	stringdir
  3304     0755  00F2               	movwf	___llmod@divisor+2
  3305     0756  160A  118A  200A  120A  118A  	fcall	stringdir
  3306     075B  00F3               	movwf	___llmod@divisor+3
  3307     075C  082F               	movf	(sprintf@val+3)^(0+128),w
  3308     075D  00F7               	movwf	___llmod@dividend+3
  3309     075E  082E               	movf	(sprintf@val+2)^(0+128),w
  3310     075F  00F6               	movwf	___llmod@dividend+2
  3311     0760  082D               	movf	(sprintf@val+1)^(0+128),w
  3312     0761  00F5               	movwf	___llmod@dividend+1
  3313     0762  082C               	movf	sprintf@val^(0+128),w
  3314     0763  00F4               	movwf	___llmod@dividend
  3315     0764  160A  158A  27AC  120A  118A  	fcall	___llmod
  3316     0769  0873               	movf	?___llmod+3,w
  3317     076A  1683               	bsf	3,5	;RP0=1, select bank1
  3318     076B  1303               	bcf	3,6	;RP1=0, select bank1
  3319     076C  00AF               	movwf	(sprintf@val+3)^(0+128)
  3320     076D  0872               	movf	?___llmod+2,w
  3321     076E  00AE               	movwf	(sprintf@val+2)^(0+128)
  3322     076F  0871               	movf	?___llmod+1,w
  3323     0770  00AD               	movwf	(sprintf@val+1)^(0+128)
  3324     0771  0870               	movf	?___llmod,w
  3325     0772  00AC               	movwf	sprintf@val^(0+128)
  3326     0773                     l3388:
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3329     0773  3001               	movlw	1
  3330     0774  02BD               	subwf	sprintf@c^(0+128),f
  3331     0775  0A3D               	incf	sprintf@c^(0+128),w
  3332     0776  1D03               	btfss	3,2
  3333     0777  2F79               	goto	u5541
  3334     0778  2F7A               	goto	u5540
  3335     0779                     u5541:
  3336     0779  2ED4               	goto	l3378
  3337     077A                     u5540:
  3338     077A  2F8A               	goto	l3396
  3339     077B                     l3390:
  3340                           
  3341                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3342     077B  0836               	movf	sprintf@sp^(0+128),w
  3343     077C  0084               	movwf	4
  3344     077D  3030               	movlw	48
  3345     077E  1383               	bcf	3,7	;select IRP bank0
  3346     077F  0080               	movwf	0
  3347     0780                     l3392:
  3348     0780  3001               	movlw	1
  3349     0781  00FF               	movwf	btemp+1
  3350     0782  087F               	movf	btemp+1,w
  3351     0783  07B6               	addwf	sprintf@sp^(0+128),f
  3352     0784                     l3394:
  3353                           
  3354                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3355     0784  30FF               	movlw	255
  3356     0785  07B7               	addwf	sprintf@prec^(0+128),f
  3357     0786  1803               	skipnc
  3358     0787  0AB8               	incf	(sprintf@prec+1)^(0+128),f
  3359     0788  30FF               	movlw	255
  3360     0789  07B8               	addwf	(sprintf@prec+1)^(0+128),f
  3361     078A                     l3396:
  3362                           
  3363                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3364     078A  0837               	movf	sprintf@prec^(0+128),w
  3365     078B  0438               	iorwf	(sprintf@prec+1)^(0+128),w
  3366     078C  1D03               	btfss	3,2
  3367     078D  2F8F               	goto	u5551
  3368     078E  2F90               	goto	u5550
  3369     078F                     u5551:
  3370     078F  2F7B               	goto	l3390
  3371     0790                     u5550:
  3372     0790  2FD4               	goto	l3416
  3373     0791                     l3398:
  3374                           
  3375                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3376     0791  0837               	movf	sprintf@prec^(0+128),w
  3377     0792  0438               	iorwf	(sprintf@prec+1)^(0+128),w
  3378     0793  1D03               	btfss	3,2
  3379     0794  2F96               	goto	u5561
  3380     0795  2F97               	goto	u5560
  3381     0796                     u5561:
  3382     0796  2FA5               	goto	l351
  3383     0797                     u5560:
  3384     0797                     l3400:
  3385     0797  082F               	movf	(sprintf@val+3)^(0+128),w
  3386     0798  042E               	iorwf	(sprintf@val+2)^(0+128),w
  3387     0799  042D               	iorwf	(sprintf@val+1)^(0+128),w
  3388     079A  042C               	iorwf	sprintf@val^(0+128),w
  3389     079B  1D03               	skipz
  3390     079C  2F9E               	goto	u5571
  3391     079D  2F9F               	goto	u5570
  3392     079E                     u5571:
  3393     079E  2FA5               	goto	l351
  3394     079F                     u5570:
  3395     079F                     l3402:
  3396                           
  3397                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3398     079F  3001               	movlw	1
  3399     07A0  07B7               	addwf	sprintf@prec^(0+128),f
  3400     07A1  1803               	skipnc
  3401     07A2  0AB8               	incf	(sprintf@prec+1)^(0+128),f
  3402     07A3  3000               	movlw	0
  3403     07A4  07B8               	addwf	(sprintf@prec+1)^(0+128),f
  3404     07A5                     l351:
  3405                           
  3406                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3407     07A5  0838               	movf	(sprintf@prec+1)^(0+128),w
  3408     07A6  3A80               	xorlw	128
  3409     07A7  3C80               	sublw	128
  3410     07A8  1D03               	skipz
  3411     07A9  2FAC               	goto	u5585
  3412     07AA  0837               	movf	sprintf@prec^(0+128),w
  3413     07AB  023D               	subwf	sprintf@c^(0+128),w
  3414     07AC                     u5585:
  3415     07AC  1803               	skipnc
  3416     07AD  2FAF               	goto	u5581
  3417     07AE  2FB0               	goto	u5580
  3418     07AF                     u5581:
  3419     07AF  2FB1               	goto	l3406
  3420     07B0                     u5580:
  3421     07B0                     l3404:
  3422     07B0  2FC0               	goto	l3410
  3423     07B1                     l3406:
  3424     07B1  1683               	bsf	3,5	;RP0=1, select bank1
  3425     07B2  1303               	bcf	3,6	;RP1=0, select bank1
  3426     07B3  0838               	movf	(sprintf@prec+1)^(0+128),w
  3427     07B4  3A80               	xorlw	128
  3428     07B5  00A0               	movwf	??_sprintf^(0+128)
  3429     07B6  3080               	movlw	128
  3430     07B7  0220               	subwf	??_sprintf^(0+128),w
  3431     07B8  1D03               	skipz
  3432     07B9  2FBC               	goto	u5595
  3433     07BA  083D               	movf	sprintf@c^(0+128),w
  3434     07BB  0237               	subwf	sprintf@prec^(0+128),w
  3435     07BC                     u5595:
  3436     07BC  1803               	skipnc
  3437     07BD  2FBF               	goto	u5591
  3438     07BE  2FC0               	goto	u5590
  3439     07BF                     u5591:
  3440     07BF  2FC0               	goto	l3410
  3441     07C0                     u5590:
  3442     07C0                     l3408:
  3443     07C0                     l3410:
  3444                           
  3445                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3446     07C0  3003               	movlw	3
  3447     07C1  1683               	bsf	3,5	;RP0=1, select bank1
  3448     07C2  1303               	bcf	3,6	;RP1=0, select bank1
  3449     07C3  052A               	andwf	sprintf@flag^(0+128),w
  3450     07C4  00A0               	movwf	??_sprintf^(0+128)
  3451     07C5  3000               	movlw	0
  3452     07C6  052B               	andwf	(sprintf@flag+1)^(0+128),w
  3453     07C7  00A1               	movwf	(??_sprintf+1)^(0+128)
  3454     07C8  0820               	movf	??_sprintf^(0+128),w
  3455     07C9  0421               	iorwf	(??_sprintf^(0+128)+1),w
  3456     07CA  1903               	btfsc	3,2
  3457     07CB  2FCD               	goto	u5601
  3458     07CC  2FCE               	goto	u5600
  3459     07CD                     u5601:
  3460     07CD  2FD4               	goto	l3416
  3461     07CE                     u5600:
  3462     07CE                     l3412:
  3463                           
  3464                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3465     07CE  0836               	movf	sprintf@sp^(0+128),w
  3466     07CF  0084               	movwf	4
  3467     07D0  302D               	movlw	45
  3468     07D1  1383               	bcf	3,7	;select IRP bank0
  3469     07D2  0080               	movwf	0
  3470     07D3  29AA               	goto	l3222
  3471     07D4                     l3416:
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3474     07D4  3001               	movlw	1
  3475     07D5  1283               	bcf	3,5	;RP0=0, select bank0
  3476     07D6  1303               	bcf	3,6	;RP1=0, select bank0
  3477     07D7  07EA               	addwf	sprintf@f,f
  3478     07D8  30FF               	movlw	-1
  3479     07D9  076A               	addwf	sprintf@f,w
  3480     07DA  0084               	movwf	4
  3481     07DB  160A  118A  200A  120A  118A  	fcall	stringdir
  3482     07E0  1683               	bsf	3,5	;RP0=1, select bank1
  3483     07E1  1303               	bcf	3,6	;RP1=0, select bank1
  3484     07E2  00BD               	movwf	sprintf@c^(0+128)
  3485     07E3  083D               	movf	sprintf@c^(0+128),w
  3486     07E4  1D03               	btfss	3,2
  3487     07E5  2FE7               	goto	u5611
  3488     07E6  2FE8               	goto	u5610
  3489     07E7                     u5611:
  3490     07E7  299F               	goto	l3218
  3491     07E8                     u5610:
  3492     07E8                     l3418:
  3493                           
  3494                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3495     07E8  0836               	movf	sprintf@sp^(0+128),w
  3496     07E9  0084               	movwf	4
  3497     07EA  1383               	bcf	3,7	;select IRP bank0
  3498     07EB  0180               	clrf	0
  3499     07EC                     l357:
  3500     07EC  0008               	return
  3501     07ED                     __end_of_sprintf:
  3502                           
  3503                           	psect	text2
  3504     0CA1                     __ptext2:	
  3505 ;; *************** function _scale *****************
  3506 ;; Defined at:
  3507 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  scl             1    wreg     char 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  scl             1   44[BANK0 ] char 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  4   26[BANK0 ] char 
  3514 ;; Registers used:
  3515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3521 ;;      Params:         0       4       0       0       0
  3522 ;;      Locals:         0       5       0       0       0
  3523 ;;      Temps:          0      10       0       0       0
  3524 ;;      Totals:         0      19       0       0       0
  3525 ;;Total ram usage:       19 bytes
  3526 ;; Hardware stack levels used: 1
  3527 ;; Hardware stack levels required when called: 2
  3528 ;; This function calls:
  3529 ;;		___awdiv
  3530 ;;		___awmod
  3531 ;;		___flmul
  3532 ;; This function is called by:
  3533 ;;		_sprintf
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537     0CA1                     _scale:	
  3538                           ;psect for function _scale
  3539                           
  3540                           
  3541                           ;incstack = 0
  3542                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3543                           ;scale@scl stored from wreg
  3544     0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  3545     0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  3546     0CA3  00CC               	movwf	scale@scl
  3547     0CA4                     l2808:
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3550     0CA4  1FCC               	btfss	scale@scl,7
  3551     0CA5  2CA7               	goto	u4251
  3552     0CA6  2CA8               	goto	u4250
  3553     0CA7                     u4251:
  3554     0CA7  2E55               	goto	l2830
  3555     0CA8                     u4250:
  3556     0CA8                     l2810:
  3557                           
  3558                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3559     0CA8  09CC               	comf	scale@scl,f
  3560     0CA9  0ACC               	incf	scale@scl,f
  3561     0CAA                     l2812:
  3562                           
  3563                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3564     0CAA  084C               	movf	scale@scl,w
  3565     0CAB  3A80               	xorlw	128
  3566     0CAC  3E12               	addlw	-238
  3567     0CAD  1C03               	skipc
  3568     0CAE  2CB0               	goto	u4261
  3569     0CAF  2CB1               	goto	u4260
  3570     0CB0                     u4261:
  3571     0CB0  2D99               	goto	l2820
  3572     0CB1                     u4260:
  3573     0CB1                     l2814:
  3574                           
  3575                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3576     0CB1  300A               	movlw	10
  3577     0CB2  00F6               	movwf	___awdiv@divisor
  3578     0CB3  3000               	movlw	0
  3579     0CB4  00F7               	movwf	___awdiv@divisor+1
  3580     0CB5  084C               	movf	scale@scl,w
  3581     0CB6  00F2               	movwf	___awmod@dividend
  3582     0CB7  01F3               	clrf	___awmod@dividend+1
  3583     0CB8  1BF2               	btfsc	___awmod@dividend,7
  3584     0CB9  03F3               	decf	___awmod@dividend+1,f
  3585     0CBA  3064               	movlw	100
  3586     0CBB  00F0               	movwf	___awmod@divisor
  3587     0CBC  3000               	movlw	0
  3588     0CBD  00F1               	movwf	___awmod@divisor+1
  3589     0CBE  160A  118A  20EC  120A  158A  	fcall	___awmod
  3590     0CC3  0871               	movf	?___awmod+1,w
  3591     0CC4  00F9               	movwf	___awdiv@dividend+1
  3592     0CC5  0870               	movf	?___awmod,w
  3593     0CC6  00F8               	movwf	___awdiv@dividend
  3594     0CC7  160A  118A  2207  120A  158A  	fcall	___awdiv
  3595     0CCC  0876               	movf	?___awdiv,w
  3596     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  3597     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  3598     0CCF  00BE               	movwf	??_scale
  3599     0CD0  3001               	movlw	1
  3600     0CD1                     u4275:
  3601     0CD1  1003               	clrc
  3602     0CD2  0DBE               	rlf	??_scale,f
  3603     0CD3  3EFF               	addlw	-1
  3604     0CD4  1D03               	skipz
  3605     0CD5  2CD1               	goto	u4275
  3606     0CD6  1003               	clrc
  3607     0CD7  0D3E               	rlf	??_scale,w
  3608     0CD8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3609     0CD9  0084               	movwf	4
  3610     0CDA  160A  118A  200A  120A  158A  	fcall	stringdir
  3611     0CDF  00BF               	movwf	??_scale+1
  3612     0CE0  160A  118A  200A  120A  158A  	fcall	stringdir
  3613     0CE5  00C0               	movwf	??_scale+2
  3614     0CE6  160A  118A  200A  120A  158A  	fcall	stringdir
  3615     0CEB  00C1               	movwf	??_scale+3
  3616     0CEC  160A  118A  200A  120A  158A  	fcall	stringdir
  3617     0CF1  00C2               	movwf	??_scale+4
  3618     0CF2  0842               	movf	??_scale+4,w
  3619     0CF3  00A3               	movwf	___flmul@b+3
  3620     0CF4  0841               	movf	??_scale+3,w
  3621     0CF5  00A2               	movwf	___flmul@b+2
  3622     0CF6  0840               	movf	??_scale+2,w
  3623     0CF7  00A1               	movwf	___flmul@b+1
  3624     0CF8  083F               	movf	??_scale+1,w
  3625     0CF9  00A0               	movwf	___flmul@b
  3626     0CFA  3064               	movlw	100
  3627     0CFB  00F6               	movwf	___awdiv@divisor
  3628     0CFC  3000               	movlw	0
  3629     0CFD  00F7               	movwf	___awdiv@divisor+1
  3630     0CFE  084C               	movf	scale@scl,w
  3631     0CFF  00F8               	movwf	___awdiv@dividend
  3632     0D00  01F9               	clrf	___awdiv@dividend+1
  3633     0D01  1BF8               	btfsc	___awdiv@dividend,7
  3634     0D02  03F9               	decf	___awdiv@dividend+1,f
  3635     0D03  160A  118A  2207  120A  158A  	fcall	___awdiv
  3636     0D08  0876               	movf	?___awdiv,w
  3637     0D09  1283               	bcf	3,5	;RP0=0, select bank0
  3638     0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  3639     0D0B  00C3               	movwf	??_scale+5
  3640     0D0C  3001               	movlw	1
  3641     0D0D                     u4285:
  3642     0D0D  1003               	clrc
  3643     0D0E  0DC3               	rlf	??_scale+5,f
  3644     0D0F  3EFF               	addlw	-1
  3645     0D10  1D03               	skipz
  3646     0D11  2D0D               	goto	u4285
  3647     0D12  1003               	clrc
  3648     0D13  0D43               	rlf	??_scale+5,w
  3649     0D14  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3650     0D15  0084               	movwf	4
  3651     0D16  160A  118A  200A  120A  158A  	fcall	stringdir
  3652     0D1B  00C4               	movwf	??_scale+6
  3653     0D1C  160A  118A  200A  120A  158A  	fcall	stringdir
  3654     0D21  00C5               	movwf	??_scale+7
  3655     0D22  160A  118A  200A  120A  158A  	fcall	stringdir
  3656     0D27  00C6               	movwf	??_scale+8
  3657     0D28  160A  118A  200A  120A  158A  	fcall	stringdir
  3658     0D2D  00C7               	movwf	??_scale+9
  3659     0D2E  0847               	movf	??_scale+9,w
  3660     0D2F  00A7               	movwf	___flmul@a+3
  3661     0D30  0846               	movf	??_scale+8,w
  3662     0D31  00A6               	movwf	___flmul@a+2
  3663     0D32  0845               	movf	??_scale+7,w
  3664     0D33  00A5               	movwf	___flmul@a+1
  3665     0D34  0844               	movf	??_scale+6,w
  3666     0D35  00A4               	movwf	___flmul@a
  3667     0D36  120A  158A  215C  120A  158A  	fcall	___flmul
  3668     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  3669     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  3670     0D3D  0823               	movf	?___flmul+3,w
  3671     0D3E  00CB               	movwf	_scale$1031+3
  3672     0D3F  0822               	movf	?___flmul+2,w
  3673     0D40  00CA               	movwf	_scale$1031+2
  3674     0D41  0821               	movf	?___flmul+1,w
  3675     0D42  00C9               	movwf	_scale$1031+1
  3676     0D43  0820               	movf	?___flmul,w
  3677     0D44  00C8               	movwf	_scale$1031
  3678                           
  3679                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3680     0D45  300A               	movlw	10
  3681     0D46  00F0               	movwf	___awmod@divisor
  3682     0D47  3000               	movlw	0
  3683     0D48  00F1               	movwf	___awmod@divisor+1
  3684     0D49  084C               	movf	scale@scl,w
  3685     0D4A  00F2               	movwf	___awmod@dividend
  3686     0D4B  01F3               	clrf	___awmod@dividend+1
  3687     0D4C  1BF2               	btfsc	___awmod@dividend,7
  3688     0D4D  03F3               	decf	___awmod@dividend+1,f
  3689     0D4E  160A  118A  20EC  120A  158A  	fcall	___awmod
  3690     0D53  0870               	movf	?___awmod,w
  3691     0D54  1283               	bcf	3,5	;RP0=0, select bank0
  3692     0D55  1303               	bcf	3,6	;RP1=0, select bank0
  3693     0D56  00BE               	movwf	??_scale
  3694     0D57  3001               	movlw	1
  3695     0D58                     u4295:
  3696     0D58  1003               	clrc
  3697     0D59  0DBE               	rlf	??_scale,f
  3698     0D5A  3EFF               	addlw	-1
  3699     0D5B  1D03               	skipz
  3700     0D5C  2D58               	goto	u4295
  3701     0D5D  1003               	clrc
  3702     0D5E  0D3E               	rlf	??_scale,w
  3703     0D5F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3704     0D60  0084               	movwf	4
  3705     0D61  160A  118A  200A  120A  158A  	fcall	stringdir
  3706     0D66  00BF               	movwf	??_scale+1
  3707     0D67  160A  118A  200A  120A  158A  	fcall	stringdir
  3708     0D6C  00C0               	movwf	??_scale+2
  3709     0D6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3710     0D72  00C1               	movwf	??_scale+3
  3711     0D73  160A  118A  200A  120A  158A  	fcall	stringdir
  3712     0D78  00C2               	movwf	??_scale+4
  3713     0D79  0842               	movf	??_scale+4,w
  3714     0D7A  00A3               	movwf	___flmul@b+3
  3715     0D7B  0841               	movf	??_scale+3,w
  3716     0D7C  00A2               	movwf	___flmul@b+2
  3717     0D7D  0840               	movf	??_scale+2,w
  3718     0D7E  00A1               	movwf	___flmul@b+1
  3719     0D7F  083F               	movf	??_scale+1,w
  3720     0D80  00A0               	movwf	___flmul@b
  3721     0D81  084B               	movf	_scale$1031+3,w
  3722     0D82  00A7               	movwf	___flmul@a+3
  3723     0D83  084A               	movf	_scale$1031+2,w
  3724     0D84  00A6               	movwf	___flmul@a+2
  3725     0D85  0849               	movf	_scale$1031+1,w
  3726     0D86  00A5               	movwf	___flmul@a+1
  3727     0D87  0848               	movf	_scale$1031,w
  3728     0D88  00A4               	movwf	___flmul@a
  3729     0D89  120A  158A  215C  120A  158A  	fcall	___flmul
  3730     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  3731     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  3732     0D90  0823               	movf	?___flmul+3,w
  3733     0D91  00BD               	movwf	?_scale+3
  3734     0D92  0822               	movf	?___flmul+2,w
  3735     0D93  00BC               	movwf	?_scale+2
  3736     0D94  0821               	movf	?___flmul+1,w
  3737     0D95  00BB               	movwf	?_scale+1
  3738     0D96  0820               	movf	?___flmul,w
  3739     0D97  00BA               	movwf	?_scale
  3740     0D98  2FFF               	goto	l291
  3741     0D99                     l2820:
  3742     0D99  084C               	movf	scale@scl,w
  3743     0D9A  3A80               	xorlw	128
  3744     0D9B  3E75               	addlw	-139
  3745     0D9C  1C03               	skipc
  3746     0D9D  2D9F               	goto	u4301
  3747     0D9E  2DA0               	goto	u4300
  3748     0D9F                     u4301:
  3749     0D9F  2E28               	goto	l2826
  3750     0DA0                     u4300:
  3751     0DA0                     l2822:
  3752                           
  3753                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3754     0DA0  300A               	movlw	10
  3755     0DA1  00F0               	movwf	___awmod@divisor
  3756     0DA2  3000               	movlw	0
  3757     0DA3  00F1               	movwf	___awmod@divisor+1
  3758     0DA4  084C               	movf	scale@scl,w
  3759     0DA5  00F2               	movwf	___awmod@dividend
  3760     0DA6  01F3               	clrf	___awmod@dividend+1
  3761     0DA7  1BF2               	btfsc	___awmod@dividend,7
  3762     0DA8  03F3               	decf	___awmod@dividend+1,f
  3763     0DA9  160A  118A  20EC  120A  158A  	fcall	___awmod
  3764     0DAE  0870               	movf	?___awmod,w
  3765     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3766     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  3767     0DB1  00BE               	movwf	??_scale
  3768     0DB2  3001               	movlw	1
  3769     0DB3                     u4315:
  3770     0DB3  1003               	clrc
  3771     0DB4  0DBE               	rlf	??_scale,f
  3772     0DB5  3EFF               	addlw	-1
  3773     0DB6  1D03               	skipz
  3774     0DB7  2DB3               	goto	u4315
  3775     0DB8  1003               	clrc
  3776     0DB9  0D3E               	rlf	??_scale,w
  3777     0DBA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3778     0DBB  0084               	movwf	4
  3779     0DBC  160A  118A  200A  120A  158A  	fcall	stringdir
  3780     0DC1  00BF               	movwf	??_scale+1
  3781     0DC2  160A  118A  200A  120A  158A  	fcall	stringdir
  3782     0DC7  00C0               	movwf	??_scale+2
  3783     0DC8  160A  118A  200A  120A  158A  	fcall	stringdir
  3784     0DCD  00C1               	movwf	??_scale+3
  3785     0DCE  160A  118A  200A  120A  158A  	fcall	stringdir
  3786     0DD3  00C2               	movwf	??_scale+4
  3787     0DD4  0842               	movf	??_scale+4,w
  3788     0DD5  00A3               	movwf	___flmul@b+3
  3789     0DD6  0841               	movf	??_scale+3,w
  3790     0DD7  00A2               	movwf	___flmul@b+2
  3791     0DD8  0840               	movf	??_scale+2,w
  3792     0DD9  00A1               	movwf	___flmul@b+1
  3793     0DDA  083F               	movf	??_scale+1,w
  3794     0DDB  00A0               	movwf	___flmul@b
  3795     0DDC  300A               	movlw	10
  3796     0DDD  00F6               	movwf	___awdiv@divisor
  3797     0DDE  3000               	movlw	0
  3798     0DDF  00F7               	movwf	___awdiv@divisor+1
  3799     0DE0  084C               	movf	scale@scl,w
  3800     0DE1  00F8               	movwf	___awdiv@dividend
  3801     0DE2  01F9               	clrf	___awdiv@dividend+1
  3802     0DE3  1BF8               	btfsc	___awdiv@dividend,7
  3803     0DE4  03F9               	decf	___awdiv@dividend+1,f
  3804     0DE5  160A  118A  2207  120A  158A  	fcall	___awdiv
  3805     0DEA  0876               	movf	?___awdiv,w
  3806     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  3807     0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  3808     0DED  00C3               	movwf	??_scale+5
  3809     0DEE  3001               	movlw	1
  3810     0DEF                     u4325:
  3811     0DEF  1003               	clrc
  3812     0DF0  0DC3               	rlf	??_scale+5,f
  3813     0DF1  3EFF               	addlw	-1
  3814     0DF2  1D03               	skipz
  3815     0DF3  2DEF               	goto	u4325
  3816     0DF4  1003               	clrc
  3817     0DF5  0D43               	rlf	??_scale+5,w
  3818     0DF6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3819     0DF7  0084               	movwf	4
  3820     0DF8  160A  118A  200A  120A  158A  	fcall	stringdir
  3821     0DFD  00C4               	movwf	??_scale+6
  3822     0DFE  160A  118A  200A  120A  158A  	fcall	stringdir
  3823     0E03  00C5               	movwf	??_scale+7
  3824     0E04  160A  118A  200A  120A  158A  	fcall	stringdir
  3825     0E09  00C6               	movwf	??_scale+8
  3826     0E0A  160A  118A  200A  120A  158A  	fcall	stringdir
  3827     0E0F  00C7               	movwf	??_scale+9
  3828     0E10  0847               	movf	??_scale+9,w
  3829     0E11  00A7               	movwf	___flmul@a+3
  3830     0E12  0846               	movf	??_scale+8,w
  3831     0E13  00A6               	movwf	___flmul@a+2
  3832     0E14  0845               	movf	??_scale+7,w
  3833     0E15  00A5               	movwf	___flmul@a+1
  3834     0E16  0844               	movf	??_scale+6,w
  3835     0E17  00A4               	movwf	___flmul@a
  3836     0E18  120A  158A  215C  120A  158A  	fcall	___flmul
  3837     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  3838     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  3839     0E1F  0823               	movf	?___flmul+3,w
  3840     0E20  00BD               	movwf	?_scale+3
  3841     0E21  0822               	movf	?___flmul+2,w
  3842     0E22  00BC               	movwf	?_scale+2
  3843     0E23  0821               	movf	?___flmul+1,w
  3844     0E24  00BB               	movwf	?_scale+1
  3845     0E25  0820               	movf	?___flmul,w
  3846     0E26  00BA               	movwf	?_scale
  3847     0E27  2FFF               	goto	l291
  3848     0E28                     l2826:
  3849                           
  3850                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3851     0E28  084C               	movf	scale@scl,w
  3852     0E29  00BE               	movwf	??_scale
  3853     0E2A  3001               	movlw	1
  3854     0E2B                     u4335:
  3855     0E2B  1003               	clrc
  3856     0E2C  0DBE               	rlf	??_scale,f
  3857     0E2D  3EFF               	addlw	-1
  3858     0E2E  1D03               	skipz
  3859     0E2F  2E2B               	goto	u4335
  3860     0E30  1003               	clrc
  3861     0E31  0D3E               	rlf	??_scale,w
  3862     0E32  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3863     0E33  0084               	movwf	4
  3864     0E34  160A  118A  200A  120A  158A  	fcall	stringdir
  3865     0E39  00BF               	movwf	??_scale+1
  3866     0E3A  160A  118A  200A  120A  158A  	fcall	stringdir
  3867     0E3F  00C0               	movwf	??_scale+2
  3868     0E40  160A  118A  200A  120A  158A  	fcall	stringdir
  3869     0E45  00C1               	movwf	??_scale+3
  3870     0E46  160A  118A  200A  120A  158A  	fcall	stringdir
  3871     0E4B  00C2               	movwf	??_scale+4
  3872     0E4C  0842               	movf	??_scale+4,w
  3873     0E4D  00BD               	movwf	?_scale+3
  3874     0E4E  0841               	movf	??_scale+3,w
  3875     0E4F  00BC               	movwf	?_scale+2
  3876     0E50  0840               	movf	??_scale+2,w
  3877     0E51  00BB               	movwf	?_scale+1
  3878     0E52  083F               	movf	??_scale+1,w
  3879     0E53  00BA               	movwf	?_scale
  3880     0E54  2FFF               	goto	l291
  3881     0E55                     l2830:
  3882                           
  3883                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3884     0E55  084C               	movf	scale@scl,w
  3885     0E56  3A80               	xorlw	128
  3886     0E57  3E12               	addlw	-238
  3887     0E58  1C03               	skipc
  3888     0E59  2E5B               	goto	u4341
  3889     0E5A  2E5C               	goto	u4340
  3890     0E5B                     u4341:
  3891     0E5B  2F44               	goto	l2838
  3892     0E5C                     u4340:
  3893     0E5C                     l2832:
  3894                           
  3895                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3896     0E5C  300A               	movlw	10
  3897     0E5D  00F6               	movwf	___awdiv@divisor
  3898     0E5E  3000               	movlw	0
  3899     0E5F  00F7               	movwf	___awdiv@divisor+1
  3900     0E60  084C               	movf	scale@scl,w
  3901     0E61  00F2               	movwf	___awmod@dividend
  3902     0E62  01F3               	clrf	___awmod@dividend+1
  3903     0E63  1BF2               	btfsc	___awmod@dividend,7
  3904     0E64  03F3               	decf	___awmod@dividend+1,f
  3905     0E65  3064               	movlw	100
  3906     0E66  00F0               	movwf	___awmod@divisor
  3907     0E67  3000               	movlw	0
  3908     0E68  00F1               	movwf	___awmod@divisor+1
  3909     0E69  160A  118A  20EC  120A  158A  	fcall	___awmod
  3910     0E6E  0871               	movf	?___awmod+1,w
  3911     0E6F  00F9               	movwf	___awdiv@dividend+1
  3912     0E70  0870               	movf	?___awmod,w
  3913     0E71  00F8               	movwf	___awdiv@dividend
  3914     0E72  160A  118A  2207  120A  158A  	fcall	___awdiv
  3915     0E77  0876               	movf	?___awdiv,w
  3916     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  3917     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  3918     0E7A  00BE               	movwf	??_scale
  3919     0E7B  3001               	movlw	1
  3920     0E7C                     u4355:
  3921     0E7C  1003               	clrc
  3922     0E7D  0DBE               	rlf	??_scale,f
  3923     0E7E  3EFF               	addlw	-1
  3924     0E7F  1D03               	skipz
  3925     0E80  2E7C               	goto	u4355
  3926     0E81  1003               	clrc
  3927     0E82  0D3E               	rlf	??_scale,w
  3928     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3929     0E84  0084               	movwf	4
  3930     0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  3931     0E8A  00BF               	movwf	??_scale+1
  3932     0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  3933     0E90  00C0               	movwf	??_scale+2
  3934     0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  3935     0E96  00C1               	movwf	??_scale+3
  3936     0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  3937     0E9C  00C2               	movwf	??_scale+4
  3938     0E9D  0842               	movf	??_scale+4,w
  3939     0E9E  00A3               	movwf	___flmul@b+3
  3940     0E9F  0841               	movf	??_scale+3,w
  3941     0EA0  00A2               	movwf	___flmul@b+2
  3942     0EA1  0840               	movf	??_scale+2,w
  3943     0EA2  00A1               	movwf	___flmul@b+1
  3944     0EA3  083F               	movf	??_scale+1,w
  3945     0EA4  00A0               	movwf	___flmul@b
  3946     0EA5  3064               	movlw	100
  3947     0EA6  00F6               	movwf	___awdiv@divisor
  3948     0EA7  3000               	movlw	0
  3949     0EA8  00F7               	movwf	___awdiv@divisor+1
  3950     0EA9  084C               	movf	scale@scl,w
  3951     0EAA  00F8               	movwf	___awdiv@dividend
  3952     0EAB  01F9               	clrf	___awdiv@dividend+1
  3953     0EAC  1BF8               	btfsc	___awdiv@dividend,7
  3954     0EAD  03F9               	decf	___awdiv@dividend+1,f
  3955     0EAE  160A  118A  2207  120A  158A  	fcall	___awdiv
  3956     0EB3  0876               	movf	?___awdiv,w
  3957     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  3958     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  3959     0EB6  00C3               	movwf	??_scale+5
  3960     0EB7  3001               	movlw	1
  3961     0EB8                     u4365:
  3962     0EB8  1003               	clrc
  3963     0EB9  0DC3               	rlf	??_scale+5,f
  3964     0EBA  3EFF               	addlw	-1
  3965     0EBB  1D03               	skipz
  3966     0EBC  2EB8               	goto	u4365
  3967     0EBD  1003               	clrc
  3968     0EBE  0D43               	rlf	??_scale+5,w
  3969     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3970     0EC0  0084               	movwf	4
  3971     0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  3972     0EC6  00C4               	movwf	??_scale+6
  3973     0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  3974     0ECC  00C5               	movwf	??_scale+7
  3975     0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  3976     0ED2  00C6               	movwf	??_scale+8
  3977     0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  3978     0ED8  00C7               	movwf	??_scale+9
  3979     0ED9  0847               	movf	??_scale+9,w
  3980     0EDA  00A7               	movwf	___flmul@a+3
  3981     0EDB  0846               	movf	??_scale+8,w
  3982     0EDC  00A6               	movwf	___flmul@a+2
  3983     0EDD  0845               	movf	??_scale+7,w
  3984     0EDE  00A5               	movwf	___flmul@a+1
  3985     0EDF  0844               	movf	??_scale+6,w
  3986     0EE0  00A4               	movwf	___flmul@a
  3987     0EE1  120A  158A  215C  120A  158A  	fcall	___flmul
  3988     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3989     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3990     0EE8  0823               	movf	?___flmul+3,w
  3991     0EE9  00CB               	movwf	_scale$1031+3
  3992     0EEA  0822               	movf	?___flmul+2,w
  3993     0EEB  00CA               	movwf	_scale$1031+2
  3994     0EEC  0821               	movf	?___flmul+1,w
  3995     0EED  00C9               	movwf	_scale$1031+1
  3996     0EEE  0820               	movf	?___flmul,w
  3997     0EEF  00C8               	movwf	_scale$1031
  3998                           
  3999                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4000     0EF0  300A               	movlw	10
  4001     0EF1  00F0               	movwf	___awmod@divisor
  4002     0EF2  3000               	movlw	0
  4003     0EF3  00F1               	movwf	___awmod@divisor+1
  4004     0EF4  084C               	movf	scale@scl,w
  4005     0EF5  00F2               	movwf	___awmod@dividend
  4006     0EF6  01F3               	clrf	___awmod@dividend+1
  4007     0EF7  1BF2               	btfsc	___awmod@dividend,7
  4008     0EF8  03F3               	decf	___awmod@dividend+1,f
  4009     0EF9  160A  118A  20EC  120A  158A  	fcall	___awmod
  4010     0EFE  0870               	movf	?___awmod,w
  4011     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4012     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4013     0F01  00BE               	movwf	??_scale
  4014     0F02  3001               	movlw	1
  4015     0F03                     u4375:
  4016     0F03  1003               	clrc
  4017     0F04  0DBE               	rlf	??_scale,f
  4018     0F05  3EFF               	addlw	-1
  4019     0F06  1D03               	skipz
  4020     0F07  2F03               	goto	u4375
  4021     0F08  1003               	clrc
  4022     0F09  0D3E               	rlf	??_scale,w
  4023     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4024     0F0B  0084               	movwf	4
  4025     0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4026     0F11  00BF               	movwf	??_scale+1
  4027     0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  4028     0F17  00C0               	movwf	??_scale+2
  4029     0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  4030     0F1D  00C1               	movwf	??_scale+3
  4031     0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  4032     0F23  00C2               	movwf	??_scale+4
  4033     0F24  0842               	movf	??_scale+4,w
  4034     0F25  00A3               	movwf	___flmul@b+3
  4035     0F26  0841               	movf	??_scale+3,w
  4036     0F27  00A2               	movwf	___flmul@b+2
  4037     0F28  0840               	movf	??_scale+2,w
  4038     0F29  00A1               	movwf	___flmul@b+1
  4039     0F2A  083F               	movf	??_scale+1,w
  4040     0F2B  00A0               	movwf	___flmul@b
  4041     0F2C  084B               	movf	_scale$1031+3,w
  4042     0F2D  00A7               	movwf	___flmul@a+3
  4043     0F2E  084A               	movf	_scale$1031+2,w
  4044     0F2F  00A6               	movwf	___flmul@a+2
  4045     0F30  0849               	movf	_scale$1031+1,w
  4046     0F31  00A5               	movwf	___flmul@a+1
  4047     0F32  0848               	movf	_scale$1031,w
  4048     0F33  00A4               	movwf	___flmul@a
  4049     0F34  120A  158A  215C  120A  158A  	fcall	___flmul
  4050     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4051     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4052     0F3B  0823               	movf	?___flmul+3,w
  4053     0F3C  00BD               	movwf	?_scale+3
  4054     0F3D  0822               	movf	?___flmul+2,w
  4055     0F3E  00BC               	movwf	?_scale+2
  4056     0F3F  0821               	movf	?___flmul+1,w
  4057     0F40  00BB               	movwf	?_scale+1
  4058     0F41  0820               	movf	?___flmul,w
  4059     0F42  00BA               	movwf	?_scale
  4060     0F43  2FFF               	goto	l291
  4061     0F44                     l2838:
  4062     0F44  084C               	movf	scale@scl,w
  4063     0F45  3A80               	xorlw	128
  4064     0F46  3E75               	addlw	-139
  4065     0F47  1C03               	skipc
  4066     0F48  2F4A               	goto	u4381
  4067     0F49  2F4B               	goto	u4380
  4068     0F4A                     u4381:
  4069     0F4A  2FD3               	goto	l2844
  4070     0F4B                     u4380:
  4071     0F4B                     l2840:
  4072                           
  4073                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4074     0F4B  300A               	movlw	10
  4075     0F4C  00F0               	movwf	___awmod@divisor
  4076     0F4D  3000               	movlw	0
  4077     0F4E  00F1               	movwf	___awmod@divisor+1
  4078     0F4F  084C               	movf	scale@scl,w
  4079     0F50  00F2               	movwf	___awmod@dividend
  4080     0F51  01F3               	clrf	___awmod@dividend+1
  4081     0F52  1BF2               	btfsc	___awmod@dividend,7
  4082     0F53  03F3               	decf	___awmod@dividend+1,f
  4083     0F54  160A  118A  20EC  120A  158A  	fcall	___awmod
  4084     0F59  0870               	movf	?___awmod,w
  4085     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4086     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4087     0F5C  00BE               	movwf	??_scale
  4088     0F5D  3001               	movlw	1
  4089     0F5E                     u4395:
  4090     0F5E  1003               	clrc
  4091     0F5F  0DBE               	rlf	??_scale,f
  4092     0F60  3EFF               	addlw	-1
  4093     0F61  1D03               	skipz
  4094     0F62  2F5E               	goto	u4395
  4095     0F63  1003               	clrc
  4096     0F64  0D3E               	rlf	??_scale,w
  4097     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4098     0F66  0084               	movwf	4
  4099     0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  4100     0F6C  00BF               	movwf	??_scale+1
  4101     0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  4102     0F72  00C0               	movwf	??_scale+2
  4103     0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  4104     0F78  00C1               	movwf	??_scale+3
  4105     0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  4106     0F7E  00C2               	movwf	??_scale+4
  4107     0F7F  0842               	movf	??_scale+4,w
  4108     0F80  00A3               	movwf	___flmul@b+3
  4109     0F81  0841               	movf	??_scale+3,w
  4110     0F82  00A2               	movwf	___flmul@b+2
  4111     0F83  0840               	movf	??_scale+2,w
  4112     0F84  00A1               	movwf	___flmul@b+1
  4113     0F85  083F               	movf	??_scale+1,w
  4114     0F86  00A0               	movwf	___flmul@b
  4115     0F87  300A               	movlw	10
  4116     0F88  00F6               	movwf	___awdiv@divisor
  4117     0F89  3000               	movlw	0
  4118     0F8A  00F7               	movwf	___awdiv@divisor+1
  4119     0F8B  084C               	movf	scale@scl,w
  4120     0F8C  00F8               	movwf	___awdiv@dividend
  4121     0F8D  01F9               	clrf	___awdiv@dividend+1
  4122     0F8E  1BF8               	btfsc	___awdiv@dividend,7
  4123     0F8F  03F9               	decf	___awdiv@dividend+1,f
  4124     0F90  160A  118A  2207  120A  158A  	fcall	___awdiv
  4125     0F95  0876               	movf	?___awdiv,w
  4126     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  4127     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  4128     0F98  00C3               	movwf	??_scale+5
  4129     0F99  3001               	movlw	1
  4130     0F9A                     u4405:
  4131     0F9A  1003               	clrc
  4132     0F9B  0DC3               	rlf	??_scale+5,f
  4133     0F9C  3EFF               	addlw	-1
  4134     0F9D  1D03               	skipz
  4135     0F9E  2F9A               	goto	u4405
  4136     0F9F  1003               	clrc
  4137     0FA0  0D43               	rlf	??_scale+5,w
  4138     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4139     0FA2  0084               	movwf	4
  4140     0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  4141     0FA8  00C4               	movwf	??_scale+6
  4142     0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4143     0FAE  00C5               	movwf	??_scale+7
  4144     0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  4145     0FB4  00C6               	movwf	??_scale+8
  4146     0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  4147     0FBA  00C7               	movwf	??_scale+9
  4148     0FBB  0847               	movf	??_scale+9,w
  4149     0FBC  00A7               	movwf	___flmul@a+3
  4150     0FBD  0846               	movf	??_scale+8,w
  4151     0FBE  00A6               	movwf	___flmul@a+2
  4152     0FBF  0845               	movf	??_scale+7,w
  4153     0FC0  00A5               	movwf	___flmul@a+1
  4154     0FC1  0844               	movf	??_scale+6,w
  4155     0FC2  00A4               	movwf	___flmul@a
  4156     0FC3  120A  158A  215C  120A  158A  	fcall	___flmul
  4157     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4158     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4159     0FCA  0823               	movf	?___flmul+3,w
  4160     0FCB  00BD               	movwf	?_scale+3
  4161     0FCC  0822               	movf	?___flmul+2,w
  4162     0FCD  00BC               	movwf	?_scale+2
  4163     0FCE  0821               	movf	?___flmul+1,w
  4164     0FCF  00BB               	movwf	?_scale+1
  4165     0FD0  0820               	movf	?___flmul,w
  4166     0FD1  00BA               	movwf	?_scale
  4167     0FD2  2FFF               	goto	l291
  4168     0FD3                     l2844:
  4169                           
  4170                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4171     0FD3  084C               	movf	scale@scl,w
  4172     0FD4  00BE               	movwf	??_scale
  4173     0FD5  3001               	movlw	1
  4174     0FD6                     u4415:
  4175     0FD6  1003               	clrc
  4176     0FD7  0DBE               	rlf	??_scale,f
  4177     0FD8  3EFF               	addlw	-1
  4178     0FD9  1D03               	skipz
  4179     0FDA  2FD6               	goto	u4415
  4180     0FDB  1003               	clrc
  4181     0FDC  0D3E               	rlf	??_scale,w
  4182     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4183     0FDE  0084               	movwf	4
  4184     0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  4185     0FE4  00BF               	movwf	??_scale+1
  4186     0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4187     0FEA  00C0               	movwf	??_scale+2
  4188     0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  4189     0FF0  00C1               	movwf	??_scale+3
  4190     0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  4191     0FF6  00C2               	movwf	??_scale+4
  4192     0FF7  0842               	movf	??_scale+4,w
  4193     0FF8  00BD               	movwf	?_scale+3
  4194     0FF9  0841               	movf	??_scale+3,w
  4195     0FFA  00BC               	movwf	?_scale+2
  4196     0FFB  0840               	movf	??_scale+2,w
  4197     0FFC  00BB               	movwf	?_scale+1
  4198     0FFD  083F               	movf	??_scale+1,w
  4199     0FFE  00BA               	movwf	?_scale
  4200     0FFF                     l291:
  4201     0FFF  0008               	return
  4202     1000                     __end_of_scale:
  4203                           
  4204                           	psect	text3
  4205     10EC                     __ptext3:	
  4206 ;; *************** function ___awmod *****************
  4207 ;; Defined at:
  4208 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  divisor         2    0[COMMON] int 
  4211 ;;  dividend        2    2[COMMON] int 
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;  sign            1    5[COMMON] unsigned char 
  4214 ;;  counter         1    4[COMMON] unsigned char 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  2    0[COMMON] int 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0, btemp+1
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4224 ;;      Params:         4       0       0       0       0
  4225 ;;      Locals:         2       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0
  4227 ;;      Totals:         6       0       0       0       0
  4228 ;;Total ram usage:        6 bytes
  4229 ;; Hardware stack levels used: 1
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_scale
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237     10EC                     ___awmod:	
  4238                           ;psect for function ___awmod
  4239                           
  4240     10EC                     l2312:	
  4241                           ;incstack = 0
  4242                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  4243                           
  4244     10EC  01F5               	clrf	___awmod@sign
  4245     10ED                     l2314:
  4246     10ED  1FF3               	btfss	___awmod@dividend+1,7
  4247     10EE  28F0               	goto	u3031
  4248     10EF  28F1               	goto	u3030
  4249     10F0                     u3031:
  4250     10F0  28F8               	goto	l2320
  4251     10F1                     u3030:
  4252     10F1                     l2316:
  4253     10F1  09F2               	comf	___awmod@dividend,f
  4254     10F2  09F3               	comf	___awmod@dividend+1,f
  4255     10F3  0AF2               	incf	___awmod@dividend,f
  4256     10F4  1903               	skipnz
  4257     10F5  0AF3               	incf	___awmod@dividend+1,f
  4258     10F6                     l2318:
  4259     10F6  01F5               	clrf	___awmod@sign
  4260     10F7  0AF5               	incf	___awmod@sign,f
  4261     10F8                     l2320:
  4262     10F8  1FF1               	btfss	___awmod@divisor+1,7
  4263     10F9  28FB               	goto	u3041
  4264     10FA  28FC               	goto	u3040
  4265     10FB                     u3041:
  4266     10FB  2901               	goto	l2324
  4267     10FC                     u3040:
  4268     10FC                     l2322:
  4269     10FC  09F0               	comf	___awmod@divisor,f
  4270     10FD  09F1               	comf	___awmod@divisor+1,f
  4271     10FE  0AF0               	incf	___awmod@divisor,f
  4272     10FF  1903               	skipnz
  4273     1100  0AF1               	incf	___awmod@divisor+1,f
  4274     1101                     l2324:
  4275     1101  0870               	movf	___awmod@divisor,w
  4276     1102  0471               	iorwf	___awmod@divisor+1,w
  4277     1103  1903               	btfsc	3,2
  4278     1104  2906               	goto	u3051
  4279     1105  2907               	goto	u3050
  4280     1106                     u3051:
  4281     1106  2936               	goto	l2342
  4282     1107                     u3050:
  4283     1107                     l2326:
  4284     1107  01F4               	clrf	___awmod@counter
  4285     1108  0AF4               	incf	___awmod@counter,f
  4286     1109  2915               	goto	l2332
  4287     110A                     l2328:
  4288     110A  3001               	movlw	1
  4289     110B                     u3065:
  4290     110B  1003               	clrc
  4291     110C  0DF0               	rlf	___awmod@divisor,f
  4292     110D  0DF1               	rlf	___awmod@divisor+1,f
  4293     110E  3EFF               	addlw	-1
  4294     110F  1D03               	skipz
  4295     1110  290B               	goto	u3065
  4296     1111                     l2330:
  4297     1111  3001               	movlw	1
  4298     1112  00FF               	movwf	btemp+1
  4299     1113  087F               	movf	btemp+1,w
  4300     1114  07F4               	addwf	___awmod@counter,f
  4301     1115                     l2332:
  4302     1115  1FF1               	btfss	___awmod@divisor+1,7
  4303     1116  2918               	goto	u3071
  4304     1117  2919               	goto	u3070
  4305     1118                     u3071:
  4306     1118  290A               	goto	l2328
  4307     1119                     u3070:
  4308     1119                     l2334:
  4309     1119  0871               	movf	___awmod@divisor+1,w
  4310     111A  0273               	subwf	___awmod@dividend+1,w
  4311     111B  1D03               	skipz
  4312     111C  291F               	goto	u3085
  4313     111D  0870               	movf	___awmod@divisor,w
  4314     111E  0272               	subwf	___awmod@dividend,w
  4315     111F                     u3085:
  4316     111F  1C03               	skipc
  4317     1120  2922               	goto	u3081
  4318     1121  2923               	goto	u3080
  4319     1122                     u3081:
  4320     1122  2929               	goto	l2338
  4321     1123                     u3080:
  4322     1123                     l2336:
  4323     1123  0870               	movf	___awmod@divisor,w
  4324     1124  02F2               	subwf	___awmod@dividend,f
  4325     1125  0871               	movf	___awmod@divisor+1,w
  4326     1126  1C03               	skipc
  4327     1127  03F3               	decf	___awmod@dividend+1,f
  4328     1128  02F3               	subwf	___awmod@dividend+1,f
  4329     1129                     l2338:
  4330     1129  3001               	movlw	1
  4331     112A                     u3095:
  4332     112A  1003               	clrc
  4333     112B  0CF1               	rrf	___awmod@divisor+1,f
  4334     112C  0CF0               	rrf	___awmod@divisor,f
  4335     112D  3EFF               	addlw	-1
  4336     112E  1D03               	skipz
  4337     112F  292A               	goto	u3095
  4338     1130                     l2340:
  4339     1130  3001               	movlw	1
  4340     1131  02F4               	subwf	___awmod@counter,f
  4341     1132  1D03               	btfss	3,2
  4342     1133  2935               	goto	u3101
  4343     1134  2936               	goto	u3100
  4344     1135                     u3101:
  4345     1135  2919               	goto	l2334
  4346     1136                     u3100:
  4347     1136                     l2342:
  4348     1136  0875               	movf	___awmod@sign,w
  4349     1137  1903               	btfsc	3,2
  4350     1138  293A               	goto	u3111
  4351     1139  293B               	goto	u3110
  4352     113A                     u3111:
  4353     113A  2940               	goto	l2346
  4354     113B                     u3110:
  4355     113B                     l2344:
  4356     113B  09F2               	comf	___awmod@dividend,f
  4357     113C  09F3               	comf	___awmod@dividend+1,f
  4358     113D  0AF2               	incf	___awmod@dividend,f
  4359     113E  1903               	skipnz
  4360     113F  0AF3               	incf	___awmod@dividend+1,f
  4361     1140                     l2346:
  4362     1140  0873               	movf	___awmod@dividend+1,w
  4363     1141  00F1               	movwf	?___awmod+1
  4364     1142  0872               	movf	___awmod@dividend,w
  4365     1143  00F0               	movwf	?___awmod
  4366     1144                     l527:
  4367     1144  0008               	return
  4368     1145                     __end_of___awmod:
  4369                           
  4370                           	psect	text4
  4371     1207                     __ptext4:	
  4372 ;; *************** function ___awdiv *****************
  4373 ;; Defined at:
  4374 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  divisor         2    6[COMMON] int 
  4377 ;;  dividend        2    8[COMMON] int 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  quotient        2   12[COMMON] int 
  4380 ;;  sign            1   11[COMMON] unsigned char 
  4381 ;;  counter         1   10[COMMON] unsigned char 
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  2    6[COMMON] int 
  4384 ;; Registers used:
  4385 ;;		wreg, status,2, status,0, btemp+1
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4391 ;;      Params:         4       0       0       0       0
  4392 ;;      Locals:         4       0       0       0       0
  4393 ;;      Temps:          0       0       0       0       0
  4394 ;;      Totals:         8       0       0       0       0
  4395 ;;Total ram usage:        8 bytes
  4396 ;; Hardware stack levels used: 1
  4397 ;; This function calls:
  4398 ;;		Nothing
  4399 ;; This function is called by:
  4400 ;;		_scale
  4401 ;;		_sprintf
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405     1207                     ___awdiv:	
  4406                           ;psect for function ___awdiv
  4407                           
  4408     1207                     l2268:	
  4409                           ;incstack = 0
  4410                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  4411                           
  4412     1207  01FB               	clrf	___awdiv@sign
  4413     1208                     l2270:
  4414     1208  1FF7               	btfss	___awdiv@divisor+1,7
  4415     1209  2A0B               	goto	u2931
  4416     120A  2A0C               	goto	u2930
  4417     120B                     u2931:
  4418     120B  2A13               	goto	l2276
  4419     120C                     u2930:
  4420     120C                     l2272:
  4421     120C  09F6               	comf	___awdiv@divisor,f
  4422     120D  09F7               	comf	___awdiv@divisor+1,f
  4423     120E  0AF6               	incf	___awdiv@divisor,f
  4424     120F  1903               	skipnz
  4425     1210  0AF7               	incf	___awdiv@divisor+1,f
  4426     1211                     l2274:
  4427     1211  01FB               	clrf	___awdiv@sign
  4428     1212  0AFB               	incf	___awdiv@sign,f
  4429     1213                     l2276:
  4430     1213  1FF9               	btfss	___awdiv@dividend+1,7
  4431     1214  2A16               	goto	u2941
  4432     1215  2A17               	goto	u2940
  4433     1216                     u2941:
  4434     1216  2A20               	goto	l2282
  4435     1217                     u2940:
  4436     1217                     l2278:
  4437     1217  09F8               	comf	___awdiv@dividend,f
  4438     1218  09F9               	comf	___awdiv@dividend+1,f
  4439     1219  0AF8               	incf	___awdiv@dividend,f
  4440     121A  1903               	skipnz
  4441     121B  0AF9               	incf	___awdiv@dividend+1,f
  4442     121C                     l2280:
  4443     121C  3001               	movlw	1
  4444     121D  00FF               	movwf	btemp+1
  4445     121E  087F               	movf	btemp+1,w
  4446     121F  06FB               	xorwf	___awdiv@sign,f
  4447     1220                     l2282:
  4448     1220  01FC               	clrf	___awdiv@quotient
  4449     1221  01FD               	clrf	___awdiv@quotient+1
  4450     1222                     l2284:
  4451     1222  0876               	movf	___awdiv@divisor,w
  4452     1223  0477               	iorwf	___awdiv@divisor+1,w
  4453     1224  1903               	btfsc	3,2
  4454     1225  2A27               	goto	u2951
  4455     1226  2A28               	goto	u2950
  4456     1227                     u2951:
  4457     1227  2A5F               	goto	l2304
  4458     1228                     u2950:
  4459     1228                     l2286:
  4460     1228  01FA               	clrf	___awdiv@counter
  4461     1229  0AFA               	incf	___awdiv@counter,f
  4462     122A  2A36               	goto	l2292
  4463     122B                     l2288:
  4464     122B  3001               	movlw	1
  4465     122C                     u2965:
  4466     122C  1003               	clrc
  4467     122D  0DF6               	rlf	___awdiv@divisor,f
  4468     122E  0DF7               	rlf	___awdiv@divisor+1,f
  4469     122F  3EFF               	addlw	-1
  4470     1230  1D03               	skipz
  4471     1231  2A2C               	goto	u2965
  4472     1232                     l2290:
  4473     1232  3001               	movlw	1
  4474     1233  00FF               	movwf	btemp+1
  4475     1234  087F               	movf	btemp+1,w
  4476     1235  07FA               	addwf	___awdiv@counter,f
  4477     1236                     l2292:
  4478     1236  1FF7               	btfss	___awdiv@divisor+1,7
  4479     1237  2A39               	goto	u2971
  4480     1238  2A3A               	goto	u2970
  4481     1239                     u2971:
  4482     1239  2A2B               	goto	l2288
  4483     123A                     u2970:
  4484     123A                     l2294:
  4485     123A  3001               	movlw	1
  4486     123B                     u2985:
  4487     123B  1003               	clrc
  4488     123C  0DFC               	rlf	___awdiv@quotient,f
  4489     123D  0DFD               	rlf	___awdiv@quotient+1,f
  4490     123E  3EFF               	addlw	-1
  4491     123F  1D03               	skipz
  4492     1240  2A3B               	goto	u2985
  4493     1241  0877               	movf	___awdiv@divisor+1,w
  4494     1242  0279               	subwf	___awdiv@dividend+1,w
  4495     1243  1D03               	skipz
  4496     1244  2A47               	goto	u2995
  4497     1245  0876               	movf	___awdiv@divisor,w
  4498     1246  0278               	subwf	___awdiv@dividend,w
  4499     1247                     u2995:
  4500     1247  1C03               	skipc
  4501     1248  2A4A               	goto	u2991
  4502     1249  2A4B               	goto	u2990
  4503     124A                     u2991:
  4504     124A  2A52               	goto	l2300
  4505     124B                     u2990:
  4506     124B                     l2296:
  4507     124B  0876               	movf	___awdiv@divisor,w
  4508     124C  02F8               	subwf	___awdiv@dividend,f
  4509     124D  0877               	movf	___awdiv@divisor+1,w
  4510     124E  1C03               	skipc
  4511     124F  03F9               	decf	___awdiv@dividend+1,f
  4512     1250  02F9               	subwf	___awdiv@dividend+1,f
  4513     1251                     l2298:
  4514     1251  147C               	bsf	___awdiv@quotient,0
  4515     1252                     l2300:
  4516     1252  3001               	movlw	1
  4517     1253                     u3005:
  4518     1253  1003               	clrc
  4519     1254  0CF7               	rrf	___awdiv@divisor+1,f
  4520     1255  0CF6               	rrf	___awdiv@divisor,f
  4521     1256  3EFF               	addlw	-1
  4522     1257  1D03               	skipz
  4523     1258  2A53               	goto	u3005
  4524     1259                     l2302:
  4525     1259  3001               	movlw	1
  4526     125A  02FA               	subwf	___awdiv@counter,f
  4527     125B  1D03               	btfss	3,2
  4528     125C  2A5E               	goto	u3011
  4529     125D  2A5F               	goto	u3010
  4530     125E                     u3011:
  4531     125E  2A3A               	goto	l2294
  4532     125F                     u3010:
  4533     125F                     l2304:
  4534     125F  087B               	movf	___awdiv@sign,w
  4535     1260  1903               	btfsc	3,2
  4536     1261  2A63               	goto	u3021
  4537     1262  2A64               	goto	u3020
  4538     1263                     u3021:
  4539     1263  2A69               	goto	l2308
  4540     1264                     u3020:
  4541     1264                     l2306:
  4542     1264  09FC               	comf	___awdiv@quotient,f
  4543     1265  09FD               	comf	___awdiv@quotient+1,f
  4544     1266  0AFC               	incf	___awdiv@quotient,f
  4545     1267  1903               	skipnz
  4546     1268  0AFD               	incf	___awdiv@quotient+1,f
  4547     1269                     l2308:
  4548     1269  087D               	movf	___awdiv@quotient+1,w
  4549     126A  00F7               	movwf	?___awdiv+1
  4550     126B  087C               	movf	___awdiv@quotient,w
  4551     126C  00F6               	movwf	?___awdiv
  4552     126D                     l514:
  4553     126D  0008               	return
  4554     126E                     __end_of___awdiv:
  4555                           
  4556                           	psect	text5
  4557     1D39                     __ptext5:	
  4558 ;; *************** function _isdigit *****************
  4559 ;; Defined at:
  4560 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  c               1    wreg     unsigned char 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  c               1    1[COMMON] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;		None               void
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4574 ;;      Params:         0       0       0       0       0
  4575 ;;      Locals:         2       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0
  4577 ;;      Totals:         2       0       0       0       0
  4578 ;;Total ram usage:        2 bytes
  4579 ;; Hardware stack levels used: 1
  4580 ;; This function calls:
  4581 ;;		Nothing
  4582 ;; This function is called by:
  4583 ;;		_sprintf
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587     1D39                     _isdigit:	
  4588                           ;psect for function _isdigit
  4589                           
  4590                           
  4591                           ;incstack = 0
  4592                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4593                           ;isdigit@c stored from wreg
  4594     1D39  00F1               	movwf	isdigit@c
  4595     1D3A                     l2848:
  4596     1D3A  01F0               	clrf	_isdigit$836
  4597     1D3B                     l2850:
  4598     1D3B  303A               	movlw	58
  4599     1D3C  0271               	subwf	isdigit@c,w
  4600     1D3D  1803               	skipnc
  4601     1D3E  2D40               	goto	u4421
  4602     1D3F  2D41               	goto	u4420
  4603     1D40                     u4421:
  4604     1D40  2D49               	goto	l2856
  4605     1D41                     u4420:
  4606     1D41                     l2852:
  4607     1D41  3030               	movlw	48
  4608     1D42  0271               	subwf	isdigit@c,w
  4609     1D43  1C03               	skipc
  4610     1D44  2D46               	goto	u4431
  4611     1D45  2D47               	goto	u4430
  4612     1D46                     u4431:
  4613     1D46  2D49               	goto	l2856
  4614     1D47                     u4430:
  4615     1D47                     l2854:
  4616     1D47  01F0               	clrf	_isdigit$836
  4617     1D48  0AF0               	incf	_isdigit$836,f
  4618     1D49                     l2856:
  4619     1D49  0C70               	rrf	_isdigit$836,w
  4620     1D4A                     l848:
  4621     1D4A  0008               	return
  4622     1D4B                     __end_of_isdigit:
  4623                           
  4624                           	psect	text6
  4625     139D                     __ptext6:	
  4626 ;; *************** function _fround *****************
  4627 ;; Defined at:
  4628 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  prec            1    wreg     unsigned char 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  prec            1   45[BANK0 ] unsigned char 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  4   26[BANK0 ] unsigned char 
  4635 ;; Registers used:
  4636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4642 ;;      Params:         0       4       0       0       0
  4643 ;;      Locals:         0       9       0       0       0
  4644 ;;      Temps:          0       7       0       0       0
  4645 ;;      Totals:         0      20       0       0       0
  4646 ;;Total ram usage:       20 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 2
  4649 ;; This function calls:
  4650 ;;		___flmul
  4651 ;;		___lwdiv
  4652 ;;		___lwmod
  4653 ;; This function is called by:
  4654 ;;		_sprintf
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658     139D                     _fround:	
  4659                           ;psect for function _fround
  4660                           
  4661                           
  4662                           ;incstack = 0
  4663                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4664                           ;fround@prec stored from wreg
  4665     139D  1283               	bcf	3,5	;RP0=0, select bank0
  4666     139E  1303               	bcf	3,6	;RP1=0, select bank0
  4667     139F  00CD               	movwf	fround@prec
  4668     13A0                     l2790:
  4669                           
  4670                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4671     13A0  306E               	movlw	110
  4672     13A1  024D               	subwf	fround@prec,w
  4673     13A2  1C03               	skipc
  4674     13A3  2BA5               	goto	u4171
  4675     13A4  2BA6               	goto	u4170
  4676     13A5                     u4171:
  4677     13A5  2CB3               	goto	l2798
  4678     13A6                     u4170:
  4679     13A6                     l2792:
  4680                           
  4681                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4682     13A6  303F               	movlw	63
  4683     13A7  00A3               	movwf	___flmul@b+3
  4684     13A8  3000               	movlw	0
  4685     13A9  00A2               	movwf	___flmul@b+2
  4686     13AA  3000               	movlw	0
  4687     13AB  00A1               	movwf	___flmul@b+1
  4688     13AC  3000               	movlw	0
  4689     13AD  00A0               	movwf	___flmul@b
  4690     13AE  3064               	movlw	100
  4691     13AF  00F5               	movwf	___lwdiv@divisor
  4692     13B0  3000               	movlw	0
  4693     13B1  00F6               	movwf	___lwdiv@divisor+1
  4694     13B2  084D               	movf	fround@prec,w
  4695     13B3  00BE               	movwf	??_fround
  4696     13B4  01BF               	clrf	??_fround+1
  4697     13B5  083E               	movf	??_fround,w
  4698     13B6  00F7               	movwf	___lwdiv@dividend
  4699     13B7  083F               	movf	??_fround+1,w
  4700     13B8  00F8               	movwf	___lwdiv@dividend+1
  4701     13B9  160A  158A  26C9  160A  118A  	fcall	___lwdiv
  4702     13BE  0875               	movf	?___lwdiv,w
  4703     13BF  1283               	bcf	3,5	;RP0=0, select bank0
  4704     13C0  1303               	bcf	3,6	;RP1=0, select bank0
  4705     13C1  00C0               	movwf	??_fround+2
  4706     13C2  3001               	movlw	1
  4707     13C3                     u4185:
  4708     13C3  1003               	clrc
  4709     13C4  0DC0               	rlf	??_fround+2,f
  4710     13C5  3EFF               	addlw	-1
  4711     13C6  1D03               	skipz
  4712     13C7  2BC3               	goto	u4185
  4713     13C8  1003               	clrc
  4714     13C9  0D40               	rlf	??_fround+2,w
  4715     13CA  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4716     13CB  0084               	movwf	4
  4717     13CC  160A  118A  200A  160A  118A  	fcall	stringdir
  4718     13D1  00C1               	movwf	??_fround+3
  4719     13D2  160A  118A  200A  160A  118A  	fcall	stringdir
  4720     13D7  00C2               	movwf	??_fround+4
  4721     13D8  160A  118A  200A  160A  118A  	fcall	stringdir
  4722     13DD  00C3               	movwf	??_fround+5
  4723     13DE  160A  118A  200A  160A  118A  	fcall	stringdir
  4724     13E3  00C4               	movwf	??_fround+6
  4725     13E4  0844               	movf	??_fround+6,w
  4726     13E5  00A7               	movwf	___flmul@a+3
  4727     13E6  0843               	movf	??_fround+5,w
  4728     13E7  00A6               	movwf	___flmul@a+2
  4729     13E8  0842               	movf	??_fround+4,w
  4730     13E9  00A5               	movwf	___flmul@a+1
  4731     13EA  0841               	movf	??_fround+3,w
  4732     13EB  00A4               	movwf	___flmul@a
  4733     13EC  120A  158A  215C  160A  118A  	fcall	___flmul
  4734     13F1  1283               	bcf	3,5	;RP0=0, select bank0
  4735     13F2  1303               	bcf	3,6	;RP1=0, select bank0
  4736     13F3  0823               	movf	?___flmul+3,w
  4737     13F4  00CC               	movwf	_fround$1029+3
  4738     13F5  0822               	movf	?___flmul+2,w
  4739     13F6  00CB               	movwf	_fround$1029+2
  4740     13F7  0821               	movf	?___flmul+1,w
  4741     13F8  00CA               	movwf	_fround$1029+1
  4742     13F9  0820               	movf	?___flmul,w
  4743     13FA  00C9               	movwf	_fround$1029
  4744                           
  4745                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4746     13FB  300A               	movlw	10
  4747     13FC  00F5               	movwf	___lwdiv@divisor
  4748     13FD  3000               	movlw	0
  4749     13FE  00F6               	movwf	___lwdiv@divisor+1
  4750     13FF  084D               	movf	fround@prec,w
  4751     1400  00BE               	movwf	??_fround
  4752     1401  01BF               	clrf	??_fround+1
  4753     1402  083E               	movf	??_fround,w
  4754     1403  00F2               	movwf	___lwmod@dividend
  4755     1404  083F               	movf	??_fround+1,w
  4756     1405  00F3               	movwf	___lwmod@dividend+1
  4757     1406  3064               	movlw	100
  4758     1407  00F0               	movwf	___lwmod@divisor
  4759     1408  3000               	movlw	0
  4760     1409  00F1               	movwf	___lwmod@divisor+1
  4761     140A  160A  118A  20B2  160A  118A  	fcall	___lwmod
  4762     140F  0871               	movf	?___lwmod+1,w
  4763     1410  00F8               	movwf	___lwdiv@dividend+1
  4764     1411  0870               	movf	?___lwmod,w
  4765     1412  00F7               	movwf	___lwdiv@dividend
  4766     1413  160A  158A  26C9  160A  118A  	fcall	___lwdiv
  4767     1418  0875               	movf	?___lwdiv,w
  4768     1419  1283               	bcf	3,5	;RP0=0, select bank0
  4769     141A  1303               	bcf	3,6	;RP1=0, select bank0
  4770     141B  00C0               	movwf	??_fround+2
  4771     141C  3001               	movlw	1
  4772     141D                     u4195:
  4773     141D  1003               	clrc
  4774     141E  0DC0               	rlf	??_fround+2,f
  4775     141F  3EFF               	addlw	-1
  4776     1420  1D03               	skipz
  4777     1421  2C1D               	goto	u4195
  4778     1422  1003               	clrc
  4779     1423  0D40               	rlf	??_fround+2,w
  4780     1424  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4781     1425  0084               	movwf	4
  4782     1426  160A  118A  200A  160A  118A  	fcall	stringdir
  4783     142B  00C1               	movwf	??_fround+3
  4784     142C  160A  118A  200A  160A  118A  	fcall	stringdir
  4785     1431  00C2               	movwf	??_fround+4
  4786     1432  160A  118A  200A  160A  118A  	fcall	stringdir
  4787     1437  00C3               	movwf	??_fround+5
  4788     1438  160A  118A  200A  160A  118A  	fcall	stringdir
  4789     143D  00C4               	movwf	??_fround+6
  4790     143E  0844               	movf	??_fround+6,w
  4791     143F  00A3               	movwf	___flmul@b+3
  4792     1440  0843               	movf	??_fround+5,w
  4793     1441  00A2               	movwf	___flmul@b+2
  4794     1442  0842               	movf	??_fround+4,w
  4795     1443  00A1               	movwf	___flmul@b+1
  4796     1444  0841               	movf	??_fround+3,w
  4797     1445  00A0               	movwf	___flmul@b
  4798     1446  084C               	movf	_fround$1029+3,w
  4799     1447  00A7               	movwf	___flmul@a+3
  4800     1448  084B               	movf	_fround$1029+2,w
  4801     1449  00A6               	movwf	___flmul@a+2
  4802     144A  084A               	movf	_fround$1029+1,w
  4803     144B  00A5               	movwf	___flmul@a+1
  4804     144C  0849               	movf	_fround$1029,w
  4805     144D  00A4               	movwf	___flmul@a
  4806     144E  120A  158A  215C  160A  118A  	fcall	___flmul
  4807     1453  1283               	bcf	3,5	;RP0=0, select bank0
  4808     1454  1303               	bcf	3,6	;RP1=0, select bank0
  4809     1455  0823               	movf	?___flmul+3,w
  4810     1456  00C8               	movwf	_fround$1030+3
  4811     1457  0822               	movf	?___flmul+2,w
  4812     1458  00C7               	movwf	_fround$1030+2
  4813     1459  0821               	movf	?___flmul+1,w
  4814     145A  00C6               	movwf	_fround$1030+1
  4815     145B  0820               	movf	?___flmul,w
  4816     145C  00C5               	movwf	_fround$1030
  4817                           
  4818                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4819     145D  300A               	movlw	10
  4820     145E  00F0               	movwf	___lwmod@divisor
  4821     145F  3000               	movlw	0
  4822     1460  00F1               	movwf	___lwmod@divisor+1
  4823     1461  084D               	movf	fround@prec,w
  4824     1462  00BE               	movwf	??_fround
  4825     1463  01BF               	clrf	??_fround+1
  4826     1464  083E               	movf	??_fround,w
  4827     1465  00F2               	movwf	___lwmod@dividend
  4828     1466  083F               	movf	??_fround+1,w
  4829     1467  00F3               	movwf	___lwmod@dividend+1
  4830     1468  160A  118A  20B2  160A  118A  	fcall	___lwmod
  4831     146D  0870               	movf	?___lwmod,w
  4832     146E  1283               	bcf	3,5	;RP0=0, select bank0
  4833     146F  1303               	bcf	3,6	;RP1=0, select bank0
  4834     1470  00C0               	movwf	??_fround+2
  4835     1471  3001               	movlw	1
  4836     1472                     u4205:
  4837     1472  1003               	clrc
  4838     1473  0DC0               	rlf	??_fround+2,f
  4839     1474  3EFF               	addlw	-1
  4840     1475  1D03               	skipz
  4841     1476  2C72               	goto	u4205
  4842     1477  1003               	clrc
  4843     1478  0D40               	rlf	??_fround+2,w
  4844     1479  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4845     147A  0084               	movwf	4
  4846     147B  160A  118A  200A  160A  118A  	fcall	stringdir
  4847     1480  00C1               	movwf	??_fround+3
  4848     1481  160A  118A  200A  160A  118A  	fcall	stringdir
  4849     1486  00C2               	movwf	??_fround+4
  4850     1487  160A  118A  200A  160A  118A  	fcall	stringdir
  4851     148C  00C3               	movwf	??_fround+5
  4852     148D  160A  118A  200A  160A  118A  	fcall	stringdir
  4853     1492  00C4               	movwf	??_fround+6
  4854     1493  0844               	movf	??_fround+6,w
  4855     1494  00A3               	movwf	___flmul@b+3
  4856     1495  0843               	movf	??_fround+5,w
  4857     1496  00A2               	movwf	___flmul@b+2
  4858     1497  0842               	movf	??_fround+4,w
  4859     1498  00A1               	movwf	___flmul@b+1
  4860     1499  0841               	movf	??_fround+3,w
  4861     149A  00A0               	movwf	___flmul@b
  4862     149B  0848               	movf	_fround$1030+3,w
  4863     149C  00A7               	movwf	___flmul@a+3
  4864     149D  0847               	movf	_fround$1030+2,w
  4865     149E  00A6               	movwf	___flmul@a+2
  4866     149F  0846               	movf	_fround$1030+1,w
  4867     14A0  00A5               	movwf	___flmul@a+1
  4868     14A1  0845               	movf	_fround$1030,w
  4869     14A2  00A4               	movwf	___flmul@a
  4870     14A3  120A  158A  215C  160A  118A  	fcall	___flmul
  4871     14A8  1283               	bcf	3,5	;RP0=0, select bank0
  4872     14A9  1303               	bcf	3,6	;RP1=0, select bank0
  4873     14AA  0823               	movf	?___flmul+3,w
  4874     14AB  00BD               	movwf	?_fround+3
  4875     14AC  0822               	movf	?___flmul+2,w
  4876     14AD  00BC               	movwf	?_fround+2
  4877     14AE  0821               	movf	?___flmul+1,w
  4878     14AF  00BB               	movwf	?_fround+1
  4879     14B0  0820               	movf	?___flmul,w
  4880     14B1  00BA               	movwf	?_fround
  4881     14B2  2DA7               	goto	l284
  4882     14B3                     l2798:
  4883     14B3  300B               	movlw	11
  4884     14B4  024D               	subwf	fround@prec,w
  4885     14B5  1C03               	skipc
  4886     14B6  2CB8               	goto	u4211
  4887     14B7  2CB9               	goto	u4210
  4888     14B8                     u4211:
  4889     14B8  2D64               	goto	l2804
  4890     14B9                     u4210:
  4891     14B9                     l2800:
  4892                           
  4893                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4894     14B9  303F               	movlw	63
  4895     14BA  00A3               	movwf	___flmul@b+3
  4896     14BB  3000               	movlw	0
  4897     14BC  00A2               	movwf	___flmul@b+2
  4898     14BD  3000               	movlw	0
  4899     14BE  00A1               	movwf	___flmul@b+1
  4900     14BF  3000               	movlw	0
  4901     14C0  00A0               	movwf	___flmul@b
  4902     14C1  300A               	movlw	10
  4903     14C2  00F5               	movwf	___lwdiv@divisor
  4904     14C3  3000               	movlw	0
  4905     14C4  00F6               	movwf	___lwdiv@divisor+1
  4906     14C5  084D               	movf	fround@prec,w
  4907     14C6  00BE               	movwf	??_fround
  4908     14C7  01BF               	clrf	??_fround+1
  4909     14C8  083E               	movf	??_fround,w
  4910     14C9  00F7               	movwf	___lwdiv@dividend
  4911     14CA  083F               	movf	??_fround+1,w
  4912     14CB  00F8               	movwf	___lwdiv@dividend+1
  4913     14CC  160A  158A  26C9  160A  118A  	fcall	___lwdiv
  4914     14D1  0875               	movf	?___lwdiv,w
  4915     14D2  1283               	bcf	3,5	;RP0=0, select bank0
  4916     14D3  1303               	bcf	3,6	;RP1=0, select bank0
  4917     14D4  00C0               	movwf	??_fround+2
  4918     14D5  3001               	movlw	1
  4919     14D6                     u4225:
  4920     14D6  1003               	clrc
  4921     14D7  0DC0               	rlf	??_fround+2,f
  4922     14D8  3EFF               	addlw	-1
  4923     14D9  1D03               	skipz
  4924     14DA  2CD6               	goto	u4225
  4925     14DB  1003               	clrc
  4926     14DC  0D40               	rlf	??_fround+2,w
  4927     14DD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4928     14DE  0084               	movwf	4
  4929     14DF  160A  118A  200A  160A  118A  	fcall	stringdir
  4930     14E4  00C1               	movwf	??_fround+3
  4931     14E5  160A  118A  200A  160A  118A  	fcall	stringdir
  4932     14EA  00C2               	movwf	??_fround+4
  4933     14EB  160A  118A  200A  160A  118A  	fcall	stringdir
  4934     14F0  00C3               	movwf	??_fround+5
  4935     14F1  160A  118A  200A  160A  118A  	fcall	stringdir
  4936     14F6  00C4               	movwf	??_fround+6
  4937     14F7  0844               	movf	??_fround+6,w
  4938     14F8  00A7               	movwf	___flmul@a+3
  4939     14F9  0843               	movf	??_fround+5,w
  4940     14FA  00A6               	movwf	___flmul@a+2
  4941     14FB  0842               	movf	??_fround+4,w
  4942     14FC  00A5               	movwf	___flmul@a+1
  4943     14FD  0841               	movf	??_fround+3,w
  4944     14FE  00A4               	movwf	___flmul@a
  4945     14FF  120A  158A  215C  160A  118A  	fcall	___flmul
  4946     1504  1283               	bcf	3,5	;RP0=0, select bank0
  4947     1505  1303               	bcf	3,6	;RP1=0, select bank0
  4948     1506  0823               	movf	?___flmul+3,w
  4949     1507  00CC               	movwf	_fround$1029+3
  4950     1508  0822               	movf	?___flmul+2,w
  4951     1509  00CB               	movwf	_fround$1029+2
  4952     150A  0821               	movf	?___flmul+1,w
  4953     150B  00CA               	movwf	_fround$1029+1
  4954     150C  0820               	movf	?___flmul,w
  4955     150D  00C9               	movwf	_fround$1029
  4956                           
  4957                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4958     150E  300A               	movlw	10
  4959     150F  00F0               	movwf	___lwmod@divisor
  4960     1510  3000               	movlw	0
  4961     1511  00F1               	movwf	___lwmod@divisor+1
  4962     1512  084D               	movf	fround@prec,w
  4963     1513  00BE               	movwf	??_fround
  4964     1514  01BF               	clrf	??_fround+1
  4965     1515  083E               	movf	??_fround,w
  4966     1516  00F2               	movwf	___lwmod@dividend
  4967     1517  083F               	movf	??_fround+1,w
  4968     1518  00F3               	movwf	___lwmod@dividend+1
  4969     1519  160A  118A  20B2  160A  118A  	fcall	___lwmod
  4970     151E  0870               	movf	?___lwmod,w
  4971     151F  1283               	bcf	3,5	;RP0=0, select bank0
  4972     1520  1303               	bcf	3,6	;RP1=0, select bank0
  4973     1521  00C0               	movwf	??_fround+2
  4974     1522  3001               	movlw	1
  4975     1523                     u4235:
  4976     1523  1003               	clrc
  4977     1524  0DC0               	rlf	??_fround+2,f
  4978     1525  3EFF               	addlw	-1
  4979     1526  1D03               	skipz
  4980     1527  2D23               	goto	u4235
  4981     1528  1003               	clrc
  4982     1529  0D40               	rlf	??_fround+2,w
  4983     152A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4984     152B  0084               	movwf	4
  4985     152C  160A  118A  200A  160A  118A  	fcall	stringdir
  4986     1531  00C1               	movwf	??_fround+3
  4987     1532  160A  118A  200A  160A  118A  	fcall	stringdir
  4988     1537  00C2               	movwf	??_fround+4
  4989     1538  160A  118A  200A  160A  118A  	fcall	stringdir
  4990     153D  00C3               	movwf	??_fround+5
  4991     153E  160A  118A  200A  160A  118A  	fcall	stringdir
  4992     1543  00C4               	movwf	??_fround+6
  4993     1544  0844               	movf	??_fround+6,w
  4994     1545  00A3               	movwf	___flmul@b+3
  4995     1546  0843               	movf	??_fround+5,w
  4996     1547  00A2               	movwf	___flmul@b+2
  4997     1548  0842               	movf	??_fround+4,w
  4998     1549  00A1               	movwf	___flmul@b+1
  4999     154A  0841               	movf	??_fround+3,w
  5000     154B  00A0               	movwf	___flmul@b
  5001     154C  084C               	movf	_fround$1029+3,w
  5002     154D  00A7               	movwf	___flmul@a+3
  5003     154E  084B               	movf	_fround$1029+2,w
  5004     154F  00A6               	movwf	___flmul@a+2
  5005     1550  084A               	movf	_fround$1029+1,w
  5006     1551  00A5               	movwf	___flmul@a+1
  5007     1552  0849               	movf	_fround$1029,w
  5008     1553  00A4               	movwf	___flmul@a
  5009     1554  120A  158A  215C  160A  118A  	fcall	___flmul
  5010     1559  1283               	bcf	3,5	;RP0=0, select bank0
  5011     155A  1303               	bcf	3,6	;RP1=0, select bank0
  5012     155B  0823               	movf	?___flmul+3,w
  5013     155C  00BD               	movwf	?_fround+3
  5014     155D  0822               	movf	?___flmul+2,w
  5015     155E  00BC               	movwf	?_fround+2
  5016     155F  0821               	movf	?___flmul+1,w
  5017     1560  00BB               	movwf	?_fround+1
  5018     1561  0820               	movf	?___flmul,w
  5019     1562  00BA               	movwf	?_fround
  5020     1563  2DA7               	goto	l284
  5021     1564                     l2804:
  5022                           
  5023                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5024     1564  303F               	movlw	63
  5025     1565  00A3               	movwf	___flmul@b+3
  5026     1566  3000               	movlw	0
  5027     1567  00A2               	movwf	___flmul@b+2
  5028     1568  3000               	movlw	0
  5029     1569  00A1               	movwf	___flmul@b+1
  5030     156A  3000               	movlw	0
  5031     156B  00A0               	movwf	___flmul@b
  5032     156C  084D               	movf	fround@prec,w
  5033     156D  00BE               	movwf	??_fround
  5034     156E  3001               	movlw	1
  5035     156F                     u4245:
  5036     156F  1003               	clrc
  5037     1570  0DBE               	rlf	??_fround,f
  5038     1571  3EFF               	addlw	-1
  5039     1572  1D03               	skipz
  5040     1573  2D6F               	goto	u4245
  5041     1574  1003               	clrc
  5042     1575  0D3E               	rlf	??_fround,w
  5043     1576  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5044     1577  0084               	movwf	4
  5045     1578  160A  118A  200A  160A  118A  	fcall	stringdir
  5046     157D  00BF               	movwf	??_fround+1
  5047     157E  160A  118A  200A  160A  118A  	fcall	stringdir
  5048     1583  00C0               	movwf	??_fround+2
  5049     1584  160A  118A  200A  160A  118A  	fcall	stringdir
  5050     1589  00C1               	movwf	??_fround+3
  5051     158A  160A  118A  200A  160A  118A  	fcall	stringdir
  5052     158F  00C2               	movwf	??_fround+4
  5053     1590  0842               	movf	??_fround+4,w
  5054     1591  00A7               	movwf	___flmul@a+3
  5055     1592  0841               	movf	??_fround+3,w
  5056     1593  00A6               	movwf	___flmul@a+2
  5057     1594  0840               	movf	??_fround+2,w
  5058     1595  00A5               	movwf	___flmul@a+1
  5059     1596  083F               	movf	??_fround+1,w
  5060     1597  00A4               	movwf	___flmul@a
  5061     1598  120A  158A  215C  160A  118A  	fcall	___flmul
  5062     159D  1283               	bcf	3,5	;RP0=0, select bank0
  5063     159E  1303               	bcf	3,6	;RP1=0, select bank0
  5064     159F  0823               	movf	?___flmul+3,w
  5065     15A0  00BD               	movwf	?_fround+3
  5066     15A1  0822               	movf	?___flmul+2,w
  5067     15A2  00BC               	movwf	?_fround+2
  5068     15A3  0821               	movf	?___flmul+1,w
  5069     15A4  00BB               	movwf	?_fround+1
  5070     15A5  0820               	movf	?___flmul,w
  5071     15A6  00BA               	movwf	?_fround
  5072     15A7                     l284:
  5073     15A7  0008               	return
  5074     15A8                     __end_of_fround:
  5075                           
  5076                           	psect	text7
  5077     10B2                     __ptext7:	
  5078 ;; *************** function ___lwmod *****************
  5079 ;; Defined at:
  5080 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  divisor         2    0[COMMON] unsigned int 
  5083 ;;  dividend        2    2[COMMON] unsigned int 
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;  counter         1    4[COMMON] unsigned char 
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  2    0[COMMON] unsigned int 
  5088 ;; Registers used:
  5089 ;;		wreg, status,2, status,0, btemp+1
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5095 ;;      Params:         4       0       0       0       0
  5096 ;;      Locals:         1       0       0       0       0
  5097 ;;      Temps:          0       0       0       0       0
  5098 ;;      Totals:         5       0       0       0       0
  5099 ;;Total ram usage:        5 bytes
  5100 ;; Hardware stack levels used: 1
  5101 ;; This function calls:
  5102 ;;		Nothing
  5103 ;; This function is called by:
  5104 ;;		_fround
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108     10B2                     ___lwmod:	
  5109                           ;psect for function ___lwmod
  5110                           
  5111     10B2                     l2376:	
  5112                           ;incstack = 0
  5113                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  5114                           
  5115     10B2  0870               	movf	___lwmod@divisor,w
  5116     10B3  0471               	iorwf	___lwmod@divisor+1,w
  5117     10B4  1903               	btfsc	3,2
  5118     10B5  28B7               	goto	u3191
  5119     10B6  28B8               	goto	u3190
  5120     10B7                     u3191:
  5121     10B7  28E7               	goto	l2394
  5122     10B8                     u3190:
  5123     10B8                     l2378:
  5124     10B8  01F4               	clrf	___lwmod@counter
  5125     10B9  0AF4               	incf	___lwmod@counter,f
  5126     10BA  28C6               	goto	l2384
  5127     10BB                     l2380:
  5128     10BB  3001               	movlw	1
  5129     10BC                     u3205:
  5130     10BC  1003               	clrc
  5131     10BD  0DF0               	rlf	___lwmod@divisor,f
  5132     10BE  0DF1               	rlf	___lwmod@divisor+1,f
  5133     10BF  3EFF               	addlw	-1
  5134     10C0  1D03               	skipz
  5135     10C1  28BC               	goto	u3205
  5136     10C2                     l2382:
  5137     10C2  3001               	movlw	1
  5138     10C3  00FF               	movwf	btemp+1
  5139     10C4  087F               	movf	btemp+1,w
  5140     10C5  07F4               	addwf	___lwmod@counter,f
  5141     10C6                     l2384:
  5142     10C6  1FF1               	btfss	___lwmod@divisor+1,7
  5143     10C7  28C9               	goto	u3211
  5144     10C8  28CA               	goto	u3210
  5145     10C9                     u3211:
  5146     10C9  28BB               	goto	l2380
  5147     10CA                     u3210:
  5148     10CA                     l2386:
  5149     10CA  0871               	movf	___lwmod@divisor+1,w
  5150     10CB  0273               	subwf	___lwmod@dividend+1,w
  5151     10CC  1D03               	skipz
  5152     10CD  28D0               	goto	u3225
  5153     10CE  0870               	movf	___lwmod@divisor,w
  5154     10CF  0272               	subwf	___lwmod@dividend,w
  5155     10D0                     u3225:
  5156     10D0  1C03               	skipc
  5157     10D1  28D3               	goto	u3221
  5158     10D2  28D4               	goto	u3220
  5159     10D3                     u3221:
  5160     10D3  28DA               	goto	l2390
  5161     10D4                     u3220:
  5162     10D4                     l2388:
  5163     10D4  0870               	movf	___lwmod@divisor,w
  5164     10D5  02F2               	subwf	___lwmod@dividend,f
  5165     10D6  0871               	movf	___lwmod@divisor+1,w
  5166     10D7  1C03               	skipc
  5167     10D8  03F3               	decf	___lwmod@dividend+1,f
  5168     10D9  02F3               	subwf	___lwmod@dividend+1,f
  5169     10DA                     l2390:
  5170     10DA  3001               	movlw	1
  5171     10DB                     u3235:
  5172     10DB  1003               	clrc
  5173     10DC  0CF1               	rrf	___lwmod@divisor+1,f
  5174     10DD  0CF0               	rrf	___lwmod@divisor,f
  5175     10DE  3EFF               	addlw	-1
  5176     10DF  1D03               	skipz
  5177     10E0  28DB               	goto	u3235
  5178     10E1                     l2392:
  5179     10E1  3001               	movlw	1
  5180     10E2  02F4               	subwf	___lwmod@counter,f
  5181     10E3  1D03               	btfss	3,2
  5182     10E4  28E6               	goto	u3241
  5183     10E5  28E7               	goto	u3240
  5184     10E6                     u3241:
  5185     10E6  28CA               	goto	l2386
  5186     10E7                     u3240:
  5187     10E7                     l2394:
  5188     10E7  0873               	movf	___lwmod@dividend+1,w
  5189     10E8  00F1               	movwf	?___lwmod+1
  5190     10E9  0872               	movf	___lwmod@dividend,w
  5191     10EA  00F0               	movwf	?___lwmod
  5192     10EB                     l677:
  5193     10EB  0008               	return
  5194     10EC                     __end_of___lwmod:
  5195                           
  5196                           	psect	text8
  5197     1EC9                     __ptext8:	
  5198 ;; *************** function ___lwdiv *****************
  5199 ;; Defined at:
  5200 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  divisor         2    5[COMMON] unsigned int 
  5203 ;;  dividend        2    7[COMMON] unsigned int 
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;  quotient        2    9[COMMON] unsigned int 
  5206 ;;  counter         1   11[COMMON] unsigned char 
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  2    5[COMMON] unsigned int 
  5209 ;; Registers used:
  5210 ;;		wreg, status,2, status,0, btemp+1
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5216 ;;      Params:         4       0       0       0       0
  5217 ;;      Locals:         3       0       0       0       0
  5218 ;;      Temps:          0       0       0       0       0
  5219 ;;      Totals:         7       0       0       0       0
  5220 ;;Total ram usage:        7 bytes
  5221 ;; Hardware stack levels used: 1
  5222 ;; This function calls:
  5223 ;;		Nothing
  5224 ;; This function is called by:
  5225 ;;		_fround
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229     1EC9                     ___lwdiv:	
  5230                           ;psect for function ___lwdiv
  5231                           
  5232     1EC9                     l2350:	
  5233                           ;incstack = 0
  5234                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  5235                           
  5236     1EC9  01F9               	clrf	___lwdiv@quotient
  5237     1ECA  01FA               	clrf	___lwdiv@quotient+1
  5238     1ECB                     l2352:
  5239     1ECB  0875               	movf	___lwdiv@divisor,w
  5240     1ECC  0476               	iorwf	___lwdiv@divisor+1,w
  5241     1ECD  1903               	btfsc	3,2
  5242     1ECE  2ED0               	goto	u3121
  5243     1ECF  2ED1               	goto	u3120
  5244     1ED0                     u3121:
  5245     1ED0  2F08               	goto	l2372
  5246     1ED1                     u3120:
  5247     1ED1                     l2354:
  5248     1ED1  01FB               	clrf	___lwdiv@counter
  5249     1ED2  0AFB               	incf	___lwdiv@counter,f
  5250     1ED3  2EDF               	goto	l2360
  5251     1ED4                     l2356:
  5252     1ED4  3001               	movlw	1
  5253     1ED5                     u3135:
  5254     1ED5  1003               	clrc
  5255     1ED6  0DF5               	rlf	___lwdiv@divisor,f
  5256     1ED7  0DF6               	rlf	___lwdiv@divisor+1,f
  5257     1ED8  3EFF               	addlw	-1
  5258     1ED9  1D03               	skipz
  5259     1EDA  2ED5               	goto	u3135
  5260     1EDB                     l2358:
  5261     1EDB  3001               	movlw	1
  5262     1EDC  00FF               	movwf	btemp+1
  5263     1EDD  087F               	movf	btemp+1,w
  5264     1EDE  07FB               	addwf	___lwdiv@counter,f
  5265     1EDF                     l2360:
  5266     1EDF  1FF6               	btfss	___lwdiv@divisor+1,7
  5267     1EE0  2EE2               	goto	u3141
  5268     1EE1  2EE3               	goto	u3140
  5269     1EE2                     u3141:
  5270     1EE2  2ED4               	goto	l2356
  5271     1EE3                     u3140:
  5272     1EE3                     l2362:
  5273     1EE3  3001               	movlw	1
  5274     1EE4                     u3155:
  5275     1EE4  1003               	clrc
  5276     1EE5  0DF9               	rlf	___lwdiv@quotient,f
  5277     1EE6  0DFA               	rlf	___lwdiv@quotient+1,f
  5278     1EE7  3EFF               	addlw	-1
  5279     1EE8  1D03               	skipz
  5280     1EE9  2EE4               	goto	u3155
  5281     1EEA  0876               	movf	___lwdiv@divisor+1,w
  5282     1EEB  0278               	subwf	___lwdiv@dividend+1,w
  5283     1EEC  1D03               	skipz
  5284     1EED  2EF0               	goto	u3165
  5285     1EEE  0875               	movf	___lwdiv@divisor,w
  5286     1EEF  0277               	subwf	___lwdiv@dividend,w
  5287     1EF0                     u3165:
  5288     1EF0  1C03               	skipc
  5289     1EF1  2EF3               	goto	u3161
  5290     1EF2  2EF4               	goto	u3160
  5291     1EF3                     u3161:
  5292     1EF3  2EFB               	goto	l2368
  5293     1EF4                     u3160:
  5294     1EF4                     l2364:
  5295     1EF4  0875               	movf	___lwdiv@divisor,w
  5296     1EF5  02F7               	subwf	___lwdiv@dividend,f
  5297     1EF6  0876               	movf	___lwdiv@divisor+1,w
  5298     1EF7  1C03               	skipc
  5299     1EF8  03F8               	decf	___lwdiv@dividend+1,f
  5300     1EF9  02F8               	subwf	___lwdiv@dividend+1,f
  5301     1EFA                     l2366:
  5302     1EFA  1479               	bsf	___lwdiv@quotient,0
  5303     1EFB                     l2368:
  5304     1EFB  3001               	movlw	1
  5305     1EFC                     u3175:
  5306     1EFC  1003               	clrc
  5307     1EFD  0CF6               	rrf	___lwdiv@divisor+1,f
  5308     1EFE  0CF5               	rrf	___lwdiv@divisor,f
  5309     1EFF  3EFF               	addlw	-1
  5310     1F00  1D03               	skipz
  5311     1F01  2EFC               	goto	u3175
  5312     1F02                     l2370:
  5313     1F02  3001               	movlw	1
  5314     1F03  02FB               	subwf	___lwdiv@counter,f
  5315     1F04  1D03               	btfss	3,2
  5316     1F05  2F07               	goto	u3181
  5317     1F06  2F08               	goto	u3180
  5318     1F07                     u3181:
  5319     1F07  2EE3               	goto	l2362
  5320     1F08                     u3180:
  5321     1F08                     l2372:
  5322     1F08  087A               	movf	___lwdiv@quotient+1,w
  5323     1F09  00F6               	movwf	?___lwdiv+1
  5324     1F0A  0879               	movf	___lwdiv@quotient,w
  5325     1F0B  00F5               	movwf	?___lwdiv
  5326     1F0C                     l667:
  5327     1F0C  0008               	return
  5328     1F0D                     __end_of___lwdiv:
  5329                           
  5330                           	psect	text9
  5331     095C                     __ptext9:	
  5332 ;; *************** function ___flmul *****************
  5333 ;; Defined at:
  5334 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  b               4    0[BANK0 ] unsigned int 
  5337 ;;  a               4    4[BANK0 ] unsigned int 
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  prod            4   20[BANK0 ] struct .
  5340 ;;  grs             4   14[BANK0 ] unsigned long 
  5341 ;;  temp            2   24[BANK0 ] struct .
  5342 ;;  bexp            1   19[BANK0 ] unsigned char 
  5343 ;;  aexp            1   18[BANK0 ] unsigned char 
  5344 ;;  sign            1   13[BANK0 ] unsigned char 
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  4    0[BANK0 ] unsigned char 
  5347 ;; Registers used:
  5348 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5354 ;;      Params:         0       8       0       0       0
  5355 ;;      Locals:         0      13       0       0       0
  5356 ;;      Temps:          0       5       0       0       0
  5357 ;;      Totals:         0      26       0       0       0
  5358 ;;Total ram usage:       26 bytes
  5359 ;; Hardware stack levels used: 1
  5360 ;; Hardware stack levels required when called: 1
  5361 ;; This function calls:
  5362 ;;		__Umul8_16
  5363 ;; This function is called by:
  5364 ;;		_fround
  5365 ;;		_scale
  5366 ;;		_sprintf
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370     095C                     ___flmul:	
  5371                           ;psect for function ___flmul
  5372                           
  5373     095C                     l2598:	
  5374                           ;incstack = 0
  5375                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5376                           
  5377     095C  1283               	bcf	3,5	;RP0=0, select bank0
  5378     095D  1303               	bcf	3,6	;RP1=0, select bank0
  5379     095E  0823               	movf	___flmul@b+3,w
  5380     095F  3980               	andlw	128
  5381     0960  00AD               	movwf	___flmul@sign
  5382     0961                     l2600:
  5383     0961  0823               	movf	___flmul@b+3,w
  5384     0962  00A8               	movwf	??___flmul
  5385     0963  0728               	addwf	??___flmul,w
  5386     0964  00B3               	movwf	___flmul@bexp
  5387     0965                     l2602:
  5388     0965  1FA2               	btfss	___flmul@b+2,7
  5389     0966  2968               	goto	u3711
  5390     0967  2969               	goto	u3710
  5391     0968                     u3711:
  5392     0968  296A               	goto	l2606
  5393     0969                     u3710:
  5394     0969                     l2604:
  5395     0969  1433               	bsf	___flmul@bexp,0
  5396     096A                     l2606:
  5397     096A  0833               	movf	___flmul@bexp,w
  5398     096B  1903               	btfsc	3,2
  5399     096C  296E               	goto	u3721
  5400     096D  296F               	goto	u3720
  5401     096E                     u3721:
  5402     096E  297E               	goto	l2614
  5403     096F                     u3720:
  5404     096F                     l2608:
  5405     096F  0A33               	incf	___flmul@bexp,w
  5406     0970  1D03               	btfss	3,2
  5407     0971  2973               	goto	u3731
  5408     0972  2974               	goto	u3730
  5409     0973                     u3731:
  5410     0973  297C               	goto	l2612
  5411     0974                     u3730:
  5412     0974                     l2610:
  5413     0974  3000               	movlw	0
  5414     0975  00A3               	movwf	___flmul@b+3
  5415     0976  3000               	movlw	0
  5416     0977  00A2               	movwf	___flmul@b+2
  5417     0978  3000               	movlw	0
  5418     0979  00A1               	movwf	___flmul@b+1
  5419     097A  3000               	movlw	0
  5420     097B  00A0               	movwf	___flmul@b
  5421     097C                     l2612:
  5422     097C  17A2               	bsf	___flmul@b+2,7
  5423     097D  2986               	goto	l2616
  5424     097E                     l2614:
  5425     097E  3000               	movlw	0
  5426     097F  00A3               	movwf	___flmul@b+3
  5427     0980  3000               	movlw	0
  5428     0981  00A2               	movwf	___flmul@b+2
  5429     0982  3000               	movlw	0
  5430     0983  00A1               	movwf	___flmul@b+1
  5431     0984  3000               	movlw	0
  5432     0985  00A0               	movwf	___flmul@b
  5433     0986                     l2616:
  5434     0986  0827               	movf	___flmul@a+3,w
  5435     0987  3980               	andlw	128
  5436     0988  00FF               	movwf	btemp+1
  5437     0989  087F               	movf	btemp+1,w
  5438     098A  06AD               	xorwf	___flmul@sign,f
  5439     098B                     l2618:
  5440     098B  0827               	movf	___flmul@a+3,w
  5441     098C  00A8               	movwf	??___flmul
  5442     098D  0728               	addwf	??___flmul,w
  5443     098E  00B2               	movwf	___flmul@aexp
  5444     098F                     l2620:
  5445     098F  1FA6               	btfss	___flmul@a+2,7
  5446     0990  2992               	goto	u3741
  5447     0991  2993               	goto	u3740
  5448     0992                     u3741:
  5449     0992  2994               	goto	l2624
  5450     0993                     u3740:
  5451     0993                     l2622:
  5452     0993  1432               	bsf	___flmul@aexp,0
  5453     0994                     l2624:
  5454     0994  0832               	movf	___flmul@aexp,w
  5455     0995  1903               	btfsc	3,2
  5456     0996  2998               	goto	u3751
  5457     0997  2999               	goto	u3750
  5458     0998                     u3751:
  5459     0998  29A8               	goto	l2632
  5460     0999                     u3750:
  5461     0999                     l2626:
  5462     0999  0A32               	incf	___flmul@aexp,w
  5463     099A  1D03               	btfss	3,2
  5464     099B  299D               	goto	u3761
  5465     099C  299E               	goto	u3760
  5466     099D                     u3761:
  5467     099D  29A6               	goto	l2630
  5468     099E                     u3760:
  5469     099E                     l2628:
  5470     099E  3000               	movlw	0
  5471     099F  00A7               	movwf	___flmul@a+3
  5472     09A0  3000               	movlw	0
  5473     09A1  00A6               	movwf	___flmul@a+2
  5474     09A2  3000               	movlw	0
  5475     09A3  00A5               	movwf	___flmul@a+1
  5476     09A4  3000               	movlw	0
  5477     09A5  00A4               	movwf	___flmul@a
  5478     09A6                     l2630:
  5479     09A6  17A6               	bsf	___flmul@a+2,7
  5480     09A7  29B0               	goto	l2634
  5481     09A8                     l2632:
  5482     09A8  3000               	movlw	0
  5483     09A9  00A7               	movwf	___flmul@a+3
  5484     09AA  3000               	movlw	0
  5485     09AB  00A6               	movwf	___flmul@a+2
  5486     09AC  3000               	movlw	0
  5487     09AD  00A5               	movwf	___flmul@a+1
  5488     09AE  3000               	movlw	0
  5489     09AF  00A4               	movwf	___flmul@a
  5490     09B0                     l2634:
  5491     09B0  0832               	movf	___flmul@aexp,w
  5492     09B1  1903               	btfsc	3,2
  5493     09B2  29B4               	goto	u3771
  5494     09B3  29B5               	goto	u3770
  5495     09B4                     u3771:
  5496     09B4  29BA               	goto	l2638
  5497     09B5                     u3770:
  5498     09B5                     l2636:
  5499     09B5  0833               	movf	___flmul@bexp,w
  5500     09B6  1D03               	btfss	3,2
  5501     09B7  29B9               	goto	u3781
  5502     09B8  29BA               	goto	u3780
  5503     09B9                     u3781:
  5504     09B9  29C3               	goto	l2642
  5505     09BA                     u3780:
  5506     09BA                     l2638:
  5507     09BA  3000               	movlw	0
  5508     09BB  00A3               	movwf	?___flmul+3
  5509     09BC  3000               	movlw	0
  5510     09BD  00A2               	movwf	?___flmul+2
  5511     09BE  3000               	movlw	0
  5512     09BF  00A1               	movwf	?___flmul+1
  5513     09C0  3000               	movlw	0
  5514     09C1  00A0               	movwf	?___flmul
  5515     09C2  2CA0               	goto	l784
  5516     09C3                     l2642:
  5517     09C3  0820               	movf	___flmul@b,w
  5518     09C4  00F0               	movwf	__Umul8_16@multiplicand
  5519     09C5  0826               	movf	___flmul@a+2,w
  5520     09C6  160A  158A  25FA  120A  158A  	fcall	__Umul8_16
  5521     09CB  0871               	movf	?__Umul8_16+1,w
  5522     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  5523     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  5524     09CE  00B9               	movwf	___flmul@temp+1
  5525     09CF  0870               	movf	?__Umul8_16,w
  5526     09D0  00B8               	movwf	___flmul@temp
  5527     09D1                     l2644:
  5528     09D1  0838               	movf	___flmul@temp,w
  5529     09D2  00A8               	movwf	??___flmul
  5530     09D3  01A9               	clrf	??___flmul+1
  5531     09D4  01AA               	clrf	??___flmul+2
  5532     09D5  01AB               	clrf	??___flmul+3
  5533     09D6  082B               	movf	??___flmul+3,w
  5534     09D7  00B1               	movwf	___flmul@grs+3
  5535     09D8  082A               	movf	??___flmul+2,w
  5536     09D9  00B0               	movwf	___flmul@grs+2
  5537     09DA  0829               	movf	??___flmul+1,w
  5538     09DB  00AF               	movwf	___flmul@grs+1
  5539     09DC  0828               	movf	??___flmul,w
  5540     09DD  00AE               	movwf	___flmul@grs
  5541     09DE                     l2646:
  5542     09DE  0839               	movf	___flmul@temp+1,w
  5543     09DF  00A8               	movwf	??___flmul
  5544     09E0  01A9               	clrf	??___flmul+1
  5545     09E1  01AA               	clrf	??___flmul+2
  5546     09E2  01AB               	clrf	??___flmul+3
  5547     09E3  082B               	movf	??___flmul+3,w
  5548     09E4  00B7               	movwf	___flmul@prod+3
  5549     09E5  082A               	movf	??___flmul+2,w
  5550     09E6  00B6               	movwf	___flmul@prod+2
  5551     09E7  0829               	movf	??___flmul+1,w
  5552     09E8  00B5               	movwf	___flmul@prod+1
  5553     09E9  0828               	movf	??___flmul,w
  5554     09EA  00B4               	movwf	___flmul@prod
  5555     09EB  0821               	movf	___flmul@b+1,w
  5556     09EC  00F0               	movwf	__Umul8_16@multiplicand
  5557     09ED  0825               	movf	___flmul@a+1,w
  5558     09EE  160A  158A  25FA  120A  158A  	fcall	__Umul8_16
  5559     09F3  0871               	movf	?__Umul8_16+1,w
  5560     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  5561     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  5562     09F6  00B9               	movwf	___flmul@temp+1
  5563     09F7  0870               	movf	?__Umul8_16,w
  5564     09F8  00B8               	movwf	___flmul@temp
  5565     09F9                     l2648:
  5566     09F9  0838               	movf	___flmul@temp,w
  5567     09FA  00A8               	movwf	??___flmul
  5568     09FB  01A9               	clrf	??___flmul+1
  5569     09FC  01AA               	clrf	??___flmul+2
  5570     09FD  01AB               	clrf	??___flmul+3
  5571     09FE  0828               	movf	??___flmul,w
  5572     09FF  07AE               	addwf	___flmul@grs,f
  5573     0A00  0829               	movf	??___flmul+1,w
  5574     0A01  1103               	clrz
  5575     0A02  1803               	skipnc
  5576     0A03  3E01               	addlw	1
  5577     0A04  1903               	skipnz
  5578     0A05  2A07               	goto	u3791
  5579     0A06  07AF               	addwf	___flmul@grs+1,f
  5580     0A07                     u3791:
  5581     0A07  082A               	movf	??___flmul+2,w
  5582     0A08  1103               	clrz
  5583     0A09  1803               	skipnc
  5584     0A0A  3E01               	addlw	1
  5585     0A0B  1903               	skipnz
  5586     0A0C  2A0E               	goto	u3792
  5587     0A0D  07B0               	addwf	___flmul@grs+2,f
  5588     0A0E                     u3792:
  5589     0A0E  082B               	movf	??___flmul+3,w
  5590     0A0F  1103               	clrz
  5591     0A10  1803               	skipnc
  5592     0A11  3E01               	addlw	1
  5593     0A12  1903               	skipnz
  5594     0A13  2A15               	goto	u3793
  5595     0A14  07B1               	addwf	___flmul@grs+3,f
  5596     0A15                     u3793:
  5597     0A15                     l2650:
  5598     0A15  0839               	movf	___flmul@temp+1,w
  5599     0A16  00A8               	movwf	??___flmul
  5600     0A17  01A9               	clrf	??___flmul+1
  5601     0A18  01AA               	clrf	??___flmul+2
  5602     0A19  01AB               	clrf	??___flmul+3
  5603     0A1A  0828               	movf	??___flmul,w
  5604     0A1B  07B4               	addwf	___flmul@prod,f
  5605     0A1C  0829               	movf	??___flmul+1,w
  5606     0A1D  1103               	clrz
  5607     0A1E  1803               	skipnc
  5608     0A1F  3E01               	addlw	1
  5609     0A20  1903               	skipnz
  5610     0A21  2A23               	goto	u3801
  5611     0A22  07B5               	addwf	___flmul@prod+1,f
  5612     0A23                     u3801:
  5613     0A23  082A               	movf	??___flmul+2,w
  5614     0A24  1103               	clrz
  5615     0A25  1803               	skipnc
  5616     0A26  3E01               	addlw	1
  5617     0A27  1903               	skipnz
  5618     0A28  2A2A               	goto	u3802
  5619     0A29  07B6               	addwf	___flmul@prod+2,f
  5620     0A2A                     u3802:
  5621     0A2A  082B               	movf	??___flmul+3,w
  5622     0A2B  1103               	clrz
  5623     0A2C  1803               	skipnc
  5624     0A2D  3E01               	addlw	1
  5625     0A2E  1903               	skipnz
  5626     0A2F  2A31               	goto	u3803
  5627     0A30  07B7               	addwf	___flmul@prod+3,f
  5628     0A31                     u3803:
  5629     0A31  0822               	movf	___flmul@b+2,w
  5630     0A32  00F0               	movwf	__Umul8_16@multiplicand
  5631     0A33  0824               	movf	___flmul@a,w
  5632     0A34  160A  158A  25FA  120A  158A  	fcall	__Umul8_16
  5633     0A39  0871               	movf	?__Umul8_16+1,w
  5634     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  5635     0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  5636     0A3C  00B9               	movwf	___flmul@temp+1
  5637     0A3D  0870               	movf	?__Umul8_16,w
  5638     0A3E  00B8               	movwf	___flmul@temp
  5639     0A3F                     l2652:
  5640     0A3F  0838               	movf	___flmul@temp,w
  5641     0A40  00A8               	movwf	??___flmul
  5642     0A41  01A9               	clrf	??___flmul+1
  5643     0A42  01AA               	clrf	??___flmul+2
  5644     0A43  01AB               	clrf	??___flmul+3
  5645     0A44  0828               	movf	??___flmul,w
  5646     0A45  07AE               	addwf	___flmul@grs,f
  5647     0A46  0829               	movf	??___flmul+1,w
  5648     0A47  1103               	clrz
  5649     0A48  1803               	skipnc
  5650     0A49  3E01               	addlw	1
  5651     0A4A  1903               	skipnz
  5652     0A4B  2A4D               	goto	u3811
  5653     0A4C  07AF               	addwf	___flmul@grs+1,f
  5654     0A4D                     u3811:
  5655     0A4D  082A               	movf	??___flmul+2,w
  5656     0A4E  1103               	clrz
  5657     0A4F  1803               	skipnc
  5658     0A50  3E01               	addlw	1
  5659     0A51  1903               	skipnz
  5660     0A52  2A54               	goto	u3812
  5661     0A53  07B0               	addwf	___flmul@grs+2,f
  5662     0A54                     u3812:
  5663     0A54  082B               	movf	??___flmul+3,w
  5664     0A55  1103               	clrz
  5665     0A56  1803               	skipnc
  5666     0A57  3E01               	addlw	1
  5667     0A58  1903               	skipnz
  5668     0A59  2A5B               	goto	u3813
  5669     0A5A  07B1               	addwf	___flmul@grs+3,f
  5670     0A5B                     u3813:
  5671     0A5B                     l2654:
  5672     0A5B  0839               	movf	___flmul@temp+1,w
  5673     0A5C  00A8               	movwf	??___flmul
  5674     0A5D  01A9               	clrf	??___flmul+1
  5675     0A5E  01AA               	clrf	??___flmul+2
  5676     0A5F  01AB               	clrf	??___flmul+3
  5677     0A60  0828               	movf	??___flmul,w
  5678     0A61  07B4               	addwf	___flmul@prod,f
  5679     0A62  0829               	movf	??___flmul+1,w
  5680     0A63  1103               	clrz
  5681     0A64  1803               	skipnc
  5682     0A65  3E01               	addlw	1
  5683     0A66  1903               	skipnz
  5684     0A67  2A69               	goto	u3821
  5685     0A68  07B5               	addwf	___flmul@prod+1,f
  5686     0A69                     u3821:
  5687     0A69  082A               	movf	??___flmul+2,w
  5688     0A6A  1103               	clrz
  5689     0A6B  1803               	skipnc
  5690     0A6C  3E01               	addlw	1
  5691     0A6D  1903               	skipnz
  5692     0A6E  2A70               	goto	u3822
  5693     0A6F  07B6               	addwf	___flmul@prod+2,f
  5694     0A70                     u3822:
  5695     0A70  082B               	movf	??___flmul+3,w
  5696     0A71  1103               	clrz
  5697     0A72  1803               	skipnc
  5698     0A73  3E01               	addlw	1
  5699     0A74  1903               	skipnz
  5700     0A75  2A77               	goto	u3823
  5701     0A76  07B7               	addwf	___flmul@prod+3,f
  5702     0A77                     u3823:
  5703     0A77                     l2656:
  5704     0A77  3008               	movlw	8
  5705     0A78  00A8               	movwf	??___flmul
  5706     0A79                     u3835:
  5707     0A79  1003               	clrc
  5708     0A7A  0DAE               	rlf	___flmul@grs,f
  5709     0A7B  0DAF               	rlf	___flmul@grs+1,f
  5710     0A7C  0DB0               	rlf	___flmul@grs+2,f
  5711     0A7D  0DB1               	rlf	___flmul@grs+3,f
  5712     0A7E  0BA8               	decfsz	??___flmul,f
  5713     0A7F  2A79               	goto	u3835
  5714     0A80                     l2658:
  5715     0A80  0821               	movf	___flmul@b+1,w
  5716     0A81  00F0               	movwf	__Umul8_16@multiplicand
  5717     0A82  0824               	movf	___flmul@a,w
  5718     0A83  160A  158A  25FA  120A  158A  	fcall	__Umul8_16
  5719     0A88  0871               	movf	?__Umul8_16+1,w
  5720     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  5721     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  5722     0A8B  00B9               	movwf	___flmul@temp+1
  5723     0A8C  0870               	movf	?__Umul8_16,w
  5724     0A8D  00B8               	movwf	___flmul@temp
  5725     0A8E                     l2660:
  5726     0A8E  0838               	movf	___flmul@temp,w
  5727     0A8F  00A8               	movwf	??___flmul
  5728     0A90  0839               	movf	___flmul@temp+1,w
  5729     0A91  00A9               	movwf	??___flmul+1
  5730     0A92  01AA               	clrf	??___flmul+2
  5731     0A93  01AB               	clrf	??___flmul+3
  5732     0A94  0828               	movf	??___flmul,w
  5733     0A95  07AE               	addwf	___flmul@grs,f
  5734     0A96  0829               	movf	??___flmul+1,w
  5735     0A97  1103               	clrz
  5736     0A98  1803               	skipnc
  5737     0A99  3E01               	addlw	1
  5738     0A9A  1903               	skipnz
  5739     0A9B  2A9D               	goto	u3841
  5740     0A9C  07AF               	addwf	___flmul@grs+1,f
  5741     0A9D                     u3841:
  5742     0A9D  082A               	movf	??___flmul+2,w
  5743     0A9E  1103               	clrz
  5744     0A9F  1803               	skipnc
  5745     0AA0  3E01               	addlw	1
  5746     0AA1  1903               	skipnz
  5747     0AA2  2AA4               	goto	u3842
  5748     0AA3  07B0               	addwf	___flmul@grs+2,f
  5749     0AA4                     u3842:
  5750     0AA4  082B               	movf	??___flmul+3,w
  5751     0AA5  1103               	clrz
  5752     0AA6  1803               	skipnc
  5753     0AA7  3E01               	addlw	1
  5754     0AA8  1903               	skipnz
  5755     0AA9  2AAB               	goto	u3843
  5756     0AAA  07B1               	addwf	___flmul@grs+3,f
  5757     0AAB                     u3843:
  5758     0AAB                     l2662:
  5759     0AAB  0820               	movf	___flmul@b,w
  5760     0AAC  00F0               	movwf	__Umul8_16@multiplicand
  5761     0AAD  0825               	movf	___flmul@a+1,w
  5762     0AAE  160A  158A  25FA  120A  158A  	fcall	__Umul8_16
  5763     0AB3  0871               	movf	?__Umul8_16+1,w
  5764     0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  5765     0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  5766     0AB6  00B9               	movwf	___flmul@temp+1
  5767     0AB7  0870               	movf	?__Umul8_16,w
  5768     0AB8  00B8               	movwf	___flmul@temp
  5769     0AB9                     l2664:
  5770     0AB9  0838               	movf	___flmul@temp,w
  5771     0ABA  00A8               	movwf	??___flmul
  5772     0ABB  0839               	movf	___flmul@temp+1,w
  5773     0ABC  00A9               	movwf	??___flmul+1
  5774     0ABD  01AA               	clrf	??___flmul+2
  5775     0ABE  01AB               	clrf	??___flmul+3
  5776     0ABF  0828               	movf	??___flmul,w
  5777     0AC0  07AE               	addwf	___flmul@grs,f
  5778     0AC1  0829               	movf	??___flmul+1,w
  5779     0AC2  1103               	clrz
  5780     0AC3  1803               	skipnc
  5781     0AC4  3E01               	addlw	1
  5782     0AC5  1903               	skipnz
  5783     0AC6  2AC8               	goto	u3851
  5784     0AC7  07AF               	addwf	___flmul@grs+1,f
  5785     0AC8                     u3851:
  5786     0AC8  082A               	movf	??___flmul+2,w
  5787     0AC9  1103               	clrz
  5788     0ACA  1803               	skipnc
  5789     0ACB  3E01               	addlw	1
  5790     0ACC  1903               	skipnz
  5791     0ACD  2ACF               	goto	u3852
  5792     0ACE  07B0               	addwf	___flmul@grs+2,f
  5793     0ACF                     u3852:
  5794     0ACF  082B               	movf	??___flmul+3,w
  5795     0AD0  1103               	clrz
  5796     0AD1  1803               	skipnc
  5797     0AD2  3E01               	addlw	1
  5798     0AD3  1903               	skipnz
  5799     0AD4  2AD6               	goto	u3853
  5800     0AD5  07B1               	addwf	___flmul@grs+3,f
  5801     0AD6                     u3853:
  5802     0AD6                     l2666:
  5803     0AD6  3008               	movlw	8
  5804     0AD7  00A8               	movwf	??___flmul
  5805     0AD8                     u3865:
  5806     0AD8  1003               	clrc
  5807     0AD9  0DAE               	rlf	___flmul@grs,f
  5808     0ADA  0DAF               	rlf	___flmul@grs+1,f
  5809     0ADB  0DB0               	rlf	___flmul@grs+2,f
  5810     0ADC  0DB1               	rlf	___flmul@grs+3,f
  5811     0ADD  0BA8               	decfsz	??___flmul,f
  5812     0ADE  2AD8               	goto	u3865
  5813     0ADF  0820               	movf	___flmul@b,w
  5814     0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5815     0AE1  0824               	movf	___flmul@a,w
  5816     0AE2  160A  158A  25FA  120A  158A  	fcall	__Umul8_16
  5817     0AE7  0871               	movf	?__Umul8_16+1,w
  5818     0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5819     0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5820     0AEA  00B9               	movwf	___flmul@temp+1
  5821     0AEB  0870               	movf	?__Umul8_16,w
  5822     0AEC  00B8               	movwf	___flmul@temp
  5823     0AED                     l2668:
  5824     0AED  0838               	movf	___flmul@temp,w
  5825     0AEE  00A8               	movwf	??___flmul
  5826     0AEF  0839               	movf	___flmul@temp+1,w
  5827     0AF0  00A9               	movwf	??___flmul+1
  5828     0AF1  01AA               	clrf	??___flmul+2
  5829     0AF2  01AB               	clrf	??___flmul+3
  5830     0AF3  0828               	movf	??___flmul,w
  5831     0AF4  07AE               	addwf	___flmul@grs,f
  5832     0AF5  0829               	movf	??___flmul+1,w
  5833     0AF6  1103               	clrz
  5834     0AF7  1803               	skipnc
  5835     0AF8  3E01               	addlw	1
  5836     0AF9  1903               	skipnz
  5837     0AFA  2AFC               	goto	u3871
  5838     0AFB  07AF               	addwf	___flmul@grs+1,f
  5839     0AFC                     u3871:
  5840     0AFC  082A               	movf	??___flmul+2,w
  5841     0AFD  1103               	clrz
  5842     0AFE  1803               	skipnc
  5843     0AFF  3E01               	addlw	1
  5844     0B00  1903               	skipnz
  5845     0B01  2B03               	goto	u3872
  5846     0B02  07B0               	addwf	___flmul@grs+2,f
  5847     0B03                     u3872:
  5848     0B03  082B               	movf	??___flmul+3,w
  5849     0B04  1103               	clrz
  5850     0B05  1803               	skipnc
  5851     0B06  3E01               	addlw	1
  5852     0B07  1903               	skipnz
  5853     0B08  2B0A               	goto	u3873
  5854     0B09  07B1               	addwf	___flmul@grs+3,f
  5855     0B0A                     u3873:
  5856     0B0A                     l2670:
  5857     0B0A  0821               	movf	___flmul@b+1,w
  5858     0B0B  00F0               	movwf	__Umul8_16@multiplicand
  5859     0B0C  0826               	movf	___flmul@a+2,w
  5860     0B0D  160A  158A  25FA  120A  158A  	fcall	__Umul8_16
  5861     0B12  0871               	movf	?__Umul8_16+1,w
  5862     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  5863     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  5864     0B15  00B9               	movwf	___flmul@temp+1
  5865     0B16  0870               	movf	?__Umul8_16,w
  5866     0B17  00B8               	movwf	___flmul@temp
  5867     0B18  0838               	movf	___flmul@temp,w
  5868     0B19  00A8               	movwf	??___flmul
  5869     0B1A  0839               	movf	___flmul@temp+1,w
  5870     0B1B  00A9               	movwf	??___flmul+1
  5871     0B1C  01AA               	clrf	??___flmul+2
  5872     0B1D  01AB               	clrf	??___flmul+3
  5873     0B1E  0828               	movf	??___flmul,w
  5874     0B1F  07B4               	addwf	___flmul@prod,f
  5875     0B20  0829               	movf	??___flmul+1,w
  5876     0B21  1103               	clrz
  5877     0B22  1803               	skipnc
  5878     0B23  3E01               	addlw	1
  5879     0B24  1903               	skipnz
  5880     0B25  2B27               	goto	u3881
  5881     0B26  07B5               	addwf	___flmul@prod+1,f
  5882     0B27                     u3881:
  5883     0B27  082A               	movf	??___flmul+2,w
  5884     0B28  1103               	clrz
  5885     0B29  1803               	skipnc
  5886     0B2A  3E01               	addlw	1
  5887     0B2B  1903               	skipnz
  5888     0B2C  2B2E               	goto	u3882
  5889     0B2D  07B6               	addwf	___flmul@prod+2,f
  5890     0B2E                     u3882:
  5891     0B2E  082B               	movf	??___flmul+3,w
  5892     0B2F  1103               	clrz
  5893     0B30  1803               	skipnc
  5894     0B31  3E01               	addlw	1
  5895     0B32  1903               	skipnz
  5896     0B33  2B35               	goto	u3883
  5897     0B34  07B7               	addwf	___flmul@prod+3,f
  5898     0B35                     u3883:
  5899     0B35                     l2672:
  5900     0B35  0822               	movf	___flmul@b+2,w
  5901     0B36  00F0               	movwf	__Umul8_16@multiplicand
  5902     0B37  0825               	movf	___flmul@a+1,w
  5903     0B38  160A  158A  25FA  120A  158A  	fcall	__Umul8_16
  5904     0B3D  0871               	movf	?__Umul8_16+1,w
  5905     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  5906     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  5907     0B40  00B9               	movwf	___flmul@temp+1
  5908     0B41  0870               	movf	?__Umul8_16,w
  5909     0B42  00B8               	movwf	___flmul@temp
  5910     0B43                     l2674:
  5911     0B43  0838               	movf	___flmul@temp,w
  5912     0B44  00A8               	movwf	??___flmul
  5913     0B45  0839               	movf	___flmul@temp+1,w
  5914     0B46  00A9               	movwf	??___flmul+1
  5915     0B47  01AA               	clrf	??___flmul+2
  5916     0B48  01AB               	clrf	??___flmul+3
  5917     0B49  0828               	movf	??___flmul,w
  5918     0B4A  07B4               	addwf	___flmul@prod,f
  5919     0B4B  0829               	movf	??___flmul+1,w
  5920     0B4C  1103               	clrz
  5921     0B4D  1803               	skipnc
  5922     0B4E  3E01               	addlw	1
  5923     0B4F  1903               	skipnz
  5924     0B50  2B52               	goto	u3891
  5925     0B51  07B5               	addwf	___flmul@prod+1,f
  5926     0B52                     u3891:
  5927     0B52  082A               	movf	??___flmul+2,w
  5928     0B53  1103               	clrz
  5929     0B54  1803               	skipnc
  5930     0B55  3E01               	addlw	1
  5931     0B56  1903               	skipnz
  5932     0B57  2B59               	goto	u3892
  5933     0B58  07B6               	addwf	___flmul@prod+2,f
  5934     0B59                     u3892:
  5935     0B59  082B               	movf	??___flmul+3,w
  5936     0B5A  1103               	clrz
  5937     0B5B  1803               	skipnc
  5938     0B5C  3E01               	addlw	1
  5939     0B5D  1903               	skipnz
  5940     0B5E  2B60               	goto	u3893
  5941     0B5F  07B7               	addwf	___flmul@prod+3,f
  5942     0B60                     u3893:
  5943     0B60  0822               	movf	___flmul@b+2,w
  5944     0B61  00F0               	movwf	__Umul8_16@multiplicand
  5945     0B62  0826               	movf	___flmul@a+2,w
  5946     0B63  160A  158A  25FA  120A  158A  	fcall	__Umul8_16
  5947     0B68  0871               	movf	?__Umul8_16+1,w
  5948     0B69  1283               	bcf	3,5	;RP0=0, select bank0
  5949     0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  5950     0B6B  00B9               	movwf	___flmul@temp+1
  5951     0B6C  0870               	movf	?__Umul8_16,w
  5952     0B6D  00B8               	movwf	___flmul@temp
  5953     0B6E                     l2676:
  5954     0B6E  0838               	movf	___flmul@temp,w
  5955     0B6F  00A8               	movwf	??___flmul
  5956     0B70  0839               	movf	___flmul@temp+1,w
  5957     0B71  00A9               	movwf	??___flmul+1
  5958     0B72  01AA               	clrf	??___flmul+2
  5959     0B73  01AB               	clrf	??___flmul+3
  5960     0B74  3008               	movlw	8
  5961     0B75                     u3905:
  5962     0B75  1003               	clrc
  5963     0B76  0DA8               	rlf	??___flmul,f
  5964     0B77  0DA9               	rlf	??___flmul+1,f
  5965     0B78  0DAA               	rlf	??___flmul+2,f
  5966     0B79  0DAB               	rlf	??___flmul+3,f
  5967     0B7A                     u3900:
  5968     0B7A  3EFF               	addlw	-1
  5969     0B7B  1D03               	skipz
  5970     0B7C  2B75               	goto	u3905
  5971     0B7D  0828               	movf	??___flmul,w
  5972     0B7E  07B4               	addwf	___flmul@prod,f
  5973     0B7F  0829               	movf	??___flmul+1,w
  5974     0B80  1103               	clrz
  5975     0B81  1803               	skipnc
  5976     0B82  3E01               	addlw	1
  5977     0B83  1903               	skipnz
  5978     0B84  2B86               	goto	u3911
  5979     0B85  07B5               	addwf	___flmul@prod+1,f
  5980     0B86                     u3911:
  5981     0B86  082A               	movf	??___flmul+2,w
  5982     0B87  1103               	clrz
  5983     0B88  1803               	skipnc
  5984     0B89  3E01               	addlw	1
  5985     0B8A  1903               	skipnz
  5986     0B8B  2B8D               	goto	u3912
  5987     0B8C  07B6               	addwf	___flmul@prod+2,f
  5988     0B8D                     u3912:
  5989     0B8D  082B               	movf	??___flmul+3,w
  5990     0B8E  1103               	clrz
  5991     0B8F  1803               	skipnc
  5992     0B90  3E01               	addlw	1
  5993     0B91  1903               	skipnz
  5994     0B92  2B94               	goto	u3913
  5995     0B93  07B7               	addwf	___flmul@prod+3,f
  5996     0B94                     u3913:
  5997     0B94                     l2678:
  5998     0B94  082E               	movf	___flmul@grs,w
  5999     0B95  00A8               	movwf	??___flmul
  6000     0B96  082F               	movf	___flmul@grs+1,w
  6001     0B97  00A9               	movwf	??___flmul+1
  6002     0B98  0830               	movf	___flmul@grs+2,w
  6003     0B99  00AA               	movwf	??___flmul+2
  6004     0B9A  0831               	movf	___flmul@grs+3,w
  6005     0B9B  00AB               	movwf	??___flmul+3
  6006     0B9C  3018               	movlw	24
  6007     0B9D                     u3925:
  6008     0B9D  1003               	clrc
  6009     0B9E  0CAB               	rrf	??___flmul+3,f
  6010     0B9F  0CAA               	rrf	??___flmul+2,f
  6011     0BA0  0CA9               	rrf	??___flmul+1,f
  6012     0BA1  0CA8               	rrf	??___flmul,f
  6013     0BA2                     u3920:
  6014     0BA2  3EFF               	addlw	-1
  6015     0BA3  1D03               	skipz
  6016     0BA4  2B9D               	goto	u3925
  6017     0BA5  0828               	movf	??___flmul,w
  6018     0BA6  07B4               	addwf	___flmul@prod,f
  6019     0BA7  0829               	movf	??___flmul+1,w
  6020     0BA8  1103               	clrz
  6021     0BA9  1803               	skipnc
  6022     0BAA  3E01               	addlw	1
  6023     0BAB  1903               	skipnz
  6024     0BAC  2BAE               	goto	u3931
  6025     0BAD  07B5               	addwf	___flmul@prod+1,f
  6026     0BAE                     u3931:
  6027     0BAE  082A               	movf	??___flmul+2,w
  6028     0BAF  1103               	clrz
  6029     0BB0  1803               	skipnc
  6030     0BB1  3E01               	addlw	1
  6031     0BB2  1903               	skipnz
  6032     0BB3  2BB5               	goto	u3932
  6033     0BB4  07B6               	addwf	___flmul@prod+2,f
  6034     0BB5                     u3932:
  6035     0BB5  082B               	movf	??___flmul+3,w
  6036     0BB6  1103               	clrz
  6037     0BB7  1803               	skipnc
  6038     0BB8  3E01               	addlw	1
  6039     0BB9  1903               	skipnz
  6040     0BBA  2BBC               	goto	u3933
  6041     0BBB  07B7               	addwf	___flmul@prod+3,f
  6042     0BBC                     u3933:
  6043     0BBC                     l2680:
  6044     0BBC  3008               	movlw	8
  6045     0BBD  00A8               	movwf	??___flmul
  6046     0BBE                     u3945:
  6047     0BBE  1003               	clrc
  6048     0BBF  0DAE               	rlf	___flmul@grs,f
  6049     0BC0  0DAF               	rlf	___flmul@grs+1,f
  6050     0BC1  0DB0               	rlf	___flmul@grs+2,f
  6051     0BC2  0DB1               	rlf	___flmul@grs+3,f
  6052     0BC3  0BA8               	decfsz	??___flmul,f
  6053     0BC4  2BBE               	goto	u3945
  6054     0BC5                     l2682:
  6055     0BC5  0833               	movf	___flmul@bexp,w
  6056     0BC6  0732               	addwf	___flmul@aexp,w
  6057     0BC7  00A8               	movwf	??___flmul
  6058     0BC8  01A9               	clrf	??___flmul+1
  6059     0BC9  0DA9               	rlf	??___flmul+1,f
  6060     0BCA  0828               	movf	??___flmul,w
  6061     0BCB  3E82               	addlw	130
  6062     0BCC  00B8               	movwf	___flmul@temp
  6063     0BCD  0829               	movf	??___flmul+1,w
  6064     0BCE  1803               	skipnc
  6065     0BCF  3E01               	addlw	1
  6066     0BD0  3EFF               	addlw	255
  6067     0BD1  00B9               	movwf	___flmul@temp+1
  6068     0BD2  2BF0               	goto	l2694
  6069     0BD3                     l2684:
  6070     0BD3  3001               	movlw	1
  6071     0BD4  00A8               	movwf	??___flmul
  6072     0BD5                     u3955:
  6073     0BD5  1003               	clrc
  6074     0BD6  0DB4               	rlf	___flmul@prod,f
  6075     0BD7  0DB5               	rlf	___flmul@prod+1,f
  6076     0BD8  0DB6               	rlf	___flmul@prod+2,f
  6077     0BD9  0DB7               	rlf	___flmul@prod+3,f
  6078     0BDA  0BA8               	decfsz	??___flmul,f
  6079     0BDB  2BD5               	goto	u3955
  6080     0BDC                     l2686:
  6081     0BDC  1FB1               	btfss	___flmul@grs+3,7
  6082     0BDD  2BDF               	goto	u3961
  6083     0BDE  2BE0               	goto	u3960
  6084     0BDF                     u3961:
  6085     0BDF  2BE1               	goto	l2690
  6086     0BE0                     u3960:
  6087     0BE0                     l2688:
  6088     0BE0  1434               	bsf	___flmul@prod,0
  6089     0BE1                     l2690:
  6090     0BE1  3001               	movlw	1
  6091     0BE2  00A8               	movwf	??___flmul
  6092     0BE3                     u3975:
  6093     0BE3  1003               	clrc
  6094     0BE4  0DAE               	rlf	___flmul@grs,f
  6095     0BE5  0DAF               	rlf	___flmul@grs+1,f
  6096     0BE6  0DB0               	rlf	___flmul@grs+2,f
  6097     0BE7  0DB1               	rlf	___flmul@grs+3,f
  6098     0BE8  0BA8               	decfsz	??___flmul,f
  6099     0BE9  2BE3               	goto	u3975
  6100     0BEA                     l2692:
  6101     0BEA  30FF               	movlw	255
  6102     0BEB  07B8               	addwf	___flmul@temp,f
  6103     0BEC  1803               	skipnc
  6104     0BED  0AB9               	incf	___flmul@temp+1,f
  6105     0BEE  30FF               	movlw	255
  6106     0BEF  07B9               	addwf	___flmul@temp+1,f
  6107     0BF0                     l2694:
  6108     0BF0  1FB6               	btfss	___flmul@prod+2,7
  6109     0BF1  2BF3               	goto	u3981
  6110     0BF2  2BF4               	goto	u3980
  6111     0BF3                     u3981:
  6112     0BF3  2BD3               	goto	l2684
  6113     0BF4                     u3980:
  6114     0BF4                     l2696:
  6115     0BF4  01B2               	clrf	___flmul@aexp
  6116     0BF5                     l2698:
  6117     0BF5  1FB1               	btfss	___flmul@grs+3,7
  6118     0BF6  2BF8               	goto	u3991
  6119     0BF7  2BF9               	goto	u3990
  6120     0BF8                     u3991:
  6121     0BF8  2C15               	goto	l2706
  6122     0BF9                     u3990:
  6123     0BF9                     l2700:
  6124     0BF9  30FF               	movlw	255
  6125     0BFA  052E               	andwf	___flmul@grs,w
  6126     0BFB  00A8               	movwf	??___flmul
  6127     0BFC  30FF               	movlw	255
  6128     0BFD  052F               	andwf	___flmul@grs+1,w
  6129     0BFE  00A9               	movwf	??___flmul+1
  6130     0BFF  30FF               	movlw	255
  6131     0C00  0530               	andwf	___flmul@grs+2,w
  6132     0C01  00AA               	movwf	??___flmul+2
  6133     0C02  307F               	movlw	127
  6134     0C03  0531               	andwf	___flmul@grs+3,w
  6135     0C04  00AB               	movwf	??___flmul+3
  6136     0C05  082B               	movf	??___flmul+3,w
  6137     0C06  042A               	iorwf	??___flmul+2,w
  6138     0C07  0429               	iorwf	??___flmul+1,w
  6139     0C08  0428               	iorwf	??___flmul,w
  6140     0C09  1903               	skipnz
  6141     0C0A  2C0C               	goto	u4001
  6142     0C0B  2C0D               	goto	u4000
  6143     0C0C                     u4001:
  6144     0C0C  2C10               	goto	l790
  6145     0C0D                     u4000:
  6146     0C0D                     l2702:
  6147     0C0D  01B2               	clrf	___flmul@aexp
  6148     0C0E  0AB2               	incf	___flmul@aexp,f
  6149     0C0F  2C15               	goto	l2706
  6150     0C10                     l790:
  6151     0C10  1C34               	btfss	___flmul@prod,0
  6152     0C11  2C13               	goto	u4011
  6153     0C12  2C14               	goto	u4010
  6154     0C13                     u4011:
  6155     0C13  2C15               	goto	l2706
  6156     0C14                     u4010:
  6157     0C14  2C0D               	goto	l2702
  6158     0C15                     l2706:
  6159     0C15  0832               	movf	___flmul@aexp,w
  6160     0C16  1903               	btfsc	3,2
  6161     0C17  2C19               	goto	u4021
  6162     0C18  2C1A               	goto	u4020
  6163     0C19                     u4021:
  6164     0C19  2C4B               	goto	l2716
  6165     0C1A                     u4020:
  6166     0C1A                     l2708:
  6167     0C1A  3001               	movlw	1
  6168     0C1B  07B4               	addwf	___flmul@prod,f
  6169     0C1C  3000               	movlw	0
  6170     0C1D  1803               	skipnc
  6171     0C1E  3001               	movlw	1
  6172     0C1F  07B5               	addwf	___flmul@prod+1,f
  6173     0C20  3000               	movlw	0
  6174     0C21  1803               	skipnc
  6175     0C22  3001               	movlw	1
  6176     0C23  07B6               	addwf	___flmul@prod+2,f
  6177     0C24  3000               	movlw	0
  6178     0C25  1803               	skipnc
  6179     0C26  3001               	movlw	1
  6180     0C27  07B7               	addwf	___flmul@prod+3,f
  6181     0C28                     l2710:
  6182     0C28  1C37               	btfss	___flmul@prod+3,0
  6183     0C29  2C2B               	goto	u4031
  6184     0C2A  2C2C               	goto	u4030
  6185     0C2B                     u4031:
  6186     0C2B  2C4B               	goto	l2716
  6187     0C2C                     u4030:
  6188     0C2C                     l2712:
  6189     0C2C  0834               	movf	___flmul@prod,w
  6190     0C2D  00A8               	movwf	??___flmul
  6191     0C2E  0835               	movf	___flmul@prod+1,w
  6192     0C2F  00A9               	movwf	??___flmul+1
  6193     0C30  0836               	movf	___flmul@prod+2,w
  6194     0C31  00AA               	movwf	??___flmul+2
  6195     0C32  0837               	movf	___flmul@prod+3,w
  6196     0C33  00AB               	movwf	??___flmul+3
  6197     0C34  3001               	movlw	1
  6198     0C35  00AC               	movwf	??___flmul+4
  6199     0C36                     u4045:
  6200     0C36  0D2B               	rlf	??___flmul+3,w
  6201     0C37  0CAB               	rrf	??___flmul+3,f
  6202     0C38  0CAA               	rrf	??___flmul+2,f
  6203     0C39  0CA9               	rrf	??___flmul+1,f
  6204     0C3A  0CA8               	rrf	??___flmul,f
  6205     0C3B                     u4040:
  6206     0C3B  0BAC               	decfsz	??___flmul+4,f
  6207     0C3C  2C36               	goto	u4045
  6208     0C3D  082B               	movf	??___flmul+3,w
  6209     0C3E  00B7               	movwf	___flmul@prod+3
  6210     0C3F  082A               	movf	??___flmul+2,w
  6211     0C40  00B6               	movwf	___flmul@prod+2
  6212     0C41  0829               	movf	??___flmul+1,w
  6213     0C42  00B5               	movwf	___flmul@prod+1
  6214     0C43  0828               	movf	??___flmul,w
  6215     0C44  00B4               	movwf	___flmul@prod
  6216     0C45                     l2714:
  6217     0C45  3001               	movlw	1
  6218     0C46  07B8               	addwf	___flmul@temp,f
  6219     0C47  1803               	skipnc
  6220     0C48  0AB9               	incf	___flmul@temp+1,f
  6221     0C49  3000               	movlw	0
  6222     0C4A  07B9               	addwf	___flmul@temp+1,f
  6223     0C4B                     l2716:
  6224     0C4B  0839               	movf	___flmul@temp+1,w
  6225     0C4C  3A80               	xorlw	128
  6226     0C4D  00FF               	movwf	btemp+1
  6227     0C4E  3080               	movlw	128
  6228     0C4F  027F               	subwf	btemp+1,w
  6229     0C50  1D03               	skipz
  6230     0C51  2C54               	goto	u4055
  6231     0C52  30FF               	movlw	255
  6232     0C53  0238               	subwf	___flmul@temp,w
  6233     0C54                     u4055:
  6234     0C54  1C03               	skipc
  6235     0C55  2C57               	goto	u4051
  6236     0C56  2C58               	goto	u4050
  6237     0C57                     u4051:
  6238     0C57  2C63               	goto	l2720
  6239     0C58                     u4050:
  6240     0C58                     l2718:
  6241     0C58  307F               	movlw	127
  6242     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  6243     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  6244     0C5B  00B7               	movwf	___flmul@prod+3
  6245     0C5C  3080               	movlw	128
  6246     0C5D  00B6               	movwf	___flmul@prod+2
  6247     0C5E  3000               	movlw	0
  6248     0C5F  00B5               	movwf	___flmul@prod+1
  6249     0C60  3000               	movlw	0
  6250     0C61  00B4               	movwf	___flmul@prod
  6251     0C62  2C94               	goto	l2734
  6252     0C63                     l2720:
  6253     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  6254     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  6255     0C65  0839               	movf	___flmul@temp+1,w
  6256     0C66  3A80               	xorlw	128
  6257     0C67  00FF               	movwf	btemp+1
  6258     0C68  3080               	movlw	128
  6259     0C69  027F               	subwf	btemp+1,w
  6260     0C6A  1D03               	skipz
  6261     0C6B  2C6E               	goto	u4065
  6262     0C6C  3001               	movlw	1
  6263     0C6D  0238               	subwf	___flmul@temp,w
  6264     0C6E                     u4065:
  6265     0C6E  1803               	skipnc
  6266     0C6F  2C71               	goto	u4061
  6267     0C70  2C72               	goto	u4060
  6268     0C71                     u4061:
  6269     0C71  2C7E               	goto	l2726
  6270     0C72                     u4060:
  6271     0C72                     l2722:
  6272     0C72  3000               	movlw	0
  6273     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  6274     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  6275     0C75  00B7               	movwf	___flmul@prod+3
  6276     0C76  3000               	movlw	0
  6277     0C77  00B6               	movwf	___flmul@prod+2
  6278     0C78  3000               	movlw	0
  6279     0C79  00B5               	movwf	___flmul@prod+1
  6280     0C7A  3000               	movlw	0
  6281     0C7B  00B4               	movwf	___flmul@prod
  6282     0C7C                     l2724:
  6283     0C7C  01AD               	clrf	___flmul@sign
  6284     0C7D  2C94               	goto	l2734
  6285     0C7E                     l2726:
  6286     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  6287     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  6288     0C80  0838               	movf	___flmul@temp,w
  6289     0C81  00B3               	movwf	___flmul@bexp
  6290     0C82  30FF               	movlw	255
  6291     0C83  05B4               	andwf	___flmul@prod,f
  6292     0C84  30FF               	movlw	255
  6293     0C85  05B5               	andwf	___flmul@prod+1,f
  6294     0C86  307F               	movlw	127
  6295     0C87  05B6               	andwf	___flmul@prod+2,f
  6296     0C88  3000               	movlw	0
  6297     0C89  05B7               	andwf	___flmul@prod+3,f
  6298     0C8A                     l2728:
  6299     0C8A  1C33               	btfss	___flmul@bexp,0
  6300     0C8B  2C8D               	goto	u4071
  6301     0C8C  2C8E               	goto	u4070
  6302     0C8D                     u4071:
  6303     0C8D  2C8F               	goto	l2732
  6304     0C8E                     u4070:
  6305     0C8E                     l2730:
  6306     0C8E  17B6               	bsf	___flmul@prod+2,7
  6307     0C8F                     l2732:
  6308     0C8F  0833               	movf	___flmul@bexp,w
  6309     0C90  00A8               	movwf	??___flmul
  6310     0C91  1003               	clrc
  6311     0C92  0C28               	rrf	??___flmul,w
  6312     0C93  00B7               	movwf	___flmul@prod+3
  6313     0C94                     l2734:
  6314     0C94  082D               	movf	___flmul@sign,w
  6315     0C95  00FF               	movwf	btemp+1
  6316     0C96  087F               	movf	btemp+1,w
  6317     0C97  04B7               	iorwf	___flmul@prod+3,f
  6318     0C98                     l2736:
  6319     0C98  0837               	movf	___flmul@prod+3,w
  6320     0C99  00A3               	movwf	?___flmul+3
  6321     0C9A  0836               	movf	___flmul@prod+2,w
  6322     0C9B  00A2               	movwf	?___flmul+2
  6323     0C9C  0835               	movf	___flmul@prod+1,w
  6324     0C9D  00A1               	movwf	?___flmul+1
  6325     0C9E  0834               	movf	___flmul@prod,w
  6326     0C9F  00A0               	movwf	?___flmul
  6327     0CA0                     l784:
  6328     0CA0  0008               	return
  6329     0CA1                     __end_of___flmul:
  6330                           
  6331                           	psect	text10
  6332     1DFA                     __ptext10:	
  6333 ;; *************** function __Umul8_16 *****************
  6334 ;; Defined at:
  6335 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;  multiplier      1    wreg     unsigned char 
  6338 ;;  multiplicand    1    0[COMMON] unsigned char 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  multiplier      1    8[COMMON] unsigned char 
  6341 ;;  word_mpld       2    6[COMMON] unsigned int 
  6342 ;;  product         2    4[COMMON] unsigned int 
  6343 ;; Return value:  Size  Location     Type
  6344 ;;                  2    0[COMMON] unsigned int 
  6345 ;; Registers used:
  6346 ;;		wreg, status,2, status,0
  6347 ;; Tracked objects:
  6348 ;;		On entry : 0/0
  6349 ;;		On exit  : 0/0
  6350 ;;		Unchanged: 0/0
  6351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6352 ;;      Params:         2       0       0       0       0
  6353 ;;      Locals:         5       0       0       0       0
  6354 ;;      Temps:          2       0       0       0       0
  6355 ;;      Totals:         9       0       0       0       0
  6356 ;;Total ram usage:        9 bytes
  6357 ;; Hardware stack levels used: 1
  6358 ;; This function calls:
  6359 ;;		Nothing
  6360 ;; This function is called by:
  6361 ;;		___flmul
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365     1DFA                     __Umul8_16:	
  6366                           ;psect for function __Umul8_16
  6367                           
  6368                           
  6369                           ;incstack = 0
  6370                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6371                           ;__Umul8_16@multiplier stored from wreg
  6372     1DFA  00F8               	movwf	__Umul8_16@multiplier
  6373     1DFB                     l2244:
  6374     1DFB  01F4               	clrf	__Umul8_16@product
  6375     1DFC  01F5               	clrf	__Umul8_16@product+1
  6376     1DFD                     l2246:
  6377     1DFD  0870               	movf	__Umul8_16@multiplicand,w
  6378     1DFE  00F2               	movwf	??__Umul8_16
  6379     1DFF  01F3               	clrf	??__Umul8_16+1
  6380     1E00  0872               	movf	??__Umul8_16,w
  6381     1E01  00F6               	movwf	__Umul8_16@word_mpld
  6382     1E02  0873               	movf	??__Umul8_16+1,w
  6383     1E03  00F7               	movwf	__Umul8_16@word_mpld+1
  6384     1E04                     l2248:
  6385     1E04  1C78               	btfss	__Umul8_16@multiplier,0
  6386     1E05  2E07               	goto	u2901
  6387     1E06  2E08               	goto	u2900
  6388     1E07                     u2901:
  6389     1E07  2E0E               	goto	l803
  6390     1E08                     u2900:
  6391     1E08                     l2250:
  6392     1E08  0876               	movf	__Umul8_16@word_mpld,w
  6393     1E09  07F4               	addwf	__Umul8_16@product,f
  6394     1E0A  1803               	skipnc
  6395     1E0B  0AF5               	incf	__Umul8_16@product+1,f
  6396     1E0C  0877               	movf	__Umul8_16@word_mpld+1,w
  6397     1E0D  07F5               	addwf	__Umul8_16@product+1,f
  6398     1E0E                     l803:
  6399     1E0E  3001               	movlw	1
  6400     1E0F                     u2915:
  6401     1E0F  1003               	clrc
  6402     1E10  0DF6               	rlf	__Umul8_16@word_mpld,f
  6403     1E11  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6404     1E12  3EFF               	addlw	-1
  6405     1E13  1D03               	skipz
  6406     1E14  2E0F               	goto	u2915
  6407     1E15  1003               	clrc
  6408     1E16  0CF8               	rrf	__Umul8_16@multiplier,f
  6409     1E17                     l2252:
  6410     1E17  0878               	movf	__Umul8_16@multiplier,w
  6411     1E18  1D03               	btfss	3,2
  6412     1E19  2E1B               	goto	u2921
  6413     1E1A  2E1C               	goto	u2920
  6414     1E1B                     u2921:
  6415     1E1B  2E04               	goto	l2248
  6416     1E1C                     u2920:
  6417     1E1C                     l2254:
  6418     1E1C  0875               	movf	__Umul8_16@product+1,w
  6419     1E1D  00F1               	movwf	?__Umul8_16+1
  6420     1E1E  0874               	movf	__Umul8_16@product,w
  6421     1E1F  00F0               	movwf	?__Umul8_16
  6422     1E20                     l805:
  6423     1E20  0008               	return
  6424     1E21                     __end_of__Umul8_16:
  6425                           
  6426                           	psect	text11
  6427     12E6                     __ptext11:	
  6428 ;; *************** function __tdiv_to_l_ *****************
  6429 ;; Defined at:
  6430 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdivl.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;  f1              4    0[COMMON] float 
  6433 ;;  f2              4    4[COMMON] float 
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;  quot            4    0[BANK0 ] unsigned long 
  6436 ;;  exp1            1    5[BANK0 ] unsigned char 
  6437 ;;  cntr            1    4[BANK0 ] unsigned char 
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  4    0[COMMON] unsigned long 
  6440 ;; Registers used:
  6441 ;;		wreg, status,2, status,0, btemp+1
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6447 ;;      Params:         8       0       0       0       0
  6448 ;;      Locals:         0       6       0       0       0
  6449 ;;      Temps:          3       0       0       0       0
  6450 ;;      Totals:        11       6       0       0       0
  6451 ;;Total ram usage:       17 bytes
  6452 ;; Hardware stack levels used: 1
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		_sprintf
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460     12E6                     __tdiv_to_l_:	
  6461                           ;psect for function __tdiv_to_l_
  6462                           
  6463     12E6                     l2860:	
  6464                           ;incstack = 0
  6465                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0+btemp+1]
  6466                           
  6467     12E6  0870               	movf	__tdiv_to_l_@f1,w
  6468     12E7  00F8               	movwf	??__tdiv_to_l_
  6469     12E8  0871               	movf	__tdiv_to_l_@f1+1,w
  6470     12E9  00F9               	movwf	??__tdiv_to_l_+1
  6471     12EA  0872               	movf	__tdiv_to_l_@f1+2,w
  6472     12EB  00FA               	movwf	??__tdiv_to_l_+2
  6473     12EC  1003               	clrc
  6474     12ED  0D79               	rlf	??__tdiv_to_l_+1,w
  6475     12EE  0D7A               	rlf	??__tdiv_to_l_+2,w
  6476     12EF  1283               	bcf	3,5	;RP0=0, select bank0
  6477     12F0  1303               	bcf	3,6	;RP1=0, select bank0
  6478     12F1  00A5               	movwf	__tdiv_to_l_@exp1
  6479     12F2  0825               	movf	__tdiv_to_l_@exp1,w
  6480     12F3  1D03               	btfss	3,2
  6481     12F4  2AF6               	goto	u4441
  6482     12F5  2AF7               	goto	u4440
  6483     12F6                     u4441:
  6484     12F6  2B00               	goto	l2866
  6485     12F7                     u4440:
  6486     12F7                     l2862:
  6487     12F7  3000               	movlw	0
  6488     12F8  00F3               	movwf	?__tdiv_to_l_+3
  6489     12F9  3000               	movlw	0
  6490     12FA  00F2               	movwf	?__tdiv_to_l_+2
  6491     12FB  3000               	movlw	0
  6492     12FC  00F1               	movwf	?__tdiv_to_l_+1
  6493     12FD  3000               	movlw	0
  6494     12FE  00F0               	movwf	?__tdiv_to_l_
  6495     12FF  2B9C               	goto	l578
  6496     1300                     l2866:
  6497     1300  0874               	movf	__tdiv_to_l_@f2,w
  6498     1301  00F8               	movwf	??__tdiv_to_l_
  6499     1302  0875               	movf	__tdiv_to_l_@f2+1,w
  6500     1303  00F9               	movwf	??__tdiv_to_l_+1
  6501     1304  0876               	movf	__tdiv_to_l_@f2+2,w
  6502     1305  00FA               	movwf	??__tdiv_to_l_+2
  6503     1306  1003               	clrc
  6504     1307  0D79               	rlf	??__tdiv_to_l_+1,w
  6505     1308  0D7A               	rlf	??__tdiv_to_l_+2,w
  6506     1309  00A4               	movwf	__tdiv_to_l_@cntr
  6507     130A  0824               	movf	__tdiv_to_l_@cntr,w
  6508     130B  1D03               	btfss	3,2
  6509     130C  2B0E               	goto	u4451
  6510     130D  2B0F               	goto	u4450
  6511     130E                     u4451:
  6512     130E  2B10               	goto	l579
  6513     130F                     u4450:
  6514     130F  2AF7               	goto	l2862
  6515     1310                     l579:
  6516     1310  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6517     1311                     l2872:
  6518     1311  30FF               	movlw	255
  6519     1312  05F0               	andwf	__tdiv_to_l_@f1,f
  6520     1313  30FF               	movlw	255
  6521     1314  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6522     1315  3000               	movlw	0
  6523     1316  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6524     1317                     l2874:
  6525     1317  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6526     1318  30FF               	movlw	255
  6527     1319  05F4               	andwf	__tdiv_to_l_@f2,f
  6528     131A  30FF               	movlw	255
  6529     131B  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6530     131C  3000               	movlw	0
  6531     131D  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6532     131E  3000               	movlw	0
  6533     131F  00A3               	movwf	__tdiv_to_l_@quot+3
  6534     1320  3000               	movlw	0
  6535     1321  00A2               	movwf	__tdiv_to_l_@quot+2
  6536     1322  3000               	movlw	0
  6537     1323  00A1               	movwf	__tdiv_to_l_@quot+1
  6538     1324  3000               	movlw	0
  6539     1325  00A0               	movwf	__tdiv_to_l_@quot
  6540     1326                     l2876:
  6541     1326  307F               	movlw	127
  6542     1327  02A5               	subwf	__tdiv_to_l_@exp1,f
  6543     1328                     l2878:
  6544     1328  3098               	movlw	152
  6545     1329  0724               	addwf	__tdiv_to_l_@cntr,w
  6546     132A  00F8               	movwf	??__tdiv_to_l_
  6547     132B  0878               	movf	??__tdiv_to_l_,w
  6548     132C  02A5               	subwf	__tdiv_to_l_@exp1,f
  6549     132D  3018               	movlw	24
  6550     132E  00A4               	movwf	__tdiv_to_l_@cntr
  6551     132F                     l2880:
  6552     132F  3001               	movlw	1
  6553     1330  00F8               	movwf	??__tdiv_to_l_
  6554     1331                     u4465:
  6555     1331  1003               	clrc
  6556     1332  0DA0               	rlf	__tdiv_to_l_@quot,f
  6557     1333  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6558     1334  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6559     1335  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6560     1336  0BF8               	decfsz	??__tdiv_to_l_,f
  6561     1337  2B31               	goto	u4465
  6562     1338                     l2882:
  6563     1338  0876               	movf	__tdiv_to_l_@f2+2,w
  6564     1339  0272               	subwf	__tdiv_to_l_@f1+2,w
  6565     133A  1D03               	skipz
  6566     133B  2B42               	goto	u4475
  6567     133C  0875               	movf	__tdiv_to_l_@f2+1,w
  6568     133D  0271               	subwf	__tdiv_to_l_@f1+1,w
  6569     133E  1D03               	skipz
  6570     133F  2B42               	goto	u4475
  6571     1340  0874               	movf	__tdiv_to_l_@f2,w
  6572     1341  0270               	subwf	__tdiv_to_l_@f1,w
  6573     1342                     u4475:
  6574     1342  1C03               	skipc
  6575     1343  2B45               	goto	u4471
  6576     1344  2B46               	goto	u4470
  6577     1345                     u4471:
  6578     1345  2B51               	goto	l2888
  6579     1346                     u4470:
  6580     1346                     l2884:
  6581     1346  0874               	movf	__tdiv_to_l_@f2,w
  6582     1347  02F0               	subwf	__tdiv_to_l_@f1,f
  6583     1348  0875               	movf	__tdiv_to_l_@f2+1,w
  6584     1349  1C03               	skipc
  6585     134A  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6586     134B  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6587     134C  0876               	movf	__tdiv_to_l_@f2+2,w
  6588     134D  1C03               	skipc
  6589     134E  0A76               	incf	__tdiv_to_l_@f2+2,w
  6590     134F  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6591     1350                     l2886:
  6592     1350  1420               	bsf	__tdiv_to_l_@quot,0
  6593     1351                     l2888:
  6594     1351  3001               	movlw	1
  6595     1352                     u4485:
  6596     1352  1003               	clrc
  6597     1353  0DF0               	rlf	__tdiv_to_l_@f1,f
  6598     1354  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6599     1355  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6600     1356  3EFF               	addlw	-1
  6601     1357  1D03               	skipz
  6602     1358  2B52               	goto	u4485
  6603     1359                     l2890:
  6604     1359  3001               	movlw	1
  6605     135A  02A4               	subwf	__tdiv_to_l_@cntr,f
  6606     135B  1D03               	btfss	3,2
  6607     135C  2B5E               	goto	u4491
  6608     135D  2B5F               	goto	u4490
  6609     135E                     u4491:
  6610     135E  2B2F               	goto	l2880
  6611     135F                     u4490:
  6612     135F                     l582:
  6613     135F  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6614     1360  2B62               	goto	u4501
  6615     1361  2B63               	goto	u4500
  6616     1362                     u4501:
  6617     1362  2B7D               	goto	l2902
  6618     1363                     u4500:
  6619     1363                     l2892:
  6620     1363  0825               	movf	__tdiv_to_l_@exp1,w
  6621     1364  3A80               	xorlw	128
  6622     1365  3E97               	addlw	151
  6623     1366  1803               	skipnc
  6624     1367  2B69               	goto	u4511
  6625     1368  2B6A               	goto	u4510
  6626     1369                     u4511:
  6627     1369  2B6B               	goto	l2898
  6628     136A                     u4510:
  6629     136A  2AF7               	goto	l2862
  6630     136B                     l2898:
  6631     136B  3001               	movlw	1
  6632     136C                     u4525:
  6633     136C  1003               	clrc
  6634     136D  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6635     136E  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6636     136F  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6637     1370  0CA0               	rrf	__tdiv_to_l_@quot,f
  6638     1371  3EFF               	addlw	-1
  6639     1372  1D03               	skipz
  6640     1373  2B6C               	goto	u4525
  6641     1374                     l2900:
  6642     1374  3001               	movlw	1
  6643     1375  00FF               	movwf	btemp+1
  6644     1376  087F               	movf	btemp+1,w
  6645     1377  07A5               	addwf	__tdiv_to_l_@exp1,f
  6646     1378  1D03               	btfss	3,2
  6647     1379  2B7B               	goto	u4531
  6648     137A  2B7C               	goto	u4530
  6649     137B                     u4531:
  6650     137B  2B6B               	goto	l2898
  6651     137C                     u4530:
  6652     137C  2B94               	goto	l2910
  6653     137D                     l2902:
  6654     137D  3018               	movlw	24
  6655     137E  0225               	subwf	__tdiv_to_l_@exp1,w
  6656     137F  1C03               	skipc
  6657     1380  2B82               	goto	u4541
  6658     1381  2B83               	goto	u4540
  6659     1382                     u4541:
  6660     1382  2B8F               	goto	l589
  6661     1383                     u4540:
  6662     1383  2AF7               	goto	l2862
  6663     1384                     l2908:
  6664     1384  3001               	movlw	1
  6665     1385  00F8               	movwf	??__tdiv_to_l_
  6666     1386                     u4555:
  6667     1386  1003               	clrc
  6668     1387  0DA0               	rlf	__tdiv_to_l_@quot,f
  6669     1388  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6670     1389  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6671     138A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6672     138B  0BF8               	decfsz	??__tdiv_to_l_,f
  6673     138C  2B86               	goto	u4555
  6674     138D  3001               	movlw	1
  6675     138E  02A5               	subwf	__tdiv_to_l_@exp1,f
  6676     138F                     l589:
  6677     138F  0825               	movf	__tdiv_to_l_@exp1,w
  6678     1390  1D03               	btfss	3,2
  6679     1391  2B93               	goto	u4561
  6680     1392  2B94               	goto	u4560
  6681     1393                     u4561:
  6682     1393  2B84               	goto	l2908
  6683     1394                     u4560:
  6684     1394                     l2910:
  6685     1394  0823               	movf	__tdiv_to_l_@quot+3,w
  6686     1395  00F3               	movwf	?__tdiv_to_l_+3
  6687     1396  0822               	movf	__tdiv_to_l_@quot+2,w
  6688     1397  00F2               	movwf	?__tdiv_to_l_+2
  6689     1398  0821               	movf	__tdiv_to_l_@quot+1,w
  6690     1399  00F1               	movwf	?__tdiv_to_l_+1
  6691     139A  0820               	movf	__tdiv_to_l_@quot,w
  6692     139B  00F0               	movwf	?__tdiv_to_l_
  6693     139C                     l578:
  6694     139C  0008               	return
  6695     139D                     __end_of__tdiv_to_l_:
  6696                           
  6697                           	psect	text12
  6698     0004                     __ptext12:	
  6699 ;; *************** function __div_to_l_ *****************
  6700 ;; Defined at:
  6701 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fldivl.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;  f1              4    0[COMMON] unsigned long 
  6704 ;;  f2              4    4[COMMON] unsigned long 
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;  quot            4    0[BANK0 ] unsigned long 
  6707 ;;  exp1            1    5[BANK0 ] unsigned char 
  6708 ;;  cntr            1    4[BANK0 ] unsigned char 
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  4    0[COMMON] unsigned long 
  6711 ;; Registers used:
  6712 ;;		wreg, status,2, status,0, btemp+1
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6718 ;;      Params:         8       0       0       0       0
  6719 ;;      Locals:         0       6       0       0       0
  6720 ;;      Temps:          1       0       0       0       0
  6721 ;;      Totals:         9       6       0       0       0
  6722 ;;Total ram usage:       15 bytes
  6723 ;; Hardware stack levels used: 1
  6724 ;; This function calls:
  6725 ;;		Nothing
  6726 ;; This function is called by:
  6727 ;;		_sprintf
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731     0004                     __div_to_l_:	
  6732                           ;psect for function __div_to_l_
  6733                           
  6734     0004                     l2914:	
  6735                           ;incstack = 0
  6736                           ; Regs used in __div_to_l_: [wreg+status,2+status,0+btemp+1]
  6737                           
  6738     0004  1003               	clrc
  6739     0005  0D72               	rlf	__div_to_l_@f1+2,w
  6740     0006  0D73               	rlf	__div_to_l_@f1+3,w
  6741     0007  1283               	bcf	3,5	;RP0=0, select bank0
  6742     0008  1303               	bcf	3,6	;RP1=0, select bank0
  6743     0009  00A5               	movwf	__div_to_l_@exp1
  6744     000A  0825               	movf	__div_to_l_@exp1,w
  6745     000B  1D03               	btfss	3,2
  6746     000C  280E               	goto	u4571
  6747     000D  280F               	goto	u4570
  6748     000E                     u4571:
  6749     000E  2818               	goto	l2920
  6750     000F                     u4570:
  6751     000F                     l2916:
  6752     000F  3000               	movlw	0
  6753     0010  00F3               	movwf	?__div_to_l_+3
  6754     0011  3000               	movlw	0
  6755     0012  00F2               	movwf	?__div_to_l_+2
  6756     0013  3000               	movlw	0
  6757     0014  00F1               	movwf	?__div_to_l_+1
  6758     0015  3000               	movlw	0
  6759     0016  00F0               	movwf	?__div_to_l_
  6760     0017  28BB               	goto	l531
  6761     0018                     l2920:
  6762     0018  1003               	clrc
  6763     0019  0D76               	rlf	__div_to_l_@f2+2,w
  6764     001A  0D77               	rlf	__div_to_l_@f2+3,w
  6765     001B  00A4               	movwf	__div_to_l_@cntr
  6766     001C  0824               	movf	__div_to_l_@cntr,w
  6767     001D  1D03               	btfss	3,2
  6768     001E  2820               	goto	u4581
  6769     001F  2821               	goto	u4580
  6770     0020                     u4581:
  6771     0020  2822               	goto	l532
  6772     0021                     u4580:
  6773     0021  280F               	goto	l2916
  6774     0022                     l532:
  6775     0022  17F2               	bsf	__div_to_l_@f1+2,7
  6776     0023                     l2926:
  6777     0023  30FF               	movlw	255
  6778     0024  05F0               	andwf	__div_to_l_@f1,f
  6779     0025  30FF               	movlw	255
  6780     0026  05F1               	andwf	__div_to_l_@f1+1,f
  6781     0027  30FF               	movlw	255
  6782     0028  05F2               	andwf	__div_to_l_@f1+2,f
  6783     0029  3000               	movlw	0
  6784     002A  05F3               	andwf	__div_to_l_@f1+3,f
  6785     002B                     l2928:
  6786     002B  17F6               	bsf	__div_to_l_@f2+2,7
  6787     002C  30FF               	movlw	255
  6788     002D  05F4               	andwf	__div_to_l_@f2,f
  6789     002E  30FF               	movlw	255
  6790     002F  05F5               	andwf	__div_to_l_@f2+1,f
  6791     0030  30FF               	movlw	255
  6792     0031  05F6               	andwf	__div_to_l_@f2+2,f
  6793     0032  3000               	movlw	0
  6794     0033  05F7               	andwf	__div_to_l_@f2+3,f
  6795     0034  3000               	movlw	0
  6796     0035  00A3               	movwf	__div_to_l_@quot+3
  6797     0036  3000               	movlw	0
  6798     0037  00A2               	movwf	__div_to_l_@quot+2
  6799     0038  3000               	movlw	0
  6800     0039  00A1               	movwf	__div_to_l_@quot+1
  6801     003A  3000               	movlw	0
  6802     003B  00A0               	movwf	__div_to_l_@quot
  6803     003C                     l2930:
  6804     003C  307F               	movlw	127
  6805     003D  02A5               	subwf	__div_to_l_@exp1,f
  6806     003E                     l2932:
  6807     003E  30A0               	movlw	160
  6808     003F  0724               	addwf	__div_to_l_@cntr,w
  6809     0040  00F8               	movwf	??__div_to_l_
  6810     0041  0878               	movf	??__div_to_l_,w
  6811     0042  02A5               	subwf	__div_to_l_@exp1,f
  6812     0043  3020               	movlw	32
  6813     0044  00A4               	movwf	__div_to_l_@cntr
  6814     0045                     l2934:
  6815     0045  3001               	movlw	1
  6816     0046  00F8               	movwf	??__div_to_l_
  6817     0047                     u4595:
  6818     0047  1003               	clrc
  6819     0048  0DA0               	rlf	__div_to_l_@quot,f
  6820     0049  0DA1               	rlf	__div_to_l_@quot+1,f
  6821     004A  0DA2               	rlf	__div_to_l_@quot+2,f
  6822     004B  0DA3               	rlf	__div_to_l_@quot+3,f
  6823     004C  0BF8               	decfsz	??__div_to_l_,f
  6824     004D  2847               	goto	u4595
  6825     004E                     l2936:
  6826     004E  0877               	movf	__div_to_l_@f2+3,w
  6827     004F  0273               	subwf	__div_to_l_@f1+3,w
  6828     0050  1D03               	skipz
  6829     0051  285C               	goto	u4605
  6830     0052  0876               	movf	__div_to_l_@f2+2,w
  6831     0053  0272               	subwf	__div_to_l_@f1+2,w
  6832     0054  1D03               	skipz
  6833     0055  285C               	goto	u4605
  6834     0056  0875               	movf	__div_to_l_@f2+1,w
  6835     0057  0271               	subwf	__div_to_l_@f1+1,w
  6836     0058  1D03               	skipz
  6837     0059  285C               	goto	u4605
  6838     005A  0874               	movf	__div_to_l_@f2,w
  6839     005B  0270               	subwf	__div_to_l_@f1,w
  6840     005C                     u4605:
  6841     005C  1C03               	skipc
  6842     005D  285F               	goto	u4601
  6843     005E  2860               	goto	u4600
  6844     005F                     u4601:
  6845     005F  286F               	goto	l2942
  6846     0060                     u4600:
  6847     0060                     l2938:
  6848     0060  0874               	movf	__div_to_l_@f2,w
  6849     0061  02F0               	subwf	__div_to_l_@f1,f
  6850     0062  0875               	movf	__div_to_l_@f2+1,w
  6851     0063  1C03               	skipc
  6852     0064  0F75               	incfsz	__div_to_l_@f2+1,w
  6853     0065  02F1               	subwf	__div_to_l_@f1+1,f
  6854     0066  0876               	movf	__div_to_l_@f2+2,w
  6855     0067  1C03               	skipc
  6856     0068  0F76               	incfsz	__div_to_l_@f2+2,w
  6857     0069  02F2               	subwf	__div_to_l_@f1+2,f
  6858     006A  0877               	movf	__div_to_l_@f2+3,w
  6859     006B  1C03               	skipc
  6860     006C  0F77               	incfsz	__div_to_l_@f2+3,w
  6861     006D  02F3               	subwf	__div_to_l_@f1+3,f
  6862     006E                     l2940:
  6863     006E  1420               	bsf	__div_to_l_@quot,0
  6864     006F                     l2942:
  6865     006F  3001               	movlw	1
  6866     0070  00F8               	movwf	??__div_to_l_
  6867     0071                     u4615:
  6868     0071  1003               	clrc
  6869     0072  0DF0               	rlf	__div_to_l_@f1,f
  6870     0073  0DF1               	rlf	__div_to_l_@f1+1,f
  6871     0074  0DF2               	rlf	__div_to_l_@f1+2,f
  6872     0075  0DF3               	rlf	__div_to_l_@f1+3,f
  6873     0076  0BF8               	decfsz	??__div_to_l_,f
  6874     0077  2871               	goto	u4615
  6875     0078                     l2944:
  6876     0078  3001               	movlw	1
  6877     0079  02A4               	subwf	__div_to_l_@cntr,f
  6878     007A  1D03               	btfss	3,2
  6879     007B  287D               	goto	u4621
  6880     007C  287E               	goto	u4620
  6881     007D                     u4621:
  6882     007D  2845               	goto	l2934
  6883     007E                     u4620:
  6884     007E                     l535:
  6885     007E  1FA5               	btfss	__div_to_l_@exp1,7
  6886     007F  2881               	goto	u4631
  6887     0080  2882               	goto	u4630
  6888     0081                     u4631:
  6889     0081  289C               	goto	l2956
  6890     0082                     u4630:
  6891     0082                     l2946:
  6892     0082  0825               	movf	__div_to_l_@exp1,w
  6893     0083  3A80               	xorlw	128
  6894     0084  3E9F               	addlw	159
  6895     0085  1803               	skipnc
  6896     0086  2888               	goto	u4641
  6897     0087  2889               	goto	u4640
  6898     0088                     u4641:
  6899     0088  288A               	goto	l2952
  6900     0089                     u4640:
  6901     0089  280F               	goto	l2916
  6902     008A                     l2952:
  6903     008A  3001               	movlw	1
  6904     008B                     u4655:
  6905     008B  1003               	clrc
  6906     008C  0CA3               	rrf	__div_to_l_@quot+3,f
  6907     008D  0CA2               	rrf	__div_to_l_@quot+2,f
  6908     008E  0CA1               	rrf	__div_to_l_@quot+1,f
  6909     008F  0CA0               	rrf	__div_to_l_@quot,f
  6910     0090  3EFF               	addlw	-1
  6911     0091  1D03               	skipz
  6912     0092  288B               	goto	u4655
  6913     0093                     l2954:
  6914     0093  3001               	movlw	1
  6915     0094  00FF               	movwf	btemp+1
  6916     0095  087F               	movf	btemp+1,w
  6917     0096  07A5               	addwf	__div_to_l_@exp1,f
  6918     0097  1D03               	btfss	3,2
  6919     0098  289A               	goto	u4661
  6920     0099  289B               	goto	u4660
  6921     009A                     u4661:
  6922     009A  288A               	goto	l2952
  6923     009B                     u4660:
  6924     009B  28B3               	goto	l2964
  6925     009C                     l2956:
  6926     009C  3020               	movlw	32
  6927     009D  0225               	subwf	__div_to_l_@exp1,w
  6928     009E  1C03               	skipc
  6929     009F  28A1               	goto	u4671
  6930     00A0  28A2               	goto	u4670
  6931     00A1                     u4671:
  6932     00A1  28AE               	goto	l542
  6933     00A2                     u4670:
  6934     00A2  280F               	goto	l2916
  6935     00A3                     l2962:
  6936     00A3  3001               	movlw	1
  6937     00A4  00F8               	movwf	??__div_to_l_
  6938     00A5                     u4685:
  6939     00A5  1003               	clrc
  6940     00A6  0DA0               	rlf	__div_to_l_@quot,f
  6941     00A7  0DA1               	rlf	__div_to_l_@quot+1,f
  6942     00A8  0DA2               	rlf	__div_to_l_@quot+2,f
  6943     00A9  0DA3               	rlf	__div_to_l_@quot+3,f
  6944     00AA  0BF8               	decfsz	??__div_to_l_,f
  6945     00AB  28A5               	goto	u4685
  6946     00AC  3001               	movlw	1
  6947     00AD  02A5               	subwf	__div_to_l_@exp1,f
  6948     00AE                     l542:
  6949     00AE  0825               	movf	__div_to_l_@exp1,w
  6950     00AF  1D03               	btfss	3,2
  6951     00B0  28B2               	goto	u4691
  6952     00B1  28B3               	goto	u4690
  6953     00B2                     u4691:
  6954     00B2  28A3               	goto	l2962
  6955     00B3                     u4690:
  6956     00B3                     l2964:
  6957     00B3  0823               	movf	__div_to_l_@quot+3,w
  6958     00B4  00F3               	movwf	?__div_to_l_+3
  6959     00B5  0822               	movf	__div_to_l_@quot+2,w
  6960     00B6  00F2               	movwf	?__div_to_l_+2
  6961     00B7  0821               	movf	__div_to_l_@quot+1,w
  6962     00B8  00F1               	movwf	?__div_to_l_+1
  6963     00B9  0820               	movf	__div_to_l_@quot,w
  6964     00BA  00F0               	movwf	?__div_to_l_
  6965     00BB                     l531:
  6966     00BB  0008               	return
  6967     00BC                     __end_of__div_to_l_:
  6968                           
  6969                           	psect	text13
  6970     08A4                     __ptext13:	
  6971 ;; *************** function ___xxtofl *****************
  6972 ;; Defined at:
  6973 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  sign            1    wreg     unsigned char 
  6976 ;;  val             4    0[COMMON] long 
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;  sign            1    8[COMMON] unsigned char 
  6979 ;;  arg             4   10[COMMON] unsigned long 
  6980 ;;  exp             1    9[COMMON] unsigned char 
  6981 ;; Return value:  Size  Location     Type
  6982 ;;                  4    0[COMMON] unsigned char 
  6983 ;; Registers used:
  6984 ;;		wreg, status,2, status,0, btemp+1
  6985 ;; Tracked objects:
  6986 ;;		On entry : 0/0
  6987 ;;		On exit  : 0/0
  6988 ;;		Unchanged: 0/0
  6989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6990 ;;      Params:         4       0       0       0       0
  6991 ;;      Locals:         6       0       0       0       0
  6992 ;;      Temps:          4       0       0       0       0
  6993 ;;      Totals:        14       0       0       0       0
  6994 ;;Total ram usage:       14 bytes
  6995 ;; Hardware stack levels used: 1
  6996 ;; This function calls:
  6997 ;;		Nothing
  6998 ;; This function is called by:
  6999 ;;		_main
  7000 ;;		_sprintf
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004     08A4                     ___xxtofl:	
  7005                           ;psect for function ___xxtofl
  7006                           
  7007                           
  7008                           ;incstack = 0
  7009                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  7010                           ;___xxtofl@sign stored from wreg
  7011     08A4  00F8               	movwf	___xxtofl@sign
  7012     08A5                     l3114:
  7013     08A5  0878               	movf	___xxtofl@sign,w
  7014     08A6  1903               	btfsc	3,2
  7015     08A7  28A9               	goto	u5081
  7016     08A8  28AA               	goto	u5080
  7017     08A9                     u5081:
  7018     08A9  28BE               	goto	l3120
  7019     08AA                     u5080:
  7020     08AA                     l3116:
  7021     08AA  1FF3               	btfss	___xxtofl@val+3,7
  7022     08AB  28AD               	goto	u5091
  7023     08AC  28AE               	goto	u5090
  7024     08AD                     u5091:
  7025     08AD  28BE               	goto	l3120
  7026     08AE                     u5090:
  7027     08AE                     l3118:
  7028     08AE  0970               	comf	___xxtofl@val,w
  7029     08AF  00FA               	movwf	___xxtofl@arg
  7030     08B0  0971               	comf	___xxtofl@val+1,w
  7031     08B1  00FB               	movwf	___xxtofl@arg+1
  7032     08B2  0972               	comf	___xxtofl@val+2,w
  7033     08B3  00FC               	movwf	___xxtofl@arg+2
  7034     08B4  0973               	comf	___xxtofl@val+3,w
  7035     08B5  00FD               	movwf	___xxtofl@arg+3
  7036     08B6  0AFA               	incf	___xxtofl@arg,f
  7037     08B7  1903               	skipnz
  7038     08B8  0AFB               	incf	___xxtofl@arg+1,f
  7039     08B9  1903               	skipnz
  7040     08BA  0AFC               	incf	___xxtofl@arg+2,f
  7041     08BB  1903               	skipnz
  7042     08BC  0AFD               	incf	___xxtofl@arg+3,f
  7043     08BD  28C6               	goto	l828
  7044     08BE                     l3120:
  7045     08BE  0873               	movf	___xxtofl@val+3,w
  7046     08BF  00FD               	movwf	___xxtofl@arg+3
  7047     08C0  0872               	movf	___xxtofl@val+2,w
  7048     08C1  00FC               	movwf	___xxtofl@arg+2
  7049     08C2  0871               	movf	___xxtofl@val+1,w
  7050     08C3  00FB               	movwf	___xxtofl@arg+1
  7051     08C4  0870               	movf	___xxtofl@val,w
  7052     08C5  00FA               	movwf	___xxtofl@arg
  7053     08C6                     l828:
  7054     08C6  0873               	movf	___xxtofl@val+3,w
  7055     08C7  0472               	iorwf	___xxtofl@val+2,w
  7056     08C8  0471               	iorwf	___xxtofl@val+1,w
  7057     08C9  0470               	iorwf	___xxtofl@val,w
  7058     08CA  1D03               	skipz
  7059     08CB  28CD               	goto	u5101
  7060     08CC  28CE               	goto	u5100
  7061     08CD                     u5101:
  7062     08CD  28D7               	goto	l3126
  7063     08CE                     u5100:
  7064     08CE                     l3122:
  7065     08CE  3000               	movlw	0
  7066     08CF  00F3               	movwf	?___xxtofl+3
  7067     08D0  3000               	movlw	0
  7068     08D1  00F2               	movwf	?___xxtofl+2
  7069     08D2  3000               	movlw	0
  7070     08D3  00F1               	movwf	?___xxtofl+1
  7071     08D4  3000               	movlw	0
  7072     08D5  00F0               	movwf	?___xxtofl
  7073     08D6  295B               	goto	l830
  7074     08D7                     l3126:
  7075     08D7  3096               	movlw	150
  7076     08D8  00F9               	movwf	___xxtofl@exp
  7077     08D9  28E7               	goto	l3132
  7078     08DA                     l3128:
  7079     08DA  3001               	movlw	1
  7080     08DB  00FF               	movwf	btemp+1
  7081     08DC  087F               	movf	btemp+1,w
  7082     08DD  07F9               	addwf	___xxtofl@exp,f
  7083     08DE                     l3130:
  7084     08DE  3001               	movlw	1
  7085     08DF                     u5115:
  7086     08DF  1003               	clrc
  7087     08E0  0CFD               	rrf	___xxtofl@arg+3,f
  7088     08E1  0CFC               	rrf	___xxtofl@arg+2,f
  7089     08E2  0CFB               	rrf	___xxtofl@arg+1,f
  7090     08E3  0CFA               	rrf	___xxtofl@arg,f
  7091     08E4  3EFF               	addlw	-1
  7092     08E5  1D03               	skipz
  7093     08E6  28DF               	goto	u5115
  7094     08E7                     l3132:
  7095     08E7  30FE               	movlw	254
  7096     08E8  057D               	andwf	___xxtofl@arg+3,w
  7097     08E9  1D03               	btfss	3,2
  7098     08EA  28EC               	goto	u5121
  7099     08EB  28ED               	goto	u5120
  7100     08EC                     u5121:
  7101     08EC  28DA               	goto	l3128
  7102     08ED                     u5120:
  7103     08ED  2909               	goto	l3140
  7104     08EE                     l3134:
  7105     08EE  3001               	movlw	1
  7106     08EF  00FF               	movwf	btemp+1
  7107     08F0  087F               	movf	btemp+1,w
  7108     08F1  07F9               	addwf	___xxtofl@exp,f
  7109     08F2                     l3136:
  7110     08F2  3001               	movlw	1
  7111     08F3  07FA               	addwf	___xxtofl@arg,f
  7112     08F4  3000               	movlw	0
  7113     08F5  1803               	skipnc
  7114     08F6  3001               	movlw	1
  7115     08F7  07FB               	addwf	___xxtofl@arg+1,f
  7116     08F8  3000               	movlw	0
  7117     08F9  1803               	skipnc
  7118     08FA  3001               	movlw	1
  7119     08FB  07FC               	addwf	___xxtofl@arg+2,f
  7120     08FC  3000               	movlw	0
  7121     08FD  1803               	skipnc
  7122     08FE  3001               	movlw	1
  7123     08FF  07FD               	addwf	___xxtofl@arg+3,f
  7124     0900                     l3138:
  7125     0900  3001               	movlw	1
  7126     0901                     u5135:
  7127     0901  1003               	clrc
  7128     0902  0CFD               	rrf	___xxtofl@arg+3,f
  7129     0903  0CFC               	rrf	___xxtofl@arg+2,f
  7130     0904  0CFB               	rrf	___xxtofl@arg+1,f
  7131     0905  0CFA               	rrf	___xxtofl@arg,f
  7132     0906  3EFF               	addlw	-1
  7133     0907  1D03               	skipz
  7134     0908  2901               	goto	u5135
  7135     0909                     l3140:
  7136     0909  30FF               	movlw	255
  7137     090A  057D               	andwf	___xxtofl@arg+3,w
  7138     090B  1D03               	btfss	3,2
  7139     090C  290E               	goto	u5141
  7140     090D  290F               	goto	u5140
  7141     090E                     u5141:
  7142     090E  28EE               	goto	l3134
  7143     090F                     u5140:
  7144     090F  291B               	goto	l3144
  7145     0910                     l3142:
  7146     0910  3001               	movlw	1
  7147     0911  02F9               	subwf	___xxtofl@exp,f
  7148     0912  3001               	movlw	1
  7149     0913  00F4               	movwf	??___xxtofl
  7150     0914                     u5155:
  7151     0914  1003               	clrc
  7152     0915  0DFA               	rlf	___xxtofl@arg,f
  7153     0916  0DFB               	rlf	___xxtofl@arg+1,f
  7154     0917  0DFC               	rlf	___xxtofl@arg+2,f
  7155     0918  0DFD               	rlf	___xxtofl@arg+3,f
  7156     0919  0BF4               	decfsz	??___xxtofl,f
  7157     091A  2914               	goto	u5155
  7158     091B                     l3144:
  7159     091B  1BFC               	btfsc	___xxtofl@arg+2,7
  7160     091C  291E               	goto	u5161
  7161     091D  291F               	goto	u5160
  7162     091E                     u5161:
  7163     091E  2925               	goto	l841
  7164     091F                     u5160:
  7165     091F                     l3146:
  7166     091F  3002               	movlw	2
  7167     0920  0279               	subwf	___xxtofl@exp,w
  7168     0921  1803               	skipnc
  7169     0922  2924               	goto	u5171
  7170     0923  2925               	goto	u5170
  7171     0924                     u5171:
  7172     0924  2910               	goto	l3142
  7173     0925                     u5170:
  7174     0925                     l841:
  7175     0925  1879               	btfsc	___xxtofl@exp,0
  7176     0926  2928               	goto	u5181
  7177     0927  2929               	goto	u5180
  7178     0928                     u5181:
  7179     0928  2931               	goto	l842
  7180     0929                     u5180:
  7181     0929                     l3148:
  7182     0929  30FF               	movlw	255
  7183     092A  05FA               	andwf	___xxtofl@arg,f
  7184     092B  30FF               	movlw	255
  7185     092C  05FB               	andwf	___xxtofl@arg+1,f
  7186     092D  307F               	movlw	127
  7187     092E  05FC               	andwf	___xxtofl@arg+2,f
  7188     092F  30FF               	movlw	255
  7189     0930  05FD               	andwf	___xxtofl@arg+3,f
  7190     0931                     l842:
  7191     0931  1003               	clrc
  7192     0932  0CF9               	rrf	___xxtofl@exp,f
  7193     0933                     l3150:
  7194     0933  0879               	movf	___xxtofl@exp,w
  7195     0934  00F4               	movwf	??___xxtofl
  7196     0935  01F5               	clrf	??___xxtofl+1
  7197     0936  01F6               	clrf	??___xxtofl+2
  7198     0937  01F7               	clrf	??___xxtofl+3
  7199     0938  3018               	movlw	24
  7200     0939                     u5195:
  7201     0939  1003               	clrc
  7202     093A  0DF4               	rlf	??___xxtofl,f
  7203     093B  0DF5               	rlf	??___xxtofl+1,f
  7204     093C  0DF6               	rlf	??___xxtofl+2,f
  7205     093D  0DF7               	rlf	??___xxtofl+3,f
  7206     093E                     u5190:
  7207     093E  3EFF               	addlw	-1
  7208     093F  1D03               	skipz
  7209     0940  2939               	goto	u5195
  7210     0941  0874               	movf	??___xxtofl,w
  7211     0942  04FA               	iorwf	___xxtofl@arg,f
  7212     0943  0875               	movf	??___xxtofl+1,w
  7213     0944  04FB               	iorwf	___xxtofl@arg+1,f
  7214     0945  0876               	movf	??___xxtofl+2,w
  7215     0946  04FC               	iorwf	___xxtofl@arg+2,f
  7216     0947  0877               	movf	??___xxtofl+3,w
  7217     0948  04FD               	iorwf	___xxtofl@arg+3,f
  7218     0949                     l3152:
  7219     0949  0878               	movf	___xxtofl@sign,w
  7220     094A  1903               	btfsc	3,2
  7221     094B  294D               	goto	u5201
  7222     094C  294E               	goto	u5200
  7223     094D                     u5201:
  7224     094D  2953               	goto	l3158
  7225     094E                     u5200:
  7226     094E                     l3154:
  7227     094E  1FF3               	btfss	___xxtofl@val+3,7
  7228     094F  2951               	goto	u5211
  7229     0950  2952               	goto	u5210
  7230     0951                     u5211:
  7231     0951  2953               	goto	l3158
  7232     0952                     u5210:
  7233     0952                     l3156:
  7234     0952  17FD               	bsf	___xxtofl@arg+3,7
  7235     0953                     l3158:
  7236     0953  087D               	movf	___xxtofl@arg+3,w
  7237     0954  00F3               	movwf	?___xxtofl+3
  7238     0955  087C               	movf	___xxtofl@arg+2,w
  7239     0956  00F2               	movwf	?___xxtofl+2
  7240     0957  087B               	movf	___xxtofl@arg+1,w
  7241     0958  00F1               	movwf	?___xxtofl+1
  7242     0959  087A               	movf	___xxtofl@arg,w
  7243     095A  00F0               	movwf	?___xxtofl
  7244     095B                     l830:
  7245     095B  0008               	return
  7246     095C                     __end_of___xxtofl:
  7247                           
  7248                           	psect	text14
  7249     1DD5                     __ptext14:	
  7250 ;; *************** function ___wmul *****************
  7251 ;; Defined at:
  7252 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;  multiplier      2    0[COMMON] unsigned int 
  7255 ;;  multiplicand    2    2[COMMON] unsigned int 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;  product         2    4[COMMON] unsigned int 
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  2    0[COMMON] unsigned int 
  7260 ;; Registers used:
  7261 ;;		wreg, status,2, status,0
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7267 ;;      Params:         4       0       0       0       0
  7268 ;;      Locals:         2       0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0
  7270 ;;      Totals:         6       0       0       0       0
  7271 ;;Total ram usage:        6 bytes
  7272 ;; Hardware stack levels used: 1
  7273 ;; This function calls:
  7274 ;;		Nothing
  7275 ;; This function is called by:
  7276 ;;		_sprintf
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280     1DD5                     ___wmul:	
  7281                           ;psect for function ___wmul
  7282                           
  7283     1DD5                     l2968:	
  7284                           ;incstack = 0
  7285                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7286                           
  7287     1DD5  01F4               	clrf	___wmul@product
  7288     1DD6  01F5               	clrf	___wmul@product+1
  7289     1DD7                     l2970:
  7290     1DD7  1C70               	btfss	___wmul@multiplier,0
  7291     1DD8  2DDA               	goto	u4701
  7292     1DD9  2DDB               	goto	u4700
  7293     1DDA                     u4701:
  7294     1DDA  2DE1               	goto	l361
  7295     1DDB                     u4700:
  7296     1DDB                     l2972:
  7297     1DDB  0872               	movf	___wmul@multiplicand,w
  7298     1DDC  07F4               	addwf	___wmul@product,f
  7299     1DDD  1803               	skipnc
  7300     1DDE  0AF5               	incf	___wmul@product+1,f
  7301     1DDF  0873               	movf	___wmul@multiplicand+1,w
  7302     1DE0  07F5               	addwf	___wmul@product+1,f
  7303     1DE1                     l361:
  7304     1DE1  3001               	movlw	1
  7305     1DE2                     u4715:
  7306     1DE2  1003               	clrc
  7307     1DE3  0DF2               	rlf	___wmul@multiplicand,f
  7308     1DE4  0DF3               	rlf	___wmul@multiplicand+1,f
  7309     1DE5  3EFF               	addlw	-1
  7310     1DE6  1D03               	skipz
  7311     1DE7  2DE2               	goto	u4715
  7312     1DE8                     l2974:
  7313     1DE8  3001               	movlw	1
  7314     1DE9                     u4725:
  7315     1DE9  1003               	clrc
  7316     1DEA  0CF1               	rrf	___wmul@multiplier+1,f
  7317     1DEB  0CF0               	rrf	___wmul@multiplier,f
  7318     1DEC  3EFF               	addlw	-1
  7319     1DED  1D03               	skipz
  7320     1DEE  2DE9               	goto	u4725
  7321     1DEF                     l2976:
  7322     1DEF  0870               	movf	___wmul@multiplier,w
  7323     1DF0  0471               	iorwf	___wmul@multiplier+1,w
  7324     1DF1  1D03               	btfss	3,2
  7325     1DF2  2DF4               	goto	u4731
  7326     1DF3  2DF5               	goto	u4730
  7327     1DF4                     u4731:
  7328     1DF4  2DD7               	goto	l2970
  7329     1DF5                     u4730:
  7330     1DF5                     l2978:
  7331     1DF5  0875               	movf	___wmul@product+1,w
  7332     1DF6  00F1               	movwf	?___wmul+1
  7333     1DF7  0874               	movf	___wmul@product,w
  7334     1DF8  00F0               	movwf	?___wmul
  7335     1DF9                     l363:
  7336     1DF9  0008               	return
  7337     1DFA                     __end_of___wmul:
  7338                           
  7339                           	psect	text15
  7340     1FAC                     __ptext15:	
  7341 ;; *************** function ___llmod *****************
  7342 ;; Defined at:
  7343 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\llmod.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;  divisor         4    0[COMMON] unsigned long 
  7346 ;;  dividend        4    4[COMMON] unsigned long 
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;  counter         1    9[COMMON] unsigned char 
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  4    0[COMMON] unsigned long 
  7351 ;; Registers used:
  7352 ;;		wreg, status,2, status,0, btemp+1
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7358 ;;      Params:         8       0       0       0       0
  7359 ;;      Locals:         1       0       0       0       0
  7360 ;;      Temps:          1       0       0       0       0
  7361 ;;      Totals:        10       0       0       0       0
  7362 ;;Total ram usage:       10 bytes
  7363 ;; Hardware stack levels used: 1
  7364 ;; This function calls:
  7365 ;;		Nothing
  7366 ;; This function is called by:
  7367 ;;		_sprintf
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371     1FAC                     ___llmod:	
  7372                           ;psect for function ___llmod
  7373                           
  7374     1FAC                     l3086:	
  7375                           ;incstack = 0
  7376                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  7377                           
  7378     1FAC  0873               	movf	___llmod@divisor+3,w
  7379     1FAD  0472               	iorwf	___llmod@divisor+2,w
  7380     1FAE  0471               	iorwf	___llmod@divisor+1,w
  7381     1FAF  0470               	iorwf	___llmod@divisor,w
  7382     1FB0  1903               	skipnz
  7383     1FB1  2FB3               	goto	u5021
  7384     1FB2  2FB4               	goto	u5020
  7385     1FB3                     u5021:
  7386     1FB3  2FF7               	goto	l3104
  7387     1FB4                     u5020:
  7388     1FB4                     l3088:
  7389     1FB4  01F9               	clrf	___llmod@counter
  7390     1FB5  0AF9               	incf	___llmod@counter,f
  7391     1FB6  2FC4               	goto	l3094
  7392     1FB7                     l3090:
  7393     1FB7  3001               	movlw	1
  7394     1FB8  00F8               	movwf	??___llmod
  7395     1FB9                     u5035:
  7396     1FB9  1003               	clrc
  7397     1FBA  0DF0               	rlf	___llmod@divisor,f
  7398     1FBB  0DF1               	rlf	___llmod@divisor+1,f
  7399     1FBC  0DF2               	rlf	___llmod@divisor+2,f
  7400     1FBD  0DF3               	rlf	___llmod@divisor+3,f
  7401     1FBE  0BF8               	decfsz	??___llmod,f
  7402     1FBF  2FB9               	goto	u5035
  7403     1FC0                     l3092:
  7404     1FC0  3001               	movlw	1
  7405     1FC1  00FF               	movwf	btemp+1
  7406     1FC2  087F               	movf	btemp+1,w
  7407     1FC3  07F9               	addwf	___llmod@counter,f
  7408     1FC4                     l3094:
  7409     1FC4  1FF3               	btfss	___llmod@divisor+3,7
  7410     1FC5  2FC7               	goto	u5041
  7411     1FC6  2FC8               	goto	u5040
  7412     1FC7                     u5041:
  7413     1FC7  2FB7               	goto	l3090
  7414     1FC8                     u5040:
  7415     1FC8                     l3096:
  7416     1FC8  0873               	movf	___llmod@divisor+3,w
  7417     1FC9  0277               	subwf	___llmod@dividend+3,w
  7418     1FCA  1D03               	skipz
  7419     1FCB  2FD6               	goto	u5055
  7420     1FCC  0872               	movf	___llmod@divisor+2,w
  7421     1FCD  0276               	subwf	___llmod@dividend+2,w
  7422     1FCE  1D03               	skipz
  7423     1FCF  2FD6               	goto	u5055
  7424     1FD0  0871               	movf	___llmod@divisor+1,w
  7425     1FD1  0275               	subwf	___llmod@dividend+1,w
  7426     1FD2  1D03               	skipz
  7427     1FD3  2FD6               	goto	u5055
  7428     1FD4  0870               	movf	___llmod@divisor,w
  7429     1FD5  0274               	subwf	___llmod@dividend,w
  7430     1FD6                     u5055:
  7431     1FD6  1C03               	skipc
  7432     1FD7  2FD9               	goto	u5051
  7433     1FD8  2FDA               	goto	u5050
  7434     1FD9                     u5051:
  7435     1FD9  2FE8               	goto	l3100
  7436     1FDA                     u5050:
  7437     1FDA                     l3098:
  7438     1FDA  0870               	movf	___llmod@divisor,w
  7439     1FDB  02F4               	subwf	___llmod@dividend,f
  7440     1FDC  0871               	movf	___llmod@divisor+1,w
  7441     1FDD  1C03               	skipc
  7442     1FDE  0F71               	incfsz	___llmod@divisor+1,w
  7443     1FDF  02F5               	subwf	___llmod@dividend+1,f
  7444     1FE0  0872               	movf	___llmod@divisor+2,w
  7445     1FE1  1C03               	skipc
  7446     1FE2  0F72               	incfsz	___llmod@divisor+2,w
  7447     1FE3  02F6               	subwf	___llmod@dividend+2,f
  7448     1FE4  0873               	movf	___llmod@divisor+3,w
  7449     1FE5  1C03               	skipc
  7450     1FE6  0F73               	incfsz	___llmod@divisor+3,w
  7451     1FE7  02F7               	subwf	___llmod@dividend+3,f
  7452     1FE8                     l3100:
  7453     1FE8  3001               	movlw	1
  7454     1FE9                     u5065:
  7455     1FE9  1003               	clrc
  7456     1FEA  0CF3               	rrf	___llmod@divisor+3,f
  7457     1FEB  0CF2               	rrf	___llmod@divisor+2,f
  7458     1FEC  0CF1               	rrf	___llmod@divisor+1,f
  7459     1FED  0CF0               	rrf	___llmod@divisor,f
  7460     1FEE  3EFF               	addlw	-1
  7461     1FEF  1D03               	skipz
  7462     1FF0  2FE9               	goto	u5065
  7463     1FF1                     l3102:
  7464     1FF1  3001               	movlw	1
  7465     1FF2  02F9               	subwf	___llmod@counter,f
  7466     1FF3  1D03               	btfss	3,2
  7467     1FF4  2FF6               	goto	u5071
  7468     1FF5  2FF7               	goto	u5070
  7469     1FF6                     u5071:
  7470     1FF6  2FC8               	goto	l3096
  7471     1FF7                     u5070:
  7472     1FF7                     l3104:
  7473     1FF7  0877               	movf	___llmod@dividend+3,w
  7474     1FF8  00F3               	movwf	?___llmod+3
  7475     1FF9  0876               	movf	___llmod@dividend+2,w
  7476     1FFA  00F2               	movwf	?___llmod+2
  7477     1FFB  0875               	movf	___llmod@dividend+1,w
  7478     1FFC  00F1               	movwf	?___llmod+1
  7479     1FFD  0874               	movf	___llmod@dividend,w
  7480     1FFE  00F0               	movwf	?___llmod
  7481     1FFF                     l617:
  7482     1FFF  0008               	return
  7483     2000                     __end_of___llmod:
  7484                           
  7485                           	psect	text16
  7486     11A1                     __ptext16:	
  7487 ;; *************** function ___lldiv *****************
  7488 ;; Defined at:
  7489 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;  divisor         4    0[COMMON] unsigned long 
  7492 ;;  dividend        4    4[COMMON] unsigned long 
  7493 ;; Auto vars:     Size  Location     Type
  7494 ;;  quotient        4    9[COMMON] unsigned long 
  7495 ;;  counter         1   13[COMMON] unsigned char 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  4    0[COMMON] unsigned long 
  7498 ;; Registers used:
  7499 ;;		wreg, status,2, status,0, btemp+1
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7505 ;;      Params:         8       0       0       0       0
  7506 ;;      Locals:         5       0       0       0       0
  7507 ;;      Temps:          1       0       0       0       0
  7508 ;;      Totals:        14       0       0       0       0
  7509 ;;Total ram usage:       14 bytes
  7510 ;; Hardware stack levels used: 1
  7511 ;; This function calls:
  7512 ;;		Nothing
  7513 ;; This function is called by:
  7514 ;;		_sprintf
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518     11A1                     ___lldiv:	
  7519                           ;psect for function ___lldiv
  7520                           
  7521     11A1                     l2982:	
  7522                           ;incstack = 0
  7523                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  7524                           
  7525     11A1  3000               	movlw	0
  7526     11A2  00FC               	movwf	___lldiv@quotient+3
  7527     11A3  3000               	movlw	0
  7528     11A4  00FB               	movwf	___lldiv@quotient+2
  7529     11A5  3000               	movlw	0
  7530     11A6  00FA               	movwf	___lldiv@quotient+1
  7531     11A7  3000               	movlw	0
  7532     11A8  00F9               	movwf	___lldiv@quotient
  7533     11A9  0873               	movf	___lldiv@divisor+3,w
  7534     11AA  0472               	iorwf	___lldiv@divisor+2,w
  7535     11AB  0471               	iorwf	___lldiv@divisor+1,w
  7536     11AC  0470               	iorwf	___lldiv@divisor,w
  7537     11AD  1903               	skipnz
  7538     11AE  29B0               	goto	u4741
  7539     11AF  29B1               	goto	u4740
  7540     11B0                     u4741:
  7541     11B0  29FE               	goto	l3004
  7542     11B1                     u4740:
  7543     11B1                     l2984:
  7544     11B1  01FD               	clrf	___lldiv@counter
  7545     11B2  0AFD               	incf	___lldiv@counter,f
  7546     11B3  29C1               	goto	l2990
  7547     11B4                     l2986:
  7548     11B4  3001               	movlw	1
  7549     11B5  00F8               	movwf	??___lldiv
  7550     11B6                     u4755:
  7551     11B6  1003               	clrc
  7552     11B7  0DF0               	rlf	___lldiv@divisor,f
  7553     11B8  0DF1               	rlf	___lldiv@divisor+1,f
  7554     11B9  0DF2               	rlf	___lldiv@divisor+2,f
  7555     11BA  0DF3               	rlf	___lldiv@divisor+3,f
  7556     11BB  0BF8               	decfsz	??___lldiv,f
  7557     11BC  29B6               	goto	u4755
  7558     11BD                     l2988:
  7559     11BD  3001               	movlw	1
  7560     11BE  00FF               	movwf	btemp+1
  7561     11BF  087F               	movf	btemp+1,w
  7562     11C0  07FD               	addwf	___lldiv@counter,f
  7563     11C1                     l2990:
  7564     11C1  1FF3               	btfss	___lldiv@divisor+3,7
  7565     11C2  29C4               	goto	u4761
  7566     11C3  29C5               	goto	u4760
  7567     11C4                     u4761:
  7568     11C4  29B4               	goto	l2986
  7569     11C5                     u4760:
  7570     11C5                     l2992:
  7571     11C5  3001               	movlw	1
  7572     11C6  00F8               	movwf	??___lldiv
  7573     11C7                     u4775:
  7574     11C7  1003               	clrc
  7575     11C8  0DF9               	rlf	___lldiv@quotient,f
  7576     11C9  0DFA               	rlf	___lldiv@quotient+1,f
  7577     11CA  0DFB               	rlf	___lldiv@quotient+2,f
  7578     11CB  0DFC               	rlf	___lldiv@quotient+3,f
  7579     11CC  0BF8               	decfsz	??___lldiv,f
  7580     11CD  29C7               	goto	u4775
  7581     11CE                     l2994:
  7582     11CE  0873               	movf	___lldiv@divisor+3,w
  7583     11CF  0277               	subwf	___lldiv@dividend+3,w
  7584     11D0  1D03               	skipz
  7585     11D1  29DC               	goto	u4785
  7586     11D2  0872               	movf	___lldiv@divisor+2,w
  7587     11D3  0276               	subwf	___lldiv@dividend+2,w
  7588     11D4  1D03               	skipz
  7589     11D5  29DC               	goto	u4785
  7590     11D6  0871               	movf	___lldiv@divisor+1,w
  7591     11D7  0275               	subwf	___lldiv@dividend+1,w
  7592     11D8  1D03               	skipz
  7593     11D9  29DC               	goto	u4785
  7594     11DA  0870               	movf	___lldiv@divisor,w
  7595     11DB  0274               	subwf	___lldiv@dividend,w
  7596     11DC                     u4785:
  7597     11DC  1C03               	skipc
  7598     11DD  29DF               	goto	u4781
  7599     11DE  29E0               	goto	u4780
  7600     11DF                     u4781:
  7601     11DF  29EF               	goto	l3000
  7602     11E0                     u4780:
  7603     11E0                     l2996:
  7604     11E0  0870               	movf	___lldiv@divisor,w
  7605     11E1  02F4               	subwf	___lldiv@dividend,f
  7606     11E2  0871               	movf	___lldiv@divisor+1,w
  7607     11E3  1C03               	skipc
  7608     11E4  0F71               	incfsz	___lldiv@divisor+1,w
  7609     11E5  02F5               	subwf	___lldiv@dividend+1,f
  7610     11E6  0872               	movf	___lldiv@divisor+2,w
  7611     11E7  1C03               	skipc
  7612     11E8  0F72               	incfsz	___lldiv@divisor+2,w
  7613     11E9  02F6               	subwf	___lldiv@dividend+2,f
  7614     11EA  0873               	movf	___lldiv@divisor+3,w
  7615     11EB  1C03               	skipc
  7616     11EC  0F73               	incfsz	___lldiv@divisor+3,w
  7617     11ED  02F7               	subwf	___lldiv@dividend+3,f
  7618     11EE                     l2998:
  7619     11EE  1479               	bsf	___lldiv@quotient,0
  7620     11EF                     l3000:
  7621     11EF  3001               	movlw	1
  7622     11F0                     u4795:
  7623     11F0  1003               	clrc
  7624     11F1  0CF3               	rrf	___lldiv@divisor+3,f
  7625     11F2  0CF2               	rrf	___lldiv@divisor+2,f
  7626     11F3  0CF1               	rrf	___lldiv@divisor+1,f
  7627     11F4  0CF0               	rrf	___lldiv@divisor,f
  7628     11F5  3EFF               	addlw	-1
  7629     11F6  1D03               	skipz
  7630     11F7  29F0               	goto	u4795
  7631     11F8                     l3002:
  7632     11F8  3001               	movlw	1
  7633     11F9  02FD               	subwf	___lldiv@counter,f
  7634     11FA  1D03               	btfss	3,2
  7635     11FB  29FD               	goto	u4801
  7636     11FC  29FE               	goto	u4800
  7637     11FD                     u4801:
  7638     11FD  29C5               	goto	l2992
  7639     11FE                     u4800:
  7640     11FE                     l3004:
  7641     11FE  087C               	movf	___lldiv@quotient+3,w
  7642     11FF  00F3               	movwf	?___lldiv+3
  7643     1200  087B               	movf	___lldiv@quotient+2,w
  7644     1201  00F2               	movwf	?___lldiv+2
  7645     1202  087A               	movf	___lldiv@quotient+1,w
  7646     1203  00F1               	movwf	?___lldiv+1
  7647     1204  0879               	movf	___lldiv@quotient,w
  7648     1205  00F0               	movwf	?___lldiv
  7649     1206                     l397:
  7650     1206  0008               	return
  7651     1207                     __end_of___lldiv:
  7652                           
  7653                           	psect	text17
  7654     126E                     __ptext17:	
  7655 ;; *************** function ___fltol *****************
  7656 ;; Defined at:
  7657 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;  f1              4   45[BANK0 ] unsigned long 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;  exp1            1   54[BANK0 ] unsigned char 
  7662 ;;  sign1           1   53[BANK0 ] unsigned char 
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  4   45[BANK0 ] long 
  7665 ;; Registers used:
  7666 ;;		wreg, status,2, status,0, btemp+1
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7672 ;;      Params:         0       4       0       0       0
  7673 ;;      Locals:         0       2       0       0       0
  7674 ;;      Temps:          0       4       0       0       0
  7675 ;;      Totals:         0      10       0       0       0
  7676 ;;Total ram usage:       10 bytes
  7677 ;; Hardware stack levels used: 1
  7678 ;; This function calls:
  7679 ;;		Nothing
  7680 ;; This function is called by:
  7681 ;;		_sprintf
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685     126E                     ___fltol:	
  7686                           ;psect for function ___fltol
  7687                           
  7688     126E                     l3048:	
  7689                           ;incstack = 0
  7690                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  7691                           
  7692     126E  1003               	clrc
  7693     126F  1283               	bcf	3,5	;RP0=0, select bank0
  7694     1270  1303               	bcf	3,6	;RP1=0, select bank0
  7695     1271  0D4F               	rlf	___fltol@f1+2,w
  7696     1272  0D50               	rlf	___fltol@f1+3,w
  7697     1273  00D6               	movwf	___fltol@exp1
  7698     1274  0856               	movf	___fltol@exp1,w
  7699     1275  1D03               	btfss	3,2
  7700     1276  2A78               	goto	u4921
  7701     1277  2A79               	goto	u4920
  7702     1278                     u4921:
  7703     1278  2A82               	goto	l3054
  7704     1279                     u4920:
  7705     1279                     l3050:
  7706     1279  3000               	movlw	0
  7707     127A  00D0               	movwf	?___fltol+3
  7708     127B  3000               	movlw	0
  7709     127C  00CF               	movwf	?___fltol+2
  7710     127D  3000               	movlw	0
  7711     127E  00CE               	movwf	?___fltol+1
  7712     127F  3000               	movlw	0
  7713     1280  00CD               	movwf	?___fltol
  7714     1281  2AE5               	goto	l564
  7715     1282                     l3054:
  7716     1282  084D               	movf	___fltol@f1,w
  7717     1283  00D1               	movwf	??___fltol
  7718     1284  084E               	movf	___fltol@f1+1,w
  7719     1285  00D2               	movwf	??___fltol+1
  7720     1286  084F               	movf	___fltol@f1+2,w
  7721     1287  00D3               	movwf	??___fltol+2
  7722     1288  0850               	movf	___fltol@f1+3,w
  7723     1289  00D4               	movwf	??___fltol+3
  7724     128A  301F               	movlw	31
  7725     128B                     u4935:
  7726     128B  1003               	clrc
  7727     128C  0CD4               	rrf	??___fltol+3,f
  7728     128D  0CD3               	rrf	??___fltol+2,f
  7729     128E  0CD2               	rrf	??___fltol+1,f
  7730     128F  0CD1               	rrf	??___fltol,f
  7731     1290                     u4930:
  7732     1290  3EFF               	addlw	-1
  7733     1291  1D03               	skipz
  7734     1292  2A8B               	goto	u4935
  7735     1293  0851               	movf	??___fltol,w
  7736     1294  00D5               	movwf	___fltol@sign1
  7737     1295                     l3056:
  7738     1295  17CF               	bsf	___fltol@f1+2,7
  7739     1296                     l3058:
  7740     1296  30FF               	movlw	255
  7741     1297  05CD               	andwf	___fltol@f1,f
  7742     1298  30FF               	movlw	255
  7743     1299  05CE               	andwf	___fltol@f1+1,f
  7744     129A  30FF               	movlw	255
  7745     129B  05CF               	andwf	___fltol@f1+2,f
  7746     129C  3000               	movlw	0
  7747     129D  05D0               	andwf	___fltol@f1+3,f
  7748     129E                     l3060:
  7749     129E  3096               	movlw	150
  7750     129F  02D6               	subwf	___fltol@exp1,f
  7751     12A0                     l3062:
  7752     12A0  1FD6               	btfss	___fltol@exp1,7
  7753     12A1  2AA3               	goto	u4941
  7754     12A2  2AA4               	goto	u4940
  7755     12A3                     u4941:
  7756     12A3  2ABE               	goto	l3074
  7757     12A4                     u4940:
  7758     12A4                     l3064:
  7759     12A4  0856               	movf	___fltol@exp1,w
  7760     12A5  3A80               	xorlw	128
  7761     12A6  3E97               	addlw	151
  7762     12A7  1803               	skipnc
  7763     12A8  2AAA               	goto	u4951
  7764     12A9  2AAB               	goto	u4950
  7765     12AA                     u4951:
  7766     12AA  2AAC               	goto	l3070
  7767     12AB                     u4950:
  7768     12AB  2A79               	goto	l3050
  7769     12AC                     l3070:
  7770     12AC  3001               	movlw	1
  7771     12AD                     u4965:
  7772     12AD  1003               	clrc
  7773     12AE  0CD0               	rrf	___fltol@f1+3,f
  7774     12AF  0CCF               	rrf	___fltol@f1+2,f
  7775     12B0  0CCE               	rrf	___fltol@f1+1,f
  7776     12B1  0CCD               	rrf	___fltol@f1,f
  7777     12B2  3EFF               	addlw	-1
  7778     12B3  1D03               	skipz
  7779     12B4  2AAD               	goto	u4965
  7780     12B5                     l3072:
  7781     12B5  3001               	movlw	1
  7782     12B6  00FF               	movwf	btemp+1
  7783     12B7  087F               	movf	btemp+1,w
  7784     12B8  07D6               	addwf	___fltol@exp1,f
  7785     12B9  1D03               	btfss	3,2
  7786     12BA  2ABC               	goto	u4971
  7787     12BB  2ABD               	goto	u4970
  7788     12BC                     u4971:
  7789     12BC  2AAC               	goto	l3070
  7790     12BD                     u4970:
  7791     12BD  2AD5               	goto	l3082
  7792     12BE                     l3074:
  7793     12BE  3020               	movlw	32
  7794     12BF  0256               	subwf	___fltol@exp1,w
  7795     12C0  1C03               	skipc
  7796     12C1  2AC3               	goto	u4981
  7797     12C2  2AC4               	goto	u4980
  7798     12C3                     u4981:
  7799     12C3  2AD0               	goto	l571
  7800     12C4                     u4980:
  7801     12C4  2A79               	goto	l3050
  7802     12C5                     l3080:
  7803     12C5  3001               	movlw	1
  7804     12C6  00D1               	movwf	??___fltol
  7805     12C7                     u4995:
  7806     12C7  1003               	clrc
  7807     12C8  0DCD               	rlf	___fltol@f1,f
  7808     12C9  0DCE               	rlf	___fltol@f1+1,f
  7809     12CA  0DCF               	rlf	___fltol@f1+2,f
  7810     12CB  0DD0               	rlf	___fltol@f1+3,f
  7811     12CC  0BD1               	decfsz	??___fltol,f
  7812     12CD  2AC7               	goto	u4995
  7813     12CE  3001               	movlw	1
  7814     12CF  02D6               	subwf	___fltol@exp1,f
  7815     12D0                     l571:
  7816     12D0  0856               	movf	___fltol@exp1,w
  7817     12D1  1D03               	btfss	3,2
  7818     12D2  2AD4               	goto	u5001
  7819     12D3  2AD5               	goto	u5000
  7820     12D4                     u5001:
  7821     12D4  2AC5               	goto	l3080
  7822     12D5                     u5000:
  7823     12D5                     l3082:
  7824     12D5  0855               	movf	___fltol@sign1,w
  7825     12D6  1903               	btfsc	3,2
  7826     12D7  2AD9               	goto	u5011
  7827     12D8  2ADA               	goto	u5010
  7828     12D9                     u5011:
  7829     12D9  2AE5               	goto	l574
  7830     12DA                     u5010:
  7831     12DA                     l3084:
  7832     12DA  09CD               	comf	___fltol@f1,f
  7833     12DB  09CE               	comf	___fltol@f1+1,f
  7834     12DC  09CF               	comf	___fltol@f1+2,f
  7835     12DD  09D0               	comf	___fltol@f1+3,f
  7836     12DE  0ACD               	incf	___fltol@f1,f
  7837     12DF  1903               	skipnz
  7838     12E0  0ACE               	incf	___fltol@f1+1,f
  7839     12E1  1903               	skipnz
  7840     12E2  0ACF               	incf	___fltol@f1+2,f
  7841     12E3  1903               	skipnz
  7842     12E4  0AD0               	incf	___fltol@f1+3,f
  7843     12E5                     l574:
  7844     12E5                     l564:
  7845     12E5  0008               	return
  7846     12E6                     __end_of___fltol:
  7847                           
  7848                           	psect	text18
  7849     1DB1                     __ptext18:	
  7850 ;; *************** function ___flsub *****************
  7851 ;; Defined at:
  7852 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;  a               4   66[BANK0 ] long 
  7855 ;;  b               4   70[BANK0 ] long 
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;		None
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  4   66[BANK0 ] long 
  7860 ;; Registers used:
  7861 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7867 ;;      Params:         0       8       0       0       0
  7868 ;;      Locals:         0       0       0       0       0
  7869 ;;      Temps:          0       0       0       0       0
  7870 ;;      Totals:         0       8       0       0       0
  7871 ;;Total ram usage:        8 bytes
  7872 ;; Hardware stack levels used: 1
  7873 ;; Hardware stack levels required when called: 1
  7874 ;; This function calls:
  7875 ;;		___fladd
  7876 ;; This function is called by:
  7877 ;;		_sprintf
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881     1DB1                     ___flsub:	
  7882                           ;psect for function ___flsub
  7883                           
  7884     1DB1                     l3108:	
  7885                           ;incstack = 0
  7886                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7887                           
  7888     1DB1  3080               	movlw	128
  7889     1DB2  1283               	bcf	3,5	;RP0=0, select bank0
  7890     1DB3  1303               	bcf	3,6	;RP1=0, select bank0
  7891     1DB4  06E5               	xorwf	___flsub@a+3,f
  7892     1DB5                     l3110:
  7893     1DB5  0869               	movf	___flsub@b+3,w
  7894     1DB6  00D1               	movwf	___fladd@b+3
  7895     1DB7  0868               	movf	___flsub@b+2,w
  7896     1DB8  00D0               	movwf	___fladd@b+2
  7897     1DB9  0867               	movf	___flsub@b+1,w
  7898     1DBA  00CF               	movwf	___fladd@b+1
  7899     1DBB  0866               	movf	___flsub@b,w
  7900     1DBC  00CE               	movwf	___fladd@b
  7901     1DBD  0865               	movf	___flsub@a+3,w
  7902     1DBE  00D5               	movwf	___fladd@a+3
  7903     1DBF  0864               	movf	___flsub@a+2,w
  7904     1DC0  00D4               	movwf	___fladd@a+2
  7905     1DC1  0863               	movf	___flsub@a+1,w
  7906     1DC2  00D3               	movwf	___fladd@a+1
  7907     1DC3  0862               	movf	___flsub@a,w
  7908     1DC4  00D2               	movwf	___fladd@a
  7909     1DC5  160A  118A  25A8  160A  158A  	fcall	___fladd
  7910     1DCA  1283               	bcf	3,5	;RP0=0, select bank0
  7911     1DCB  1303               	bcf	3,6	;RP1=0, select bank0
  7912     1DCC  0851               	movf	?___fladd+3,w
  7913     1DCD  00E5               	movwf	?___flsub+3
  7914     1DCE  0850               	movf	?___fladd+2,w
  7915     1DCF  00E4               	movwf	?___flsub+2
  7916     1DD0  084F               	movf	?___fladd+1,w
  7917     1DD1  00E3               	movwf	?___flsub+1
  7918     1DD2  084E               	movf	?___fladd,w
  7919     1DD3  00E2               	movwf	?___flsub
  7920     1DD4                     l734:
  7921     1DD4  0008               	return
  7922     1DD5                     __end_of___flsub:
  7923                           
  7924                           	psect	text19
  7925     15A8                     __ptext19:	
  7926 ;; *************** function ___fladd *****************
  7927 ;; Defined at:
  7928 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;  b               4   46[BANK0 ] long 
  7931 ;;  a               4   50[BANK0 ] long 
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;  grs             1   65[BANK0 ] unsigned char 
  7934 ;;  bexp            1   64[BANK0 ] unsigned char 
  7935 ;;  aexp            1   63[BANK0 ] unsigned char 
  7936 ;;  signs           1   62[BANK0 ] unsigned char 
  7937 ;; Return value:  Size  Location     Type
  7938 ;;                  4   46[BANK0 ] unsigned char 
  7939 ;; Registers used:
  7940 ;;		wreg, status,2, status,0, btemp+1
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 0/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7946 ;;      Params:         0       8       0       0       0
  7947 ;;      Locals:         0       4       0       0       0
  7948 ;;      Temps:          0       8       0       0       0
  7949 ;;      Totals:         0      20       0       0       0
  7950 ;;Total ram usage:       20 bytes
  7951 ;; Hardware stack levels used: 1
  7952 ;; This function calls:
  7953 ;;		Nothing
  7954 ;; This function is called by:
  7955 ;;		_sprintf
  7956 ;;		___flsub
  7957 ;; This function uses a non-reentrant model
  7958 ;;
  7959                           
  7960     15A8                     ___fladd:	
  7961                           ;psect for function ___fladd
  7962                           
  7963     15A8                     l2398:	
  7964                           ;incstack = 0
  7965                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7966                           
  7967     15A8  1283               	bcf	3,5	;RP0=0, select bank0
  7968     15A9  1303               	bcf	3,6	;RP1=0, select bank0
  7969     15AA  0851               	movf	___fladd@b+3,w
  7970     15AB  3980               	andlw	128
  7971     15AC  00DE               	movwf	___fladd@signs
  7972     15AD                     l2400:
  7973     15AD  0851               	movf	___fladd@b+3,w
  7974     15AE  00D6               	movwf	??___fladd
  7975     15AF  0756               	addwf	??___fladd,w
  7976     15B0  00E0               	movwf	___fladd@bexp
  7977     15B1                     l2402:
  7978     15B1  1FD0               	btfss	___fladd@b+2,7
  7979     15B2  2DB4               	goto	u3251
  7980     15B3  2DB5               	goto	u3250
  7981     15B4                     u3251:
  7982     15B4  2DB6               	goto	l2406
  7983     15B5                     u3250:
  7984     15B5                     l2404:
  7985     15B5  1460               	bsf	___fladd@bexp,0
  7986     15B6                     l2406:
  7987     15B6  0860               	movf	___fladd@bexp,w
  7988     15B7  1903               	btfsc	3,2
  7989     15B8  2DBA               	goto	u3261
  7990     15B9  2DBB               	goto	u3260
  7991     15BA                     u3261:
  7992     15BA  2DCB               	goto	l2416
  7993     15BB                     u3260:
  7994     15BB                     l2408:
  7995     15BB  0A60               	incf	___fladd@bexp,w
  7996     15BC  1D03               	btfss	3,2
  7997     15BD  2DBF               	goto	u3271
  7998     15BE  2DC0               	goto	u3270
  7999     15BF                     u3271:
  8000     15BF  2DC8               	goto	l2412
  8001     15C0                     u3270:
  8002     15C0                     l2410:
  8003     15C0  3000               	movlw	0
  8004     15C1  00D1               	movwf	___fladd@b+3
  8005     15C2  3000               	movlw	0
  8006     15C3  00D0               	movwf	___fladd@b+2
  8007     15C4  3000               	movlw	0
  8008     15C5  00CF               	movwf	___fladd@b+1
  8009     15C6  3000               	movlw	0
  8010     15C7  00CE               	movwf	___fladd@b
  8011     15C8                     l2412:
  8012     15C8  17D0               	bsf	___fladd@b+2,7
  8013     15C9                     l2414:
  8014     15C9  01D1               	clrf	___fladd@b+3
  8015     15CA  2DD3               	goto	l2418
  8016     15CB                     l2416:
  8017     15CB  3000               	movlw	0
  8018     15CC  00D1               	movwf	___fladd@b+3
  8019     15CD  3000               	movlw	0
  8020     15CE  00D0               	movwf	___fladd@b+2
  8021     15CF  3000               	movlw	0
  8022     15D0  00CF               	movwf	___fladd@b+1
  8023     15D1  3000               	movlw	0
  8024     15D2  00CE               	movwf	___fladd@b
  8025     15D3                     l2418:
  8026     15D3  0855               	movf	___fladd@a+3,w
  8027     15D4  3980               	andlw	128
  8028     15D5  00DF               	movwf	___fladd@aexp
  8029     15D6                     l2420:
  8030     15D6  085F               	movf	___fladd@aexp,w
  8031     15D7  065E               	xorwf	___fladd@signs,w
  8032     15D8  1903               	skipnz
  8033     15D9  2DDB               	goto	u3281
  8034     15DA  2DDC               	goto	u3280
  8035     15DB                     u3281:
  8036     15DB  2DDD               	goto	l2424
  8037     15DC                     u3280:
  8038     15DC                     l2422:
  8039     15DC  175E               	bsf	___fladd@signs,6
  8040     15DD                     l2424:
  8041     15DD  0855               	movf	___fladd@a+3,w
  8042     15DE  00D6               	movwf	??___fladd
  8043     15DF  0756               	addwf	??___fladd,w
  8044     15E0  00DF               	movwf	___fladd@aexp
  8045     15E1                     l2426:
  8046     15E1  1FD4               	btfss	___fladd@a+2,7
  8047     15E2  2DE4               	goto	u3291
  8048     15E3  2DE5               	goto	u3290
  8049     15E4                     u3291:
  8050     15E4  2DE6               	goto	l2430
  8051     15E5                     u3290:
  8052     15E5                     l2428:
  8053     15E5  145F               	bsf	___fladd@aexp,0
  8054     15E6                     l2430:
  8055     15E6  085F               	movf	___fladd@aexp,w
  8056     15E7  1903               	btfsc	3,2
  8057     15E8  2DEA               	goto	u3301
  8058     15E9  2DEB               	goto	u3300
  8059     15EA                     u3301:
  8060     15EA  2DFB               	goto	l2440
  8061     15EB                     u3300:
  8062     15EB                     l2432:
  8063     15EB  0A5F               	incf	___fladd@aexp,w
  8064     15EC  1D03               	btfss	3,2
  8065     15ED  2DEF               	goto	u3311
  8066     15EE  2DF0               	goto	u3310
  8067     15EF                     u3311:
  8068     15EF  2DF8               	goto	l2436
  8069     15F0                     u3310:
  8070     15F0                     l2434:
  8071     15F0  3000               	movlw	0
  8072     15F1  00D5               	movwf	___fladd@a+3
  8073     15F2  3000               	movlw	0
  8074     15F3  00D4               	movwf	___fladd@a+2
  8075     15F4  3000               	movlw	0
  8076     15F5  00D3               	movwf	___fladd@a+1
  8077     15F6  3000               	movlw	0
  8078     15F7  00D2               	movwf	___fladd@a
  8079     15F8                     l2436:
  8080     15F8  17D4               	bsf	___fladd@a+2,7
  8081     15F9                     l2438:
  8082     15F9  01D5               	clrf	___fladd@a+3
  8083     15FA  2E03               	goto	l688
  8084     15FB                     l2440:
  8085     15FB  3000               	movlw	0
  8086     15FC  00D5               	movwf	___fladd@a+3
  8087     15FD  3000               	movlw	0
  8088     15FE  00D4               	movwf	___fladd@a+2
  8089     15FF  3000               	movlw	0
  8090     1600  00D3               	movwf	___fladd@a+1
  8091     1601  3000               	movlw	0
  8092     1602  00D2               	movwf	___fladd@a
  8093     1603                     l688:
  8094     1603  0860               	movf	___fladd@bexp,w
  8095     1604  025F               	subwf	___fladd@aexp,w
  8096     1605  1803               	skipnc
  8097     1606  2E08               	goto	u3321
  8098     1607  2E09               	goto	u3320
  8099     1608                     u3321:
  8100     1608  2E2F               	goto	l2476
  8101     1609                     u3320:
  8102     1609                     l2442:
  8103     1609  1F5E               	btfss	___fladd@signs,6
  8104     160A  2E0C               	goto	u3331
  8105     160B  2E0D               	goto	u3330
  8106     160C                     u3331:
  8107     160C  2E11               	goto	l2446
  8108     160D                     u3330:
  8109     160D                     l2444:
  8110     160D  3080               	movlw	128
  8111     160E  00FF               	movwf	btemp+1
  8112     160F  087F               	movf	btemp+1,w
  8113     1610  06DE               	xorwf	___fladd@signs,f
  8114     1611                     l2446:
  8115     1611  0860               	movf	___fladd@bexp,w
  8116     1612  00E1               	movwf	___fladd@grs
  8117     1613                     l2448:
  8118     1613  085F               	movf	___fladd@aexp,w
  8119     1614  00E0               	movwf	___fladd@bexp
  8120     1615                     l2450:
  8121     1615  0861               	movf	___fladd@grs,w
  8122     1616  00DF               	movwf	___fladd@aexp
  8123     1617                     l2452:
  8124     1617  084E               	movf	___fladd@b,w
  8125     1618  00E1               	movwf	___fladd@grs
  8126     1619                     l2454:
  8127     1619  0852               	movf	___fladd@a,w
  8128     161A  00CE               	movwf	___fladd@b
  8129     161B                     l2456:
  8130     161B  0861               	movf	___fladd@grs,w
  8131     161C  00D2               	movwf	___fladd@a
  8132     161D                     l2458:
  8133     161D  084F               	movf	___fladd@b+1,w
  8134     161E  00E1               	movwf	___fladd@grs
  8135     161F                     l2460:
  8136     161F  0853               	movf	___fladd@a+1,w
  8137     1620  00CF               	movwf	___fladd@b+1
  8138     1621                     l2462:
  8139     1621  0861               	movf	___fladd@grs,w
  8140     1622  00D3               	movwf	___fladd@a+1
  8141     1623                     l2464:
  8142     1623  0850               	movf	___fladd@b+2,w
  8143     1624  00E1               	movwf	___fladd@grs
  8144     1625                     l2466:
  8145     1625  0854               	movf	___fladd@a+2,w
  8146     1626  00D0               	movwf	___fladd@b+2
  8147     1627                     l2468:
  8148     1627  0861               	movf	___fladd@grs,w
  8149     1628  00D4               	movwf	___fladd@a+2
  8150     1629                     l2470:
  8151     1629  0851               	movf	___fladd@b+3,w
  8152     162A  00E1               	movwf	___fladd@grs
  8153     162B                     l2472:
  8154     162B  0855               	movf	___fladd@a+3,w
  8155     162C  00D1               	movwf	___fladd@b+3
  8156     162D                     l2474:
  8157     162D  0861               	movf	___fladd@grs,w
  8158     162E  00D5               	movwf	___fladd@a+3
  8159     162F                     l2476:
  8160     162F  01E1               	clrf	___fladd@grs
  8161     1630                     l2478:
  8162     1630  085F               	movf	___fladd@aexp,w
  8163     1631  00D6               	movwf	??___fladd
  8164     1632  01D7               	clrf	??___fladd+1
  8165     1633  0857               	movf	??___fladd+1,w
  8166     1634  00D9               	movwf	??___fladd+3
  8167     1635  0860               	movf	___fladd@bexp,w
  8168     1636  0256               	subwf	??___fladd,w
  8169     1637  00D8               	movwf	??___fladd+2
  8170     1638  1C03               	skipc
  8171     1639  03D9               	decf	??___fladd+3,f
  8172     163A  0859               	movf	??___fladd+3,w
  8173     163B  3A80               	xorlw	128
  8174     163C  00FF               	movwf	btemp+1
  8175     163D  3080               	movlw	128
  8176     163E  027F               	subwf	btemp+1,w
  8177     163F  1D03               	skipz
  8178     1640  2E43               	goto	u3345
  8179     1641  301A               	movlw	26
  8180     1642  0258               	subwf	??___fladd+2,w
  8181     1643                     u3345:
  8182     1643  1C03               	skipc
  8183     1644  2E46               	goto	u3341
  8184     1645  2E47               	goto	u3340
  8185     1646                     u3341:
  8186     1646  2E7E               	goto	l2494
  8187     1647                     u3340:
  8188     1647                     l2480:
  8189     1647  1283               	bcf	3,5	;RP0=0, select bank0
  8190     1648  1303               	bcf	3,6	;RP1=0, select bank0
  8191     1649  0851               	movf	___fladd@b+3,w
  8192     164A  0450               	iorwf	___fladd@b+2,w
  8193     164B  044F               	iorwf	___fladd@b+1,w
  8194     164C  044E               	iorwf	___fladd@b,w
  8195     164D  1D03               	skipz
  8196     164E  2E50               	goto	u3351
  8197     164F  2E52               	goto	u3350
  8198     1650                     u3351:
  8199     1650  3001               	movlw	1
  8200     1651  2E53               	goto	u3360
  8201     1652                     u3350:
  8202     1652  3000               	movlw	0
  8203     1653                     u3360:
  8204     1653  00E1               	movwf	___fladd@grs
  8205     1654  3000               	movlw	0
  8206     1655  00D1               	movwf	___fladd@b+3
  8207     1656  3000               	movlw	0
  8208     1657  00D0               	movwf	___fladd@b+2
  8209     1658  3000               	movlw	0
  8210     1659  00CF               	movwf	___fladd@b+1
  8211     165A  3000               	movlw	0
  8212     165B  00CE               	movwf	___fladd@b
  8213     165C  085F               	movf	___fladd@aexp,w
  8214     165D  00E0               	movwf	___fladd@bexp
  8215     165E  2E86               	goto	l692
  8216     165F                     l694:
  8217     165F  1C61               	btfss	___fladd@grs,0
  8218     1660  2E62               	goto	u3371
  8219     1661  2E63               	goto	u3370
  8220     1662                     u3371:
  8221     1662  2E6A               	goto	l2484
  8222     1663                     u3370:
  8223     1663                     l2482:
  8224     1663  0861               	movf	___fladd@grs,w
  8225     1664  00D6               	movwf	??___fladd
  8226     1665  1003               	clrc
  8227     1666  0C56               	rrf	??___fladd,w
  8228     1667  3801               	iorlw	1
  8229     1668  00E1               	movwf	___fladd@grs
  8230     1669  2E6C               	goto	l2486
  8231     166A                     l2484:
  8232     166A  1003               	clrc
  8233     166B  0CE1               	rrf	___fladd@grs,f
  8234     166C                     l2486:
  8235     166C  1C4E               	btfss	___fladd@b,0
  8236     166D  2E6F               	goto	u3381
  8237     166E  2E70               	goto	u3380
  8238     166F                     u3381:
  8239     166F  2E71               	goto	l2490
  8240     1670                     u3380:
  8241     1670                     l2488:
  8242     1670  17E1               	bsf	___fladd@grs,7
  8243     1671                     l2490:
  8244     1671  3001               	movlw	1
  8245     1672  00D6               	movwf	??___fladd
  8246     1673                     u3395:
  8247     1673  0D51               	rlf	___fladd@b+3,w
  8248     1674  0CD1               	rrf	___fladd@b+3,f
  8249     1675  0CD0               	rrf	___fladd@b+2,f
  8250     1676  0CCF               	rrf	___fladd@b+1,f
  8251     1677  0CCE               	rrf	___fladd@b,f
  8252     1678  0BD6               	decfsz	??___fladd& (0+127),f
  8253     1679  2E73               	goto	u3395
  8254     167A                     l2492:
  8255     167A  3001               	movlw	1
  8256     167B  00FF               	movwf	btemp+1
  8257     167C  087F               	movf	btemp+1,w
  8258     167D  07E0               	addwf	___fladd@bexp,f
  8259     167E                     l2494:
  8260     167E  1283               	bcf	3,5	;RP0=0, select bank0
  8261     167F  1303               	bcf	3,6	;RP1=0, select bank0
  8262     1680  085F               	movf	___fladd@aexp,w
  8263     1681  0260               	subwf	___fladd@bexp,w
  8264     1682  1C03               	skipc
  8265     1683  2E85               	goto	u3401
  8266     1684  2E86               	goto	u3400
  8267     1685                     u3401:
  8268     1685  2E5F               	goto	l694
  8269     1686                     u3400:
  8270     1686                     l692:
  8271     1686  1B5E               	btfsc	___fladd@signs,6
  8272     1687  2E89               	goto	u3411
  8273     1688  2E8A               	goto	u3410
  8274     1689                     u3411:
  8275     1689  2ED3               	goto	l2520
  8276     168A                     u3410:
  8277     168A                     l2496:
  8278     168A  0860               	movf	___fladd@bexp,w
  8279     168B  1D03               	btfss	3,2
  8280     168C  2E8E               	goto	u3421
  8281     168D  2E8F               	goto	u3420
  8282     168E                     u3421:
  8283     168E  2E98               	goto	l2502
  8284     168F                     u3420:
  8285     168F                     l2498:
  8286     168F  3000               	movlw	0
  8287     1690  00D1               	movwf	?___fladd+3
  8288     1691  3000               	movlw	0
  8289     1692  00D0               	movwf	?___fladd+2
  8290     1693  3000               	movlw	0
  8291     1694  00CF               	movwf	?___fladd+1
  8292     1695  3000               	movlw	0
  8293     1696  00CE               	movwf	?___fladd
  8294     1697  2FFF               	goto	l701
  8295     1698                     l2502:
  8296     1698  0852               	movf	___fladd@a,w
  8297     1699  07CE               	addwf	___fladd@b,f
  8298     169A  0853               	movf	___fladd@a+1,w
  8299     169B  1103               	clrz
  8300     169C  1803               	skipnc
  8301     169D  3E01               	addlw	1
  8302     169E  1903               	skipnz
  8303     169F  2EA1               	goto	u3431
  8304     16A0  07CF               	addwf	___fladd@b+1,f
  8305     16A1                     u3431:
  8306     16A1  0854               	movf	___fladd@a+2,w
  8307     16A2  1103               	clrz
  8308     16A3  1803               	skipnc
  8309     16A4  3E01               	addlw	1
  8310     16A5  1903               	skipnz
  8311     16A6  2EA8               	goto	u3432
  8312     16A7  07D0               	addwf	___fladd@b+2,f
  8313     16A8                     u3432:
  8314     16A8  0855               	movf	___fladd@a+3,w
  8315     16A9  1103               	clrz
  8316     16AA  1803               	skipnc
  8317     16AB  3E01               	addlw	1
  8318     16AC  1903               	skipnz
  8319     16AD  2EAF               	goto	u3433
  8320     16AE  07D1               	addwf	___fladd@b+3,f
  8321     16AF                     u3433:
  8322     16AF                     l2504:
  8323     16AF  1C51               	btfss	___fladd@b+3,0
  8324     16B0  2EB2               	goto	u3441
  8325     16B1  2EB3               	goto	u3440
  8326     16B2                     u3441:
  8327     16B2  2F87               	goto	l2556
  8328     16B3                     u3440:
  8329     16B3                     l2506:
  8330     16B3  1C61               	btfss	___fladd@grs,0
  8331     16B4  2EB6               	goto	u3451
  8332     16B5  2EB7               	goto	u3450
  8333     16B6                     u3451:
  8334     16B6  2EBE               	goto	l2510
  8335     16B7                     u3450:
  8336     16B7                     l2508:
  8337     16B7  0861               	movf	___fladd@grs,w
  8338     16B8  00D6               	movwf	??___fladd
  8339     16B9  1003               	clrc
  8340     16BA  0C56               	rrf	??___fladd,w
  8341     16BB  3801               	iorlw	1
  8342     16BC  00E1               	movwf	___fladd@grs
  8343     16BD  2EC0               	goto	l2512
  8344     16BE                     l2510:
  8345     16BE  1003               	clrc
  8346     16BF  0CE1               	rrf	___fladd@grs,f
  8347     16C0                     l2512:
  8348     16C0  1C4E               	btfss	___fladd@b,0
  8349     16C1  2EC3               	goto	u3461
  8350     16C2  2EC4               	goto	u3460
  8351     16C3                     u3461:
  8352     16C3  2EC5               	goto	l2516
  8353     16C4                     u3460:
  8354     16C4                     l2514:
  8355     16C4  17E1               	bsf	___fladd@grs,7
  8356     16C5                     l2516:
  8357     16C5  3001               	movlw	1
  8358     16C6  00D6               	movwf	??___fladd
  8359     16C7                     u3475:
  8360     16C7  0D51               	rlf	___fladd@b+3,w
  8361     16C8  0CD1               	rrf	___fladd@b+3,f
  8362     16C9  0CD0               	rrf	___fladd@b+2,f
  8363     16CA  0CCF               	rrf	___fladd@b+1,f
  8364     16CB  0CCE               	rrf	___fladd@b,f
  8365     16CC  0BD6               	decfsz	??___fladd& (0+127),f
  8366     16CD  2EC7               	goto	u3475
  8367     16CE                     l2518:
  8368     16CE  3001               	movlw	1
  8369     16CF  00FF               	movwf	btemp+1
  8370     16D0  087F               	movf	btemp+1,w
  8371     16D1  07E0               	addwf	___fladd@bexp,f
  8372     16D2  2F87               	goto	l2556
  8373     16D3                     l2520:
  8374     16D3  0851               	movf	___fladd@b+3,w
  8375     16D4  3A80               	xorlw	128
  8376     16D5  00FF               	movwf	btemp+1
  8377     16D6  0855               	movf	___fladd@a+3,w
  8378     16D7  3A80               	xorlw	128
  8379     16D8  027F               	subwf	btemp+1,w
  8380     16D9  1D03               	skipz
  8381     16DA  2EE5               	goto	u3483
  8382     16DB  0854               	movf	___fladd@a+2,w
  8383     16DC  0250               	subwf	___fladd@b+2,w
  8384     16DD  1D03               	skipz
  8385     16DE  2EE5               	goto	u3483
  8386     16DF  0853               	movf	___fladd@a+1,w
  8387     16E0  024F               	subwf	___fladd@b+1,w
  8388     16E1  1D03               	skipz
  8389     16E2  2EE5               	goto	u3483
  8390     16E3  0852               	movf	___fladd@a,w
  8391     16E4  024E               	subwf	___fladd@b,w
  8392     16E5                     u3483:
  8393     16E5  1803               	skipnc
  8394     16E6  2EE8               	goto	u3481
  8395     16E7  2EE9               	goto	u3480
  8396     16E8                     u3481:
  8397     16E8  2F41               	goto	l2532
  8398     16E9                     u3480:
  8399     16E9                     l2522:
  8400     16E9  30FF               	movlw	255
  8401     16EA  00D6               	movwf	??___fladd
  8402     16EB  30FF               	movlw	255
  8403     16EC  00D7               	movwf	??___fladd+1
  8404     16ED  30FF               	movlw	255
  8405     16EE  00D8               	movwf	??___fladd+2
  8406     16EF  30FF               	movlw	255
  8407     16F0  00D9               	movwf	??___fladd+3
  8408     16F1  0852               	movf	___fladd@a,w
  8409     16F2  00DA               	movwf	??___fladd+4
  8410     16F3  0853               	movf	___fladd@a+1,w
  8411     16F4  00DB               	movwf	??___fladd+5
  8412     16F5  0854               	movf	___fladd@a+2,w
  8413     16F6  00DC               	movwf	??___fladd+6
  8414     16F7  0855               	movf	___fladd@a+3,w
  8415     16F8  00DD               	movwf	??___fladd+7
  8416     16F9  084E               	movf	___fladd@b,w
  8417     16FA  02DA               	subwf	??___fladd+4,f
  8418     16FB  084F               	movf	___fladd@b+1,w
  8419     16FC  1C03               	skipc
  8420     16FD  0F4F               	incfsz	___fladd@b+1,w
  8421     16FE  2F00               	goto	u3491
  8422     16FF  2F01               	goto	u3492
  8423     1700                     u3491:
  8424     1700  02DB               	subwf	??___fladd+5,f
  8425     1701                     u3492:
  8426     1701  0850               	movf	___fladd@b+2,w
  8427     1702  1C03               	skipc
  8428     1703  0F50               	incfsz	___fladd@b+2,w
  8429     1704  2F06               	goto	u3493
  8430     1705  2F07               	goto	u3494
  8431     1706                     u3493:
  8432     1706  02DC               	subwf	??___fladd+6,f
  8433     1707                     u3494:
  8434     1707  0851               	movf	___fladd@b+3,w
  8435     1708  1C03               	skipc
  8436     1709  0F51               	incfsz	___fladd@b+3,w
  8437     170A  2F0C               	goto	u3495
  8438     170B  2F0D               	goto	u3496
  8439     170C                     u3495:
  8440     170C  02DD               	subwf	??___fladd+7,f
  8441     170D                     u3496:
  8442     170D  085A               	movf	??___fladd+4,w
  8443     170E  07D6               	addwf	??___fladd,f
  8444     170F  085B               	movf	??___fladd+5,w
  8445     1710  1803               	skipnc
  8446     1711  0F5B               	incfsz	??___fladd+5,w
  8447     1712  2F14               	goto	u3500
  8448     1713  2F15               	goto	u3501
  8449     1714                     u3500:
  8450     1714  07D7               	addwf	??___fladd+1,f
  8451     1715                     u3501:
  8452     1715  085C               	movf	??___fladd+6,w
  8453     1716  1803               	skipnc
  8454     1717  0F5C               	incfsz	??___fladd+6,w
  8455     1718  2F1A               	goto	u3502
  8456     1719  2F1B               	goto	u3503
  8457     171A                     u3502:
  8458     171A  07D8               	addwf	??___fladd+2,f
  8459     171B                     u3503:
  8460     171B  085D               	movf	??___fladd+7,w
  8461     171C  1803               	skipnc
  8462     171D  0A5D               	incf	??___fladd+7,w
  8463     171E  07D9               	addwf	??___fladd+3,f
  8464     171F  0859               	movf	??___fladd+3,w
  8465     1720  00D1               	movwf	___fladd@b+3
  8466     1721  0858               	movf	??___fladd+2,w
  8467     1722  00D0               	movwf	___fladd@b+2
  8468     1723  0857               	movf	??___fladd+1,w
  8469     1724  00CF               	movwf	___fladd@b+1
  8470     1725  0856               	movf	??___fladd,w
  8471     1726  00CE               	movwf	___fladd@b
  8472     1727                     l2524:
  8473     1727  3080               	movlw	128
  8474     1728  00FF               	movwf	btemp+1
  8475     1729  087F               	movf	btemp+1,w
  8476     172A  06DE               	xorwf	___fladd@signs,f
  8477     172B                     l2526:
  8478     172B  09E1               	comf	___fladd@grs,f
  8479     172C  0AE1               	incf	___fladd@grs,f
  8480     172D                     l2528:
  8481     172D  0861               	movf	___fladd@grs,w
  8482     172E  1D03               	btfss	3,2
  8483     172F  2F31               	goto	u3511
  8484     1730  2F32               	goto	u3510
  8485     1731                     u3511:
  8486     1731  2F4F               	goto	l709
  8487     1732                     u3510:
  8488     1732                     l2530:
  8489     1732  3001               	movlw	1
  8490     1733  07CE               	addwf	___fladd@b,f
  8491     1734  3000               	movlw	0
  8492     1735  1803               	skipnc
  8493     1736  3001               	movlw	1
  8494     1737  07CF               	addwf	___fladd@b+1,f
  8495     1738  3000               	movlw	0
  8496     1739  1803               	skipnc
  8497     173A  3001               	movlw	1
  8498     173B  07D0               	addwf	___fladd@b+2,f
  8499     173C  3000               	movlw	0
  8500     173D  1803               	skipnc
  8501     173E  3001               	movlw	1
  8502     173F  07D1               	addwf	___fladd@b+3,f
  8503     1740  2F4F               	goto	l709
  8504     1741                     l2532:
  8505     1741  0852               	movf	___fladd@a,w
  8506     1742  02CE               	subwf	___fladd@b,f
  8507     1743  0853               	movf	___fladd@a+1,w
  8508     1744  1C03               	skipc
  8509     1745  0F53               	incfsz	___fladd@a+1,w
  8510     1746  02CF               	subwf	___fladd@b+1,f
  8511     1747  0854               	movf	___fladd@a+2,w
  8512     1748  1C03               	skipc
  8513     1749  0F54               	incfsz	___fladd@a+2,w
  8514     174A  02D0               	subwf	___fladd@b+2,f
  8515     174B  0855               	movf	___fladd@a+3,w
  8516     174C  1C03               	skipc
  8517     174D  0F55               	incfsz	___fladd@a+3,w
  8518     174E  02D1               	subwf	___fladd@b+3,f
  8519     174F                     l709:
  8520     174F  0851               	movf	___fladd@b+3,w
  8521     1750  0450               	iorwf	___fladd@b+2,w
  8522     1751  044F               	iorwf	___fladd@b+1,w
  8523     1752  044E               	iorwf	___fladd@b,w
  8524     1753  1D03               	skipz
  8525     1754  2F56               	goto	u3521
  8526     1755  2F57               	goto	u3520
  8527     1756                     u3521:
  8528     1756  2F83               	goto	l2554
  8529     1757                     u3520:
  8530     1757                     l2534:
  8531     1757  0861               	movf	___fladd@grs,w
  8532     1758  1D03               	btfss	3,2
  8533     1759  2F5B               	goto	u3531
  8534     175A  2F5C               	goto	u3530
  8535     175B                     u3531:
  8536     175B  2F83               	goto	l2554
  8537     175C                     u3530:
  8538     175C                     l2536:
  8539     175C  3000               	movlw	0
  8540     175D  00D1               	movwf	?___fladd+3
  8541     175E  3000               	movlw	0
  8542     175F  00D0               	movwf	?___fladd+2
  8543     1760  3000               	movlw	0
  8544     1761  00CF               	movwf	?___fladd+1
  8545     1762  3000               	movlw	0
  8546     1763  00CE               	movwf	?___fladd
  8547     1764  2FFF               	goto	l701
  8548     1765                     l2540:
  8549     1765  3001               	movlw	1
  8550     1766  00D6               	movwf	??___fladd
  8551     1767                     u3545:
  8552     1767  1003               	clrc
  8553     1768  0DCE               	rlf	___fladd@b,f
  8554     1769  0DCF               	rlf	___fladd@b+1,f
  8555     176A  0DD0               	rlf	___fladd@b+2,f
  8556     176B  0DD1               	rlf	___fladd@b+3,f
  8557     176C  0BD6               	decfsz	??___fladd,f
  8558     176D  2F67               	goto	u3545
  8559     176E                     l2542:
  8560     176E  1FE1               	btfss	___fladd@grs,7
  8561     176F  2F71               	goto	u3551
  8562     1770  2F72               	goto	u3550
  8563     1771                     u3551:
  8564     1771  2F73               	goto	l713
  8565     1772                     u3550:
  8566     1772                     l2544:
  8567     1772  144E               	bsf	___fladd@b,0
  8568     1773                     l713:
  8569     1773  1C61               	btfss	___fladd@grs,0
  8570     1774  2F76               	goto	u3561
  8571     1775  2F77               	goto	u3560
  8572     1776                     u3561:
  8573     1776  2F7A               	goto	l2548
  8574     1777                     u3560:
  8575     1777                     l2546:
  8576     1777  1403               	setc
  8577     1778  0DE1               	rlf	___fladd@grs,f
  8578     1779  2F7C               	goto	l2550
  8579     177A                     l2548:
  8580     177A  1003               	clrc
  8581     177B  0DE1               	rlf	___fladd@grs,f
  8582     177C                     l2550:
  8583     177C  0860               	movf	___fladd@bexp,w
  8584     177D  1903               	btfsc	3,2
  8585     177E  2F80               	goto	u3571
  8586     177F  2F81               	goto	u3570
  8587     1780                     u3571:
  8588     1780  2F83               	goto	l2554
  8589     1781                     u3570:
  8590     1781                     l2552:
  8591     1781  3001               	movlw	1
  8592     1782  02E0               	subwf	___fladd@bexp,f
  8593     1783                     l2554:
  8594     1783  1FD0               	btfss	___fladd@b+2,7
  8595     1784  2F86               	goto	u3581
  8596     1785  2F87               	goto	u3580
  8597     1786                     u3581:
  8598     1786  2F65               	goto	l2540
  8599     1787                     u3580:
  8600     1787                     l2556:
  8601     1787  01DF               	clrf	___fladd@aexp
  8602     1788                     l2558:
  8603     1788  1FE1               	btfss	___fladd@grs,7
  8604     1789  2F8B               	goto	u3591
  8605     178A  2F8C               	goto	u3590
  8606     178B                     u3591:
  8607     178B  2F9A               	goto	l2566
  8608     178C                     u3590:
  8609     178C                     l2560:
  8610     178C  0861               	movf	___fladd@grs,w
  8611     178D  397F               	andlw	127
  8612     178E  1903               	btfsc	3,2
  8613     178F  2F91               	goto	u3601
  8614     1790  2F92               	goto	u3600
  8615     1791                     u3601:
  8616     1791  2F95               	goto	l719
  8617     1792                     u3600:
  8618     1792                     l2562:
  8619     1792  01DF               	clrf	___fladd@aexp
  8620     1793  0ADF               	incf	___fladd@aexp,f
  8621     1794  2F9A               	goto	l2566
  8622     1795                     l719:
  8623     1795  1C4E               	btfss	___fladd@b,0
  8624     1796  2F98               	goto	u3611
  8625     1797  2F99               	goto	u3610
  8626     1798                     u3611:
  8627     1798  2F9A               	goto	l2566
  8628     1799                     u3610:
  8629     1799  2F92               	goto	l2562
  8630     179A                     l2566:
  8631     179A  085F               	movf	___fladd@aexp,w
  8632     179B  1903               	btfsc	3,2
  8633     179C  2F9E               	goto	u3621
  8634     179D  2F9F               	goto	u3620
  8635     179E                     u3621:
  8636     179E  2FD3               	goto	l2576
  8637     179F                     u3620:
  8638     179F                     l2568:
  8639     179F  3001               	movlw	1
  8640     17A0  07CE               	addwf	___fladd@b,f
  8641     17A1  3000               	movlw	0
  8642     17A2  1803               	skipnc
  8643     17A3  3001               	movlw	1
  8644     17A4  07CF               	addwf	___fladd@b+1,f
  8645     17A5  3000               	movlw	0
  8646     17A6  1803               	skipnc
  8647     17A7  3001               	movlw	1
  8648     17A8  07D0               	addwf	___fladd@b+2,f
  8649     17A9  3000               	movlw	0
  8650     17AA  1803               	skipnc
  8651     17AB  3001               	movlw	1
  8652     17AC  07D1               	addwf	___fladd@b+3,f
  8653     17AD                     l2570:
  8654     17AD  1C51               	btfss	___fladd@b+3,0
  8655     17AE  2FB0               	goto	u3631
  8656     17AF  2FB1               	goto	u3630
  8657     17B0                     u3631:
  8658     17B0  2FD3               	goto	l2576
  8659     17B1                     u3630:
  8660     17B1                     l2572:
  8661     17B1  084E               	movf	___fladd@b,w
  8662     17B2  00D6               	movwf	??___fladd
  8663     17B3  084F               	movf	___fladd@b+1,w
  8664     17B4  00D7               	movwf	??___fladd+1
  8665     17B5  0850               	movf	___fladd@b+2,w
  8666     17B6  00D8               	movwf	??___fladd+2
  8667     17B7  0851               	movf	___fladd@b+3,w
  8668     17B8  00D9               	movwf	??___fladd+3
  8669     17B9  3001               	movlw	1
  8670     17BA  00DA               	movwf	??___fladd+4
  8671     17BB                     u3645:
  8672     17BB  0D59               	rlf	??___fladd+3,w
  8673     17BC  0CD9               	rrf	??___fladd+3,f
  8674     17BD  0CD8               	rrf	??___fladd+2,f
  8675     17BE  0CD7               	rrf	??___fladd+1,f
  8676     17BF  0CD6               	rrf	??___fladd,f
  8677     17C0                     u3640:
  8678     17C0  0BDA               	decfsz	??___fladd+4,f
  8679     17C1  2FBB               	goto	u3645
  8680     17C2  0859               	movf	??___fladd+3,w
  8681     17C3  00D1               	movwf	___fladd@b+3
  8682     17C4  0858               	movf	??___fladd+2,w
  8683     17C5  00D0               	movwf	___fladd@b+2
  8684     17C6  0857               	movf	??___fladd+1,w
  8685     17C7  00CF               	movwf	___fladd@b+1
  8686     17C8  0856               	movf	??___fladd,w
  8687     17C9  00CE               	movwf	___fladd@b
  8688     17CA  0A60               	incf	___fladd@bexp,w
  8689     17CB  1903               	btfsc	3,2
  8690     17CC  2FCE               	goto	u3651
  8691     17CD  2FCF               	goto	u3650
  8692     17CE                     u3651:
  8693     17CE  2FD3               	goto	l2576
  8694     17CF                     u3650:
  8695     17CF                     l2574:
  8696     17CF  3001               	movlw	1
  8697     17D0  00FF               	movwf	btemp+1
  8698     17D1  087F               	movf	btemp+1,w
  8699     17D2  07E0               	addwf	___fladd@bexp,f
  8700     17D3                     l2576:
  8701     17D3  0A60               	incf	___fladd@bexp,w
  8702     17D4  1903               	btfsc	3,2
  8703     17D5  2FD7               	goto	u3661
  8704     17D6  2FD8               	goto	u3660
  8705     17D7                     u3661:
  8706     17D7  2FDD               	goto	l2580
  8707     17D8                     u3660:
  8708     17D8                     l2578:
  8709     17D8  0860               	movf	___fladd@bexp,w
  8710     17D9  1D03               	btfss	3,2
  8711     17DA  2FDC               	goto	u3671
  8712     17DB  2FDD               	goto	u3670
  8713     17DC                     u3671:
  8714     17DC  2FEB               	goto	l2586
  8715     17DD                     u3670:
  8716     17DD                     l2580:
  8717     17DD  3000               	movlw	0
  8718     17DE  00D1               	movwf	___fladd@b+3
  8719     17DF  3000               	movlw	0
  8720     17E0  00D0               	movwf	___fladd@b+2
  8721     17E1  3000               	movlw	0
  8722     17E2  00CF               	movwf	___fladd@b+1
  8723     17E3  3000               	movlw	0
  8724     17E4  00CE               	movwf	___fladd@b
  8725     17E5                     l2582:
  8726     17E5  0860               	movf	___fladd@bexp,w
  8727     17E6  1D03               	btfss	3,2
  8728     17E7  2FE9               	goto	u3681
  8729     17E8  2FEA               	goto	u3680
  8730     17E9                     u3681:
  8731     17E9  2FEB               	goto	l2586
  8732     17EA                     u3680:
  8733     17EA                     l2584:
  8734     17EA  01DE               	clrf	___fladd@signs
  8735     17EB                     l2586:
  8736     17EB  1C60               	btfss	___fladd@bexp,0
  8737     17EC  2FEE               	goto	u3691
  8738     17ED  2FEF               	goto	u3690
  8739     17EE                     u3691:
  8740     17EE  2FF1               	goto	l2590
  8741     17EF                     u3690:
  8742     17EF                     l2588:
  8743     17EF  17D0               	bsf	___fladd@b+2,7
  8744     17F0  2FF5               	goto	l2592
  8745     17F1                     l2590:
  8746     17F1  307F               	movlw	127
  8747     17F2  00FF               	movwf	btemp+1
  8748     17F3  087F               	movf	btemp+1,w
  8749     17F4  05D0               	andwf	___fladd@b+2,f
  8750     17F5                     l2592:
  8751     17F5  0860               	movf	___fladd@bexp,w
  8752     17F6  00D6               	movwf	??___fladd
  8753     17F7  1003               	clrc
  8754     17F8  0C56               	rrf	??___fladd,w
  8755     17F9  00D1               	movwf	___fladd@b+3
  8756     17FA                     l2594:
  8757     17FA  1FDE               	btfss	___fladd@signs,7
  8758     17FB  2FFD               	goto	u3701
  8759     17FC  2FFE               	goto	u3700
  8760     17FD                     u3701:
  8761     17FD  2FFF               	goto	l731
  8762     17FE                     u3700:
  8763     17FE                     l2596:
  8764     17FE  17D1               	bsf	___fladd@b+3,7
  8765     17FF                     l731:
  8766     17FF                     l701:
  8767     17FF  0008               	return
  8768     1800                     __end_of___fladd:
  8769                           
  8770                           	psect	text20
  8771     1D21                     __ptext20:	
  8772 ;; *************** function ___flneg *****************
  8773 ;; Defined at:
  8774 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flneg.c"
  8775 ;; Parameters:    Size  Location     Type
  8776 ;;  f1              4    0[COMMON] unsigned char 
  8777 ;; Auto vars:     Size  Location     Type
  8778 ;;		None
  8779 ;; Return value:  Size  Location     Type
  8780 ;;                  4    0[COMMON] unsigned char 
  8781 ;; Registers used:
  8782 ;;		wreg
  8783 ;; Tracked objects:
  8784 ;;		On entry : 0/0
  8785 ;;		On exit  : 0/0
  8786 ;;		Unchanged: 0/0
  8787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8788 ;;      Params:         4       0       0       0       0
  8789 ;;      Locals:         0       0       0       0       0
  8790 ;;      Temps:          0       0       0       0       0
  8791 ;;      Totals:         4       0       0       0       0
  8792 ;;Total ram usage:        4 bytes
  8793 ;; Hardware stack levels used: 1
  8794 ;; This function calls:
  8795 ;;		Nothing
  8796 ;; This function is called by:
  8797 ;;		_sprintf
  8798 ;; This function uses a non-reentrant model
  8799 ;;
  8800                           
  8801     1D21                     ___flneg:	
  8802                           ;psect for function ___flneg
  8803                           
  8804     1D21                     l3040:	
  8805                           ;incstack = 0
  8806                           ; Regs used in ___flneg: [wreg]
  8807                           
  8808     1D21  0873               	movf	___flneg@f1+3,w
  8809     1D22  0472               	iorwf	___flneg@f1+2,w
  8810     1D23  0471               	iorwf	___flneg@f1+1,w
  8811     1D24  0470               	iorwf	___flneg@f1,w
  8812     1D25  1903               	skipnz
  8813     1D26  2D28               	goto	u4911
  8814     1D27  2D29               	goto	u4910
  8815     1D28                     u4911:
  8816     1D28  2D2B               	goto	l3044
  8817     1D29                     u4910:
  8818     1D29                     l3042:
  8819     1D29  3080               	movlw	128
  8820     1D2A  06F3               	xorwf	___flneg@f1+3,f
  8821     1D2B                     l3044:
  8822     1D2B                     l560:
  8823     1D2B  0008               	return
  8824     1D2C                     __end_of___flneg:
  8825                           
  8826                           	psect	text21
  8827     0802                     __ptext21:	
  8828 ;; *************** function ___flge *****************
  8829 ;; Defined at:
  8830 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flge.c"
  8831 ;; Parameters:    Size  Location     Type
  8832 ;;  ff1             4    0[COMMON] unsigned char 
  8833 ;;  ff2             4    4[COMMON] unsigned char 
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;		None
  8836 ;; Return value:  Size  Location     Type
  8837 ;;		None               void
  8838 ;; Registers used:
  8839 ;;		wreg, status,2, status,0
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8845 ;;      Params:         8       0       0       0       0
  8846 ;;      Locals:         0       0       0       0       0
  8847 ;;      Temps:          4       0       0       0       0
  8848 ;;      Totals:        12       0       0       0       0
  8849 ;;Total ram usage:       12 bytes
  8850 ;; Hardware stack levels used: 1
  8851 ;; This function calls:
  8852 ;;		Nothing
  8853 ;; This function is called by:
  8854 ;;		_sprintf
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858     0802                     ___flge:	
  8859                           ;psect for function ___flge
  8860                           
  8861     0802                     l3020:	
  8862                           ;incstack = 0
  8863                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8864                           
  8865     0802  3000               	movlw	0
  8866     0803  0570               	andwf	___flge@ff1,w
  8867     0804  00F8               	movwf	??___flge
  8868     0805  3000               	movlw	0
  8869     0806  0571               	andwf	___flge@ff1+1,w
  8870     0807  00F9               	movwf	??___flge+1
  8871     0808  3080               	movlw	128
  8872     0809  0572               	andwf	___flge@ff1+2,w
  8873     080A  00FA               	movwf	??___flge+2
  8874     080B  307F               	movlw	127
  8875     080C  0573               	andwf	___flge@ff1+3,w
  8876     080D  00FB               	movwf	??___flge+3
  8877     080E  087B               	movf	??___flge+3,w
  8878     080F  047A               	iorwf	??___flge+2,w
  8879     0810  0479               	iorwf	??___flge+1,w
  8880     0811  0478               	iorwf	??___flge,w
  8881     0812  1D03               	skipz
  8882     0813  2815               	goto	u4841
  8883     0814  2816               	goto	u4840
  8884     0815                     u4841:
  8885     0815  281E               	goto	l552
  8886     0816                     u4840:
  8887     0816                     l3022:
  8888     0816  3000               	movlw	0
  8889     0817  00F3               	movwf	___flge@ff1+3
  8890     0818  3000               	movlw	0
  8891     0819  00F2               	movwf	___flge@ff1+2
  8892     081A  3000               	movlw	0
  8893     081B  00F1               	movwf	___flge@ff1+1
  8894     081C  3000               	movlw	0
  8895     081D  00F0               	movwf	___flge@ff1
  8896     081E                     l552:
  8897     081E  3000               	movlw	0
  8898     081F  0574               	andwf	___flge@ff2,w
  8899     0820  00F8               	movwf	??___flge
  8900     0821  3000               	movlw	0
  8901     0822  0575               	andwf	___flge@ff2+1,w
  8902     0823  00F9               	movwf	??___flge+1
  8903     0824  3080               	movlw	128
  8904     0825  0576               	andwf	___flge@ff2+2,w
  8905     0826  00FA               	movwf	??___flge+2
  8906     0827  307F               	movlw	127
  8907     0828  0577               	andwf	___flge@ff2+3,w
  8908     0829  00FB               	movwf	??___flge+3
  8909     082A  087B               	movf	??___flge+3,w
  8910     082B  047A               	iorwf	??___flge+2,w
  8911     082C  0479               	iorwf	??___flge+1,w
  8912     082D  0478               	iorwf	??___flge,w
  8913     082E  1D03               	skipz
  8914     082F  2831               	goto	u4851
  8915     0830  2832               	goto	u4850
  8916     0831                     u4851:
  8917     0831  283A               	goto	l3026
  8918     0832                     u4850:
  8919     0832                     l3024:
  8920     0832  3000               	movlw	0
  8921     0833  00F7               	movwf	___flge@ff2+3
  8922     0834  3000               	movlw	0
  8923     0835  00F6               	movwf	___flge@ff2+2
  8924     0836  3000               	movlw	0
  8925     0837  00F5               	movwf	___flge@ff2+1
  8926     0838  3000               	movlw	0
  8927     0839  00F4               	movwf	___flge@ff2
  8928     083A                     l3026:
  8929     083A  1FF3               	btfss	___flge@ff1+3,7
  8930     083B  283D               	goto	u4861
  8931     083C  283E               	goto	u4860
  8932     083D                     u4861:
  8933     083D  2862               	goto	l3030
  8934     083E                     u4860:
  8935     083E                     l3028:
  8936     083E  3000               	movlw	0
  8937     083F  00F8               	movwf	??___flge
  8938     0840  3000               	movlw	0
  8939     0841  00F9               	movwf	??___flge+1
  8940     0842  3000               	movlw	0
  8941     0843  00FA               	movwf	??___flge+2
  8942     0844  3080               	movlw	128
  8943     0845  00FB               	movwf	??___flge+3
  8944     0846  0870               	movf	___flge@ff1,w
  8945     0847  02F8               	subwf	??___flge,f
  8946     0848  0871               	movf	___flge@ff1+1,w
  8947     0849  1C03               	skipc
  8948     084A  0F71               	incfsz	___flge@ff1+1,w
  8949     084B  284D               	goto	u4871
  8950     084C  284E               	goto	u4872
  8951     084D                     u4871:
  8952     084D  02F9               	subwf	??___flge+1,f
  8953     084E                     u4872:
  8954     084E  0872               	movf	___flge@ff1+2,w
  8955     084F  1C03               	skipc
  8956     0850  0F72               	incfsz	___flge@ff1+2,w
  8957     0851  2853               	goto	u4873
  8958     0852  2854               	goto	u4874
  8959     0853                     u4873:
  8960     0853  02FA               	subwf	??___flge+2,f
  8961     0854                     u4874:
  8962     0854  0873               	movf	___flge@ff1+3,w
  8963     0855  1C03               	skipc
  8964     0856  0F73               	incfsz	___flge@ff1+3,w
  8965     0857  2859               	goto	u4875
  8966     0858  285A               	goto	u4876
  8967     0859                     u4875:
  8968     0859  02FB               	subwf	??___flge+3,f
  8969     085A                     u4876:
  8970     085A  087B               	movf	??___flge+3,w
  8971     085B  00F3               	movwf	___flge@ff1+3
  8972     085C  087A               	movf	??___flge+2,w
  8973     085D  00F2               	movwf	___flge@ff1+2
  8974     085E  0879               	movf	??___flge+1,w
  8975     085F  00F1               	movwf	___flge@ff1+1
  8976     0860  0878               	movf	??___flge,w
  8977     0861  00F0               	movwf	___flge@ff1
  8978     0862                     l3030:
  8979     0862  1FF7               	btfss	___flge@ff2+3,7
  8980     0863  2865               	goto	u4881
  8981     0864  2866               	goto	u4880
  8982     0865                     u4881:
  8983     0865  288A               	goto	l555
  8984     0866                     u4880:
  8985     0866                     l3032:
  8986     0866  3000               	movlw	0
  8987     0867  00F8               	movwf	??___flge
  8988     0868  3000               	movlw	0
  8989     0869  00F9               	movwf	??___flge+1
  8990     086A  3000               	movlw	0
  8991     086B  00FA               	movwf	??___flge+2
  8992     086C  3080               	movlw	128
  8993     086D  00FB               	movwf	??___flge+3
  8994     086E  0874               	movf	___flge@ff2,w
  8995     086F  02F8               	subwf	??___flge,f
  8996     0870  0875               	movf	___flge@ff2+1,w
  8997     0871  1C03               	skipc
  8998     0872  0F75               	incfsz	___flge@ff2+1,w
  8999     0873  2875               	goto	u4891
  9000     0874  2876               	goto	u4892
  9001     0875                     u4891:
  9002     0875  02F9               	subwf	??___flge+1,f
  9003     0876                     u4892:
  9004     0876  0876               	movf	___flge@ff2+2,w
  9005     0877  1C03               	skipc
  9006     0878  0F76               	incfsz	___flge@ff2+2,w
  9007     0879  287B               	goto	u4893
  9008     087A  287C               	goto	u4894
  9009     087B                     u4893:
  9010     087B  02FA               	subwf	??___flge+2,f
  9011     087C                     u4894:
  9012     087C  0877               	movf	___flge@ff2+3,w
  9013     087D  1C03               	skipc
  9014     087E  0F77               	incfsz	___flge@ff2+3,w
  9015     087F  2881               	goto	u4895
  9016     0880  2882               	goto	u4896
  9017     0881                     u4895:
  9018     0881  02FB               	subwf	??___flge+3,f
  9019     0882                     u4896:
  9020     0882  087B               	movf	??___flge+3,w
  9021     0883  00F7               	movwf	___flge@ff2+3
  9022     0884  087A               	movf	??___flge+2,w
  9023     0885  00F6               	movwf	___flge@ff2+2
  9024     0886  0879               	movf	??___flge+1,w
  9025     0887  00F5               	movwf	___flge@ff2+1
  9026     0888  0878               	movf	??___flge,w
  9027     0889  00F4               	movwf	___flge@ff2
  9028     088A                     l555:
  9029     088A  3080               	movlw	128
  9030     088B  06F3               	xorwf	___flge@ff1+3,f
  9031     088C  3080               	movlw	128
  9032     088D  06F7               	xorwf	___flge@ff2+3,f
  9033     088E  0877               	movf	___flge@ff2+3,w
  9034     088F  0273               	subwf	___flge@ff1+3,w
  9035     0890  1D03               	skipz
  9036     0891  289C               	goto	u4905
  9037     0892  0876               	movf	___flge@ff2+2,w
  9038     0893  0272               	subwf	___flge@ff1+2,w
  9039     0894  1D03               	skipz
  9040     0895  289C               	goto	u4905
  9041     0896  0875               	movf	___flge@ff2+1,w
  9042     0897  0271               	subwf	___flge@ff1+1,w
  9043     0898  1D03               	skipz
  9044     0899  289C               	goto	u4905
  9045     089A  0874               	movf	___flge@ff2,w
  9046     089B  0270               	subwf	___flge@ff1,w
  9047     089C                     u4905:
  9048     089C  1803               	skipnc
  9049     089D  289F               	goto	u4901
  9050     089E  28A0               	goto	u4900
  9051     089F                     u4901:
  9052     089F  28A2               	goto	l3036
  9053     08A0                     u4900:
  9054     08A0                     l3034:
  9055     08A0  1003               	clrc
  9056     08A1  28A3               	goto	l556
  9057     08A2                     l3036:
  9058     08A2  1403               	setc
  9059     08A3                     l556:
  9060     08A3  0008               	return
  9061     08A4                     __end_of___flge:
  9062                           
  9063                           	psect	text22
  9064     1F0D                     __ptext22:	
  9065 ;; *************** function ___fleq *****************
  9066 ;; Defined at:
  9067 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fleq.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;  ff1             4    0[COMMON] unsigned char 
  9070 ;;  ff2             4    4[COMMON] unsigned char 
  9071 ;; Auto vars:     Size  Location     Type
  9072 ;;		None
  9073 ;; Return value:  Size  Location     Type
  9074 ;;		None               void
  9075 ;; Registers used:
  9076 ;;		wreg, status,2, status,0
  9077 ;; Tracked objects:
  9078 ;;		On entry : 0/0
  9079 ;;		On exit  : 0/0
  9080 ;;		Unchanged: 0/0
  9081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9082 ;;      Params:         8       0       0       0       0
  9083 ;;      Locals:         0       0       0       0       0
  9084 ;;      Temps:          4       0       0       0       0
  9085 ;;      Totals:        12       0       0       0       0
  9086 ;;Total ram usage:       12 bytes
  9087 ;; Hardware stack levels used: 1
  9088 ;; This function calls:
  9089 ;;		Nothing
  9090 ;; This function is called by:
  9091 ;;		_sprintf
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           
  9095     1F0D                     ___fleq:	
  9096                           ;psect for function ___fleq
  9097                           
  9098     1F0D                     l3008:	
  9099                           ;incstack = 0
  9100                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9101                           
  9102     1F0D  3000               	movlw	0
  9103     1F0E  0570               	andwf	___fleq@ff1,w
  9104     1F0F  00F8               	movwf	??___fleq
  9105     1F10  3000               	movlw	0
  9106     1F11  0571               	andwf	___fleq@ff1+1,w
  9107     1F12  00F9               	movwf	??___fleq+1
  9108     1F13  3080               	movlw	128
  9109     1F14  0572               	andwf	___fleq@ff1+2,w
  9110     1F15  00FA               	movwf	??___fleq+2
  9111     1F16  307F               	movlw	127
  9112     1F17  0573               	andwf	___fleq@ff1+3,w
  9113     1F18  00FB               	movwf	??___fleq+3
  9114     1F19  087B               	movf	??___fleq+3,w
  9115     1F1A  047A               	iorwf	??___fleq+2,w
  9116     1F1B  0479               	iorwf	??___fleq+1,w
  9117     1F1C  0478               	iorwf	??___fleq,w
  9118     1F1D  1D03               	skipz
  9119     1F1E  2F20               	goto	u4811
  9120     1F1F  2F21               	goto	u4810
  9121     1F20                     u4811:
  9122     1F20  2F29               	goto	l547
  9123     1F21                     u4810:
  9124     1F21                     l3010:
  9125     1F21  3000               	movlw	0
  9126     1F22  00F3               	movwf	___fleq@ff1+3
  9127     1F23  3000               	movlw	0
  9128     1F24  00F2               	movwf	___fleq@ff1+2
  9129     1F25  3000               	movlw	0
  9130     1F26  00F1               	movwf	___fleq@ff1+1
  9131     1F27  3000               	movlw	0
  9132     1F28  00F0               	movwf	___fleq@ff1
  9133     1F29                     l547:
  9134     1F29  3000               	movlw	0
  9135     1F2A  0574               	andwf	___fleq@ff2,w
  9136     1F2B  00F8               	movwf	??___fleq
  9137     1F2C  3000               	movlw	0
  9138     1F2D  0575               	andwf	___fleq@ff2+1,w
  9139     1F2E  00F9               	movwf	??___fleq+1
  9140     1F2F  3080               	movlw	128
  9141     1F30  0576               	andwf	___fleq@ff2+2,w
  9142     1F31  00FA               	movwf	??___fleq+2
  9143     1F32  307F               	movlw	127
  9144     1F33  0577               	andwf	___fleq@ff2+3,w
  9145     1F34  00FB               	movwf	??___fleq+3
  9146     1F35  087B               	movf	??___fleq+3,w
  9147     1F36  047A               	iorwf	??___fleq+2,w
  9148     1F37  0479               	iorwf	??___fleq+1,w
  9149     1F38  0478               	iorwf	??___fleq,w
  9150     1F39  1D03               	skipz
  9151     1F3A  2F3C               	goto	u4821
  9152     1F3B  2F3D               	goto	u4820
  9153     1F3C                     u4821:
  9154     1F3C  2F45               	goto	l548
  9155     1F3D                     u4820:
  9156     1F3D                     l3012:
  9157     1F3D  3000               	movlw	0
  9158     1F3E  00F7               	movwf	___fleq@ff2+3
  9159     1F3F  3000               	movlw	0
  9160     1F40  00F6               	movwf	___fleq@ff2+2
  9161     1F41  3000               	movlw	0
  9162     1F42  00F5               	movwf	___fleq@ff2+1
  9163     1F43  3000               	movlw	0
  9164     1F44  00F4               	movwf	___fleq@ff2
  9165     1F45                     l548:
  9166     1F45  0877               	movf	___fleq@ff2+3,w
  9167     1F46  0673               	xorwf	___fleq@ff1+3,w
  9168     1F47  1D03               	skipz
  9169     1F48  2F53               	goto	u4835
  9170     1F49  0876               	movf	___fleq@ff2+2,w
  9171     1F4A  0672               	xorwf	___fleq@ff1+2,w
  9172     1F4B  1D03               	skipz
  9173     1F4C  2F53               	goto	u4835
  9174     1F4D  0875               	movf	___fleq@ff2+1,w
  9175     1F4E  0671               	xorwf	___fleq@ff1+1,w
  9176     1F4F  1D03               	skipz
  9177     1F50  2F53               	goto	u4835
  9178     1F51  0874               	movf	___fleq@ff2,w
  9179     1F52  0670               	xorwf	___fleq@ff1,w
  9180     1F53                     u4835:
  9181     1F53  1903               	skipnz
  9182     1F54  2F56               	goto	u4831
  9183     1F55  2F57               	goto	u4830
  9184     1F56                     u4831:
  9185     1F56  2F59               	goto	l3016
  9186     1F57                     u4830:
  9187     1F57                     l3014:
  9188     1F57  1003               	clrc
  9189     1F58  2F5A               	goto	l549
  9190     1F59                     l3016:
  9191     1F59  1403               	setc
  9192     1F5A                     l549:
  9193     1F5A  0008               	return
  9194     1F5B                     __end_of___fleq:
  9195                           
  9196                           	psect	text23
  9197     1D03                     __ptext23:	
  9198 ;; *************** function _spiWrite *****************
  9199 ;; Defined at:
  9200 ;;		line 34 in file "SPI.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;  dat             1    wreg     unsigned char 
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;  dat             1    0[COMMON] unsigned char 
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  1    wreg      void 
  9207 ;; Registers used:
  9208 ;;		wreg
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9214 ;;      Params:         0       0       0       0       0
  9215 ;;      Locals:         1       0       0       0       0
  9216 ;;      Temps:          0       0       0       0       0
  9217 ;;      Totals:         1       0       0       0       0
  9218 ;;Total ram usage:        1 bytes
  9219 ;; Hardware stack levels used: 1
  9220 ;; This function calls:
  9221 ;;		Nothing
  9222 ;; This function is called by:
  9223 ;;		_main
  9224 ;; This function uses a non-reentrant model
  9225 ;;
  9226                           
  9227     1D03                     _spiWrite:	
  9228                           ;psect for function _spiWrite
  9229                           
  9230                           
  9231                           ;incstack = 0
  9232                           ; Regs used in _spiWrite: [wreg]
  9233                           ;spiWrite@dat stored from wreg
  9234     1D03  00F0               	movwf	spiWrite@dat
  9235     1D04                     l3208:
  9236                           
  9237                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  9238     1D04  0870               	movf	spiWrite@dat,w
  9239     1D05  1283               	bcf	3,5	;RP0=0, select bank0
  9240     1D06  1303               	bcf	3,6	;RP1=0, select bank0
  9241     1D07  0093               	movwf	19	;volatile
  9242     1D08                     l174:
  9243     1D08  0008               	return
  9244     1D09                     __end_of_spiWrite:
  9245                           
  9246                           	psect	text24
  9247     1D18                     __ptext24:	
  9248 ;; *************** function _spiRead *****************
  9249 ;; Defined at:
  9250 ;;		line 47 in file "SPI.c"
  9251 ;; Parameters:    Size  Location     Type
  9252 ;;		None
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;		None
  9255 ;; Return value:  Size  Location     Type
  9256 ;;                  1    wreg      unsigned char 
  9257 ;; Registers used:
  9258 ;;		wreg, status,2, status,0, pclath, cstack
  9259 ;; Tracked objects:
  9260 ;;		On entry : 0/0
  9261 ;;		On exit  : 0/0
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9264 ;;      Params:         0       0       0       0       0
  9265 ;;      Locals:         0       0       0       0       0
  9266 ;;      Temps:          0       0       0       0       0
  9267 ;;      Totals:         0       0       0       0       0
  9268 ;;Total ram usage:        0 bytes
  9269 ;; Hardware stack levels used: 1
  9270 ;; Hardware stack levels required when called: 1
  9271 ;; This function calls:
  9272 ;;		_spiReceiveWait
  9273 ;; This function is called by:
  9274 ;;		_main
  9275 ;; This function uses a non-reentrant model
  9276 ;;
  9277                           
  9278     1D18                     _spiRead:	
  9279                           ;psect for function _spiRead
  9280                           
  9281     1D18                     l3210:	
  9282                           ;incstack = 0
  9283                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  9284                           
  9285                           
  9286                           ;SPI.c: 49:     spiReceiveWait();
  9287     1D18  160A  158A  2509  160A  158A  	fcall	_spiReceiveWait
  9288     1D1D                     l3212:
  9289                           
  9290                           ;SPI.c: 50:     return(SSPBUF);
  9291     1D1D  1283               	bcf	3,5	;RP0=0, select bank0
  9292     1D1E  1303               	bcf	3,6	;RP1=0, select bank0
  9293     1D1F  0813               	movf	19,w	;volatile
  9294     1D20                     l182:
  9295     1D20  0008               	return
  9296     1D21                     __end_of_spiRead:
  9297                           
  9298                           	psect	text25
  9299     1D09                     __ptext25:	
  9300 ;; *************** function _spiReceiveWait *****************
  9301 ;; Defined at:
  9302 ;;		line 29 in file "SPI.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;		None
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;		None
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      void 
  9309 ;; Registers used:
  9310 ;;		None
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9316 ;;      Params:         0       0       0       0       0
  9317 ;;      Locals:         0       0       0       0       0
  9318 ;;      Temps:          0       0       0       0       0
  9319 ;;      Totals:         0       0       0       0       0
  9320 ;;Total ram usage:        0 bytes
  9321 ;; Hardware stack levels used: 1
  9322 ;; This function calls:
  9323 ;;		Nothing
  9324 ;; This function is called by:
  9325 ;;		_spiRead
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329     1D09                     _spiReceiveWait:	
  9330                           ;psect for function _spiReceiveWait
  9331                           
  9332     1D09                     l2788:	
  9333                           ;incstack = 0
  9334                           ; Regs used in _spiReceiveWait: []
  9335                           
  9336     1D09                     l168:	
  9337                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  9338                           
  9339     1D09  1683               	bsf	3,5	;RP0=1, select bank1
  9340     1D0A  1303               	bcf	3,6	;RP1=0, select bank1
  9341     1D0B  1C14               	btfss	20,0	;volatile
  9342     1D0C  2D0E               	goto	u4161
  9343     1D0D  2D0F               	goto	u4160
  9344     1D0E                     u4161:
  9345     1D0E  2D09               	goto	l168
  9346     1D0F                     u4160:
  9347     1D0F                     l171:
  9348     1D0F  0008               	return
  9349     1D10                     __end_of_spiReceiveWait:
  9350                           
  9351                           	psect	text26
  9352     1E21                     __ptext26:	
  9353 ;; *************** function _setup *****************
  9354 ;; Defined at:
  9355 ;;		line 120 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c"
  9356 ;; Parameters:    Size  Location     Type
  9357 ;;		None
  9358 ;; Auto vars:     Size  Location     Type
  9359 ;;		None
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  1    wreg      void 
  9362 ;; Registers used:
  9363 ;;		wreg, status,2, status,0, pclath, cstack
  9364 ;; Tracked objects:
  9365 ;;		On entry : 0/0
  9366 ;;		On exit  : 0/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9369 ;;      Params:         0       0       0       0       0
  9370 ;;      Locals:         0       0       0       0       0
  9371 ;;      Temps:          0       0       0       0       0
  9372 ;;      Totals:         0       0       0       0       0
  9373 ;;Total ram usage:        0 bytes
  9374 ;; Hardware stack levels used: 1
  9375 ;; Hardware stack levels required when called: 3
  9376 ;; This function calls:
  9377 ;;		_Lcd_Init
  9378 ;;		_configOsc
  9379 ;;		_spiInit
  9380 ;; This function is called by:
  9381 ;;		_main
  9382 ;; This function uses a non-reentrant model
  9383 ;;
  9384                           
  9385     1E21                     _setup:	
  9386                           ;psect for function _setup
  9387                           
  9388     1E21                     l3184:	
  9389                           ;incstack = 0
  9390                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  9391                           
  9392                           
  9393                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 121:     confi
      +                          gOsc(8);
  9394     1E21  3008               	movlw	8
  9395     1E22  00F0               	movwf	configOsc@frec
  9396     1E23  3000               	movlw	0
  9397     1E24  00F1               	movwf	configOsc@frec+1
  9398     1E25  160A  118A  2145  160A  158A  	fcall	_configOsc
  9399     1E2A                     l3186:
  9400                           
  9401                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 122:     ANSEL
      +                          H = 0;
  9402     1E2A  1683               	bsf	3,5	;RP0=1, select bank3
  9403     1E2B  1703               	bsf	3,6	;RP1=1, select bank3
  9404     1E2C  0189               	clrf	9	;volatile
  9405     1E2D                     l3188:
  9406                           
  9407                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 123:     TRISC
      +                           = 128;
  9408     1E2D  3080               	movlw	128
  9409     1E2E  1683               	bsf	3,5	;RP0=1, select bank1
  9410     1E2F  1303               	bcf	3,6	;RP1=0, select bank1
  9411     1E30  0087               	movwf	7	;volatile
  9412     1E31                     l3190:
  9413                           
  9414                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 124:     TRISC
      +                          2 = 0;
  9415     1E31  1107               	bcf	7,2	;volatile
  9416     1E32                     l3192:
  9417                           
  9418                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 125:     TRISB
      +                           = 0;
  9419     1E32  0186               	clrf	6	;volatile
  9420     1E33                     l3194:
  9421                           
  9422                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 126:     TRISD
      +                           = 0;
  9423     1E33  0188               	clrf	8	;volatile
  9424     1E34                     l3196:
  9425                           
  9426                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 127:     PORTB
      +                           = 0;
  9427     1E34  1283               	bcf	3,5	;RP0=0, select bank0
  9428     1E35  1303               	bcf	3,6	;RP1=0, select bank0
  9429     1E36  0186               	clrf	6	;volatile
  9430     1E37                     l3198:
  9431                           
  9432                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 128:     PORTC
      +                           = 0;
  9433     1E37  0187               	clrf	7	;volatile
  9434     1E38                     l3200:
  9435                           
  9436                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 129:     PORTD
      +                           = 0;
  9437     1E38  0188               	clrf	8	;volatile
  9438     1E39                     l3202:
  9439                           
  9440                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 130:     PORTC
      +                          bits.RC2 = 1;
  9441     1E39  1507               	bsf	7,2	;volatile
  9442     1E3A                     l3204:
  9443                           
  9444                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 134:     spiIn
      +                          it(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SPI_IDLE_2_ACTIVE);
  9445     1E3A  01F0               	clrf	spiInit@sDataSample
  9446     1E3B  01F1               	clrf	spiInit@sClockIdle
  9447     1E3C  01F2               	clrf	spiInit@sTransmitEdge
  9448     1E3D  3020               	movlw	32
  9449     1E3E  160A  158A  2561  160A  158A  	fcall	_spiInit
  9450     1E43                     l3206:
  9451                           
  9452                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 135:     Lcd_I
      +                          nit();
  9453     1E43  160A  158A  275B  160A  158A  	fcall	_Lcd_Init
  9454     1E48                     l148:
  9455     1E48  0008               	return
  9456     1E49                     __end_of_setup:
  9457                           
  9458                           	psect	text27
  9459     1D61                     __ptext27:	
  9460 ;; *************** function _spiInit *****************
  9461 ;; Defined at:
  9462 ;;		line 12 in file "SPI.c"
  9463 ;; Parameters:    Size  Location     Type
  9464 ;;  sType           1    wreg     enum E1292
  9465 ;;  sDataSample     1    0[COMMON] enum E1300
  9466 ;;  sClockIdle      1    1[COMMON] enum E1304
  9467 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  9468 ;; Auto vars:     Size  Location     Type
  9469 ;;  sType           1    3[COMMON] enum E1292
  9470 ;; Return value:  Size  Location     Type
  9471 ;;                  1    wreg      void 
  9472 ;; Registers used:
  9473 ;;		wreg, status,2, status,0
  9474 ;; Tracked objects:
  9475 ;;		On entry : 0/0
  9476 ;;		On exit  : 0/0
  9477 ;;		Unchanged: 0/0
  9478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9479 ;;      Params:         3       0       0       0       0
  9480 ;;      Locals:         1       0       0       0       0
  9481 ;;      Temps:          0       0       0       0       0
  9482 ;;      Totals:         4       0       0       0       0
  9483 ;;Total ram usage:        4 bytes
  9484 ;; Hardware stack levels used: 1
  9485 ;; This function calls:
  9486 ;;		Nothing
  9487 ;; This function is called by:
  9488 ;;		_setup
  9489 ;; This function uses a non-reentrant model
  9490 ;;
  9491                           
  9492     1D61                     _spiInit:	
  9493                           ;psect for function _spiInit
  9494                           
  9495                           
  9496                           ;incstack = 0
  9497                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  9498                           ;spiInit@sType stored from wreg
  9499     1D61  00F3               	movwf	spiInit@sType
  9500     1D62                     l2778:
  9501                           
  9502                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  9503     1D62  1683               	bsf	3,5	;RP0=1, select bank1
  9504     1D63  1303               	bcf	3,6	;RP1=0, select bank1
  9505     1D64  1287               	bcf	7,5	;volatile
  9506                           
  9507                           ;SPI.c: 15:     if(sType & 0b00000100)
  9508     1D65  1D73               	btfss	spiInit@sType,2
  9509     1D66  2D68               	goto	u4151
  9510     1D67  2D69               	goto	u4150
  9511     1D68                     u4151:
  9512     1D68  2D6D               	goto	l2784
  9513     1D69                     u4150:
  9514     1D69                     l2780:
  9515                           
  9516                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  9517     1D69  0872               	movf	spiInit@sTransmitEdge,w
  9518     1D6A  0094               	movwf	20	;volatile
  9519     1D6B                     l2782:
  9520                           
  9521                           ;SPI.c: 18:         TRISC3 = 1;
  9522     1D6B  1587               	bsf	7,3	;volatile
  9523                           
  9524                           ;SPI.c: 19:     }
  9525     1D6C  2D71               	goto	l164
  9526     1D6D                     l2784:
  9527                           
  9528                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  9529     1D6D  0870               	movf	spiInit@sDataSample,w
  9530     1D6E  0472               	iorwf	spiInit@sTransmitEdge,w
  9531     1D6F  0094               	movwf	20	;volatile
  9532     1D70                     l2786:
  9533                           
  9534                           ;SPI.c: 23:         TRISC3 = 0;
  9535     1D70  1187               	bcf	7,3	;volatile
  9536     1D71                     l164:	
  9537                           ;SPI.c: 24:     }
  9538                           
  9539                           
  9540                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  9541     1D71  0873               	movf	spiInit@sType,w
  9542     1D72  0471               	iorwf	spiInit@sClockIdle,w
  9543     1D73  1283               	bcf	3,5	;RP0=0, select bank0
  9544     1D74  1303               	bcf	3,6	;RP1=0, select bank0
  9545     1D75  0094               	movwf	20	;volatile
  9546     1D76                     l165:
  9547     1D76  0008               	return
  9548     1D77                     __end_of_spiInit:
  9549                           
  9550                           	psect	text28
  9551     1145                     __ptext28:	
  9552 ;; *************** function _configOsc *****************
  9553 ;; Defined at:
  9554 ;;		line 4 in file "oscilador.c"
  9555 ;; Parameters:    Size  Location     Type
  9556 ;;  frec            2    0[COMMON] unsigned int 
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;		None
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      void 
  9561 ;; Registers used:
  9562 ;;		wreg, status,2, status,0
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9568 ;;      Params:         2       0       0       0       0
  9569 ;;      Locals:         0       0       0       0       0
  9570 ;;      Temps:          0       0       0       0       0
  9571 ;;      Totals:         2       0       0       0       0
  9572 ;;Total ram usage:        2 bytes
  9573 ;; Hardware stack levels used: 1
  9574 ;; This function calls:
  9575 ;;		Nothing
  9576 ;; This function is called by:
  9577 ;;		_setup
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581     1145                     _configOsc:	
  9582                           ;psect for function _configOsc
  9583                           
  9584     1145                     l2740:	
  9585                           ;incstack = 0
  9586                           ; Regs used in _configOsc: [wreg+status,2+status,0]
  9587                           
  9588                           
  9589                           ;oscilador.c: 5:         if (frec == 8) OSCCONbits.IRCF = 0b111;
  9590     1145  3008               	movlw	8
  9591     1146  0670               	xorwf	configOsc@frec,w
  9592     1147  0471               	iorwf	configOsc@frec+1,w
  9593     1148  1D03               	btfss	3,2
  9594     1149  294B               	goto	u4081
  9595     114A  294C               	goto	u4080
  9596     114B                     u4081:
  9597     114B  2950               	goto	l5
  9598     114C                     u4080:
  9599     114C                     l2742:
  9600     114C  3070               	movlw	112
  9601     114D  1683               	bsf	3,5	;RP0=1, select bank1
  9602     114E  1303               	bcf	3,6	;RP1=0, select bank1
  9603     114F  048F               	iorwf	15,f	;volatile
  9604     1150                     l5:
  9605                           
  9606                           ;oscilador.c: 6:         if (frec == 4) OSCCONbits.IRCF = 0b110;
  9607     1150  3004               	movlw	4
  9608     1151  0670               	xorwf	configOsc@frec,w
  9609     1152  0471               	iorwf	configOsc@frec+1,w
  9610     1153  1D03               	btfss	3,2
  9611     1154  2956               	goto	u4091
  9612     1155  2957               	goto	u4090
  9613     1156                     u4091:
  9614     1156  295D               	goto	l6
  9615     1157                     u4090:
  9616     1157                     l2744:
  9617     1157  1683               	bsf	3,5	;RP0=1, select bank1
  9618     1158  1303               	bcf	3,6	;RP1=0, select bank1
  9619     1159  080F               	movf	15,w	;volatile
  9620     115A  398F               	andlw	-113
  9621     115B  3860               	iorlw	96
  9622     115C  008F               	movwf	15	;volatile
  9623     115D                     l6:
  9624                           
  9625                           ;oscilador.c: 7:         if (frec == 1) OSCCONbits.IRCF = 0b100;
  9626     115D  0370               	decf	configOsc@frec,w
  9627     115E  0471               	iorwf	configOsc@frec+1,w
  9628     115F  1D03               	btfss	3,2
  9629     1160  2962               	goto	u4101
  9630     1161  2963               	goto	u4100
  9631     1162                     u4101:
  9632     1162  2969               	goto	l7
  9633     1163                     u4100:
  9634     1163                     l2746:
  9635     1163  1683               	bsf	3,5	;RP0=1, select bank1
  9636     1164  1303               	bcf	3,6	;RP1=0, select bank1
  9637     1165  080F               	movf	15,w	;volatile
  9638     1166  398F               	andlw	-113
  9639     1167  3840               	iorlw	64
  9640     1168  008F               	movwf	15	;volatile
  9641     1169                     l7:
  9642                           
  9643                           ;oscilador.c: 8:         if (frec == 500) OSCCONbits.IRCF = 0b011;
  9644     1169  30F4               	movlw	244
  9645     116A  0670               	xorwf	configOsc@frec,w
  9646     116B  1D03               	skipz
  9647     116C  2971               	goto	u4111
  9648     116D  0371               	decf	configOsc@frec+1,w
  9649     116E  1D03               	btfss	3,2
  9650     116F  2971               	goto	u4111
  9651     1170  2972               	goto	u4110
  9652     1171                     u4111:
  9653     1171  2978               	goto	l8
  9654     1172                     u4110:
  9655     1172                     l2748:
  9656     1172  1683               	bsf	3,5	;RP0=1, select bank1
  9657     1173  1303               	bcf	3,6	;RP1=0, select bank1
  9658     1174  080F               	movf	15,w	;volatile
  9659     1175  398F               	andlw	-113
  9660     1176  3830               	iorlw	48
  9661     1177  008F               	movwf	15	;volatile
  9662     1178                     l8:
  9663                           
  9664                           ;oscilador.c: 9:         if (frec == 250) OSCCONbits.IRCF = 0b101;
  9665     1178  30FA               	movlw	250
  9666     1179  0670               	xorwf	configOsc@frec,w
  9667     117A  0471               	iorwf	configOsc@frec+1,w
  9668     117B  1D03               	btfss	3,2
  9669     117C  297E               	goto	u4121
  9670     117D  297F               	goto	u4120
  9671     117E                     u4121:
  9672     117E  2985               	goto	l9
  9673     117F                     u4120:
  9674     117F                     l2750:
  9675     117F  1683               	bsf	3,5	;RP0=1, select bank1
  9676     1180  1303               	bcf	3,6	;RP1=0, select bank1
  9677     1181  080F               	movf	15,w	;volatile
  9678     1182  398F               	andlw	-113
  9679     1183  3850               	iorlw	80
  9680     1184  008F               	movwf	15	;volatile
  9681     1185                     l9:
  9682                           
  9683                           ;oscilador.c: 10:         if (frec == 125) OSCCONbits.IRCF = 0b001;
  9684     1185  307D               	movlw	125
  9685     1186  0670               	xorwf	configOsc@frec,w
  9686     1187  0471               	iorwf	configOsc@frec+1,w
  9687     1188  1D03               	btfss	3,2
  9688     1189  298B               	goto	u4131
  9689     118A  298C               	goto	u4130
  9690     118B                     u4131:
  9691     118B  2992               	goto	l10
  9692     118C                     u4130:
  9693     118C                     l2752:
  9694     118C  1683               	bsf	3,5	;RP0=1, select bank1
  9695     118D  1303               	bcf	3,6	;RP1=0, select bank1
  9696     118E  080F               	movf	15,w	;volatile
  9697     118F  398F               	andlw	-113
  9698     1190  3810               	iorlw	16
  9699     1191  008F               	movwf	15	;volatile
  9700     1192                     l10:
  9701                           
  9702                           ;oscilador.c: 11:         if (frec == 31) OSCCONbits.IRCF = 0b000;
  9703     1192  301F               	movlw	31
  9704     1193  0670               	xorwf	configOsc@frec,w
  9705     1194  0471               	iorwf	configOsc@frec+1,w
  9706     1195  1D03               	btfss	3,2
  9707     1196  2998               	goto	u4141
  9708     1197  2999               	goto	u4140
  9709     1198                     u4141:
  9710     1198  299D               	goto	l2756
  9711     1199                     u4140:
  9712     1199                     l2754:
  9713     1199  308F               	movlw	-113
  9714     119A  1683               	bsf	3,5	;RP0=1, select bank1
  9715     119B  1303               	bcf	3,6	;RP1=0, select bank1
  9716     119C  058F               	andwf	15,f	;volatile
  9717     119D                     l2756:
  9718                           
  9719                           ;oscilador.c: 12:         OSCCONbits.SCS = 1;
  9720     119D  1683               	bsf	3,5	;RP0=1, select bank1
  9721     119E  1303               	bcf	3,6	;RP1=0, select bank1
  9722     119F  140F               	bsf	15,0	;volatile
  9723     11A0                     l12:
  9724     11A0  0008               	return
  9725     11A1                     __end_of_configOsc:
  9726                           
  9727                           	psect	text29
  9728     1F5B                     __ptext29:	
  9729 ;; *************** function _Lcd_Init *****************
  9730 ;; Defined at:
  9731 ;;		line 80 in file "lcd.c"
  9732 ;; Parameters:    Size  Location     Type
  9733 ;;		None
  9734 ;; Auto vars:     Size  Location     Type
  9735 ;;		None
  9736 ;; Return value:  Size  Location     Type
  9737 ;;                  1    wreg      void 
  9738 ;; Registers used:
  9739 ;;		wreg, status,2, status,0, pclath, cstack
  9740 ;; Tracked objects:
  9741 ;;		On entry : 0/0
  9742 ;;		On exit  : 0/0
  9743 ;;		Unchanged: 0/0
  9744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9745 ;;      Params:         0       0       0       0       0
  9746 ;;      Locals:         0       0       0       0       0
  9747 ;;      Temps:          2       0       0       0       0
  9748 ;;      Totals:         2       0       0       0       0
  9749 ;;Total ram usage:        2 bytes
  9750 ;; Hardware stack levels used: 1
  9751 ;; Hardware stack levels required when called: 2
  9752 ;; This function calls:
  9753 ;;		_Lcd_Cmd
  9754 ;;		_Lcd_Port
  9755 ;; This function is called by:
  9756 ;;		_setup
  9757 ;; This function uses a non-reentrant model
  9758 ;;
  9759                           
  9760     1F5B                     _Lcd_Init:	
  9761                           ;psect for function _Lcd_Init
  9762                           
  9763     1F5B                     l2758:	
  9764                           ;incstack = 0
  9765                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9766                           
  9767                           
  9768                           ;lcd.c: 81:     Lcd_Port(0);
  9769     1F5B  3000               	movlw	0
  9770     1F5C  160A  158A  2649  160A  158A  	fcall	_Lcd_Port
  9771     1F61                     l2760:
  9772                           
  9773                           ;lcd.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9774     1F61  3034               	movlw	52
  9775     1F62  00F5               	movwf	??_Lcd_Init+1
  9776     1F63  30F1               	movlw	241
  9777     1F64  00F4               	movwf	??_Lcd_Init
  9778     1F65                     u5697:
  9779     1F65  0BF4               	decfsz	??_Lcd_Init,f
  9780     1F66  2F65               	goto	u5697
  9781     1F67  0BF5               	decfsz	??_Lcd_Init+1,f
  9782     1F68  2F65               	goto	u5697
  9783     1F69  2F6A               	nop2
  9784     1F6A                     l2762:
  9785                           
  9786                           ;lcd.c: 83:     Lcd_Cmd(48);
  9787     1F6A  3030               	movlw	48
  9788     1F6B  160A  158A  2577  160A  158A  	fcall	_Lcd_Cmd
  9789                           
  9790                           ;lcd.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9791     1F70  300D               	movlw	13
  9792     1F71  00F5               	movwf	??_Lcd_Init+1
  9793     1F72  30FB               	movlw	251
  9794     1F73  00F4               	movwf	??_Lcd_Init
  9795     1F74                     u5707:
  9796     1F74  0BF4               	decfsz	??_Lcd_Init,f
  9797     1F75  2F74               	goto	u5707
  9798     1F76  0BF5               	decfsz	??_Lcd_Init+1,f
  9799     1F77  2F74               	goto	u5707
  9800     1F78  2F79               	nop2
  9801     1F79                     l2764:
  9802                           
  9803                           ;lcd.c: 85:     Lcd_Cmd(48);
  9804     1F79  3030               	movlw	48
  9805     1F7A  160A  158A  2577  160A  158A  	fcall	_Lcd_Cmd
  9806     1F7F                     l2766:
  9807                           
  9808                           ;lcd.c: 86:     _delay((unsigned long)((11)*(8000000/4000.0)));
  9809     1F7F  301D               	movlw	29
  9810     1F80  00F5               	movwf	??_Lcd_Init+1
  9811     1F81  3091               	movlw	145
  9812     1F82  00F4               	movwf	??_Lcd_Init
  9813     1F83                     u5717:
  9814     1F83  0BF4               	decfsz	??_Lcd_Init,f
  9815     1F84  2F83               	goto	u5717
  9816     1F85  0BF5               	decfsz	??_Lcd_Init+1,f
  9817     1F86  2F83               	goto	u5717
  9818                           
  9819                           ;lcd.c: 87:     Lcd_Cmd(48);
  9820     1F87  3030               	movlw	48
  9821     1F88  160A  158A  2577  160A  158A  	fcall	_Lcd_Cmd
  9822                           
  9823                           ;lcd.c: 89:     Lcd_Cmd(56);
  9824     1F8D  3038               	movlw	56
  9825     1F8E  160A  158A  2577  160A  158A  	fcall	_Lcd_Cmd
  9826                           
  9827                           ;lcd.c: 90:     Lcd_Cmd(8);
  9828     1F93  3008               	movlw	8
  9829     1F94  160A  158A  2577  160A  158A  	fcall	_Lcd_Cmd
  9830                           
  9831                           ;lcd.c: 91:     Lcd_Cmd(1);
  9832     1F99  3001               	movlw	1
  9833     1F9A  160A  158A  2577  160A  158A  	fcall	_Lcd_Cmd
  9834                           
  9835                           ;lcd.c: 92:     Lcd_Cmd(6);
  9836     1F9F  3006               	movlw	6
  9837     1FA0  160A  158A  2577  160A  158A  	fcall	_Lcd_Cmd
  9838                           
  9839                           ;lcd.c: 93:     Lcd_Cmd(12);
  9840     1FA5  300C               	movlw	12
  9841     1FA6  160A  158A  2577  160A  158A  	fcall	_Lcd_Cmd
  9842     1FAB                     l70:
  9843     1FAB  0008               	return
  9844     1FAC                     __end_of_Lcd_Init:
  9845                           
  9846                           	psect	text30
  9847     1E87                     __ptext30:	
  9848 ;; *************** function _Lcd_Write_String *****************
  9849 ;; Defined at:
  9850 ;;		line 104 in file "lcd.c"
  9851 ;; Parameters:    Size  Location     Type
  9852 ;;  a               2    3[COMMON] PTR unsigned char 
  9853 ;;		 -> volt(16), STR_1(12), 
  9854 ;; Auto vars:     Size  Location     Type
  9855 ;;  i               2    8[COMMON] int 
  9856 ;; Return value:  Size  Location     Type
  9857 ;;                  1    wreg      void 
  9858 ;; Registers used:
  9859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9860 ;; Tracked objects:
  9861 ;;		On entry : 0/0
  9862 ;;		On exit  : 0/0
  9863 ;;		Unchanged: 0/0
  9864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9865 ;;      Params:         2       0       0       0       0
  9866 ;;      Locals:         2       0       0       0       0
  9867 ;;      Temps:          3       0       0       0       0
  9868 ;;      Totals:         7       0       0       0       0
  9869 ;;Total ram usage:        7 bytes
  9870 ;; Hardware stack levels used: 1
  9871 ;; Hardware stack levels required when called: 2
  9872 ;; This function calls:
  9873 ;;		_Lcd_Write_Char
  9874 ;; This function is called by:
  9875 ;;		_main
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878                           
  9879     1E87                     _Lcd_Write_String:	
  9880                           ;psect for function _Lcd_Write_String
  9881                           
  9882     1E87                     l3176:	
  9883                           ;incstack = 0
  9884                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9885                           
  9886                           
  9887                           ;lcd.c: 105:     int i;;lcd.c: 106:     for (i = 0; a[i] != '\0'; i++)
  9888     1E87  01F8               	clrf	Lcd_Write_String@i
  9889     1E88  01F9               	clrf	Lcd_Write_String@i+1
  9890     1E89  2EAC               	goto	l3182
  9891     1E8A                     l3178:
  9892                           
  9893                           ;lcd.c: 107:         Lcd_Write_Char(a[i]);
  9894     1E8A  0878               	movf	Lcd_Write_String@i,w
  9895     1E8B  0773               	addwf	Lcd_Write_String@a,w
  9896     1E8C  00F6               	movwf	??_Lcd_Write_String+1
  9897     1E8D  0874               	movf	Lcd_Write_String@a+1,w
  9898     1E8E  00F5               	movwf	??_Lcd_Write_String
  9899     1E8F  1803               	skipnc
  9900     1E90  0AF5               	incf	??_Lcd_Write_String,f
  9901     1E91  1FF8               	btfss	Lcd_Write_String@i,7
  9902     1E92  2E94               	goto	u5240
  9903     1E93  03F5               	decf	??_Lcd_Write_String,f
  9904     1E94                     u5240:
  9905     1E94  0875               	movf	??_Lcd_Write_String,w
  9906     1E95  00F7               	movwf	??_Lcd_Write_String+2
  9907     1E96  0877               	movf	??_Lcd_Write_String+2,w
  9908     1E97  1283               	bcf	3,5	;RP0=0, select bank0
  9909     1E98  1303               	bcf	3,6	;RP1=0, select bank0
  9910     1E99  00FF               	movwf	btemp+1
  9911     1E9A  0876               	movf	??_Lcd_Write_String+1,w
  9912     1E9B  0084               	movwf	4
  9913     1E9C  160A  118A  2000  160A  158A  	fcall	stringtab
  9914     1EA1  160A  158A  254B  160A  158A  	fcall	_Lcd_Write_Char
  9915     1EA6                     l3180:
  9916     1EA6  3001               	movlw	1
  9917     1EA7  07F8               	addwf	Lcd_Write_String@i,f
  9918     1EA8  1803               	skipnc
  9919     1EA9  0AF9               	incf	Lcd_Write_String@i+1,f
  9920     1EAA  3000               	movlw	0
  9921     1EAB  07F9               	addwf	Lcd_Write_String@i+1,f
  9922     1EAC                     l3182:
  9923     1EAC  0878               	movf	Lcd_Write_String@i,w
  9924     1EAD  0773               	addwf	Lcd_Write_String@a,w
  9925     1EAE  00F6               	movwf	??_Lcd_Write_String+1
  9926     1EAF  0874               	movf	Lcd_Write_String@a+1,w
  9927     1EB0  00F5               	movwf	??_Lcd_Write_String
  9928     1EB1  1803               	skipnc
  9929     1EB2  0AF5               	incf	??_Lcd_Write_String,f
  9930     1EB3  1FF8               	btfss	Lcd_Write_String@i,7
  9931     1EB4  2EB6               	goto	u5250
  9932     1EB5  03F5               	decf	??_Lcd_Write_String,f
  9933     1EB6                     u5250:
  9934     1EB6  0875               	movf	??_Lcd_Write_String,w
  9935     1EB7  00F7               	movwf	??_Lcd_Write_String+2
  9936     1EB8  0877               	movf	??_Lcd_Write_String+2,w
  9937     1EB9  1283               	bcf	3,5	;RP0=0, select bank0
  9938     1EBA  1303               	bcf	3,6	;RP1=0, select bank0
  9939     1EBB  00FF               	movwf	btemp+1
  9940     1EBC  0876               	movf	??_Lcd_Write_String+1,w
  9941     1EBD  0084               	movwf	4
  9942     1EBE  160A  118A  2000  160A  158A  	fcall	stringtab
  9943     1EC3  3A00               	xorlw	0
  9944     1EC4  1D03               	skipz
  9945     1EC5  2EC7               	goto	u5261
  9946     1EC6  2EC8               	goto	u5260
  9947     1EC7                     u5261:
  9948     1EC7  2E8A               	goto	l3178
  9949     1EC8                     u5260:
  9950     1EC8                     l79:
  9951     1EC8  0008               	return
  9952     1EC9                     __end_of_Lcd_Write_String:
  9953                           
  9954                           	psect	text31
  9955     1D4B                     __ptext31:	
  9956 ;; *************** function _Lcd_Write_Char *****************
  9957 ;; Defined at:
  9958 ;;		line 96 in file "lcd.c"
  9959 ;; Parameters:    Size  Location     Type
  9960 ;;  a               1    wreg     unsigned char 
  9961 ;; Auto vars:     Size  Location     Type
  9962 ;;  a               1    2[COMMON] unsigned char 
  9963 ;; Return value:  Size  Location     Type
  9964 ;;                  1    wreg      void 
  9965 ;; Registers used:
  9966 ;;		wreg, status,2, status,0, pclath, cstack
  9967 ;; Tracked objects:
  9968 ;;		On entry : 0/0
  9969 ;;		On exit  : 0/0
  9970 ;;		Unchanged: 0/0
  9971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9972 ;;      Params:         0       0       0       0       0
  9973 ;;      Locals:         1       0       0       0       0
  9974 ;;      Temps:          1       0       0       0       0
  9975 ;;      Totals:         2       0       0       0       0
  9976 ;;Total ram usage:        2 bytes
  9977 ;; Hardware stack levels used: 1
  9978 ;; Hardware stack levels required when called: 1
  9979 ;; This function calls:
  9980 ;;		_Lcd_Port
  9981 ;; This function is called by:
  9982 ;;		_Lcd_Write_String
  9983 ;; This function uses a non-reentrant model
  9984 ;;
  9985                           
  9986     1D4B                     _Lcd_Write_Char:	
  9987                           ;psect for function _Lcd_Write_Char
  9988                           
  9989                           
  9990                           ;incstack = 0
  9991                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9992                           ;Lcd_Write_Char@a stored from wreg
  9993     1D4B  00F2               	movwf	Lcd_Write_Char@a
  9994     1D4C                     l2768:
  9995                           
  9996                           ;lcd.c: 97:     RC0 = 1;
  9997     1D4C  1283               	bcf	3,5	;RP0=0, select bank0
  9998     1D4D  1303               	bcf	3,6	;RP1=0, select bank0
  9999     1D4E  1407               	bsf	7,0	;volatile
 10000     1D4F                     l2770:
 10001                           
 10002                           ;lcd.c: 98:     Lcd_Port(a);
 10003     1D4F  0872               	movf	Lcd_Write_Char@a,w
 10004     1D50  160A  158A  2649  160A  158A  	fcall	_Lcd_Port
 10005     1D55                     l2772:
 10006                           
 10007                           ;lcd.c: 99:     RC1 = 1;
 10008     1D55  1283               	bcf	3,5	;RP0=0, select bank0
 10009     1D56  1303               	bcf	3,6	;RP1=0, select bank0
 10010     1D57  1487               	bsf	7,1	;volatile
 10011     1D58                     l2774:
 10012                           
 10013                           ;lcd.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10014     1D58  301A               	movlw	26
 10015     1D59  00F1               	movwf	??_Lcd_Write_Char
 10016     1D5A                     u5727:
 10017     1D5A  0BF1               	decfsz	??_Lcd_Write_Char,f
 10018     1D5B  2D5A               	goto	u5727
 10019     1D5C  0000               	nop
 10020     1D5D                     l2776:
 10021                           
 10022                           ;lcd.c: 101:     RC1 = 0;
 10023     1D5D  1283               	bcf	3,5	;RP0=0, select bank0
 10024     1D5E  1303               	bcf	3,6	;RP1=0, select bank0
 10025     1D5F  1087               	bcf	7,1	;volatile
 10026     1D60                     l73:
 10027     1D60  0008               	return
 10028     1D61                     __end_of_Lcd_Write_Char:
 10029                           
 10030                           	psect	text32
 10031     1D91                     __ptext32:	
 10032 ;; *************** function _Lcd_Set_Cursor *****************
 10033 ;; Defined at:
 10034 ;;		line 68 in file "lcd.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;  a               1    wreg     unsigned char 
 10037 ;;  b               1    4[COMMON] unsigned char 
 10038 ;; Auto vars:     Size  Location     Type
 10039 ;;  a               1    5[COMMON] unsigned char 
 10040 ;;  temp            1    6[COMMON] unsigned char 
 10041 ;; Return value:  Size  Location     Type
 10042 ;;                  1    wreg      void 
 10043 ;; Registers used:
 10044 ;;		wreg, status,2, status,0, pclath, cstack
 10045 ;; Tracked objects:
 10046 ;;		On entry : 0/0
 10047 ;;		On exit  : 0/0
 10048 ;;		Unchanged: 0/0
 10049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10050 ;;      Params:         1       0       0       0       0
 10051 ;;      Locals:         2       0       0       0       0
 10052 ;;      Temps:          0       0       0       0       0
 10053 ;;      Totals:         3       0       0       0       0
 10054 ;;Total ram usage:        3 bytes
 10055 ;; Hardware stack levels used: 1
 10056 ;; Hardware stack levels required when called: 2
 10057 ;; This function calls:
 10058 ;;		_Lcd_Cmd
 10059 ;; This function is called by:
 10060 ;;		_main
 10061 ;; This function uses a non-reentrant model
 10062 ;;
 10063                           
 10064     1D91                     _Lcd_Set_Cursor:	
 10065                           ;psect for function _Lcd_Set_Cursor
 10066                           
 10067                           
 10068                           ;incstack = 0
 10069                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10070                           ;Lcd_Set_Cursor@a stored from wreg
 10071     1D91  00F5               	movwf	Lcd_Set_Cursor@a
 10072     1D92                     l3164:
 10073                           
 10074                           ;lcd.c: 69:     unsigned char temp;;lcd.c: 70:     if (a == 1) {
 10075     1D92  0375               	decf	Lcd_Set_Cursor@a,w
 10076     1D93  1D03               	btfss	3,2
 10077     1D94  2D96               	goto	u5221
 10078     1D95  2D97               	goto	u5220
 10079     1D96                     u5221:
 10080     1D96  2DA1               	goto	l3170
 10081     1D97                     u5220:
 10082     1D97                     l3166:
 10083                           
 10084                           ;lcd.c: 71:         temp = 0x80 + b - 1;
 10085     1D97  0874               	movf	Lcd_Set_Cursor@b,w
 10086     1D98  3E7F               	addlw	127
 10087     1D99  00F6               	movwf	Lcd_Set_Cursor@temp
 10088     1D9A                     l3168:
 10089                           
 10090                           ;lcd.c: 72:         Lcd_Cmd(temp);
 10091     1D9A  0876               	movf	Lcd_Set_Cursor@temp,w
 10092     1D9B  160A  158A  2577  160A  158A  	fcall	_Lcd_Cmd
 10093                           
 10094                           ;lcd.c: 74:     } else if (a == 2) {
 10095     1DA0  2DB0               	goto	l67
 10096     1DA1                     l3170:
 10097     1DA1  3002               	movlw	2
 10098     1DA2  0675               	xorwf	Lcd_Set_Cursor@a,w
 10099     1DA3  1D03               	btfss	3,2
 10100     1DA4  2DA6               	goto	u5231
 10101     1DA5  2DA7               	goto	u5230
 10102     1DA6                     u5231:
 10103     1DA6  2DB0               	goto	l67
 10104     1DA7                     u5230:
 10105     1DA7                     l3172:
 10106                           
 10107                           ;lcd.c: 75:         temp = 0xC0 + b - 1;
 10108     1DA7  0874               	movf	Lcd_Set_Cursor@b,w
 10109     1DA8  3EBF               	addlw	191
 10110     1DA9  00F6               	movwf	Lcd_Set_Cursor@temp
 10111     1DAA                     l3174:
 10112                           
 10113                           ;lcd.c: 76:         Lcd_Cmd(temp);
 10114     1DAA  0876               	movf	Lcd_Set_Cursor@temp,w
 10115     1DAB  160A  158A  2577  160A  158A  	fcall	_Lcd_Cmd
 10116     1DB0                     l67:
 10117     1DB0  0008               	return
 10118     1DB1                     __end_of_Lcd_Set_Cursor:
 10119                           
 10120                           	psect	text33
 10121     1D2C                     __ptext33:	
 10122 ;; *************** function _Lcd_Clear *****************
 10123 ;; Defined at:
 10124 ;;		line 63 in file "lcd.c"
 10125 ;; Parameters:    Size  Location     Type
 10126 ;;		None
 10127 ;; Auto vars:     Size  Location     Type
 10128 ;;		None
 10129 ;; Return value:  Size  Location     Type
 10130 ;;                  1    wreg      void 
 10131 ;; Registers used:
 10132 ;;		wreg, status,2, status,0, pclath, cstack
 10133 ;; Tracked objects:
 10134 ;;		On entry : 0/0
 10135 ;;		On exit  : 0/0
 10136 ;;		Unchanged: 0/0
 10137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10138 ;;      Params:         0       0       0       0       0
 10139 ;;      Locals:         0       0       0       0       0
 10140 ;;      Temps:          0       0       0       0       0
 10141 ;;      Totals:         0       0       0       0       0
 10142 ;;Total ram usage:        0 bytes
 10143 ;; Hardware stack levels used: 1
 10144 ;; Hardware stack levels required when called: 2
 10145 ;; This function calls:
 10146 ;;		_Lcd_Cmd
 10147 ;; This function is called by:
 10148 ;;		_main
 10149 ;; This function uses a non-reentrant model
 10150 ;;
 10151                           
 10152     1D2C                     _Lcd_Clear:	
 10153                           ;psect for function _Lcd_Clear
 10154                           
 10155     1D2C                     l3162:	
 10156                           ;incstack = 0
 10157                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10158                           
 10159                           
 10160                           ;lcd.c: 64:     Lcd_Cmd(0);
 10161     1D2C  3000               	movlw	0
 10162     1D2D  160A  158A  2577  160A  158A  	fcall	_Lcd_Cmd
 10163                           
 10164                           ;lcd.c: 65:     Lcd_Cmd(1);
 10165     1D32  3001               	movlw	1
 10166     1D33  160A  158A  2577  160A  158A  	fcall	_Lcd_Cmd
 10167     1D38                     l61:
 10168     1D38  0008               	return
 10169     1D39                     __end_of_Lcd_Clear:
 10170                           
 10171                           	psect	text34
 10172     1D77                     __ptext34:	
 10173 ;; *************** function _Lcd_Cmd *****************
 10174 ;; Defined at:
 10175 ;;		line 55 in file "lcd.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;  a               1    wreg     unsigned char 
 10178 ;; Auto vars:     Size  Location     Type
 10179 ;;  a               1    3[COMMON] unsigned char 
 10180 ;; Return value:  Size  Location     Type
 10181 ;;                  1    wreg      void 
 10182 ;; Registers used:
 10183 ;;		wreg, status,2, status,0, pclath, cstack
 10184 ;; Tracked objects:
 10185 ;;		On entry : 0/0
 10186 ;;		On exit  : 0/0
 10187 ;;		Unchanged: 0/0
 10188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10189 ;;      Params:         0       0       0       0       0
 10190 ;;      Locals:         1       0       0       0       0
 10191 ;;      Temps:          2       0       0       0       0
 10192 ;;      Totals:         3       0       0       0       0
 10193 ;;Total ram usage:        3 bytes
 10194 ;; Hardware stack levels used: 1
 10195 ;; Hardware stack levels required when called: 1
 10196 ;; This function calls:
 10197 ;;		_Lcd_Port
 10198 ;; This function is called by:
 10199 ;;		_Lcd_Clear
 10200 ;;		_Lcd_Set_Cursor
 10201 ;;		_Lcd_Init
 10202 ;;		_Lcd_Shift_Right
 10203 ;;		_Lcd_Shift_Left
 10204 ;; This function uses a non-reentrant model
 10205 ;;
 10206                           
 10207     1D77                     _Lcd_Cmd:	
 10208                           ;psect for function _Lcd_Cmd
 10209                           
 10210                           
 10211                           ;incstack = 0
 10212                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10213                           ;Lcd_Cmd@a stored from wreg
 10214     1D77  00F3               	movwf	Lcd_Cmd@a
 10215     1D78                     l2258:
 10216                           
 10217                           ;lcd.c: 56:     RC0 = 0;
 10218     1D78  1283               	bcf	3,5	;RP0=0, select bank0
 10219     1D79  1303               	bcf	3,6	;RP1=0, select bank0
 10220     1D7A  1007               	bcf	7,0	;volatile
 10221     1D7B                     l2260:
 10222                           
 10223                           ;lcd.c: 57:     Lcd_Port(a);
 10224     1D7B  0873               	movf	Lcd_Cmd@a,w
 10225     1D7C  160A  158A  2649  160A  158A  	fcall	_Lcd_Port
 10226     1D81                     l2262:
 10227                           
 10228                           ;lcd.c: 58:     RC1 = 1;
 10229     1D81  1283               	bcf	3,5	;RP0=0, select bank0
 10230     1D82  1303               	bcf	3,6	;RP1=0, select bank0
 10231     1D83  1487               	bsf	7,1	;volatile
 10232     1D84                     l2264:
 10233                           
 10234                           ;lcd.c: 59:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10235     1D84  300B               	movlw	11
 10236     1D85  00F2               	movwf	??_Lcd_Cmd+1
 10237     1D86  3062               	movlw	98
 10238     1D87  00F1               	movwf	??_Lcd_Cmd
 10239     1D88                     u5737:
 10240     1D88  0BF1               	decfsz	??_Lcd_Cmd,f
 10241     1D89  2D88               	goto	u5737
 10242     1D8A  0BF2               	decfsz	??_Lcd_Cmd+1,f
 10243     1D8B  2D88               	goto	u5737
 10244     1D8C  0000               	nop
 10245     1D8D                     l2266:
 10246                           
 10247                           ;lcd.c: 60:     RC1 = 0;
 10248     1D8D  1283               	bcf	3,5	;RP0=0, select bank0
 10249     1D8E  1303               	bcf	3,6	;RP1=0, select bank0
 10250     1D8F  1087               	bcf	7,1	;volatile
 10251     1D90                     l58:
 10252     1D90  0008               	return
 10253     1D91                     __end_of_Lcd_Cmd:
 10254                           
 10255                           	psect	text35
 10256     1E49                     __ptext35:	
 10257 ;; *************** function _Lcd_Port *****************
 10258 ;; Defined at:
 10259 ;;		line 13 in file "lcd.c"
 10260 ;; Parameters:    Size  Location     Type
 10261 ;;  a               1    wreg     unsigned char 
 10262 ;; Auto vars:     Size  Location     Type
 10263 ;;  a               1    0[COMMON] unsigned char 
 10264 ;; Return value:  Size  Location     Type
 10265 ;;                  1    wreg      void 
 10266 ;; Registers used:
 10267 ;;		wreg
 10268 ;; Tracked objects:
 10269 ;;		On entry : 0/0
 10270 ;;		On exit  : 0/0
 10271 ;;		Unchanged: 0/0
 10272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10273 ;;      Params:         0       0       0       0       0
 10274 ;;      Locals:         1       0       0       0       0
 10275 ;;      Temps:          0       0       0       0       0
 10276 ;;      Totals:         1       0       0       0       0
 10277 ;;Total ram usage:        1 bytes
 10278 ;; Hardware stack levels used: 1
 10279 ;; This function calls:
 10280 ;;		Nothing
 10281 ;; This function is called by:
 10282 ;;		_Lcd_Cmd
 10283 ;;		_Lcd_Init
 10284 ;;		_Lcd_Write_Char
 10285 ;; This function uses a non-reentrant model
 10286 ;;
 10287                           
 10288     1E49                     _Lcd_Port:	
 10289                           ;psect for function _Lcd_Port
 10290                           
 10291                           
 10292                           ;incstack = 0
 10293                           ; Regs used in _Lcd_Port: [wreg]
 10294                           ;Lcd_Port@a stored from wreg
 10295     1E49  00F0               	movwf	Lcd_Port@a
 10296     1E4A                     l2226:
 10297                           
 10298                           ;lcd.c: 14:     if (a & 1)
 10299     1E4A  1C70               	btfss	Lcd_Port@a,0
 10300     1E4B  2E4D               	goto	u2821
 10301     1E4C  2E4E               	goto	u2820
 10302     1E4D                     u2821:
 10303     1E4D  2E52               	goto	l39
 10304     1E4E                     u2820:
 10305     1E4E                     l2228:
 10306                           
 10307                           ;lcd.c: 15:         RD0 = 1;
 10308     1E4E  1283               	bcf	3,5	;RP0=0, select bank0
 10309     1E4F  1303               	bcf	3,6	;RP1=0, select bank0
 10310     1E50  1408               	bsf	8,0	;volatile
 10311     1E51  2E55               	goto	l40
 10312     1E52                     l39:	
 10313                           ;lcd.c: 16:     else
 10314                           
 10315                           
 10316                           ;lcd.c: 17:         RD0 = 0;
 10317     1E52  1283               	bcf	3,5	;RP0=0, select bank0
 10318     1E53  1303               	bcf	3,6	;RP1=0, select bank0
 10319     1E54  1008               	bcf	8,0	;volatile
 10320     1E55                     l40:
 10321                           
 10322                           ;lcd.c: 19:     if (a & 2)
 10323     1E55  1CF0               	btfss	Lcd_Port@a,1
 10324     1E56  2E58               	goto	u2831
 10325     1E57  2E59               	goto	u2830
 10326     1E58                     u2831:
 10327     1E58  2E5B               	goto	l41
 10328     1E59                     u2830:
 10329     1E59                     l2230:
 10330                           
 10331                           ;lcd.c: 20:         RD1 = 1;
 10332     1E59  1488               	bsf	8,1	;volatile
 10333     1E5A  2E5C               	goto	l42
 10334     1E5B                     l41:	
 10335                           ;lcd.c: 21:     else
 10336                           
 10337                           
 10338                           ;lcd.c: 22:         RD1 = 0;
 10339     1E5B  1088               	bcf	8,1	;volatile
 10340     1E5C                     l42:
 10341                           
 10342                           ;lcd.c: 24:     if (a & 4)
 10343     1E5C  1D70               	btfss	Lcd_Port@a,2
 10344     1E5D  2E5F               	goto	u2841
 10345     1E5E  2E60               	goto	u2840
 10346     1E5F                     u2841:
 10347     1E5F  2E62               	goto	l43
 10348     1E60                     u2840:
 10349     1E60                     l2232:
 10350                           
 10351                           ;lcd.c: 25:         RD2 = 1;
 10352     1E60  1508               	bsf	8,2	;volatile
 10353     1E61  2E63               	goto	l44
 10354     1E62                     l43:	
 10355                           ;lcd.c: 26:     else
 10356                           
 10357                           
 10358                           ;lcd.c: 27:         RD2 = 0;
 10359     1E62  1108               	bcf	8,2	;volatile
 10360     1E63                     l44:
 10361                           
 10362                           ;lcd.c: 29:     if (a & 8)
 10363     1E63  1DF0               	btfss	Lcd_Port@a,3
 10364     1E64  2E66               	goto	u2851
 10365     1E65  2E67               	goto	u2850
 10366     1E66                     u2851:
 10367     1E66  2E69               	goto	l45
 10368     1E67                     u2850:
 10369     1E67                     l2234:
 10370                           
 10371                           ;lcd.c: 30:         RD3 = 1;
 10372     1E67  1588               	bsf	8,3	;volatile
 10373     1E68  2E6A               	goto	l46
 10374     1E69                     l45:	
 10375                           ;lcd.c: 31:     else
 10376                           
 10377                           
 10378                           ;lcd.c: 32:         RD3 = 0;
 10379     1E69  1188               	bcf	8,3	;volatile
 10380     1E6A                     l46:
 10381                           
 10382                           ;lcd.c: 34:     if (a & 16)
 10383     1E6A  1E70               	btfss	Lcd_Port@a,4
 10384     1E6B  2E6D               	goto	u2861
 10385     1E6C  2E6E               	goto	u2860
 10386     1E6D                     u2861:
 10387     1E6D  2E70               	goto	l47
 10388     1E6E                     u2860:
 10389     1E6E                     l2236:
 10390                           
 10391                           ;lcd.c: 35:         RD4 = 1;
 10392     1E6E  1608               	bsf	8,4	;volatile
 10393     1E6F  2E71               	goto	l48
 10394     1E70                     l47:	
 10395                           ;lcd.c: 36:     else
 10396                           
 10397                           
 10398                           ;lcd.c: 37:         RD4 = 0;
 10399     1E70  1208               	bcf	8,4	;volatile
 10400     1E71                     l48:
 10401                           
 10402                           ;lcd.c: 39:     if (a & 32)
 10403     1E71  1EF0               	btfss	Lcd_Port@a,5
 10404     1E72  2E74               	goto	u2871
 10405     1E73  2E75               	goto	u2870
 10406     1E74                     u2871:
 10407     1E74  2E77               	goto	l49
 10408     1E75                     u2870:
 10409     1E75                     l2238:
 10410                           
 10411                           ;lcd.c: 40:         RD5 = 1;
 10412     1E75  1688               	bsf	8,5	;volatile
 10413     1E76  2E78               	goto	l50
 10414     1E77                     l49:	
 10415                           ;lcd.c: 41:     else
 10416                           
 10417                           
 10418                           ;lcd.c: 42:         RD5 = 0;
 10419     1E77  1288               	bcf	8,5	;volatile
 10420     1E78                     l50:
 10421                           
 10422                           ;lcd.c: 44:     if (a & 64)
 10423     1E78  1F70               	btfss	Lcd_Port@a,6
 10424     1E79  2E7B               	goto	u2881
 10425     1E7A  2E7C               	goto	u2880
 10426     1E7B                     u2881:
 10427     1E7B  2E7E               	goto	l51
 10428     1E7C                     u2880:
 10429     1E7C                     l2240:
 10430                           
 10431                           ;lcd.c: 45:         RD6 = 1;
 10432     1E7C  1708               	bsf	8,6	;volatile
 10433     1E7D  2E7F               	goto	l52
 10434     1E7E                     l51:	
 10435                           ;lcd.c: 46:     else
 10436                           
 10437                           
 10438                           ;lcd.c: 47:         RD6 = 0;
 10439     1E7E  1308               	bcf	8,6	;volatile
 10440     1E7F                     l52:
 10441                           
 10442                           ;lcd.c: 49:     if (a & 128)
 10443     1E7F  1FF0               	btfss	Lcd_Port@a,7
 10444     1E80  2E82               	goto	u2891
 10445     1E81  2E83               	goto	u2890
 10446     1E82                     u2891:
 10447     1E82  2E85               	goto	l53
 10448     1E83                     u2890:
 10449     1E83                     l2242:
 10450                           
 10451                           ;lcd.c: 50:         RD7 = 1;
 10452     1E83  1788               	bsf	8,7	;volatile
 10453     1E84  2E86               	goto	l55
 10454     1E85                     l53:	
 10455                           ;lcd.c: 51:     else
 10456                           
 10457                           
 10458                           ;lcd.c: 52:         RD7 = 0;
 10459     1E85  1388               	bcf	8,7	;volatile
 10460     1E86                     l55:
 10461     1E86  0008               	return
 10462     1E87                     __end_of_Lcd_Port:
 10463     007E                     btemp	set	126	;btemp
 10464     007E                     wtemp0	set	126
 10465                           
 10466                           	psect	idloc
 10467                           
 10468                           ;Config register IDLOC0 @ 0x2000
 10469                           ;	unspecified, using default values
 10470     2000                     	org	8192
 10471     2000  3FFF               	dw	16383
 10472                           
 10473                           ;Config register IDLOC1 @ 0x2001
 10474                           ;	unspecified, using default values
 10475     2001                     	org	8193
 10476     2001  3FFF               	dw	16383
 10477                           
 10478                           ;Config register IDLOC2 @ 0x2002
 10479                           ;	unspecified, using default values
 10480     2002                     	org	8194
 10481     2002  3FFF               	dw	16383
 10482                           
 10483                           ;Config register IDLOC3 @ 0x2003
 10484                           ;	unspecified, using default values
 10485     2003                     	org	8195
 10486     2003  3FFF               	dw	16383
 10487                           
 10488                           	psect	config
 10489                           
 10490                           ;Config register CONFIG1 @ 0x2007
 10491                           ;	Oscillator Selection bits
 10492                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 10493                           ;	Watchdog Timer Enable bit
 10494                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10495                           ;	Power-up Timer Enable bit
 10496                           ;	PWRTE = OFF, PWRT disabled
 10497                           ;	RE3/MCLR pin function select bit
 10498                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10499                           ;	Code Protection bit
 10500                           ;	CP = OFF, Program memory code protection is disabled
 10501                           ;	Data Code Protection bit
 10502                           ;	CPD = OFF, Data memory code protection is disabled
 10503                           ;	Brown Out Reset Selection bits
 10504                           ;	BOREN = OFF, BOR disabled
 10505                           ;	Internal External Switchover bit
 10506                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10507                           ;	Fail-Safe Clock Monitor Enabled bit
 10508                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10509                           ;	Low Voltage Programming Enable bit
 10510                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10511                           ;	In-Circuit Debugger Mode bit
 10512                           ;	DEBUG = 0x1, unprogramme 10513     2007                     	org	8199
 10514     2007  20D4               	dw	8404
 10515                           
 10516                           ;Config register CONFIG2 @ 0x2008
 10517                           ;	Brown-out Reset Selection bit
 10518                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10519                           ;	Flash Program Memory Self Write Enable bits
 10520                           ;	WRT = OFF, Write protection off
 10521     2008                     	org	8200
 10522     2008  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    144
    Data        1
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      80
    BANK1            80     34      59
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> volt(BANK1[16]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___awdiv
    _sprintf->___lldiv
    _sprintf->___xxtofl
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flsub->___xxtofl
    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   33080
                                             30 BANK1      4     4      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           ___xxtofl
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   30498
                                             74 BANK0      5     0      5
                                              0 BANK1     30    30      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             26 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMMON     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             26 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     615
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              5 COMMON     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              0 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
                            _spiRead (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             45 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             66 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             46 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     964
                           _Lcd_Init
                          _configOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _configOsc                                            2     0      2     230
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1     484
                                              4 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___xxtofl
     _spiRead (ARG)
       _spiReceiveWait
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _configOsc
     _spiInit
   _spiRead
   _spiWrite
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      3B       7       73.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      99      12        0.0%
ABS                  0      0      99       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Aug 02 18:57:18 2023

                       l5 1150                         l6 115D                         l7 1169  
                       l8 1178                         l9 1185                         _a 00CA  
                       pc 0002               _SSPSTATbits 0094                        l10 1192  
                      l12 11A0                        l40 1E55                        l41 1E5B  
                      l50 1E78                        l42 1E5C                        l51 1E7E  
                      l43 1E62                        l52 1E7F                        l44 1E63  
                      l53 1E85                        l45 1E69                        l61 1D38  
                      l46 1E6A                        l70 1FAB                        l55 1E86  
                      l47 1E70                        l39 1E52                        l48 1E71  
                      l49 1E77                        l73 1D60                        l58 1D90  
                      l67 1DB0                        l79 1EC8              ___awdiv@sign 007B  
                      _s1 00C6                        _s2 00C2                        fsr 0004  
     ___wmul@multiplicand 0072       __Umul8_16@word_mpld 0076                       l310 0217  
                     l171 1D0F                       l164 1D71                       l148 1E48  
                     l165 1D76                       l182 1D20                       l174 1D08  
                     l351 07A5                       l343 0644                       l168 1D09  
                     l361 1DE1                       l514 126D                       l363 1DF9  
                     l531 00BB                       l291 0FFF                       l532 0022  
                     l284 15A7                       l701 17FF                       l357 07EC  
                     l542 00AE                       l535 007E                       l527 1144  
                     l552 081E                       l560 1D2B                       l713 1773  
                     l617 1FFF                       l547 1F29                       l555 088A  
                     l731 17FF                       l571 12D0                       l803 1E0E  
                     l548 1F45                       l556 08A3                       l564 12E5  
                     l549 1F5A                       l709 174F                       l397 1206  
                     l805 1E20                       l734 1DD4                       l574 12E5  
                     l830 095B                       l582 135F                       l719 1795  
                     l841 0925                       l842 0931                       l578 139C  
                     l579 1310                       l667 1F0C                       l692 1686  
                     l828 08C6                       l589 138F                       l677 10EB  
                     l694 165F                       l790 0C10                       l688 1603  
                     l784 0CA0                       l848 1D4A                       _RC0 0038  
                     _RC1 0039                       _RD0 0040                       _RD1 0041  
                     _RD2 0042                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     fsr0 0004                       indf 0000              ___awmod@sign 0075  
            ___flmul@aexp 0032              ___flmul@bexp 0033              ___flmul@sign 002D  
            ___flmul@temp 0038              ___flmul@prod 0034              ___fltol@exp1 0056  
                    l3000 11EF                      l3010 1F21                      l3002 11F8  
                    l3012 1F3D                      l3020 0802                      l3004 11FE  
                    l3100 1FE8                      l2300 1252                      l2230 1E59  
                    l3014 1F57                      l3030 0862                      l3022 0816  
                    l3110 1DB5                      l3102 1FF1                      l2302 1259  
                    l2240 1E7C                      l2232 1E60                      l3200 1E38  
                    l3016 1F59                      l3008 1F0D                      l3032 0866  
                    l3024 0832                      l3040 1D21                      l2400 15AD  
                    l3104 1FF7                      l3120 08BE                      l2304 125F  
                    l2320 10F8                      l2312 10EC                      l2242 1E83  
                    l2234 1E67                      l2226 1E4A                      l3202 1E39  
                    l3210 1D18                      l3034 08A0                      l3026 083A  
                    l3042 1D29                      l2410 15C0                      l2402 15B1  
                    l3050 1279                      l3130 08DE                      l3122 08CE  
                    l3114 08A5                      l2250 1E08                      l2306 1264  
                    l2330 1111                      l2322 10FC                      l2314 10ED  
                    l2236 1E6E                      l2228 1E4E                      l2260 1D7B  
                    l3204 1E3A                      l3212 1D1D                      l3036 08A2  
                    l3028 083E                      l3044 1D2B                      l2420 15D6  
                    l2412 15C8                      l2404 15B5                      l3108 1DB1  
                    l3060 129E                      l3140 0909                      l3132 08E7  
                    l3116 08AA                      l2252 1E17                      l2244 1DFB  
                    l2308 1269                      l2340 1130                      l2332 1115  
                    l2324 1101                      l2316 10F1                      l3300 0405  
                    l3220 01A5                      l2238 1E75                      l2262 1D81  
                    l3206 1E43                      l2510 16BE                      l2502 1698  
                    l2430 15E6                      l2422 15DC                      l2414 15C9  
                    l2406 15B6                      l3070 12AC                      l3062 12A0  
                    l3054 1282                      l3150 0933                      l3142 0910  
                    l3134 08EE                      l3126 08D7                      l3118 08AE  
                    l2254 1E1C                      l2246 1DFD                      l2350 1EC9  
                    l2270 1208                      l2334 1119                      l2326 1107  
                    l2342 1136                      l2318 10F6                      l3310 047A  
                    l3302 0420                      l3230 01C2                      l3222 01AA  
                    l2264 1D84                      l3208 1D04                      l2512 16C0  
                    l2504 16AF                      l2520 16D3                      l2432 15EB  
                    l2440 15FB                      l2424 15DD                      l2408 15BB  
                    l2416 15CB                      l3080 12C5                      l3072 12B5  
                    l3064 12A4                      l3056 1295                      l3048 126E  
                    l3152 0949                      l3144 091B                      l3136 08F2  
                    l3128 08DA                      l2248 1E04                      l2600 0961  
                    l2360 1EDF                      l2352 1ECB                      l2280 121C  
                    l2272 120C                      l2344 113B                      l2336 1123  
                    l2328 110A                      l3400 0797                      l3312 0482  
                    l3304 0447                      l3320 04C8                      l3240 01FF  
                    l3232 01C8                      l3224 01AF                      l3216 019C  
                    l2266 1D8D                      l2258 1D78                      l3162 1D2C  
                    l3170 1DA1                      l2530 1732                      l2522 16E9  
                    l2514 16C4                      l2506 16B3                      l2450 1615  
                    l2442 1609                      l2434 15F0                      l2426 15E1  
                    l2418 15D3                      l3082 12D5                      l3074 12BE  
                    l3058 1296                      l3090 1FB7                      l3154 094E  
                    l3146 091F                      l3138 0900                      l2610 0974  
                    l2602 0965                      l2370 1F02                      l2362 1EE3  
                    l2354 1ED1                      l2290 1232                      l2282 1220  
                    l2274 1211                      l2346 1140                      l2338 1129  
                    l3410 07C0                      l3402 079F                      l3330 054E  
                    l3322 054A                      l3314 04A0                      l3306 0456  
                    l3250 0237                      l3234 01CD                      l3242 0211  
                    l3226 01B1                      l3218 019F                      l3172 1DA7  
                    l3164 1D92                      l3180 1EA6                      l2540 1765  
                    l2524 1727                      l2532 1741                      l2516 16C5  
                    l2508 16B7                      l2460 161F                      l2452 1617  
                    l2444 160D                      l2436 15F8                      l2428 15E5  
                    l3084 12DA                      l3092 1FC0                      l3156 0952  
                    l3148 0929                      l2700 0BF9                      l2620 098F  
                    l2612 097C                      l2604 0969                      l2364 1EF4  
                    l2356 1ED4                      l2372 1F08                      l2380 10BB  
                    l2292 1236                      l2284 1222                      l2276 1213  
                    l2268 1207                      l3412 07CE                      l3404 07B0  
                    l3340 059B                      l3324 054C                      l3308 0471  
                    l3260 025D                      l3252 0243                      l3244 0215  
                    l3236 01E2                      l3228 01BF                      l3174 1DAA  
                    l3166 1D97                      l3182 1EAC                      l3190 1E31  
                    l2550 177C                      l2542 176E                      l2534 1757  
                    l2526 172B                      l2518 16CE                      l2470 1629  
                    l2462 1621                      l2454 1619                      l2446 1611  
                    l2438 15F9                      l3094 1FC4                      l3086 1FAC  
                    l3158 0953                      l2710 0C28                      l2702 0C0D  
                    l2630 09A6                      l2622 0993                      l2614 097E  
                    l2606 096A                      l2366 1EFA                      l2358 1EDB  
                    l2390 10DA                      l2382 10C2                      l2294 123A  
                    l2286 1228                      l2278 1217                      l3406 07B1  
                    l3342 05A0                      l3334 0585                      l3318 04BF  
                    l3270 02B0                      l3262 0276                      l3254 0247  
                    l3238 01F9                      l3168 1D9A                      l3176 1E87  
                    l3192 1E32                      l3184 1E21                      l2560 178C  
                    l2552 1781                      l2544 1772                      l2536 175C  
                    l2528 172D                      l2480 1647                      l2472 162B  
                    l2464 1623                      l2456 161B                      l2448 1613  
                    l3096 1FC8                      l3088 1FB4                      l2720 0C63  
                    l2712 0C2C                      l2632 09A8                      l2624 0994  
                    l2616 0986                      l2608 096F                      l2368 1EFB  
                    l2392 10E1                      l2384 10C6                      l2376 10B2  
                    l2800 14B9                      l2296 124B                      l2288 122B  
                    l3408 07C0                      l3360 061F                      l3344 05A5  
                    l3352 0606                      l3336 0589                      l3280 02EB  
                    l3272 02BB                      l3264 028F                      l3256 024B  
                    l3504 022F                      l3248 0219                      l3416 07D4  
                    l3440 00D5                      l3432 00BC                      l3178 1E8A  
                    l3194 1E33                      l3186 1E2A                      l2570 17AD  
                    l2562 1792                      l2546 1777                      l2554 1783  
                    l2490 1671                      l2482 1663                      l2474 162D  
                    l2466 1625                      l2458 161D                      l3098 1FDA  
                    l2730 0C8E                      l2722 0C72                      l2714 0C45  
                    l2706 0C15                      l2650 0A15                      l2642 09C3  
                    l2634 09B0                      l2626 0999                      l2618 098B  
                    l2386 10CA                      l2378 10B8                      l2394 10E7  
                    l2298 1251                      l2810 0CA8                      l3370 0652  
                    l3362 062C                      l3354 060E                      l3346 05E0  
                    l3338 058F                      l3290 037D                      l3282 02F1  
                    l3274 02C1                      l3266 0293                      l3258 0259  
                    l3418 07E8                      l3450 0115                      l3442 00D6  
                    l3434 00C1                      l2740 1145                      l3196 1E34  
                    l3188 1E2D                      l2580 17DD                      l2572 17B1  
                    l2548 177A                      l2556 1787                      l2492 167A  
                    l2484 166A                      l2468 1627                      l2476 162F  
                    l2900 1374                      l2732 0C8F                      l2724 0C7C  
                    l2708 0C1A                      l2716 0C4B                      l2660 0A8E  
                    l2652 0A3F                      l2644 09D1                      l2636 09B5  
                    l2628 099E                      l2388 10D4                      l2804 1564  
                    l2820 0D99                      l2812 0CAA                      l3380 070F  
                    l3372 0657                      l3364 063B                      l3356 0615  
                    l3348 05FF                      l3292 0398                      l3284 0310  
                    l3276 02D4                      l3268 0297                      l3460 013E  
                    l3452 0118                      l3444 00E0                      l3436 00C4  
                    l2750 117F                      l2742 114C                      l3198 1E37  
                    l2590 17F1                      l2582 17E5                      l2574 17CF  
                    l2566 179A                      l2558 1788                      l2486 166C  
                    l2494 167E                      l2478 1630                      l2398 15A8  
                    l2910 1394                      l2902 137D                      l2726 0C7E  
                    l2734 0C94                      l2718 0C58                      l2670 0B0A  
                    l2662 0AAB                      l2654 0A5B                      l2646 09DE  
                    l2638 09BA                      l2822 0DA0                      l2814 0CB1  
                    l2830 0E55                      l3390 077B                      l3382 072E  
                    l3374 065B                      l3366 0640                      l3358 0619  
                    l3286 035B                      l3278 02E7                      l3294 03A0  
                    l3470 017E                      l3462 0143                      l3454 0127  
                    l3446 00E8                      l3438 00CE                      l2760 1F61  
                    l2752 118C                      l2744 1157                      l2592 17F5  
                    l2584 17EA                      l2568 179F                      l2576 17D3  
                    l2496 168A                      l2488 1670                      l2920 0018  
                    l2736 0C98                      l2728 0C8A                      l2680 0BBC  
                    l2672 0B35                      l2664 0AB9                      l2656 0A77  
                    l2648 09F9                      l2840 0F4B                      l2832 0E5C  
                    l2808 0CA4                      l3392 0780                      l3384 0734  
                    l3376 0679                      l3368 064D                      l3296 03AF  
                    l3288 0374                      l3472 0187                      l3464 014B  
                    l3448 010B                      l3456 012C                      l2770 1D4F  
                    l2762 1F6A                      l2754 1199                      l2746 1163  
                    l2594 17FA                      l2586 17EB                      l2578 17D8  
                    l2498 168F                      l2930 003C                      l2914 0004  
                    l2690 0BE1                      l2682 0BC5                      l2674 0B43  
                    l2666 0AD6                      l2658 0A80                      l2850 1D3B  
                    l2826 0E28                      l3394 0784                      l3386 0738  
                    l3378 06D4                      l3298 03F6                      l3466 0154  
                    l3458 013B                      l2772 1D55                      l2764 1F79  
                    l2756 119D                      l2748 1172                      l2780 1D69  
                    l2596 17FE                      l2588 17EF                      l2940 006E  
                    l2932 003E                      l2916 000F                      l2908 1384  
                    l2860 12E6                      l2692 0BEA                      l2684 0BD3  
                    l2676 0B6E                      l2668 0AED                      l2852 1D41  
                    l2844 0FD3                      l3396 078A                      l3388 0773  
                    l3468 015C                      l2774 1D58                      l2766 1F7F  
                    l2758 1F5B                      l2782 1D6B                      l2942 006F  
                    l2934 0045                      l2926 0023                      l2862 12F7  
                    l2686 0BDC                      l2694 0BF0                      l2678 0B94  
                    l2598 095C                      l2790 13A0                      l2854 1D47  
                    l2838 0F44                      l3398 0791                      l2776 1D5D  
                    l2768 1D4C                      l2784 1D6D                      l2952 008A  
                    l2944 0078                      l2936 004E                      l2928 002B  
                    l2880 132F                      l2872 1311                      l2696 0BF4  
                    l2688 0BE0                      l2792 13A6                      l2856 1D49  
                    l2848 1D3A                      l2786 1D70                      l2778 1D62  
                    l2970 1DD7                      l2962 00A3                      l2954 0093  
                    l2946 0082                      l2938 0060                      l2890 1359  
                    l2882 1338                      l2874 1317                      l2866 1300  
                    l2698 0BF5                      l2788 1D09                      l2972 1DDB  
                    l2964 00B3                      l2956 009C                      l2892 1363  
                    l2884 1346                      l2876 1326                      l2990 11C1  
                    l2982 11A1                      l2974 1DE8                      l2886 1350  
                    l2878 1328                      l2798 14B3                      l2992 11C5  
                    l2984 11B1                      l2976 1DEF                      l2968 1DD5  
                    l2888 1351                      l2994 11CE                      l2986 11B4  
                    l2978 1DF5                      l2898 136B                      l2996 11E0  
                    l2988 11BD                      l2998 11EE                      STR_1 10A0  
                    STR_2 10AC                      u3010 125F                      u3011 125E  
                    u3020 1264                      u3100 1136                      u3021 1263  
                    u3005 1253                      u3101 1135                      u3110 113B  
                    u3030 10F1                      u3111 113A                      u3031 10F0  
                    u4000 0C0D                      u3120 1ED1                      u3040 10FC  
                    u4001 0C0C                      u3121 1ED0                      u3041 10FB  
                    u4010 0C14                      u3210 10CA                      u3050 1107  
                    u4011 0C13                      u3211 10C9                      u3051 1106  
                    u4100 1163                      u3300 15EB                      u4020 0C1A  
                    u3140 1EE3                      u3220 10D4                      u4101 1162  
                    u3301 15EA                      u4021 0C19                      u3141 1EE2  
                    u3221 10D3                      u3205 10BC                      u4110 1172  
                    u3310 15F0                      u4030 0C2C                      u3070 1119  
                    u4111 1171                      u3311 15EF                      u4031 0C2B  
                    u3135 1ED5                      u3071 1118                      u4120 117F  
                    u3400 1686                      u3320 1609                      u5000 12D5  
                    u4040 0C3B                      u3160 1EF4                      u3240 10E7  
                    u3080 1123                      u4121 117E                      u3401 1685  
                    u3321 1608                      u5001 12D4                      u3161 1EF3  
                    u3241 10E6                      u3225 10D0                      u3081 1122  
                    u3065 110B                      u4130 118C                      u3410 168A  
                    u3330 160D                      u3250 15B5                      u5010 12DA  
                    u4050 0C58                      u4210 14B9                      u4131 118B  
                    u3411 1689                      u3331 160C                      u3251 15B4  
                    u5011 12D9                      u4051 0C57                      u3155 1EE4  
                    u3235 10DB                      u4211 14B8                      u4140 1199  
                    u3500 1714                      u3420 168F                      u3340 1647  
                    u3260 15BB                      u5020 1FB4                      u5100 08CE  
                    u4060 0C72                      u3180 1F08                      u4300 0DA0  
                    u4141 1198                      u3501 1715                      u3421 168E  
                    u3341 1646                      u3261 15BA                      u5021 1FB3  
                    u5101 08CD                      u4061 0C71                      u4045 0C36  
                    u3181 1F07                      u3165 1EF0                      u4205 1472  
                    u3085 111F                      u4301 0D9F                      u4150 1D69  
                    u3510 1732                      u3502 171A                      u3350 1652  
                    u3270 15C0                      u4070 0C8E                      u3190 10B8  
                    u4151 1D68                      u3511 1731                      u3503 171B  
                    u3431 16A1                      u3351 1650                      u3271 15BF  
                    u4071 0C8D                      u4055 0C54                      u3175 1EFC  
                    u3191 10B7                      u3095 112A                      u4080 114C  
                    u4160 1D0F                      u3600 1792                      u3520 1757  
                    u3440 16B3                      u3432 16A8                      u3360 1653  
                    u3280 15DC                      u5040 1FC8                      u5200 094E  
                    u5120 08ED                      u4081 114B                      u4161 1D0E  
                    u3601 1791                      u3521 1756                      u3441 16B2  
                    u3433 16AF                      u3345 1643                      u3281 15DB  
                    u5041 1FC7                      u5201 094D                      u5121 08EC  
                    u4065 0C6E                      u4225 14D6                      u4090 1157  
                    u3610 1799                      u3530 175C                      u3450 16B7  
                    u3370 1663                      u3290 15E5                      u5050 1FDA  
                    u5210 0952                      u4170 13A6                      u4250 0CA8  
                    u4091 1156                      u3611 1798                      u3531 175B  
                    u3451 16B6                      u3371 1662                      u3291 15E4  
                    u5051 1FD9                      u5035 1FB9                      u5211 0951  
                    u5115 08DF                      u4235 1523                      u4171 13A5  
                    u4315 0DB3                      u4251 0CA7                      u2820 1E4E  
                    u5220 1D97                      u3700 17FE                      u3620 179F  
                    u3460 16C4                      u3380 1670                      u5140 090F  
                    u4500 1363                      u2900 1E08                      u4420 1D41  
                    u4340 0E5C                      u4260 0CB1                      u5300 0243  
                    u2821 1E4D                      u5221 1D96                      u3701 17FD  
                    u3621 179E                      u3461 16C3                      u3381 166F  
                    u5141 090E                      u4501 1362                      u2901 1E07  
                    u4245 156F                      u4421 1D40                      u4405 0F9A  
                    u4341 0E5B                      u4325 0DEF                      u4261 0CB0  
                    u5301 0242                      u2830 1E59                      u5230 1DA7  
                    u3630 17B1                      u3550 1772                      u5070 1FF7  
                    u4510 136A                      u3710 0969                      u4430 1D47  
                    u5310 0247                      u2831 1E58                      u5231 1DA6  
                    u3631 17B0                      u3551 1771                      u5071 1FF6  
                    u5055 1FD6                      u5135 0901                      u4511 1369  
                    u3711 0968                      u4431 1D46                      u4415 0FD6  
                    u4335 0E2B                      u5311 0246                      u2840 1E60  
                    u5240 1E94                      u3640 17C0                      u3560 1777  
                    u3480 16E9                      u5160 091F                      u5080 08AA  
                    u4600 0060                      u4440 12F7                      u2920 1E1C  
                    u3720 096F                      u5400 0447                      u5320 0276  
                    u2841 1E5F                      u3561 1776                      u3545 1767  
                    u3481 16E8                      u5065 1FE9                      u5161 091E  
                    u5081 08A9                      u4601 005F                      u4441 12F6  
                    u2921 1E1B                      u3801 0A23                      u3721 096E  
                    u4185 13C3                      u5401 0446                      u5321 0275  
                    u2850 1E67                      u5250 1EB6                      u3650 17CF  
                    u3570 1781                      u5170 0925                      u5090 08AE  
                    u4530 137C                      u4450 130F                      u3802 0A2A  
                    u3730 0974                      u2930 120C                      u5410 0456  
                    u5330 02B0                      u2851 1E66                      u3651 17CE  
                    u3571 1780                      u3491 1700                      u3483 16E5  
                    u3475 16C7                      u3395 1673                      u5171 0924  
                    u5155 0914                      u5091 08AD                      u4531 137B  
                    u4451 130E                      u2915 1E0F                      u3811 0A4D  
                    u3803 0A31                      u3731 0973                      u4195 141D  
                    u2931 120B                      u4355 0E7C                      u4275 0CD1  
                    u5411 0455                      u5331 02AF                      u2860 1E6E  
                    u5260 1EC8                      u3660 17D8                      u3580 1787  
                    u3492 1701                      u4700 1DDB                      u5180 0929  
                    u4620 007E                      u4540 1383                      u3900 0B7A  
                    u3812 0A54                      u3740 0993                      u2940 1217  
                    u4380 0F4B                      u5500 063B                      u5420 0471  
                    u5340 02EB                      u2861 1E6D                      u5261 1EC7  
                    u3661 17D7                      u3645 17BB                      u3581 1786  
                    u3493 1706                      u4701 1DDA                      u5181 0928  
                    u4621 007D                      u4605 005C                      u4541 1382  
                    u4525 136C                      u3821 0A69                      u3813 0A5B  
                    u3741 0992                      u2941 1216                      u4381 0F4A  
                    u4365 0EB8                      u4285 0D0D                      u5501 063A  
                    u5421 0470                      u5341 02EA                      u2870 1E75  
                    u3670 17DD                      u3590 178C                      u3494 1707  
                    u5190 093E                      u4630 0082                      u4470 1346  
                    u3822 0A70                      u3750 0999                      u2950 1228  
                    u5510 0652                      u5350 0374                      u5270 01A5  
                    u2871 1E74                      u3671 17DC                      u3591 178B  
                    u3495 170C                      u4631 0081                      u4615 0071  
                    u4471 1345                      u3911 0B86                      u3823 0A77  
                    u3751 0998                      u2951 1227                      u4375 0F03  
                    u4295 0D58                      u5511 0651                      u5415 0452  
                    u5351 0373                      u5271 01A4                      u2880 1E7C  
                    u3680 17EA                      u3496 170D                      u4800 11FE  
                    u4640 0089                      u4560 1394                      u3920 0BA2  
                    u3912 0B8D                      u3760 099E                      u5600 07CE  
                    u5440 0584                      u5360 0398                      u5280 01BF  
                    u2881 1E7B                      u3681 17E9                      u4801 11FD  
                    u4641 0088                      u4561 1393                      u4465 1331  
                    u3913 0B94                      u3905 0B75                      u3841 0A9D  
                    u3761 099D                      u5601 07CD                      u5505 0637  
                    u5441 0583                      u5361 0397                      u5281 01BE  
                    u2890 1E83                      u4810 1F21                      u3690 17EF  
                    u4730 1DF5                      u4570 000F                      u4490 135F  
                    u3842 0AA4                      u3770 09B5                      u2970 123A  
                    u5610 07E8                      u5450 058F                      u5370 03AF  
                    u5290 0210                      u2891 1E82                      u4811 1F20  
                    u3691 17EE                      u4731 1DF4                      u4715 1DE2  
                    u5195 0939                      u4571 000E                      u4555 1386  
                    u4491 135E                      u4475 1342                      u3931 0BAE  
                    u3851 0AC8                      u3843 0AAB                      u3835 0A79  
                    u3771 09B4                      u2971 1239                      u4395 0F5E  
                    u5611 07E7                      u5451 058E                      u5435 0551  
                    u5371 03AE                      u5291 020F                      u4820 1F3D  
                    u4900 08A0                      u4740 11B1                      u4660 009B  
                    u4580 0021                      u3932 0BB5                      u3852 0ACF  
                    u3780 09BA                      u5540 077A                      u5460 059B  
                    u5380 0405                      u5620 00D5                      u4821 1F3C  
                    u4901 089F                      u4741 11B0                      u4725 1DE9  
                    u4661 009A                      u4581 0020                      u4485 1352  
                    u3933 0BBC                      u3925 0B9D                      u3853 0AD6  
                    u3781 09B9                      u2965 122C                      u5541 0779  
                    u5525 06D7                      u5461 059A                      u5445 0580  
                    u5381 0404                      u5621 00D4                      u4830 1F57  
                    u4910 1D29                      u4670 00A2                      u2990 124B  
                    u5550 0790                      u5390 0420                      u4831 1F56  
                    u4911 1D28                      u4671 00A1                      u4655 008B  
                    u3871 0AFC                      u3791 0A07                      u2991 124A  
                    u5551 078F                      u5535 073B                      u5391 041F  
                    u5375 03AB                      u4840 0816                      u4920 1279  
                    u4760 11C5                      u3960 0BE0                      u3872 0B03  
                    u3792 0A0E                      u5560 0797                      u5480 060D  
                    u4905 089C                      u4841 0815                      u4921 1278  
                    u4761 11C4                      u3961 0BDF                      u3945 0BBE  
                    u3881 0B27                      u3873 0B0A                      u3865 0AD8  
                    u3793 0A15                      u2985 123B                      u5561 0796  
                    u5481 060C                      u5385 0401                      u4850 0832  
                    u4930 1290                      u4690 00B3                      u3882 0B2E  
                    u5570 079F                      u5490 062C                      u5707 1F74  
                    u4835 1F53                      u4851 0831                      u4755 11B6  
                    u4691 00B2                      u4595 0047                      u3955 0BD5  
                    u3891 0B52                      u3883 0B35                      u2995 1247  
                    u5571 079E                      u5491 062B                      u5475 05A8  
                    u4860 083E                      u4940 12A4                      u4780 11E0  
                    u3980 0BF4                      u3892 0B59                      u5580 07B0  
                    u5717 1F83                      u4861 083D                      u4941 12A3  
                    u4781 11DF                      u4685 00A5                      u3981 0BF3  
                    u3893 0B60                      u5581 07AF                      u5637 00CA  
                    u4950 12AB                      u3990 0BF9                      u5590 07C0  
                    u5727 1D5A                      u4871 084D                      u4951 12AA  
                    u4935 128B                      u4775 11C7                      u3991 0BF8  
                    u3975 0BE3                      u5591 07BF                      u5495 0628  
                    u5647 00DC                      u4880 0866                      u4872 084E  
                    u5737 1D88                      u4881 0865                      u4873 0853  
                    u4785 11DC                      u5585 07AC                      u5657 0111  
                    u4874 0854                      u4970 12BD                      u4891 0875  
                    u4875 0859                      u4971 12BC                      u4795 11F0  
                    u5595 07BC                      u5667 0120                      u4892 0876  
                    u4876 085A                      u4980 12C4                      u4893 087B  
                    u4981 12C3                      u4965 12AD                      u5677 0134  
                    u4894 087C                      u4895 0881                      u5687 018F  
                    u4896 0882                      u5697 1F65                      u4995 12C7  
       ?_Lcd_Write_String 0073                      _main 00BC                      btemp 007E  
                    _volt 00CB                      start 0000        ??_Lcd_Write_String 0075  
            _sprintf$1032 00A5           __end_of_Lcd_Cmd 1D91             configOsc@frec 0070  
           ___fltol@sign1 0055           __end_of___fladd 1800                     ?_main 0070  
         __end_of___awdiv 126E           __end_of___flneg 1D2C           __end_of___awmod 1145  
         __end_of___flmul 0CA1           __end_of___flsub 1DD5           __end_of___fltol 12E6  
         __end_of___lldiv 1207           ___awdiv@divisor 0076           __end_of___llmod 2000  
         __end_of___lwdiv 1F0D           __end_of___lwmod 10EC           ___awdiv@counter 007A  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
         __end_of_dpowers 10A0                     _scale 0CA1           __end_of_isdigit 1D4B  
                   _setup 1E21                     pclath 000A           __end_of_spiInit 1D77  
         __end_of_spiRead 1D21                     status 0003                     wtemp0 007E  
         __end_of_sprintf 07ED          __end_of_Lcd_Init 1FAC          __end_of_Lcd_Port 1E87  
         __initialization 07ED              __end_of_main 0199                    ??_main 00BE  
        ___llmod@dividend 0074                    ?_scale 003A          ___awdiv@dividend 0078  
                  ?_setup 0070                    _ANSELH 0189                 ??_Lcd_Cmd 0071  
                  _TRISC2 043A                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013          __end_of___xxtofl 095C  
        __end_of__powers_ 1044                    ___flge 0802                    ___fleq 1F0D  
               ??___fladd 0056                    ___wmul 1DD5                 ??___awdiv 007A  
               ??___flneg 0074                 ??___awmod 0074                 ??___flmul 0028  
               ??___flsub 007E                 ??___fltol 0051                 ??___lldiv 0078  
               ??___llmod 0078                 ??___lwdiv 0079                 ??___lwmod 0074  
                  _fround 139D          ___awdiv@quotient 007C           ___awmod@divisor 0070  
         ___awmod@counter 0074                 ??_isdigit 0070          __end_of_spiWrite 1D09  
               ??_spiInit 0073                 ??_spiRead 0070                 ??_sprintf 00A0  
         Lcd_Set_Cursor@a 0075           Lcd_Set_Cursor@b 0074                ___flge@ff1 0070  
              ___flge@ff2 0074              ___xxtofl@arg 007A              ___xxtofl@exp 0079  
            ___xxtofl@val 0070                ___fleq@ff1 0070                ___fleq@ff2 0074  
 __end_of__initialization 07FC                ___flneg@f1 0070         __end_of_Lcd_Clear 1D39  
              ___fltol@f1 004D            __pcstackCOMMON 0070              __pidataBANK0 0003  
           __end_of_scale 1000             __end_of_setup 1E49            _Lcd_Set_Cursor 1D91  
              __div_to_l_ 0004                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
         __div_to_l_@exp1 0025           __div_to_l_@cntr 0024                   ??_scale 003E  
         __div_to_l_@quot 0020                   ??_setup 0076                __pbssBANK1 00C2  
           __div_to_l_@f1 0070             __div_to_l_@f2 0074         __end_of__Umul8_16 1E21  
              __pmaintext 00BC                   ?___flge 0070                   ?___fleq 0070  
                 ?___wmul 0070                   ?_fround 003A    __end_of_Lcd_Set_Cursor 1DB1  
               ?___xxtofl 0070                ??_Lcd_Init 0074                ??_Lcd_Port 0070  
                 _SSPSTAT 0094                __stringtab 1000            _Lcd_Write_Char 1D4B  
                 _Lcd_Cmd 1D77         __end_of__npowers_ 1078                _scale$1031 0048  
       __end_of_configOsc 11A1                 ?_spiWrite 0070                   ___fladd 15A8  
                 ___awdiv 1207                   ___flneg 1D21                   ___awmod 10EC  
                 ___flmul 095C                   ___flsub 1DB1                   ___fltol 126E  
                 ___lldiv 11A1                   ___llmod 1FAC                   ___lwdiv 1EC9  
                 ___lwmod 10B2           ?_Lcd_Set_Cursor 0074                   __ptext1 0199  
                 __ptext2 0CA1                   __ptext3 10EC                   __ptext4 1207  
                 __ptext5 1D39                   __ptext6 139D                   __ptext7 10B2  
                 __ptext8 1EC9                   __ptext9 095C               ?__div_to_l_ 0070  
                 _dpowers 1078                   _isdigit 1D39                ??___xxtofl 0074  
        ___awmod@dividend 0072                   _spiInit 1D61                   _spiRead 1D18  
                 _sprintf 0199                   clrloop0 1D11    __end_of_Lcd_Write_Char 1D61  
    end_of_initialization 07FC           ___lldiv@divisor 0070           ___lldiv@counter 007D  
              ??_spiWrite 0070                 Lcd_Port@a 0070            __tdiv_to_l_@f1 0070  
          __tdiv_to_l_@f2 0074             ??__tdiv_to_l_ 0078                 _PORTCbits 0007  
             ___fladd@grs 0061             ___xxtofl@sign 0078               spiWrite@dat 0070  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0073         Lcd_Write_String@i 0078  
             ___flmul@grs 002E                 _Lcd_Clear 1D2C            _spiReceiveWait 1D09  
          __end_of___flge 08A4            __end_of___fleq 1F5B            __end_of___wmul 1DFA  
        _Lcd_Write_String 1E87            __end_of_fround 15A8       start_initialization 07ED  
     __end_of__tdiv_to_l_ 139D           ___llmod@divisor 0070           ___llmod@counter 0079  
  __end_of_spiReceiveWait 1D10                ?_Lcd_Clear 0070                  ??___flge 0078  
                ??___fleq 0078                  ??___wmul 0074                 __Umul8_16 1DFA  
             __pdataBANK0 006F           Lcd_Write_Char@a 0072                  ??_fround 003E  
           sprintf@tmpval 00B2                 ___fladd@a 0052                 ___fladd@b 004E  
              fround@prec 004D                 ___flmul@a 0024                 ___flmul@b 0020  
               ___flsub@a 0062                 ___flsub@b 0066                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0                  ?_Lcd_Cmd 0070  
             sprintf@flag 00AA               sprintf@eexp 00B0               sprintf@fval 00B9  
             sprintf@prec 00B7          ___lwdiv@dividend 0077           ?_spiReceiveWait 0070  
        ??_Lcd_Set_Cursor 0075                  ?___fladd 004E                  ?___awdiv 0076  
                ?___flneg 0070                  ?___awmod 0070                  ?___flmul 0020  
                ?___flsub 0062                  ?___fltol 004D                  ?___lldiv 0070  
                ?___llmod 0070                 __npowers_ 1044                ?__Umul8_16 0070  
                ?___lwdiv 0075                  ?___lwmod 0070                 _configOsc 1145  
               __pstrings 1000               __tdiv_to_l_ 12E6              ??__div_to_l_ 0078  
                ?_isdigit 0070                  ?_spiInit 0070                  ?_spiRead 0070  
        ___lwdiv@quotient 0079                  ?_sprintf 006A      spiInit@sTransmitEdge 0072  
          ___wmul@product 0074                 clear_ram0 1D10        spiInit@sDataSample 0070  
                Lcd_Cmd@a 0073        __end_of__div_to_l_ 00BC               ??_Lcd_Clear 0074  
              ?_configOsc 0070               __stringbase 100F         ___wmul@multiplier 0070  
        ??_Lcd_Write_Char 0071                  _Lcd_Init 1F5B                  _Lcd_Port 1E49  
__end_of_Lcd_Write_String 1EC9               ??__Umul8_16 0072               _fround$1030 0045  
             _fround$1029 0049        __end_of__stringtab 1010               _isdigit$836 0070  
              sprintf@val 00AC                  ___xxtofl 08A4           ___lwdiv@divisor 0075  
         ___lwdiv@counter 007B                  __ptext10 1DFA                  __ptext11 12E6  
                __ptext20 1D21                  __ptext12 0004                  __ptext21 0802  
                __ptext13 08A4                  __ptext30 1E87                  __ptext22 1F0D  
                __ptext14 1DD5                  __ptext31 1D4B                  __ptext23 1D03  
                __ptext15 1FAC                  __ptext32 1D91                  __ptext24 1D18  
                __ptext16 11A1                  __ptext33 1D2C                  __ptext25 1D09  
                __ptext17 126E                  __ptext34 1D77                  __ptext26 1E21  
                __ptext18 1DB1                  __ptext35 1E49                  __ptext27 1D61  
                __ptext19 15A8                  __ptext28 1145                  __ptext29 1F5B  
                __powers_ 1010                  _spiWrite 1D03              spiInit@sType 0073  
             ??_configOsc 0072         spiInit@sClockIdle 0071                  isdigit@c 0071  
                scale@scl 004C                 sprintf@ap 00A9          __tdiv_to_l_@exp1 0025  
        __tdiv_to_l_@cntr 0024                 sprintf@sp 00B6          __tdiv_to_l_@quot 0020  
        ___lwmod@dividend 0072          ___lldiv@dividend 0074          ??_spiReceiveWait 0070  
               stringcode 100A                _OSCCONbits 008F               _slaveSelect 006F  
      Lcd_Set_Cursor@temp 0076              ?__tdiv_to_l_ 0070    __Umul8_16@multiplicand 0070  
                sprintf@c 00BD                  sprintf@f 006A          ___lldiv@quotient 0079  
         ___lwmod@divisor 0070           ___lwmod@counter 0074                  stringdir 100A  
                stringtab 1000             ___fladd@signs 005E              ___fladd@aexp 005F  
            ___fladd@bexp 0060      __Umul8_16@multiplier 0078         __Umul8_16@product 0074  
