

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Aug 02 23:31:26 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     000E                     	;# 
    84     000E                     	;# 
    85     000F                     	;# 
    86     0010                     	;# 
    87     0011                     	;# 
    88     0012                     	;# 
    89     0013                     	;# 
    90     0014                     	;# 
    91     0015                     	;# 
    92     0015                     	;# 
    93     0016                     	;# 
    94     0017                     	;# 
    95     0018                     	;# 
    96     0019                     	;# 
    97     001A                     	;# 
    98     001B                     	;# 
    99     001B                     	;# 
   100     001C                     	;# 
   101     001D                     	;# 
   102     001E                     	;# 
   103     001F                     	;# 
   104     0081                     	;# 
   105     0085                     	;# 
   106     0086                     	;# 
   107     0087                     	;# 
   108     0088                     	;# 
   109     0089                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     008F                     	;# 
   114     0090                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0093                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     0105                     	;# 
   133     0107                     	;# 
   134     0108                     	;# 
   135     0109                     	;# 
   136     010C                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     010E                     	;# 
   140     010F                     	;# 
   141     0185                     	;# 
   142     0187                     	;# 
   143     0188                     	;# 
   144     0189                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     0000                     	;# 
   148     0001                     	;# 
   149     0002                     	;# 
   150     0003                     	;# 
   151     0004                     	;# 
   152     0005                     	;# 
   153     0006                     	;# 
   154     0007                     	;# 
   155     0008                     	;# 
   156     0009                     	;# 
   157     000A                     	;# 
   158     000B                     	;# 
   159     000C                     	;# 
   160     000D                     	;# 
   161     000E                     	;# 
   162     000E                     	;# 
   163     000F                     	;# 
   164     0010                     	;# 
   165     0011                     	;# 
   166     0012                     	;# 
   167     0013                     	;# 
   168     0014                     	;# 
   169     0015                     	;# 
   170     0015                     	;# 
   171     0016                     	;# 
   172     0017                     	;# 
   173     0018                     	;# 
   174     0019                     	;# 
   175     001A                     	;# 
   176     001B                     	;# 
   177     001B                     	;# 
   178     001C                     	;# 
   179     001D                     	;# 
   180     001E                     	;# 
   181     001F                     	;# 
   182     0081                     	;# 
   183     0085                     	;# 
   184     0086                     	;# 
   185     0087                     	;# 
   186     0088                     	;# 
   187     0089                     	;# 
   188     008C                     	;# 
   189     008D                     	;# 
   190     008E                     	;# 
   191     008F                     	;# 
   192     0090                     	;# 
   193     0091                     	;# 
   194     0092                     	;# 
   195     0093                     	;# 
   196     0093                     	;# 
   197     0093                     	;# 
   198     0094                     	;# 
   199     0095                     	;# 
   200     0096                     	;# 
   201     0097                     	;# 
   202     0098                     	;# 
   203     0099                     	;# 
   204     009A                     	;# 
   205     009B                     	;# 
   206     009C                     	;# 
   207     009D                     	;# 
   208     009E                     	;# 
   209     009F                     	;# 
   210     0105                     	;# 
   211     0107                     	;# 
   212     0108                     	;# 
   213     0109                     	;# 
   214     010C                     	;# 
   215     010C                     	;# 
   216     010D                     	;# 
   217     010E                     	;# 
   218     010F                     	;# 
   219     0185                     	;# 
   220     0187                     	;# 
   221     0188                     	;# 
   222     0189                     	;# 
   223     018C                     	;# 
   224     018D                     	;# 
   225     0000                     	;# 
   226     0001                     	;# 
   227     0002                     	;# 
   228     0003                     	;# 
   229     0004                     	;# 
   230     0005                     	;# 
   231     0006                     	;# 
   232     0007                     	;# 
   233     0008                     	;# 
   234     0009                     	;# 
   235     000A                     	;# 
   236     000B                     	;# 
   237     000C                     	;# 
   238     000D                     	;# 
   239     000E                     	;# 
   240     000E                     	;# 
   241     000F                     	;# 
   242     0010                     	;# 
   243     0011                     	;# 
   244     0012                     	;# 
   245     0013                     	;# 
   246     0014                     	;# 
   247     0015                     	;# 
   248     0015                     	;# 
   249     0016                     	;# 
   250     0017                     	;# 
   251     0018                     	;# 
   252     0019                     	;# 
   253     001A                     	;# 
   254     001B                     	;# 
   255     001B                     	;# 
   256     001C                     	;# 
   257     001D                     	;# 
   258     001E                     	;# 
   259     001F                     	;# 
   260     0081                     	;# 
   261     0085                     	;# 
   262     0086                     	;# 
   263     0087                     	;# 
   264     0088                     	;# 
   265     0089                     	;# 
   266     008C                     	;# 
   267     008D                     	;# 
   268     008E                     	;# 
   269     008F                     	;# 
   270     0090                     	;# 
   271     0091                     	;# 
   272     0092                     	;# 
   273     0093                     	;# 
   274     0093                     	;# 
   275     0093                     	;# 
   276     0094                     	;# 
   277     0095                     	;# 
   278     0096                     	;# 
   279     0097                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009A                     	;# 
   283     009B                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     0105                     	;# 
   289     0107                     	;# 
   290     0108                     	;# 
   291     0109                     	;# 
   292     010C                     	;# 
   293     010C                     	;# 
   294     010D                     	;# 
   295     010E                     	;# 
   296     010F                     	;# 
   297     0185                     	;# 
   298     0187                     	;# 
   299     0188                     	;# 
   300     0189                     	;# 
   301     018C                     	;# 
   302     018D                     	;# 
   303     0000                     	;# 
   304     0001                     	;# 
   305     0002                     	;# 
   306     0003                     	;# 
   307     0004                     	;# 
   308     0005                     	;# 
   309     0006                     	;# 
   310     0007                     	;# 
   311     0008                     	;# 
   312     0009                     	;# 
   313     000A                     	;# 
   314     000B                     	;# 
   315     000C                     	;# 
   316     000D                     	;# 
   317     000E                     	;# 
   318     000E                     	;# 
   319     000F                     	;# 
   320     0010                     	;# 
   321     0011                     	;# 
   322     0012                     	;# 
   323     0013                     	;# 
   324     0014                     	;# 
   325     0015                     	;# 
   326     0015                     	;# 
   327     0016                     	;# 
   328     0017                     	;# 
   329     0018                     	;# 
   330     0019                     	;# 
   331     001A                     	;# 
   332     001B                     	;# 
   333     001B                     	;# 
   334     001C                     	;# 
   335     001D                     	;# 
   336     001E                     	;# 
   337     001F                     	;# 
   338     0081                     	;# 
   339     0085                     	;# 
   340     0086                     	;# 
   341     0087                     	;# 
   342     0088                     	;# 
   343     0089                     	;# 
   344     008C                     	;# 
   345     008D                     	;# 
   346     008E                     	;# 
   347     008F                     	;# 
   348     0090                     	;# 
   349     0091                     	;# 
   350     0092                     	;# 
   351     0093                     	;# 
   352     0093                     	;# 
   353     0093                     	;# 
   354     0094                     	;# 
   355     0095                     	;# 
   356     0096                     	;# 
   357     0097                     	;# 
   358     0098                     	;# 
   359     0099                     	;# 
   360     009A                     	;# 
   361     009B                     	;# 
   362     009C                     	;# 
   363     009D                     	;# 
   364     009E                     	;# 
   365     009F                     	;# 
   366     0105                     	;# 
   367     0107                     	;# 
   368     0108                     	;# 
   369     0109                     	;# 
   370     010C                     	;# 
   371     010C                     	;# 
   372     010D                     	;# 
   373     010E                     	;# 
   374     010F                     	;# 
   375     0185                     	;# 
   376     0187                     	;# 
   377     0188                     	;# 
   378     0189                     	;# 
   379     018C                     	;# 
   380     018D                     	;# 
   381     0000                     	;# 
   382     0001                     	;# 
   383     0002                     	;# 
   384     0003                     	;# 
   385     0004                     	;# 
   386     0005                     	;# 
   387     0006                     	;# 
   388     0007                     	;# 
   389     0008                     	;# 
   390     0009                     	;# 
   391     000A                     	;# 
   392     000B                     	;# 
   393     000C                     	;# 
   394     000D                     	;# 
   395     000E                     	;# 
   396     000E                     	;# 
   397     000F                     	;# 
   398     0010                     	;# 
   399     0011                     	;# 
   400     0012                     	;# 
   401     0013                     	;# 
   402     0014                     	;# 
   403     0015                     	;# 
   404     0015                     	;# 
   405     0016                     	;# 
   406     0017                     	;# 
   407     0018                     	;# 
   408     0019                     	;# 
   409     001A                     	;# 
   410     001B                     	;# 
   411     001B                     	;# 
   412     001C                     	;# 
   413     001D                     	;# 
   414     001E                     	;# 
   415     001F                     	;# 
   416     0081                     	;# 
   417     0085                     	;# 
   418     0086                     	;# 
   419     0087                     	;# 
   420     0088                     	;# 
   421     0089                     	;# 
   422     008C                     	;# 
   423     008D                     	;# 
   424     008E                     	;# 
   425     008F                     	;# 
   426     0090                     	;# 
   427     0091                     	;# 
   428     0092                     	;# 
   429     0093                     	;# 
   430     0093                     	;# 
   431     0093                     	;# 
   432     0094                     	;# 
   433     0095                     	;# 
   434     0096                     	;# 
   435     0097                     	;# 
   436     0098                     	;# 
   437     0099                     	;# 
   438     009A                     	;# 
   439     009B                     	;# 
   440     009C                     	;# 
   441     009D                     	;# 
   442     009E                     	;# 
   443     009F                     	;# 
   444     0105                     	;# 
   445     0107                     	;# 
   446     0108                     	;# 
   447     0109                     	;# 
   448     010C                     	;# 
   449     010C                     	;# 
   450     010D                     	;# 
   451     010E                     	;# 
   452     010F                     	;# 
   453     0185                     	;# 
   454     0187                     	;# 
   455     0188                     	;# 
   456     0189                     	;# 
   457     018C                     	;# 
   458     018D                     	;# 
   459                           
   460                           	psect	strings
   461     0003                     __pstrings:
   462     0003                     stringtab:
   463     0003                     __stringtab:
   464                           
   465                           ;	String table - string pointers are 1 byte each
   466     0003  1BFF               	btfsc	btemp+1,7
   467     0004  280D               	ljmp	stringcode
   468     0005  1383               	bcf	3,7
   469     0006  187F               	btfsc	btemp+1,0
   470     0007  1783               	bsf	3,7
   471     0008  0800               	movf	0,w
   472     0009  0A84               	incf	4,f
   473     000A  1903               	skipnz
   474     000B  0AFF               	incf	btemp+1,f
   475     000C  0008               	return
   476     000D                     stringcode:
   477     000D                     stringdir:
   478     000D  3000               	movlw	high stringdir
   479     000E  008A               	movwf	10
   480     000F  0804               	movf	4,w
   481     0010  0A84               	incf	4,f
   482     0011  0782               	addwf	2,f
   483     0012                     __stringbase:
   484     0012  3400               	retlw	0
   485     0013                     __end_of__stringtab:
   486     0013                     _dpowers:
   487     0013  3401               	retlw	1
   488     0014  3400               	retlw	0
   489     0015  340A               	retlw	10
   490     0016  3400               	retlw	0
   491     0017  3464               	retlw	100
   492     0018  3400               	retlw	0
   493     0019  34E8               	retlw	232
   494     001A  3403               	retlw	3
   495     001B  3410               	retlw	16
   496     001C  3427               	retlw	39
   497     001D                     __end_of_dpowers:
   498     0013                     _SSPBUF	set	19
   499     0014                     _SSPCON	set	20
   500     000B                     _INTCONbits	set	11
   501     0008                     _PORTD	set	8
   502     0007                     _PORTC	set	7
   503     0006                     _PORTB	set	6
   504     0007                     _PORTCbits	set	7
   505     0039                     _RC1	set	57
   506     0038                     _RC0	set	56
   507     0047                     _RD7	set	71
   508     0046                     _RD6	set	70
   509     0045                     _RD5	set	69
   510     0044                     _RD4	set	68
   511     0043                     _RD3	set	67
   512     0042                     _RD2	set	66
   513     0041                     _RD1	set	65
   514     0040                     _RD0	set	64
   515     0094                     _SSPSTATbits	set	148
   516     0094                     _SSPSTAT	set	148
   517     0088                     _TRISD	set	136
   518     0086                     _TRISB	set	134
   519     0087                     _TRISC	set	135
   520     008F                     _OSCCONbits	set	143
   521     043B                     _TRISC3	set	1083
   522     043D                     _TRISC5	set	1085
   523     043E                     _TRISC6	set	1086
   524     043A                     _TRISC2	set	1082
   525     0189                     _ANSELH	set	393
   526     001D                     STR_2:
   527     001D  3425               	retlw	37	;'%'
   528     001E  342E               	retlw	46	;'.'
   529     001F  3432               	retlw	50	;'2'
   530     0020  3464               	retlw	100	;'d'
   531     0021  3420               	retlw	32	;' '
   532     0022  3420               	retlw	32	;' '
   533     0023  3420               	retlw	32	;' '
   534     0024  3420               	retlw	32	;' '
   535     0025  3425               	retlw	37	;'%'
   536     0026  342E               	retlw	46	;'.'
   537     0027  3432               	retlw	50	;'2'
   538     0028  3464               	retlw	100	;'d'
   539     0029  3420               	retlw	32	;' '
   540     002A  3420               	retlw	32	;' '
   541     002B  3420               	retlw	32	;' '
   542     002C  3420               	retlw	32	;' '
   543     002D  3425               	retlw	37	;'%'
   544     002E  342E               	retlw	46	;'.'
   545     002F  3432               	retlw	50	;'2'
   546     0030  3464               	retlw	100	;'d'
   547     0031  3420               	retlw	32	;' '
   548     0032  3400               	retlw	0
   549     0033                     STR_1:
   550     0033  3453               	retlw	83	;'S'
   551     0034  3431               	retlw	49	;'1'
   552     0035  343A               	retlw	58	;':'
   553     0036  3420               	retlw	32	;' '
   554     0037  3420               	retlw	32	;' '
   555     0038  3420               	retlw	32	;' '
   556     0039  3453               	retlw	83	;'S'
   557     003A  3432               	retlw	50	;'2'
   558     003B  343A               	retlw	58	;':'
   559     003C  3420               	retlw	32	;' '
   560     003D  3420               	retlw	32	;' '
   561     003E  3420               	retlw	32	;' '
   562     003F  3453               	retlw	83	;'S'
   563     0040  3433               	retlw	51	;'3'
   564     0041  343A               	retlw	58	;':'
   565     0042  3400               	retlw	0
   566                           
   567                           	psect	cinit
   568     07F2                     start_initialization:	
   569                           ; #config settings
   570                           
   571     07F2                     __initialization:
   572                           
   573                           ; Clear objects allocated to COMMON
   574     07F2  01FC               	clrf	__pbssCOMMON& (0+127)
   575                           
   576                           ; Clear objects allocated to BANK0
   577     07F3  1383               	bcf	3,7	;select IRP bank0
   578     07F4  3035               	movlw	low __pbssBANK0
   579     07F5  0084               	movwf	4
   580     07F6  3049               	movlw	low (__pbssBANK0+20)
   581     07F7  120A  118A  234A  120A  118A  	fcall	clear_ram0
   582     07FC                     end_of_initialization:	
   583                           ;End of C runtime variable initialization code
   584                           
   585     07FC                     __end_of__initialization:
   586     07FC  0183               	clrf	3
   587     07FD  120A  118A  2DCB   	ljmp	_main	;jump to C main() function
   588                           
   589                           	psect	bssCOMMON
   590     007C                     __pbssCOMMON:
   591     007C                     _a:
   592     007C                     	ds	1
   593                           
   594                           	psect	bssBANK0
   595     0035                     __pbssBANK0:
   596     0035                     _slaveSelect:
   597     0035                     	ds	1
   598     0036                     _s2:
   599     0036                     	ds	1
   600     0037                     _contador:
   601     0037                     	ds	1
   602     0038                     _s1:
   603     0038                     	ds	1
   604     0039                     _volt:
   605     0039                     	ds	16
   606                           
   607                           	psect	clrtext
   608     034A                     clear_ram0:	
   609                           ;	Called with FSR containing the base address, and
   610                           ;	W with the last address+1
   611                           
   612     034A  0064               	clrwdt	;clear the watchdog before getting into this loop
   613     034B                     clrloop0:
   614     034B  0180               	clrf	0	;clear RAM location pointed to by FSR
   615     034C  0A84               	incf	4,f	;increment pointer
   616     034D  0604               	xorwf	4,w	;XOR with final address
   617     034E  1903               	btfsc	3,2	;have we reached the end yet?
   618     034F  3400               	retlw	0	;all done for this memory range, return
   619     0350  0604               	xorwf	4,w	;XOR again to restore value
   620     0351  2B4B               	goto	clrloop0	;do the next byte
   621                           
   622                           	psect	cstackCOMMON
   623     0070                     __pcstackCOMMON:
   624     0070                     ?_isdigit:
   625     0070                     ?_setup:	
   626                           ; 1 bit 
   627                           
   628     0070                     ?_spiWrite:	
   629                           ; 1 bytes @ 0x0
   630                           
   631     0070                     ??_spiWrite:	
   632                           ; 1 bytes @ 0x0
   633                           
   634     0070                     ?_spiRead:	
   635                           ; 1 bytes @ 0x0
   636                           
   637     0070                     ??_spiRead:	
   638                           ; 1 bytes @ 0x0
   639                           
   640     0070                     ?_spiInit:	
   641                           ; 1 bytes @ 0x0
   642                           
   643     0070                     ??_isdigit:	
   644                           ; 1 bytes @ 0x0
   645                           
   646     0070                     ?_configOsc:	
   647                           ; 1 bytes @ 0x0
   648                           
   649     0070                     ?_Lcd_Port:	
   650                           ; 1 bytes @ 0x0
   651                           
   652     0070                     ??_Lcd_Port:	
   653                           ; 1 bytes @ 0x0
   654                           
   655     0070                     ?_Lcd_Cmd:	
   656                           ; 1 bytes @ 0x0
   657                           
   658     0070                     ?_Lcd_Clear:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     0070                     ?_Lcd_Init:	
   662                           ; 1 bytes @ 0x0
   663                           
   664     0070                     ?_Lcd_Write_Char:	
   665                           ; 1 bytes @ 0x0
   666                           
   667     0070                     ?_main:	
   668                           ; 1 bytes @ 0x0
   669                           
   670     0070                     ?_spiReceiveWait:	
   671                           ; 1 bytes @ 0x0
   672                           
   673     0070                     ??_spiReceiveWait:	
   674                           ; 1 bytes @ 0x0
   675                           
   676     0070                     ?___bmul:	
   677                           ; 1 bytes @ 0x0
   678                           
   679     0070                     ?___lwdiv:	
   680                           ; 1 bytes @ 0x0
   681                           
   682     0070                     Lcd_Port@a:	
   683                           ; 2 bytes @ 0x0
   684                           
   685     0070                     spiInit@sDataSample:	
   686                           ; 1 bytes @ 0x0
   687                           
   688     0070                     spiWrite@dat:	
   689                           ; 1 bytes @ 0x0
   690                           
   691     0070                     ___bmul@multiplicand:	
   692                           ; 1 bytes @ 0x0
   693                           
   694     0070                     _isdigit$820:	
   695                           ; 1 bytes @ 0x0
   696                           
   697     0070                     configOsc@frec:	
   698                           ; 1 bytes @ 0x0
   699                           
   700     0070                     ___lwdiv@divisor:	
   701                           ; 2 bytes @ 0x0
   702                           
   703                           
   704                           ; 2 bytes @ 0x0
   705     0070                     	ds	1
   706     0071                     ??_Lcd_Cmd:
   707     0071                     ??_Lcd_Write_Char:	
   708                           ; 1 bytes @ 0x1
   709                           
   710     0071                     ??___bmul:	
   711                           ; 1 bytes @ 0x1
   712                           
   713     0071                     spiInit@sClockIdle:	
   714                           ; 1 bytes @ 0x1
   715                           
   716     0071                     ___bmul@product:	
   717                           ; 1 bytes @ 0x1
   718                           
   719     0071                     isdigit@c:	
   720                           ; 1 bytes @ 0x1
   721                           
   722                           
   723                           ; 1 bytes @ 0x1
   724     0071                     	ds	1
   725     0072                     ??_configOsc:
   726     0072                     Lcd_Write_Char@a:	
   727                           ; 1 bytes @ 0x2
   728                           
   729     0072                     spiInit@sTransmitEdge:	
   730                           ; 1 bytes @ 0x2
   731                           
   732     0072                     ___bmul@multiplier:	
   733                           ; 1 bytes @ 0x2
   734                           
   735     0072                     ___lwdiv@dividend:	
   736                           ; 1 bytes @ 0x2
   737                           
   738                           
   739                           ; 2 bytes @ 0x2
   740     0072                     	ds	1
   741     0073                     ??_spiInit:
   742     0073                     ?_Lcd_Write_String:	
   743                           ; 1 bytes @ 0x3
   744                           
   745     0073                     Lcd_Cmd@a:	
   746                           ; 1 bytes @ 0x3
   747                           
   748     0073                     spiInit@sType:	
   749                           ; 1 bytes @ 0x3
   750                           
   751     0073                     Lcd_Write_String@a:	
   752                           ; 1 bytes @ 0x3
   753                           
   754                           
   755                           ; 2 bytes @ 0x3
   756     0073                     	ds	1
   757     0074                     ??_Lcd_Clear:
   758     0074                     ?_Lcd_Set_Cursor:	
   759                           ; 1 bytes @ 0x4
   760                           
   761     0074                     ??_Lcd_Init:	
   762                           ; 1 bytes @ 0x4
   763                           
   764     0074                     ??___lwdiv:	
   765                           ; 1 bytes @ 0x4
   766                           
   767     0074                     Lcd_Set_Cursor@b:	
   768                           ; 1 bytes @ 0x4
   769                           
   770     0074                     ___lwdiv@quotient:	
   771                           ; 1 bytes @ 0x4
   772                           
   773                           
   774                           ; 2 bytes @ 0x4
   775     0074                     	ds	1
   776     0075                     ??_Lcd_Set_Cursor:
   777     0075                     ??_Lcd_Write_String:	
   778                           ; 1 bytes @ 0x5
   779                           
   780     0075                     Lcd_Set_Cursor@a:	
   781                           ; 1 bytes @ 0x5
   782                           
   783                           
   784                           ; 1 bytes @ 0x5
   785     0075                     	ds	1
   786     0076                     ??_setup:
   787     0076                     Lcd_Set_Cursor@temp:	
   788                           ; 1 bytes @ 0x6
   789                           
   790     0076                     ___lwdiv@counter:	
   791                           ; 1 bytes @ 0x6
   792                           
   793                           
   794                           ; 1 bytes @ 0x6
   795     0076                     	ds	1
   796     0077                     ?___lwmod:
   797     0077                     ___lwmod@divisor:	
   798                           ; 2 bytes @ 0x7
   799                           
   800                           
   801                           ; 2 bytes @ 0x7
   802     0077                     	ds	1
   803     0078                     Lcd_Write_String@i:
   804                           
   805                           ; 2 bytes @ 0x8
   806     0078                     	ds	1
   807     0079                     ___lwmod@dividend:
   808                           
   809                           ; 2 bytes @ 0x9
   810     0079                     	ds	2
   811     007B                     ??___lwmod:
   812     007B                     ___lwmod@counter:	
   813                           ; 1 bytes @ 0xB
   814                           
   815                           
   816                           ; 1 bytes @ 0xB
   817     007B                     	ds	1
   818                           
   819                           	psect	cstackBANK0
   820     0020                     __pcstackBANK0:
   821     0020                     ?_sprintf:
   822     0020                     sprintf@f:	
   823                           ; 2 bytes @ 0x0
   824                           
   825                           
   826                           ; 1 bytes @ 0x0
   827     0020                     	ds	7
   828     0027                     ??_sprintf:
   829                           
   830                           ; 1 bytes @ 0x7
   831     0027                     	ds	3
   832     002A                     sprintf@ap:
   833                           
   834                           ; 1 bytes @ 0xA
   835     002A                     	ds	1
   836     002B                     sprintf@flag:
   837                           
   838                           ; 1 bytes @ 0xB
   839     002B                     	ds	1
   840     002C                     sprintf@sp:
   841                           
   842                           ; 1 bytes @ 0xC
   843     002C                     	ds	1
   844     002D                     sprintf@val:
   845                           
   846                           ; 2 bytes @ 0xD
   847     002D                     	ds	2
   848     002F                     sprintf@prec:
   849                           
   850                           ; 1 bytes @ 0xF
   851     002F                     	ds	1
   852     0030                     sprintf@c:
   853                           
   854                           ; 1 bytes @ 0x10
   855     0030                     	ds	1
   856     0031                     ??_main:
   857                           
   858                           ; 1 bytes @ 0x11
   859     0031                     	ds	4
   860                           
   861                           	psect	maintext
   862     05CB                     __pmaintext:	
   863 ;;
   864 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   865 ;;
   866 ;; *************** function _main *****************
   867 ;; Defined at:
   868 ;;		line 70 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : B00/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   882 ;;      Params:         0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0
   884 ;;      Temps:          0       4       0       0       0
   885 ;;      Totals:         0       4       0       0       0
   886 ;;Total ram usage:        4 bytes
   887 ;; Hardware stack levels required when called: 4
   888 ;; This function calls:
   889 ;;		_Lcd_Clear
   890 ;;		_Lcd_Set_Cursor
   891 ;;		_Lcd_Write_String
   892 ;;		_setup
   893 ;;		_spiRead
   894 ;;		_spiWrite
   895 ;;		_sprintf
   896 ;; This function is called by:
   897 ;;		Startup code after reset
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901     05CB                     _main:	
   902                           ;psect for function _main
   903                           
   904     05CB                     l1520:	
   905                           ;incstack = 0
   906                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   907                           
   908                           
   909                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 71:     setup(
      +                          );
   910     05CB  120A  118A  23F5  120A  118A  	fcall	_setup
   911     05D0                     l146:	
   912                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 75:     while(
      +                          1){
   913                           
   914                           
   915                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 76:         Lc
      +                          d_Clear();
   916     05D0  120A  118A  235B  120A  118A  	fcall	_Lcd_Clear
   917                           
   918                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 77:         Lc
      +                          d_Set_Cursor(1,1);
   919     05D5  01F4               	clrf	Lcd_Set_Cursor@b
   920     05D6  0AF4               	incf	Lcd_Set_Cursor@b,f
   921     05D7  3001               	movlw	1
   922     05D8  120A  118A  23D5  120A  118A  	fcall	_Lcd_Set_Cursor
   923     05DD                     l1522:
   924                           
   925                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 78:         Lc
      +                          d_Write_String("S1:   S2:   S3:");
   926     05DD  3021               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   927     05DE  00F3               	movwf	Lcd_Write_String@a
   928     05DF  3080               	movlw	128
   929     05E0  00F4               	movwf	Lcd_Write_String@a+1
   930     05E1  120A  118A  2498  120A  118A  	fcall	_Lcd_Write_String
   931     05E6                     l1524:
   932                           
   933                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 79:         Lc
      +                          d_Set_Cursor(2,1);
   934     05E6  01F4               	clrf	Lcd_Set_Cursor@b
   935     05E7  0AF4               	incf	Lcd_Set_Cursor@b,f
   936     05E8  3002               	movlw	2
   937     05E9  120A  118A  23D5  120A  118A  	fcall	_Lcd_Set_Cursor
   938                           
   939                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 80:         sp
      +                          rintf(volt, "%.2d    %.2d    %.2d ", s1, contador, s2);
   940     05EE  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   941     05EF  1283               	bcf	3,5	;RP0=0, select bank0
   942     05F0  1303               	bcf	3,6	;RP1=0, select bank0
   943     05F1  00A0               	movwf	sprintf@f
   944     05F2  0838               	movf	_s1,w
   945     05F3  00B1               	movwf	??_main
   946     05F4  01B2               	clrf	??_main+1
   947     05F5  0831               	movf	??_main,w
   948     05F6  00A1               	movwf	?_sprintf+1
   949     05F7  0832               	movf	??_main+1,w
   950     05F8  00A2               	movwf	?_sprintf+2
   951     05F9  0837               	movf	_contador,w
   952     05FA  00B3               	movwf	??_main+2
   953     05FB  01B4               	clrf	??_main+3
   954     05FC  0833               	movf	??_main+2,w
   955     05FD  00A3               	movwf	?_sprintf+3
   956     05FE  0834               	movf	??_main+3,w
   957     05FF  00A4               	movwf	?_sprintf+4
   958     0600  3000               	movlw	0
   959     0601  00A5               	movwf	?_sprintf+5
   960     0602  00A6               	movwf	?_sprintf+6
   961     0603  3039               	movlw	(low (_volt| 0))& (0+255)
   962     0604  120A  118A  26A1  120A  118A  	fcall	_sprintf
   963                           
   964                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 81:         Lc
      +                          d_Write_String(volt);
   965     0609  3039               	movlw	(low (_volt| 0))& (0+255)
   966     060A  00F3               	movwf	Lcd_Write_String@a
   967     060B  3000               	movlw	0
   968     060C  00F4               	movwf	Lcd_Write_String@a+1
   969     060D  120A  118A  2498  120A  118A  	fcall	_Lcd_Write_String
   970     0612                     l1526:
   971                           
   972                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 82:         _d
      +                          elay((unsigned long)((50)*(8000000/4000.0)));
   973     0612  3082               	movlw	130
   974     0613  1283               	bcf	3,5	;RP0=0, select bank0
   975     0614  1303               	bcf	3,6	;RP1=0, select bank0
   976     0615  00B2               	movwf	??_main+1
   977     0616  30DD               	movlw	221
   978     0617  00B1               	movwf	??_main
   979     0618                     u1097:
   980     0618  0BB1               	decfsz	??_main,f
   981     0619  2E18               	goto	u1097
   982     061A  0BB2               	decfsz	??_main+1,f
   983     061B  2E18               	goto	u1097
   984     061C                     l1528:
   985                           
   986                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 97:         if
      +                           (slaveSelect == 1){
   987     061C  1283               	bcf	3,5	;RP0=0, select bank0
   988     061D  1303               	bcf	3,6	;RP1=0, select bank0
   989     061E  0335               	decf	_slaveSelect,w
   990     061F  1D03               	btfss	3,2
   991     0620  2E22               	goto	u1071
   992     0621  2E23               	goto	u1070
   993     0622                     u1071:
   994     0622  2E5D               	goto	l1542
   995     0623                     u1070:
   996     0623                     l1530:
   997                           
   998                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 98:           
      +                            PORTCbits.RC2 = 0;
   999     0623  1107               	bcf	7,2	;volatile
  1000     0624                     l1532:
  1001                           
  1002                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 99:           
      +                            _delay((unsigned long)((1)*(8000000/4000.0)));
  1003     0624  3003               	movlw	3
  1004     0625  1283               	bcf	3,5	;RP0=0, select bank0
  1005     0626  1303               	bcf	3,6	;RP1=0, select bank0
  1006     0627  00B2               	movwf	??_main+1
  1007     0628  3097               	movlw	151
  1008     0629  00B1               	movwf	??_main
  1009     062A                     u1107:
  1010     062A  0BB1               	decfsz	??_main,f
  1011     062B  2E2A               	goto	u1107
  1012     062C  0BB2               	decfsz	??_main+1,f
  1013     062D  2E2A               	goto	u1107
  1014     062E                     l1534:
  1015                           
  1016                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 101:          
      +                             spiWrite(slaveSelect);
  1017     062E  1283               	bcf	3,5	;RP0=0, select bank0
  1018     062F  1303               	bcf	3,6	;RP1=0, select bank0
  1019     0630  0835               	movf	_slaveSelect,w
  1020     0631  120A  118A  233D  120A  118A  	fcall	_spiWrite
  1021     0636                     l1536:
  1022                           
  1023                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 102:          
      +                             s1 = spiRead();
  1024     0636  120A  118A  2352  120A  118A  	fcall	_spiRead
  1025     063B  1283               	bcf	3,5	;RP0=0, select bank0
  1026     063C  1303               	bcf	3,6	;RP1=0, select bank0
  1027     063D  00B8               	movwf	_s1
  1028                           
  1029                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 104:          
      +                             _delay((unsigned long)((1)*(8000000/4000.0)));
  1030     063E  3003               	movlw	3
  1031     063F  1283               	bcf	3,5	;RP0=0, select bank0
  1032     0640  1303               	bcf	3,6	;RP1=0, select bank0
  1033     0641  00B2               	movwf	??_main+1
  1034     0642  3097               	movlw	151
  1035     0643  00B1               	movwf	??_main
  1036     0644                     u1117:
  1037     0644  0BB1               	decfsz	??_main,f
  1038     0645  2E44               	goto	u1117
  1039     0646  0BB2               	decfsz	??_main+1,f
  1040     0647  2E44               	goto	u1117
  1041     0648                     l1538:
  1042                           
  1043                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 105:          
      +                             PORTCbits.RC2 = 1;
  1044     0648  1283               	bcf	3,5	;RP0=0, select bank0
  1045     0649  1303               	bcf	3,6	;RP1=0, select bank0
  1046     064A  1507               	bsf	7,2	;volatile
  1047                           
  1048                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 107:          
      +                             _delay((unsigned long)((100)*(8000000/4000.0)));
  1049     064B  3002               	movlw	2
  1050     064C  1283               	bcf	3,5	;RP0=0, select bank0
  1051     064D  1303               	bcf	3,6	;RP1=0, select bank0
  1052     064E  00B3               	movwf	??_main+2
  1053     064F  3004               	movlw	4
  1054     0650  00B2               	movwf	??_main+1
  1055     0651  30B9               	movlw	185
  1056     0652  00B1               	movwf	??_main
  1057     0653                     u1127:
  1058     0653  0BB1               	decfsz	??_main,f
  1059     0654  2E53               	goto	u1127
  1060     0655  0BB2               	decfsz	??_main+1,f
  1061     0656  2E53               	goto	u1127
  1062     0657  0BB3               	decfsz	??_main+2,f
  1063     0658  2E53               	goto	u1127
  1064     0659  2E5A               	nop2
  1065     065A                     l1540:
  1066                           
  1067                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 108:          
      +                             slaveSelect = 0;
  1068     065A  1283               	bcf	3,5	;RP0=0, select bank0
  1069     065B  1303               	bcf	3,6	;RP1=0, select bank0
  1070     065C  01B5               	clrf	_slaveSelect
  1071     065D                     l1542:
  1072                           
  1073                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 110:         i
      +                          f (slaveSelect == 0){
  1074     065D  0835               	movf	_slaveSelect,w
  1075     065E  1D03               	btfss	3,2
  1076     065F  2E61               	goto	u1081
  1077     0660  2E62               	goto	u1080
  1078     0661                     u1081:
  1079     0661  2DD0               	goto	l146
  1080     0662                     u1080:
  1081     0662                     l1544:
  1082                           
  1083                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 111:          
      +                             PORTCbits.RC2 = 0;
  1084     0662  1107               	bcf	7,2	;volatile
  1085     0663                     l1546:
  1086                           
  1087                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 112:          
      +                             _delay((unsigned long)((1)*(8000000/4000.0)));
  1088     0663  3003               	movlw	3
  1089     0664  1283               	bcf	3,5	;RP0=0, select bank0
  1090     0665  1303               	bcf	3,6	;RP1=0, select bank0
  1091     0666  00B2               	movwf	??_main+1
  1092     0667  3097               	movlw	151
  1093     0668  00B1               	movwf	??_main
  1094     0669                     u1137:
  1095     0669  0BB1               	decfsz	??_main,f
  1096     066A  2E69               	goto	u1137
  1097     066B  0BB2               	decfsz	??_main+1,f
  1098     066C  2E69               	goto	u1137
  1099     066D                     l1548:
  1100                           
  1101                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 114:          
      +                             spiWrite(slaveSelect);
  1102     066D  1283               	bcf	3,5	;RP0=0, select bank0
  1103     066E  1303               	bcf	3,6	;RP1=0, select bank0
  1104     066F  0835               	movf	_slaveSelect,w
  1105     0670  120A  118A  233D  120A  118A  	fcall	_spiWrite
  1106     0675                     l1550:
  1107                           
  1108                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 115:          
      +                             contador = spiRead();
  1109     0675  120A  118A  2352  120A  118A  	fcall	_spiRead
  1110     067A  1283               	bcf	3,5	;RP0=0, select bank0
  1111     067B  1303               	bcf	3,6	;RP1=0, select bank0
  1112     067C  00B7               	movwf	_contador
  1113                           
  1114                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 117:          
      +                             _delay((unsigned long)((1)*(8000000/4000.0)));
  1115     067D  3003               	movlw	3
  1116     067E  1283               	bcf	3,5	;RP0=0, select bank0
  1117     067F  1303               	bcf	3,6	;RP1=0, select bank0
  1118     0680  00B2               	movwf	??_main+1
  1119     0681  3097               	movlw	151
  1120     0682  00B1               	movwf	??_main
  1121     0683                     u1147:
  1122     0683  0BB1               	decfsz	??_main,f
  1123     0684  2E83               	goto	u1147
  1124     0685  0BB2               	decfsz	??_main+1,f
  1125     0686  2E83               	goto	u1147
  1126     0687                     l1552:
  1127                           
  1128                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 118:          
      +                             PORTCbits.RC2 = 1;
  1129     0687  1283               	bcf	3,5	;RP0=0, select bank0
  1130     0688  1303               	bcf	3,6	;RP1=0, select bank0
  1131     0689  1507               	bsf	7,2	;volatile
  1132                           
  1133                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 120:          
      +                             _delay((unsigned long)((100)*(8000000/4000.0)));
  1134     068A  3002               	movlw	2
  1135     068B  1283               	bcf	3,5	;RP0=0, select bank0
  1136     068C  1303               	bcf	3,6	;RP1=0, select bank0
  1137     068D  00B3               	movwf	??_main+2
  1138     068E  3004               	movlw	4
  1139     068F  00B2               	movwf	??_main+1
  1140     0690  30B9               	movlw	185
  1141     0691  00B1               	movwf	??_main
  1142     0692                     u1157:
  1143     0692  0BB1               	decfsz	??_main,f
  1144     0693  2E92               	goto	u1157
  1145     0694  0BB2               	decfsz	??_main+1,f
  1146     0695  2E92               	goto	u1157
  1147     0696  0BB3               	decfsz	??_main+2,f
  1148     0697  2E92               	goto	u1157
  1149     0698  2E99               	nop2
  1150     0699                     l1554:
  1151                           
  1152                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 121:          
      +                             slaveSelect = 1;
  1153     0699  1283               	bcf	3,5	;RP0=0, select bank0
  1154     069A  1303               	bcf	3,6	;RP1=0, select bank0
  1155     069B  01B5               	clrf	_slaveSelect
  1156     069C  0AB5               	incf	_slaveSelect,f
  1157     069D  2DD0               	goto	l146
  1158     069E  120A  118A  2800   	ljmp	start
  1159     06A1                     __end_of_main:
  1160                           
  1161                           	psect	text1
  1162     06A1                     __ptext1:	
  1163 ;; *************** function _sprintf *****************
  1164 ;; Defined at:
  1165 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  sp              1    wreg     PTR unsigned char 
  1168 ;;		 -> volt(16), 
  1169 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1170 ;;		 -> STR_2(22), 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  sp              1   12[BANK0 ] PTR unsigned char 
  1173 ;;		 -> volt(16), 
  1174 ;;  tmpval          4    0        struct .
  1175 ;;  val             2   13[BANK0 ] unsigned int 
  1176 ;;  cp              2    0        PTR const unsigned char 
  1177 ;;  len             2    0        unsigned int 
  1178 ;;  c               1   16[BANK0 ] unsigned char 
  1179 ;;  prec            1   15[BANK0 ] char 
  1180 ;;  flag            1   11[BANK0 ] unsigned char 
  1181 ;;  ap              1   10[BANK0 ] PTR void [1]
  1182 ;;		 -> ?_sprintf(2), 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  2    0[BANK0 ] int 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1192 ;;      Params:         0       7       0       0       0
  1193 ;;      Locals:         0       7       0       0       0
  1194 ;;      Temps:          0       3       0       0       0
  1195 ;;      Totals:         0      17       0       0       0
  1196 ;;Total ram usage:       17 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; Hardware stack levels required when called: 1
  1199 ;; This function calls:
  1200 ;;		___bmul
  1201 ;;		___lwdiv
  1202 ;;		___lwmod
  1203 ;;		_isdigit
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209     06A1                     _sprintf:	
  1210                           ;psect for function _sprintf
  1211                           
  1212                           
  1213                           ;incstack = 0
  1214                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1215                           ;sprintf@sp stored from wreg
  1216     06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1217     06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1218     06A3  00AC               	movwf	sprintf@sp
  1219     06A4                     l1414:
  1220                           
  1221                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1222     06A4  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1223     06A5  00AA               	movwf	sprintf@ap
  1224                           
  1225                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1226     06A6  2FDD               	goto	l1496
  1227     06A7                     l1416:
  1228                           
  1229                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1230     06A7  3025               	movlw	37
  1231     06A8  0630               	xorwf	sprintf@c,w
  1232     06A9  1903               	btfsc	3,2
  1233     06AA  2EAC               	goto	u941
  1234     06AB  2EAD               	goto	u940
  1235     06AC                     u941:
  1236     06AC  2EB7               	goto	l1422
  1237     06AD                     u940:
  1238     06AD                     l1418:
  1239                           
  1240                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1241     06AD  082C               	movf	sprintf@sp,w
  1242     06AE  0084               	movwf	4
  1243     06AF  0830               	movf	sprintf@c,w
  1244     06B0  1383               	bcf	3,7	;select IRP bank0
  1245     06B1  0080               	movwf	0
  1246     06B2                     l1420:
  1247     06B2  3001               	movlw	1
  1248     06B3  00FF               	movwf	btemp+1
  1249     06B4  087F               	movf	btemp+1,w
  1250     06B5  07AC               	addwf	sprintf@sp,f
  1251                           
  1252                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1253     06B6  2FDD               	goto	l1496
  1254     06B7                     l1422:
  1255                           
  1256                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1257     06B7  01AB               	clrf	sprintf@flag
  1258     06B8                     l1424:
  1259                           
  1260                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1261     06B8  0820               	movf	sprintf@f,w
  1262     06B9  0084               	movwf	4
  1263     06BA  120A  118A  200D  120A  118A  	fcall	stringdir
  1264     06BF  3A2E               	xorlw	46
  1265     06C0  1D03               	skipz
  1266     06C1  2EC3               	goto	u951
  1267     06C2  2EC4               	goto	u950
  1268     06C3                     u951:
  1269     06C3  2EF7               	goto	l1438
  1270     06C4                     u950:
  1271     06C4                     l1426:
  1272                           
  1273                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 630:    f++;
  1274     06C4  3001               	movlw	1
  1275     06C5  00FF               	movwf	btemp+1
  1276     06C6  087F               	movf	btemp+1,w
  1277     06C7  07A0               	addwf	sprintf@f,f
  1278     06C8                     l1428:
  1279                           
  1280                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1281     06C8  01AF               	clrf	sprintf@prec
  1282                           
  1283                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1284     06C9  2EE6               	goto	l1436
  1285     06CA                     l1430:
  1286                           
  1287                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1288     06CA  1283               	bcf	3,5	;RP0=0, select bank0
  1289     06CB  1303               	bcf	3,6	;RP1=0, select bank0
  1290     06CC  082F               	movf	sprintf@prec,w
  1291     06CD  00F0               	movwf	___bmul@multiplicand
  1292     06CE  300A               	movlw	10
  1293     06CF  120A  118A  237A  120A  118A  	fcall	___bmul
  1294     06D4  1283               	bcf	3,5	;RP0=0, select bank0
  1295     06D5  1303               	bcf	3,6	;RP1=0, select bank0
  1296     06D6  00AF               	movwf	sprintf@prec
  1297     06D7                     l1432:
  1298                           
  1299                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1300     06D7  0820               	movf	sprintf@f,w
  1301     06D8  0084               	movwf	4
  1302     06D9  120A  118A  200D  120A  118A  	fcall	stringdir
  1303     06DE  3ED0               	addlw	-48
  1304     06DF  00FF               	movwf	btemp+1
  1305     06E0  087F               	movf	btemp+1,w
  1306     06E1  07AF               	addwf	sprintf@prec,f
  1307     06E2                     l1434:
  1308     06E2  3001               	movlw	1
  1309     06E3  00FF               	movwf	btemp+1
  1310     06E4  087F               	movf	btemp+1,w
  1311     06E5  07A0               	addwf	sprintf@f,f
  1312     06E6                     l1436:
  1313                           
  1314                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1315     06E6  0820               	movf	sprintf@f,w
  1316     06E7  0084               	movwf	4
  1317     06E8  120A  118A  200D  120A  118A  	fcall	stringdir
  1318     06ED  120A  118A  2368  120A  118A  	fcall	_isdigit
  1319     06F2  1803               	btfsc	3,0
  1320     06F3  2EF5               	goto	u961
  1321     06F4  2EF6               	goto	u960
  1322     06F5                     u961:
  1323     06F5  2ECA               	goto	l1430
  1324     06F6                     u960:
  1325     06F6  2EF8               	goto	l1442
  1326     06F7                     l1438:
  1327                           
  1328                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1329     06F7  01AF               	clrf	sprintf@prec
  1330     06F8                     l1442:
  1331     06F8  3001               	movlw	1
  1332     06F9  1283               	bcf	3,5	;RP0=0, select bank0
  1333     06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1334     06FB  07A0               	addwf	sprintf@f,f
  1335     06FC  30FF               	movlw	-1
  1336     06FD  0720               	addwf	sprintf@f,w
  1337     06FE  0084               	movwf	4
  1338     06FF  120A  118A  200D  120A  118A  	fcall	stringdir
  1339     0704  00B0               	movwf	sprintf@c
  1340     0705  00A7               	movwf	??_sprintf
  1341     0706  01A8               	clrf	??_sprintf+1
  1342                           
  1343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1344                           ; Switch size 1, requested type "simple"
  1345                           ; Number of cases is 1, Range of values is 0 to 0
  1346                           ; switch strategies available:
  1347                           ; Name         Instructions Cycles
  1348                           ; simple_byte            4     3 (average)
  1349                           ; direct_byte           11     8 (fixed)
  1350                           ; jumptable            260     6 (fixed)
  1351                           ;	Chosen strategy is simple_byte
  1352     0707  0828               	movf	??_sprintf+1,w
  1353     0708  3A00               	xorlw	0	; case 0
  1354     0709  1903               	skipnz
  1355     070A  2F0C               	goto	l1586
  1356     070B  2FDD               	goto	l1496
  1357     070C                     l1586:
  1358                           
  1359                           ; Switch size 1, requested type "simple"
  1360                           ; Number of cases is 3, Range of values is 0 to 105
  1361                           ; switch strategies available:
  1362                           ; Name         Instructions Cycles
  1363                           ; simple_byte           10     6 (average)
  1364                           ; jumptable            260     6 (fixed)
  1365                           ;	Chosen strategy is simple_byte
  1366     070C  0827               	movf	??_sprintf,w
  1367     070D  3A00               	xorlw	0	; case 0
  1368     070E  1903               	skipnz
  1369     070F  2FED               	goto	l1498
  1370     0710  3A64               	xorlw	100	; case 100
  1371     0711  1903               	skipnz
  1372     0712  2F17               	goto	l1444
  1373     0713  3A0D               	xorlw	13	; case 105
  1374     0714  1903               	skipnz
  1375     0715  2F17               	goto	l1444
  1376     0716  2FDD               	goto	l1496
  1377     0717                     l1444:
  1378                           
  1379                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1380     0717  082A               	movf	sprintf@ap,w
  1381     0718  0084               	movwf	4
  1382     0719  1383               	bcf	3,7	;select IRP bank0
  1383     071A  0800               	movf	0,w
  1384     071B  00AD               	movwf	sprintf@val
  1385     071C  0A84               	incf	4,f
  1386     071D  0800               	movf	0,w
  1387     071E  00AE               	movwf	sprintf@val+1
  1388     071F                     l1446:
  1389     071F  3002               	movlw	2
  1390     0720  00FF               	movwf	btemp+1
  1391     0721  087F               	movf	btemp+1,w
  1392     0722  07AA               	addwf	sprintf@ap,f
  1393     0723                     l1448:
  1394                           
  1395                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1396     0723  1FAE               	btfss	sprintf@val+1,7
  1397     0724  2F26               	goto	u971
  1398     0725  2F27               	goto	u970
  1399     0726                     u971:
  1400     0726  2F30               	goto	l1454
  1401     0727                     u970:
  1402     0727                     l1450:
  1403                           
  1404                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1405     0727  3003               	movlw	3
  1406     0728  00FF               	movwf	btemp+1
  1407     0729  087F               	movf	btemp+1,w
  1408     072A  04AB               	iorwf	sprintf@flag,f
  1409     072B                     l1452:
  1410                           
  1411                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1412     072B  09AD               	comf	sprintf@val,f
  1413     072C  09AE               	comf	sprintf@val+1,f
  1414     072D  0AAD               	incf	sprintf@val,f
  1415     072E  1903               	skipnz
  1416     072F  0AAE               	incf	sprintf@val+1,f
  1417     0730                     l1454:
  1418                           
  1419                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  1420     0730  082F               	movf	sprintf@prec,w
  1421     0731  1D03               	btfss	3,2
  1422     0732  2F34               	goto	u981
  1423     0733  2F35               	goto	u980
  1424     0734                     u981:
  1425     0734  2F3F               	goto	l1460
  1426     0735                     u980:
  1427     0735                     l1456:
  1428     0735  082D               	movf	sprintf@val,w
  1429     0736  042E               	iorwf	sprintf@val+1,w
  1430     0737  1D03               	btfss	3,2
  1431     0738  2F3A               	goto	u991
  1432     0739  2F3B               	goto	u990
  1433     073A                     u991:
  1434     073A  2F3F               	goto	l1460
  1435     073B                     u990:
  1436     073B                     l1458:
  1437                           
  1438                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  1439     073B  3001               	movlw	1
  1440     073C  00FF               	movwf	btemp+1
  1441     073D  087F               	movf	btemp+1,w
  1442     073E  07AF               	addwf	sprintf@prec,f
  1443     073F                     l1460:
  1444                           
  1445                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1446     073F  01B0               	clrf	sprintf@c
  1447     0740  0AB0               	incf	sprintf@c,f
  1448     0741                     l1466:
  1449                           
  1450                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1451     0741  0830               	movf	sprintf@c,w
  1452     0742  00A7               	movwf	??_sprintf
  1453     0743  0727               	addwf	??_sprintf,w
  1454     0744  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1455     0745  0084               	movwf	4
  1456     0746  120A  118A  200D  120A  118A  	fcall	stringdir
  1457     074B  00A8               	movwf	??_sprintf+1
  1458     074C  120A  118A  200D  120A  118A  	fcall	stringdir
  1459     0751  00A9               	movwf	??_sprintf+2
  1460     0752  0829               	movf	??_sprintf+2,w
  1461     0753  022E               	subwf	sprintf@val+1,w
  1462     0754  1D03               	skipz
  1463     0755  2F58               	goto	u1005
  1464     0756  0828               	movf	??_sprintf+1,w
  1465     0757  022D               	subwf	sprintf@val,w
  1466     0758                     u1005:
  1467     0758  1803               	skipnc
  1468     0759  2F5B               	goto	u1001
  1469     075A  2F5C               	goto	u1000
  1470     075B                     u1001:
  1471     075B  2F5D               	goto	l1470
  1472     075C                     u1000:
  1473     075C  2F67               	goto	l1474
  1474     075D                     l1470:
  1475     075D  3001               	movlw	1
  1476     075E  00FF               	movwf	btemp+1
  1477     075F  087F               	movf	btemp+1,w
  1478     0760  07B0               	addwf	sprintf@c,f
  1479     0761                     l1472:
  1480     0761  3005               	movlw	5
  1481     0762  0630               	xorwf	sprintf@c,w
  1482     0763  1D03               	btfss	3,2
  1483     0764  2F66               	goto	u1011
  1484     0765  2F67               	goto	u1010
  1485     0766                     u1011:
  1486     0766  2F41               	goto	l1466
  1487     0767                     u1010:
  1488     0767                     l1474:
  1489                           
  1490                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  1491     0767  082F               	movf	sprintf@prec,w
  1492     0768  00A7               	movwf	??_sprintf
  1493     0769  01A8               	clrf	??_sprintf+1
  1494     076A  1BA7               	btfsc	??_sprintf,7
  1495     076B  03A8               	decf	??_sprintf+1,f
  1496     076C  0828               	movf	??_sprintf+1,w
  1497     076D  3A80               	xorlw	128
  1498     076E  3C80               	sublw	128
  1499     076F  1D03               	skipz
  1500     0770  2F73               	goto	u1025
  1501     0771  0827               	movf	??_sprintf,w
  1502     0772  0230               	subwf	sprintf@c,w
  1503     0773                     u1025:
  1504     0773  1803               	skipnc
  1505     0774  2F76               	goto	u1021
  1506     0775  2F77               	goto	u1020
  1507     0776                     u1021:
  1508     0776  2F78               	goto	l1478
  1509     0777                     u1020:
  1510     0777                     l1476:
  1511     0777  2F90               	goto	l1482
  1512     0778                     l1478:
  1513     0778  1283               	bcf	3,5	;RP0=0, select bank0
  1514     0779  1303               	bcf	3,6	;RP1=0, select bank0
  1515     077A  082F               	movf	sprintf@prec,w
  1516     077B  00A7               	movwf	??_sprintf
  1517     077C  01A8               	clrf	??_sprintf+1
  1518     077D  1BA7               	btfsc	??_sprintf,7
  1519     077E  03A8               	decf	??_sprintf+1,f
  1520     077F  0828               	movf	??_sprintf+1,w
  1521     0780  3A80               	xorlw	128
  1522     0781  00A9               	movwf	??_sprintf+2
  1523     0782  3080               	movlw	128
  1524     0783  0229               	subwf	??_sprintf+2,w
  1525     0784  1D03               	skipz
  1526     0785  2F88               	goto	u1035
  1527     0786  0830               	movf	sprintf@c,w
  1528     0787  0227               	subwf	??_sprintf,w
  1529     0788                     u1035:
  1530     0788  1803               	skipnc
  1531     0789  2F8B               	goto	u1031
  1532     078A  2F8C               	goto	u1030
  1533     078B                     u1031:
  1534     078B  2F90               	goto	l1482
  1535     078C                     u1030:
  1536     078C                     l1480:
  1537                           
  1538                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  1539     078C  1283               	bcf	3,5	;RP0=0, select bank0
  1540     078D  1303               	bcf	3,6	;RP1=0, select bank0
  1541     078E  0830               	movf	sprintf@c,w
  1542     078F  00AF               	movwf	sprintf@prec
  1543     0790                     l1482:
  1544                           
  1545                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1546     0790  1283               	bcf	3,5	;RP0=0, select bank0
  1547     0791  1303               	bcf	3,6	;RP1=0, select bank0
  1548     0792  082B               	movf	sprintf@flag,w
  1549     0793  3903               	andlw	3
  1550     0794  1903               	btfsc	3,2
  1551     0795  2F97               	goto	u1041
  1552     0796  2F98               	goto	u1040
  1553     0797                     u1041:
  1554     0797  2FD4               	goto	l1494
  1555     0798                     u1040:
  1556     0798                     l1484:
  1557                           
  1558                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1559     0798  082C               	movf	sprintf@sp,w
  1560     0799  0084               	movwf	4
  1561     079A  302D               	movlw	45
  1562     079B  1383               	bcf	3,7	;select IRP bank0
  1563     079C  0080               	movwf	0
  1564     079D                     l1486:
  1565     079D  3001               	movlw	1
  1566     079E  00FF               	movwf	btemp+1
  1567     079F  087F               	movf	btemp+1,w
  1568     07A0  07AC               	addwf	sprintf@sp,f
  1569     07A1  2FD4               	goto	l1494
  1570     07A2                     l1488:
  1571                           
  1572                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1573     07A2  300A               	movlw	10
  1574     07A3  00F7               	movwf	___lwmod@divisor
  1575     07A4  3000               	movlw	0
  1576     07A5  00F8               	movwf	___lwmod@divisor+1
  1577     07A6  082F               	movf	sprintf@prec,w
  1578     07A7  00A7               	movwf	??_sprintf
  1579     07A8  0727               	addwf	??_sprintf,w
  1580     07A9  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1581     07AA  0084               	movwf	4
  1582     07AB  120A  118A  200D  120A  118A  	fcall	stringdir
  1583     07B0  00F0               	movwf	___lwdiv@divisor
  1584     07B1  120A  118A  200D  120A  118A  	fcall	stringdir
  1585     07B6  00F1               	movwf	___lwdiv@divisor+1
  1586     07B7  082E               	movf	sprintf@val+1,w
  1587     07B8  00F3               	movwf	___lwdiv@dividend+1
  1588     07B9  082D               	movf	sprintf@val,w
  1589     07BA  00F2               	movwf	___lwdiv@dividend
  1590     07BB  120A  118A  24DA  120A  118A  	fcall	___lwdiv
  1591     07C0  0871               	movf	?___lwdiv+1,w
  1592     07C1  00FA               	movwf	___lwmod@dividend+1
  1593     07C2  0870               	movf	?___lwdiv,w
  1594     07C3  00F9               	movwf	___lwmod@dividend
  1595     07C4  120A  118A  2420  120A  118A  	fcall	___lwmod
  1596     07C9  0877               	movf	?___lwmod,w
  1597     07CA  3E30               	addlw	48
  1598     07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1599     07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1600     07CD  00B0               	movwf	sprintf@c
  1601     07CE                     l1490:
  1602                           
  1603                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1604     07CE  082C               	movf	sprintf@sp,w
  1605     07CF  0084               	movwf	4
  1606     07D0  0830               	movf	sprintf@c,w
  1607     07D1  1383               	bcf	3,7	;select IRP bank0
  1608     07D2  0080               	movwf	0
  1609     07D3  2F9D               	goto	l1486
  1610     07D4                     l1494:
  1611                           
  1612                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1613     07D4  30FF               	movlw	255
  1614     07D5  00FF               	movwf	btemp+1
  1615     07D6  087F               	movf	btemp+1,w
  1616     07D7  07AF               	addwf	sprintf@prec,f
  1617     07D8  0A2F               	incf	sprintf@prec,w
  1618     07D9  1D03               	btfss	3,2
  1619     07DA  2FDC               	goto	u1051
  1620     07DB  2FDD               	goto	u1050
  1621     07DC                     u1051:
  1622     07DC  2FA2               	goto	l1488
  1623     07DD                     u1050:
  1624     07DD                     l1496:
  1625                           
  1626                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1627     07DD  3001               	movlw	1
  1628     07DE  07A0               	addwf	sprintf@f,f
  1629     07DF  30FF               	movlw	-1
  1630     07E0  0720               	addwf	sprintf@f,w
  1631     07E1  0084               	movwf	4
  1632     07E2  120A  118A  200D  120A  118A  	fcall	stringdir
  1633     07E7  00B0               	movwf	sprintf@c
  1634     07E8  0830               	movf	sprintf@c,w
  1635     07E9  1D03               	btfss	3,2
  1636     07EA  2FEC               	goto	u1061
  1637     07EB  2FED               	goto	u1060
  1638     07EC                     u1061:
  1639     07EC  2EA7               	goto	l1416
  1640     07ED                     u1060:
  1641     07ED                     l1498:
  1642                           
  1643                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1644     07ED  082C               	movf	sprintf@sp,w
  1645     07EE  0084               	movwf	4
  1646     07EF  1383               	bcf	3,7	;select IRP bank0
  1647     07F0  0180               	clrf	0
  1648     07F1                     l309:
  1649     07F1  0008               	return
  1650     07F2                     __end_of_sprintf:
  1651                           
  1652                           	psect	text2
  1653     0368                     __ptext2:	
  1654 ;; *************** function _isdigit *****************
  1655 ;; Defined at:
  1656 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  c               1    wreg     unsigned char 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  c               1    1[COMMON] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;		None               void
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         0       0       0       0       0
  1671 ;;      Locals:         2       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0
  1673 ;;      Totals:         2       0       0       0       0
  1674 ;;Total ram usage:        2 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_sprintf
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683     0368                     _isdigit:	
  1684                           ;psect for function _isdigit
  1685                           
  1686                           
  1687                           ;incstack = 0
  1688                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1689                           ;isdigit@c stored from wreg
  1690     0368  00F1               	movwf	isdigit@c
  1691     0369                     l1286:
  1692     0369  01F0               	clrf	_isdigit$820
  1693     036A                     l1288:
  1694     036A  303A               	movlw	58
  1695     036B  0271               	subwf	isdigit@c,w
  1696     036C  1803               	skipnc
  1697     036D  2B6F               	goto	u721
  1698     036E  2B70               	goto	u720
  1699     036F                     u721:
  1700     036F  2B78               	goto	l1294
  1701     0370                     u720:
  1702     0370                     l1290:
  1703     0370  3030               	movlw	48
  1704     0371  0271               	subwf	isdigit@c,w
  1705     0372  1C03               	skipc
  1706     0373  2B75               	goto	u731
  1707     0374  2B76               	goto	u730
  1708     0375                     u731:
  1709     0375  2B78               	goto	l1294
  1710     0376                     u730:
  1711     0376                     l1292:
  1712     0376  01F0               	clrf	_isdigit$820
  1713     0377  0AF0               	incf	_isdigit$820,f
  1714     0378                     l1294:
  1715     0378  0C70               	rrf	_isdigit$820,w
  1716     0379                     l766:
  1717     0379  0008               	return
  1718     037A                     __end_of_isdigit:
  1719                           
  1720                           	psect	text3
  1721     0420                     __ptext3:	
  1722 ;; *************** function ___lwmod *****************
  1723 ;; Defined at:
  1724 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  divisor         2    7[COMMON] unsigned int 
  1727 ;;  dividend        2    9[COMMON] unsigned int 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  counter         1   11[COMMON] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  2    7[COMMON] unsigned int 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0, btemp+1
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1739 ;;      Params:         4       0       0       0       0
  1740 ;;      Locals:         1       0       0       0       0
  1741 ;;      Temps:          0       0       0       0       0
  1742 ;;      Totals:         5       0       0       0       0
  1743 ;;Total ram usage:        5 bytes
  1744 ;; Hardware stack levels used: 1
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		_sprintf
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752     0420                     ___lwmod:	
  1753                           ;psect for function ___lwmod
  1754                           
  1755     0420                     l1340:	
  1756                           ;incstack = 0
  1757                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1758                           
  1759     0420  0877               	movf	___lwmod@divisor,w
  1760     0421  0478               	iorwf	___lwmod@divisor+1,w
  1761     0422  1903               	btfsc	3,2
  1762     0423  2C25               	goto	u831
  1763     0424  2C26               	goto	u830
  1764     0425                     u831:
  1765     0425  2C55               	goto	l1358
  1766     0426                     u830:
  1767     0426                     l1342:
  1768     0426  01FB               	clrf	___lwmod@counter
  1769     0427  0AFB               	incf	___lwmod@counter,f
  1770     0428  2C34               	goto	l1348
  1771     0429                     l1344:
  1772     0429  3001               	movlw	1
  1773     042A                     u845:
  1774     042A  1003               	clrc
  1775     042B  0DF7               	rlf	___lwmod@divisor,f
  1776     042C  0DF8               	rlf	___lwmod@divisor+1,f
  1777     042D  3EFF               	addlw	-1
  1778     042E  1D03               	skipz
  1779     042F  2C2A               	goto	u845
  1780     0430                     l1346:
  1781     0430  3001               	movlw	1
  1782     0431  00FF               	movwf	btemp+1
  1783     0432  087F               	movf	btemp+1,w
  1784     0433  07FB               	addwf	___lwmod@counter,f
  1785     0434                     l1348:
  1786     0434  1FF8               	btfss	___lwmod@divisor+1,7
  1787     0435  2C37               	goto	u851
  1788     0436  2C38               	goto	u850
  1789     0437                     u851:
  1790     0437  2C29               	goto	l1344
  1791     0438                     u850:
  1792     0438                     l1350:
  1793     0438  0878               	movf	___lwmod@divisor+1,w
  1794     0439  027A               	subwf	___lwmod@dividend+1,w
  1795     043A  1D03               	skipz
  1796     043B  2C3E               	goto	u865
  1797     043C  0877               	movf	___lwmod@divisor,w
  1798     043D  0279               	subwf	___lwmod@dividend,w
  1799     043E                     u865:
  1800     043E  1C03               	skipc
  1801     043F  2C41               	goto	u861
  1802     0440  2C42               	goto	u860
  1803     0441                     u861:
  1804     0441  2C48               	goto	l1354
  1805     0442                     u860:
  1806     0442                     l1352:
  1807     0442  0877               	movf	___lwmod@divisor,w
  1808     0443  02F9               	subwf	___lwmod@dividend,f
  1809     0444  0878               	movf	___lwmod@divisor+1,w
  1810     0445  1C03               	skipc
  1811     0446  03FA               	decf	___lwmod@dividend+1,f
  1812     0447  02FA               	subwf	___lwmod@dividend+1,f
  1813     0448                     l1354:
  1814     0448  3001               	movlw	1
  1815     0449                     u875:
  1816     0449  1003               	clrc
  1817     044A  0CF8               	rrf	___lwmod@divisor+1,f
  1818     044B  0CF7               	rrf	___lwmod@divisor,f
  1819     044C  3EFF               	addlw	-1
  1820     044D  1D03               	skipz
  1821     044E  2C49               	goto	u875
  1822     044F                     l1356:
  1823     044F  3001               	movlw	1
  1824     0450  02FB               	subwf	___lwmod@counter,f
  1825     0451  1D03               	btfss	3,2
  1826     0452  2C54               	goto	u881
  1827     0453  2C55               	goto	u880
  1828     0454                     u881:
  1829     0454  2C38               	goto	l1350
  1830     0455                     u880:
  1831     0455                     l1358:
  1832     0455  087A               	movf	___lwmod@dividend+1,w
  1833     0456  00F8               	movwf	?___lwmod+1
  1834     0457  0879               	movf	___lwmod@dividend,w
  1835     0458  00F7               	movwf	?___lwmod
  1836     0459                     l595:
  1837     0459  0008               	return
  1838     045A                     __end_of___lwmod:
  1839                           
  1840                           	psect	text4
  1841     04DA                     __ptext4:	
  1842 ;; *************** function ___lwdiv *****************
  1843 ;; Defined at:
  1844 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  divisor         2    0[COMMON] unsigned int 
  1847 ;;  dividend        2    2[COMMON] unsigned int 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  quotient        2    4[COMMON] unsigned int 
  1850 ;;  counter         1    6[COMMON] unsigned char 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  2    0[COMMON] unsigned int 
  1853 ;; Registers used:
  1854 ;;		wreg, status,2, status,0, btemp+1
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1860 ;;      Params:         4       0       0       0       0
  1861 ;;      Locals:         3       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0
  1863 ;;      Totals:         7       0       0       0       0
  1864 ;;Total ram usage:        7 bytes
  1865 ;; Hardware stack levels used: 1
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_sprintf
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873     04DA                     ___lwdiv:	
  1874                           ;psect for function ___lwdiv
  1875                           
  1876     04DA                     l1314:	
  1877                           ;incstack = 0
  1878                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1879                           
  1880     04DA  01F4               	clrf	___lwdiv@quotient
  1881     04DB  01F5               	clrf	___lwdiv@quotient+1
  1882     04DC                     l1316:
  1883     04DC  0870               	movf	___lwdiv@divisor,w
  1884     04DD  0471               	iorwf	___lwdiv@divisor+1,w
  1885     04DE  1903               	btfsc	3,2
  1886     04DF  2CE1               	goto	u761
  1887     04E0  2CE2               	goto	u760
  1888     04E1                     u761:
  1889     04E1  2D19               	goto	l1336
  1890     04E2                     u760:
  1891     04E2                     l1318:
  1892     04E2  01F6               	clrf	___lwdiv@counter
  1893     04E3  0AF6               	incf	___lwdiv@counter,f
  1894     04E4  2CF0               	goto	l1324
  1895     04E5                     l1320:
  1896     04E5  3001               	movlw	1
  1897     04E6                     u775:
  1898     04E6  1003               	clrc
  1899     04E7  0DF0               	rlf	___lwdiv@divisor,f
  1900     04E8  0DF1               	rlf	___lwdiv@divisor+1,f
  1901     04E9  3EFF               	addlw	-1
  1902     04EA  1D03               	skipz
  1903     04EB  2CE6               	goto	u775
  1904     04EC                     l1322:
  1905     04EC  3001               	movlw	1
  1906     04ED  00FF               	movwf	btemp+1
  1907     04EE  087F               	movf	btemp+1,w
  1908     04EF  07F6               	addwf	___lwdiv@counter,f
  1909     04F0                     l1324:
  1910     04F0  1FF1               	btfss	___lwdiv@divisor+1,7
  1911     04F1  2CF3               	goto	u781
  1912     04F2  2CF4               	goto	u780
  1913     04F3                     u781:
  1914     04F3  2CE5               	goto	l1320
  1915     04F4                     u780:
  1916     04F4                     l1326:
  1917     04F4  3001               	movlw	1
  1918     04F5                     u795:
  1919     04F5  1003               	clrc
  1920     04F6  0DF4               	rlf	___lwdiv@quotient,f
  1921     04F7  0DF5               	rlf	___lwdiv@quotient+1,f
  1922     04F8  3EFF               	addlw	-1
  1923     04F9  1D03               	skipz
  1924     04FA  2CF5               	goto	u795
  1925     04FB  0871               	movf	___lwdiv@divisor+1,w
  1926     04FC  0273               	subwf	___lwdiv@dividend+1,w
  1927     04FD  1D03               	skipz
  1928     04FE  2D01               	goto	u805
  1929     04FF  0870               	movf	___lwdiv@divisor,w
  1930     0500  0272               	subwf	___lwdiv@dividend,w
  1931     0501                     u805:
  1932     0501  1C03               	skipc
  1933     0502  2D04               	goto	u801
  1934     0503  2D05               	goto	u800
  1935     0504                     u801:
  1936     0504  2D0C               	goto	l1332
  1937     0505                     u800:
  1938     0505                     l1328:
  1939     0505  0870               	movf	___lwdiv@divisor,w
  1940     0506  02F2               	subwf	___lwdiv@dividend,f
  1941     0507  0871               	movf	___lwdiv@divisor+1,w
  1942     0508  1C03               	skipc
  1943     0509  03F3               	decf	___lwdiv@dividend+1,f
  1944     050A  02F3               	subwf	___lwdiv@dividend+1,f
  1945     050B                     l1330:
  1946     050B  1474               	bsf	___lwdiv@quotient,0
  1947     050C                     l1332:
  1948     050C  3001               	movlw	1
  1949     050D                     u815:
  1950     050D  1003               	clrc
  1951     050E  0CF1               	rrf	___lwdiv@divisor+1,f
  1952     050F  0CF0               	rrf	___lwdiv@divisor,f
  1953     0510  3EFF               	addlw	-1
  1954     0511  1D03               	skipz
  1955     0512  2D0D               	goto	u815
  1956     0513                     l1334:
  1957     0513  3001               	movlw	1
  1958     0514  02F6               	subwf	___lwdiv@counter,f
  1959     0515  1D03               	btfss	3,2
  1960     0516  2D18               	goto	u821
  1961     0517  2D19               	goto	u820
  1962     0518                     u821:
  1963     0518  2CF4               	goto	l1326
  1964     0519                     u820:
  1965     0519                     l1336:
  1966     0519  0875               	movf	___lwdiv@quotient+1,w
  1967     051A  00F1               	movwf	?___lwdiv+1
  1968     051B  0874               	movf	___lwdiv@quotient,w
  1969     051C  00F0               	movwf	?___lwdiv
  1970     051D                     l585:
  1971     051D  0008               	return
  1972     051E                     __end_of___lwdiv:
  1973                           
  1974                           	psect	text5
  1975     037A                     __ptext5:	
  1976 ;; *************** function ___bmul *****************
  1977 ;; Defined at:
  1978 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  multiplier      1    wreg     unsigned char 
  1981 ;;  multiplicand    1    0[COMMON] unsigned char 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  multiplier      1    2[COMMON] unsigned char 
  1984 ;;  product         1    1[COMMON] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      unsigned char 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0, btemp+1
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1994 ;;      Params:         1       0       0       0       0
  1995 ;;      Locals:         2       0       0       0       0
  1996 ;;      Temps:          0       0       0       0       0
  1997 ;;      Totals:         3       0       0       0       0
  1998 ;;Total ram usage:        3 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; This function calls:
  2001 ;;		Nothing
  2002 ;; This function is called by:
  2003 ;;		_sprintf
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007     037A                     ___bmul:	
  2008                           ;psect for function ___bmul
  2009                           
  2010                           
  2011                           ;incstack = 0
  2012                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  2013                           ;___bmul@multiplier stored from wreg
  2014     037A  00F2               	movwf	___bmul@multiplier
  2015     037B                     l1298:
  2016     037B  01F1               	clrf	___bmul@product
  2017     037C                     l1300:
  2018     037C  1C72               	btfss	___bmul@multiplier,0
  2019     037D  2B7F               	goto	u741
  2020     037E  2B80               	goto	u740
  2021     037F                     u741:
  2022     037F  2B84               	goto	l1304
  2023     0380                     u740:
  2024     0380                     l1302:
  2025     0380  0870               	movf	___bmul@multiplicand,w
  2026     0381  00FF               	movwf	btemp+1
  2027     0382  087F               	movf	btemp+1,w
  2028     0383  07F1               	addwf	___bmul@product,f
  2029     0384                     l1304:
  2030     0384  1003               	clrc
  2031     0385  0DF0               	rlf	___bmul@multiplicand,f
  2032     0386                     l1306:
  2033     0386  1003               	clrc
  2034     0387  0CF2               	rrf	___bmul@multiplier,f
  2035     0388                     l1308:
  2036     0388  0872               	movf	___bmul@multiplier,w
  2037     0389  1D03               	btfss	3,2
  2038     038A  2B8C               	goto	u751
  2039     038B  2B8D               	goto	u750
  2040     038C                     u751:
  2041     038C  2B7C               	goto	l1300
  2042     038D                     u750:
  2043     038D                     l1310:
  2044     038D  0871               	movf	___bmul@product,w
  2045     038E                     l339:
  2046     038E  0008               	return
  2047     038F                     __end_of___bmul:
  2048                           
  2049                           	psect	text6
  2050     033D                     __ptext6:	
  2051 ;; *************** function _spiWrite *****************
  2052 ;; Defined at:
  2053 ;;		line 34 in file "SPI.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  dat             1    wreg     unsigned char 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  dat             1    0[COMMON] unsigned char 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2067 ;;      Params:         0       0       0       0       0
  2068 ;;      Locals:         1       0       0       0       0
  2069 ;;      Temps:          0       0       0       0       0
  2070 ;;      Totals:         1       0       0       0       0
  2071 ;;Total ram usage:        1 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; This function calls:
  2074 ;;		Nothing
  2075 ;; This function is called by:
  2076 ;;		_main
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080     033D                     _spiWrite:	
  2081                           ;psect for function _spiWrite
  2082                           
  2083                           
  2084                           ;incstack = 0
  2085                           ; Regs used in _spiWrite: [wreg]
  2086                           ;spiWrite@dat stored from wreg
  2087     033D  00F0               	movwf	spiWrite@dat
  2088     033E                     l1508:
  2089                           
  2090                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  2091     033E  0870               	movf	spiWrite@dat,w
  2092     033F  1283               	bcf	3,5	;RP0=0, select bank0
  2093     0340  1303               	bcf	3,6	;RP1=0, select bank0
  2094     0341  0093               	movwf	19	;volatile
  2095     0342                     l180:
  2096     0342  0008               	return
  2097     0343                     __end_of_spiWrite:
  2098                           
  2099                           	psect	text7
  2100     0352                     __ptext7:	
  2101 ;; *************** function _spiRead *****************
  2102 ;; Defined at:
  2103 ;;		line 47 in file "SPI.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      unsigned char 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0, pclath, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2117 ;;      Params:         0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0
  2120 ;;      Totals:         0       0       0       0       0
  2121 ;;Total ram usage:        0 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; Hardware stack levels required when called: 1
  2124 ;; This function calls:
  2125 ;;		_spiReceiveWait
  2126 ;; This function is called by:
  2127 ;;		_main
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131     0352                     _spiRead:	
  2132                           ;psect for function _spiRead
  2133                           
  2134     0352                     l1510:	
  2135                           ;incstack = 0
  2136                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2137                           
  2138                           
  2139                           ;SPI.c: 49:     spiReceiveWait();
  2140     0352  120A  118A  2343  120A  118A  	fcall	_spiReceiveWait
  2141     0357                     l1512:
  2142                           
  2143                           ;SPI.c: 50:     return(SSPBUF);
  2144     0357  1283               	bcf	3,5	;RP0=0, select bank0
  2145     0358  1303               	bcf	3,6	;RP1=0, select bank0
  2146     0359  0813               	movf	19,w	;volatile
  2147     035A                     l188:
  2148     035A  0008               	return
  2149     035B                     __end_of_spiRead:
  2150                           
  2151                           	psect	text8
  2152     0343                     __ptext8:	
  2153 ;; *************** function _spiReceiveWait *****************
  2154 ;; Defined at:
  2155 ;;		line 29 in file "SPI.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;		None
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;		None
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		None
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2169 ;;      Params:         0       0       0       0       0
  2170 ;;      Locals:         0       0       0       0       0
  2171 ;;      Temps:          0       0       0       0       0
  2172 ;;      Totals:         0       0       0       0       0
  2173 ;;Total ram usage:        0 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_spiRead
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182     0343                     _spiReceiveWait:	
  2183                           ;psect for function _spiReceiveWait
  2184                           
  2185     0343                     l1284:	
  2186                           ;incstack = 0
  2187                           ; Regs used in _spiReceiveWait: []
  2188                           
  2189     0343                     l174:	
  2190                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  2191                           
  2192     0343  1683               	bsf	3,5	;RP0=1, select bank1
  2193     0344  1303               	bcf	3,6	;RP1=0, select bank1
  2194     0345  1C14               	btfss	20,0	;volatile
  2195     0346  2B48               	goto	u711
  2196     0347  2B49               	goto	u710
  2197     0348                     u711:
  2198     0348  2B43               	goto	l174
  2199     0349                     u710:
  2200     0349                     l177:
  2201     0349  0008               	return
  2202     034A                     __end_of_spiReceiveWait:
  2203                           
  2204                           	psect	text9
  2205     03F5                     __ptext9:	
  2206 ;; *************** function _setup *****************
  2207 ;; Defined at:
  2208 ;;		line 130 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;		None
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		wreg, status,2, status,0, pclath, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2222 ;;      Params:         0       0       0       0       0
  2223 ;;      Locals:         0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0
  2225 ;;      Totals:         0       0       0       0       0
  2226 ;;Total ram usage:        0 bytes
  2227 ;; Hardware stack levels used: 1
  2228 ;; Hardware stack levels required when called: 3
  2229 ;; This function calls:
  2230 ;;		_Lcd_Init
  2231 ;;		_configOsc
  2232 ;;		_spiInit
  2233 ;; This function is called by:
  2234 ;;		_main
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238     03F5                     _setup:	
  2239                           ;psect for function _setup
  2240                           
  2241     03F5                     l1384:	
  2242                           ;incstack = 0
  2243                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2244                           
  2245                           
  2246                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 131:     confi
      +                          gOsc(8);
  2247     03F5  3008               	movlw	8
  2248     03F6  00F0               	movwf	configOsc@frec
  2249     03F7  3000               	movlw	0
  2250     03F8  00F1               	movwf	configOsc@frec+1
  2251     03F9  120A  118A  256F  120A  118A  	fcall	_configOsc
  2252     03FE                     l1386:
  2253                           
  2254                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 132:     ANSEL
      +                          H = 0;
  2255     03FE  1683               	bsf	3,5	;RP0=1, select bank3
  2256     03FF  1703               	bsf	3,6	;RP1=1, select bank3
  2257     0400  0189               	clrf	9	;volatile
  2258     0401                     l1388:
  2259                           
  2260                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 133:     TRISC
      +                           = 144;
  2261     0401  3090               	movlw	144
  2262     0402  1683               	bsf	3,5	;RP0=1, select bank1
  2263     0403  1303               	bcf	3,6	;RP1=0, select bank1
  2264     0404  0087               	movwf	7	;volatile
  2265     0405                     l1390:
  2266                           
  2267                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 134:     TRISC
      +                          2 = 0;
  2268     0405  1107               	bcf	7,2	;volatile
  2269     0406                     l1392:
  2270                           
  2271                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 135:     TRISC
      +                          6 = 0;
  2272     0406  1307               	bcf	7,6	;volatile
  2273     0407                     l1394:
  2274                           
  2275                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 136:     TRISB
      +                           = 0;
  2276     0407  0186               	clrf	6	;volatile
  2277     0408                     l1396:
  2278                           
  2279                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 137:     TRISD
      +                           = 0;
  2280     0408  0188               	clrf	8	;volatile
  2281     0409                     l1398:
  2282                           
  2283                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 138:     PORTB
      +                           = 0;
  2284     0409  1283               	bcf	3,5	;RP0=0, select bank0
  2285     040A  1303               	bcf	3,6	;RP1=0, select bank0
  2286     040B  0186               	clrf	6	;volatile
  2287     040C                     l1400:
  2288                           
  2289                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 139:     PORTC
      +                           = 0;
  2290     040C  0187               	clrf	7	;volatile
  2291     040D                     l1402:
  2292                           
  2293                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 140:     PORTD
      +                           = 0;
  2294     040D  0188               	clrf	8	;volatile
  2295     040E                     l1404:
  2296                           
  2297                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 141:     PORTC
      +                          bits.RC2 = 1;
  2298     040E  1507               	bsf	7,2	;volatile
  2299     040F                     l1406:
  2300                           
  2301                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 142:     INTCO
      +                          Nbits.GIE = 1;
  2302     040F  178B               	bsf	11,7	;volatile
  2303     0410                     l1408:
  2304                           
  2305                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 143:     INTCO
      +                          Nbits.PEIE = 1;
  2306     0410  170B               	bsf	11,6	;volatile
  2307     0411                     l1410:
  2308                           
  2309                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 144:     spiIn
      +                          it(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SPI_IDLE_2_ACTIVE);
  2310     0411  01F0               	clrf	spiInit@sDataSample
  2311     0412  01F1               	clrf	spiInit@sClockIdle
  2312     0413  01F2               	clrf	spiInit@sTransmitEdge
  2313     0414  3020               	movlw	32
  2314     0415  120A  118A  23A5  120A  118A  	fcall	_spiInit
  2315     041A                     l1412:
  2316                           
  2317                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 145:     Lcd_I
      +                          nit();
  2318     041A  120A  118A  251E  120A  118A  	fcall	_Lcd_Init
  2319     041F                     l154:
  2320     041F  0008               	return
  2321     0420                     __end_of_setup:
  2322                           
  2323                           	psect	text10
  2324     03A5                     __ptext10:	
  2325 ;; *************** function _spiInit *****************
  2326 ;; Defined at:
  2327 ;;		line 12 in file "SPI.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  sType           1    wreg     enum E1292
  2330 ;;  sDataSample     1    0[COMMON] enum E1300
  2331 ;;  sClockIdle      1    1[COMMON] enum E1304
  2332 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  sType           1    3[COMMON] enum E1292
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         3       0       0       0       0
  2345 ;;      Locals:         1       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0
  2347 ;;      Totals:         4       0       0       0       0
  2348 ;;Total ram usage:        4 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_setup
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357     03A5                     _spiInit:	
  2358                           ;psect for function _spiInit
  2359                           
  2360                           
  2361                           ;incstack = 0
  2362                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2363                           ;spiInit@sType stored from wreg
  2364     03A5  00F3               	movwf	spiInit@sType
  2365     03A6                     l1274:
  2366                           
  2367                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  2368     03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2369     03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2370     03A8  1287               	bcf	7,5	;volatile
  2371                           
  2372                           ;SPI.c: 15:     if(sType & 0b00000100)
  2373     03A9  1D73               	btfss	spiInit@sType,2
  2374     03AA  2BAC               	goto	u701
  2375     03AB  2BAD               	goto	u700
  2376     03AC                     u701:
  2377     03AC  2BB1               	goto	l1280
  2378     03AD                     u700:
  2379     03AD                     l1276:
  2380                           
  2381                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  2382     03AD  0872               	movf	spiInit@sTransmitEdge,w
  2383     03AE  0094               	movwf	20	;volatile
  2384     03AF                     l1278:
  2385                           
  2386                           ;SPI.c: 18:         TRISC3 = 1;
  2387     03AF  1587               	bsf	7,3	;volatile
  2388                           
  2389                           ;SPI.c: 19:     }
  2390     03B0  2BB5               	goto	l170
  2391     03B1                     l1280:
  2392                           
  2393                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2394     03B1  0870               	movf	spiInit@sDataSample,w
  2395     03B2  0472               	iorwf	spiInit@sTransmitEdge,w
  2396     03B3  0094               	movwf	20	;volatile
  2397     03B4                     l1282:
  2398                           
  2399                           ;SPI.c: 23:         TRISC3 = 0;
  2400     03B4  1187               	bcf	7,3	;volatile
  2401     03B5                     l170:	
  2402                           ;SPI.c: 24:     }
  2403                           
  2404                           
  2405                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  2406     03B5  0873               	movf	spiInit@sType,w
  2407     03B6  0471               	iorwf	spiInit@sClockIdle,w
  2408     03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2409     03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2410     03B9  0094               	movwf	20	;volatile
  2411     03BA                     l171:
  2412     03BA  0008               	return
  2413     03BB                     __end_of_spiInit:
  2414                           
  2415                           	psect	text11
  2416     056F                     __ptext11:	
  2417 ;; *************** function _configOsc *****************
  2418 ;; Defined at:
  2419 ;;		line 4 in file "oscilador.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;  frec            2    0[COMMON] unsigned int 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2, status,0
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2433 ;;      Params:         2       0       0       0       0
  2434 ;;      Locals:         0       0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0
  2436 ;;      Totals:         2       0       0       0       0
  2437 ;;Total ram usage:        2 bytes
  2438 ;; Hardware stack levels used: 1
  2439 ;; This function calls:
  2440 ;;		Nothing
  2441 ;; This function is called by:
  2442 ;;		_setup
  2443 ;; This function uses a non-reentrant model
  2444 ;;
  2445                           
  2446     056F                     _configOsc:	
  2447                           ;psect for function _configOsc
  2448                           
  2449     056F                     l1236:	
  2450                           ;incstack = 0
  2451                           ; Regs used in _configOsc: [wreg+status,2+status,0]
  2452                           
  2453                           
  2454                           ;oscilador.c: 5:         if (frec == 8) OSCCONbits.IRCF = 0b111;
  2455     056F  3008               	movlw	8
  2456     0570  0670               	xorwf	configOsc@frec,w
  2457     0571  0471               	iorwf	configOsc@frec+1,w
  2458     0572  1D03               	btfss	3,2
  2459     0573  2D75               	goto	u631
  2460     0574  2D76               	goto	u630
  2461     0575                     u631:
  2462     0575  2D7A               	goto	l5
  2463     0576                     u630:
  2464     0576                     l1238:
  2465     0576  3070               	movlw	112
  2466     0577  1683               	bsf	3,5	;RP0=1, select bank1
  2467     0578  1303               	bcf	3,6	;RP1=0, select bank1
  2468     0579  048F               	iorwf	15,f	;volatile
  2469     057A                     l5:
  2470                           
  2471                           ;oscilador.c: 6:         if (frec == 4) OSCCONbits.IRCF = 0b110;
  2472     057A  3004               	movlw	4
  2473     057B  0670               	xorwf	configOsc@frec,w
  2474     057C  0471               	iorwf	configOsc@frec+1,w
  2475     057D  1D03               	btfss	3,2
  2476     057E  2D80               	goto	u641
  2477     057F  2D81               	goto	u640
  2478     0580                     u641:
  2479     0580  2D87               	goto	l6
  2480     0581                     u640:
  2481     0581                     l1240:
  2482     0581  1683               	bsf	3,5	;RP0=1, select bank1
  2483     0582  1303               	bcf	3,6	;RP1=0, select bank1
  2484     0583  080F               	movf	15,w	;volatile
  2485     0584  398F               	andlw	-113
  2486     0585  3860               	iorlw	96
  2487     0586  008F               	movwf	15	;volatile
  2488     0587                     l6:
  2489                           
  2490                           ;oscilador.c: 7:         if (frec == 1) OSCCONbits.IRCF = 0b100;
  2491     0587  0370               	decf	configOsc@frec,w
  2492     0588  0471               	iorwf	configOsc@frec+1,w
  2493     0589  1D03               	btfss	3,2
  2494     058A  2D8C               	goto	u651
  2495     058B  2D8D               	goto	u650
  2496     058C                     u651:
  2497     058C  2D93               	goto	l7
  2498     058D                     u650:
  2499     058D                     l1242:
  2500     058D  1683               	bsf	3,5	;RP0=1, select bank1
  2501     058E  1303               	bcf	3,6	;RP1=0, select bank1
  2502     058F  080F               	movf	15,w	;volatile
  2503     0590  398F               	andlw	-113
  2504     0591  3840               	iorlw	64
  2505     0592  008F               	movwf	15	;volatile
  2506     0593                     l7:
  2507                           
  2508                           ;oscilador.c: 8:         if (frec == 500) OSCCONbits.IRCF = 0b011;
  2509     0593  30F4               	movlw	244
  2510     0594  0670               	xorwf	configOsc@frec,w
  2511     0595  1D03               	skipz
  2512     0596  2D9B               	goto	u661
  2513     0597  0371               	decf	configOsc@frec+1,w
  2514     0598  1D03               	btfss	3,2
  2515     0599  2D9B               	goto	u661
  2516     059A  2D9C               	goto	u660
  2517     059B                     u661:
  2518     059B  2DA2               	goto	l8
  2519     059C                     u660:
  2520     059C                     l1244:
  2521     059C  1683               	bsf	3,5	;RP0=1, select bank1
  2522     059D  1303               	bcf	3,6	;RP1=0, select bank1
  2523     059E  080F               	movf	15,w	;volatile
  2524     059F  398F               	andlw	-113
  2525     05A0  3830               	iorlw	48
  2526     05A1  008F               	movwf	15	;volatile
  2527     05A2                     l8:
  2528                           
  2529                           ;oscilador.c: 9:         if (frec == 250) OSCCONbits.IRCF = 0b101;
  2530     05A2  30FA               	movlw	250
  2531     05A3  0670               	xorwf	configOsc@frec,w
  2532     05A4  0471               	iorwf	configOsc@frec+1,w
  2533     05A5  1D03               	btfss	3,2
  2534     05A6  2DA8               	goto	u671
  2535     05A7  2DA9               	goto	u670
  2536     05A8                     u671:
  2537     05A8  2DAF               	goto	l9
  2538     05A9                     u670:
  2539     05A9                     l1246:
  2540     05A9  1683               	bsf	3,5	;RP0=1, select bank1
  2541     05AA  1303               	bcf	3,6	;RP1=0, select bank1
  2542     05AB  080F               	movf	15,w	;volatile
  2543     05AC  398F               	andlw	-113
  2544     05AD  3850               	iorlw	80
  2545     05AE  008F               	movwf	15	;volatile
  2546     05AF                     l9:
  2547                           
  2548                           ;oscilador.c: 10:         if (frec == 125) OSCCONbits.IRCF = 0b001;
  2549     05AF  307D               	movlw	125
  2550     05B0  0670               	xorwf	configOsc@frec,w
  2551     05B1  0471               	iorwf	configOsc@frec+1,w
  2552     05B2  1D03               	btfss	3,2
  2553     05B3  2DB5               	goto	u681
  2554     05B4  2DB6               	goto	u680
  2555     05B5                     u681:
  2556     05B5  2DBC               	goto	l10
  2557     05B6                     u680:
  2558     05B6                     l1248:
  2559     05B6  1683               	bsf	3,5	;RP0=1, select bank1
  2560     05B7  1303               	bcf	3,6	;RP1=0, select bank1
  2561     05B8  080F               	movf	15,w	;volatile
  2562     05B9  398F               	andlw	-113
  2563     05BA  3810               	iorlw	16
  2564     05BB  008F               	movwf	15	;volatile
  2565     05BC                     l10:
  2566                           
  2567                           ;oscilador.c: 11:         if (frec == 31) OSCCONbits.IRCF = 0b000;
  2568     05BC  301F               	movlw	31
  2569     05BD  0670               	xorwf	configOsc@frec,w
  2570     05BE  0471               	iorwf	configOsc@frec+1,w
  2571     05BF  1D03               	btfss	3,2
  2572     05C0  2DC2               	goto	u691
  2573     05C1  2DC3               	goto	u690
  2574     05C2                     u691:
  2575     05C2  2DC7               	goto	l1252
  2576     05C3                     u690:
  2577     05C3                     l1250:
  2578     05C3  308F               	movlw	-113
  2579     05C4  1683               	bsf	3,5	;RP0=1, select bank1
  2580     05C5  1303               	bcf	3,6	;RP1=0, select bank1
  2581     05C6  058F               	andwf	15,f	;volatile
  2582     05C7                     l1252:
  2583                           
  2584                           ;oscilador.c: 12:         OSCCONbits.SCS = 1;
  2585     05C7  1683               	bsf	3,5	;RP0=1, select bank1
  2586     05C8  1303               	bcf	3,6	;RP1=0, select bank1
  2587     05C9  140F               	bsf	15,0	;volatile
  2588     05CA                     l12:
  2589     05CA  0008               	return
  2590     05CB                     __end_of_configOsc:
  2591                           
  2592                           	psect	text12
  2593     051E                     __ptext12:	
  2594 ;; *************** function _Lcd_Init *****************
  2595 ;; Defined at:
  2596 ;;		line 80 in file "lcd.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;		None
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0, pclath, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2610 ;;      Params:         0       0       0       0       0
  2611 ;;      Locals:         0       0       0       0       0
  2612 ;;      Temps:          2       0       0       0       0
  2613 ;;      Totals:         2       0       0       0       0
  2614 ;;Total ram usage:        2 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; Hardware stack levels required when called: 2
  2617 ;; This function calls:
  2618 ;;		_Lcd_Cmd
  2619 ;;		_Lcd_Port
  2620 ;; This function is called by:
  2621 ;;		_setup
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625     051E                     _Lcd_Init:	
  2626                           ;psect for function _Lcd_Init
  2627                           
  2628     051E                     l1254:	
  2629                           ;incstack = 0
  2630                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2631                           
  2632                           
  2633                           ;lcd.c: 81:     Lcd_Port(0);
  2634     051E  3000               	movlw	0
  2635     051F  120A  118A  245A  120A  118A  	fcall	_Lcd_Port
  2636     0524                     l1256:
  2637                           
  2638                           ;lcd.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2639     0524  3034               	movlw	52
  2640     0525  00F5               	movwf	??_Lcd_Init+1
  2641     0526  30F1               	movlw	241
  2642     0527  00F4               	movwf	??_Lcd_Init
  2643     0528                     u1167:
  2644     0528  0BF4               	decfsz	??_Lcd_Init,f
  2645     0529  2D28               	goto	u1167
  2646     052A  0BF5               	decfsz	??_Lcd_Init+1,f
  2647     052B  2D28               	goto	u1167
  2648     052C  2D2D               	nop2
  2649     052D                     l1258:
  2650                           
  2651                           ;lcd.c: 83:     Lcd_Cmd(48);
  2652     052D  3030               	movlw	48
  2653     052E  120A  118A  23BB  120A  118A  	fcall	_Lcd_Cmd
  2654                           
  2655                           ;lcd.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2656     0533  300D               	movlw	13
  2657     0534  00F5               	movwf	??_Lcd_Init+1
  2658     0535  30FB               	movlw	251
  2659     0536  00F4               	movwf	??_Lcd_Init
  2660     0537                     u1177:
  2661     0537  0BF4               	decfsz	??_Lcd_Init,f
  2662     0538  2D37               	goto	u1177
  2663     0539  0BF5               	decfsz	??_Lcd_Init+1,f
  2664     053A  2D37               	goto	u1177
  2665     053B  2D3C               	nop2
  2666     053C                     l1260:
  2667                           
  2668                           ;lcd.c: 85:     Lcd_Cmd(48);
  2669     053C  3030               	movlw	48
  2670     053D  120A  118A  23BB  120A  118A  	fcall	_Lcd_Cmd
  2671     0542                     l1262:
  2672                           
  2673                           ;lcd.c: 86:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2674     0542  301D               	movlw	29
  2675     0543  00F5               	movwf	??_Lcd_Init+1
  2676     0544  3091               	movlw	145
  2677     0545  00F4               	movwf	??_Lcd_Init
  2678     0546                     u1187:
  2679     0546  0BF4               	decfsz	??_Lcd_Init,f
  2680     0547  2D46               	goto	u1187
  2681     0548  0BF5               	decfsz	??_Lcd_Init+1,f
  2682     0549  2D46               	goto	u1187
  2683                           
  2684                           ;lcd.c: 87:     Lcd_Cmd(48);
  2685     054A  3030               	movlw	48
  2686     054B  120A  118A  23BB  120A  118A  	fcall	_Lcd_Cmd
  2687                           
  2688                           ;lcd.c: 89:     Lcd_Cmd(56);
  2689     0550  3038               	movlw	56
  2690     0551  120A  118A  23BB  120A  118A  	fcall	_Lcd_Cmd
  2691                           
  2692                           ;lcd.c: 90:     Lcd_Cmd(8);
  2693     0556  3008               	movlw	8
  2694     0557  120A  118A  23BB  120A  118A  	fcall	_Lcd_Cmd
  2695                           
  2696                           ;lcd.c: 91:     Lcd_Cmd(1);
  2697     055C  3001               	movlw	1
  2698     055D  120A  118A  23BB  120A  118A  	fcall	_Lcd_Cmd
  2699                           
  2700                           ;lcd.c: 92:     Lcd_Cmd(6);
  2701     0562  3006               	movlw	6
  2702     0563  120A  118A  23BB  120A  118A  	fcall	_Lcd_Cmd
  2703                           
  2704                           ;lcd.c: 93:     Lcd_Cmd(12);
  2705     0568  300C               	movlw	12
  2706     0569  120A  118A  23BB  120A  118A  	fcall	_Lcd_Cmd
  2707     056E                     l70:
  2708     056E  0008               	return
  2709     056F                     __end_of_Lcd_Init:
  2710                           
  2711                           	psect	text13
  2712     0498                     __ptext13:	
  2713 ;; *************** function _Lcd_Write_String *****************
  2714 ;; Defined at:
  2715 ;;		line 104 in file "lcd.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  a               2    3[COMMON] PTR unsigned char 
  2718 ;;		 -> volt(16), STR_1(16), 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  i               2    8[COMMON] int 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  1    wreg      void 
  2723 ;; Registers used:
  2724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2730 ;;      Params:         2       0       0       0       0
  2731 ;;      Locals:         2       0       0       0       0
  2732 ;;      Temps:          3       0       0       0       0
  2733 ;;      Totals:         7       0       0       0       0
  2734 ;;Total ram usage:        7 bytes
  2735 ;; Hardware stack levels used: 1
  2736 ;; Hardware stack levels required when called: 2
  2737 ;; This function calls:
  2738 ;;		_Lcd_Write_Char
  2739 ;; This function is called by:
  2740 ;;		_main
  2741 ;; This function uses a non-reentrant model
  2742 ;;
  2743                           
  2744     0498                     _Lcd_Write_String:	
  2745                           ;psect for function _Lcd_Write_String
  2746                           
  2747     0498                     l1376:	
  2748                           ;incstack = 0
  2749                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2750                           
  2751                           
  2752                           ;lcd.c: 105:     int i;;lcd.c: 106:     for (i = 0; a[i] != '\0'; i++)
  2753     0498  01F8               	clrf	Lcd_Write_String@i
  2754     0499  01F9               	clrf	Lcd_Write_String@i+1
  2755     049A  2CBD               	goto	l1382
  2756     049B                     l1378:
  2757                           
  2758                           ;lcd.c: 107:         Lcd_Write_Char(a[i]);
  2759     049B  0878               	movf	Lcd_Write_String@i,w
  2760     049C  0773               	addwf	Lcd_Write_String@a,w
  2761     049D  00F6               	movwf	??_Lcd_Write_String+1
  2762     049E  0874               	movf	Lcd_Write_String@a+1,w
  2763     049F  00F5               	movwf	??_Lcd_Write_String
  2764     04A0  1803               	skipnc
  2765     04A1  0AF5               	incf	??_Lcd_Write_String,f
  2766     04A2  1FF8               	btfss	Lcd_Write_String@i,7
  2767     04A3  2CA5               	goto	u910
  2768     04A4  03F5               	decf	??_Lcd_Write_String,f
  2769     04A5                     u910:
  2770     04A5  0875               	movf	??_Lcd_Write_String,w
  2771     04A6  00F7               	movwf	??_Lcd_Write_String+2
  2772     04A7  0877               	movf	??_Lcd_Write_String+2,w
  2773     04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2774     04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2775     04AA  00FF               	movwf	btemp+1
  2776     04AB  0876               	movf	??_Lcd_Write_String+1,w
  2777     04AC  0084               	movwf	4
  2778     04AD  120A  118A  2003  120A  118A  	fcall	stringtab
  2779     04B2  120A  118A  238F  120A  118A  	fcall	_Lcd_Write_Char
  2780     04B7                     l1380:
  2781     04B7  3001               	movlw	1
  2782     04B8  07F8               	addwf	Lcd_Write_String@i,f
  2783     04B9  1803               	skipnc
  2784     04BA  0AF9               	incf	Lcd_Write_String@i+1,f
  2785     04BB  3000               	movlw	0
  2786     04BC  07F9               	addwf	Lcd_Write_String@i+1,f
  2787     04BD                     l1382:
  2788     04BD  0878               	movf	Lcd_Write_String@i,w
  2789     04BE  0773               	addwf	Lcd_Write_String@a,w
  2790     04BF  00F6               	movwf	??_Lcd_Write_String+1
  2791     04C0  0874               	movf	Lcd_Write_String@a+1,w
  2792     04C1  00F5               	movwf	??_Lcd_Write_String
  2793     04C2  1803               	skipnc
  2794     04C3  0AF5               	incf	??_Lcd_Write_String,f
  2795     04C4  1FF8               	btfss	Lcd_Write_String@i,7
  2796     04C5  2CC7               	goto	u920
  2797     04C6  03F5               	decf	??_Lcd_Write_String,f
  2798     04C7                     u920:
  2799     04C7  0875               	movf	??_Lcd_Write_String,w
  2800     04C8  00F7               	movwf	??_Lcd_Write_String+2
  2801     04C9  0877               	movf	??_Lcd_Write_String+2,w
  2802     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  2803     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  2804     04CC  00FF               	movwf	btemp+1
  2805     04CD  0876               	movf	??_Lcd_Write_String+1,w
  2806     04CE  0084               	movwf	4
  2807     04CF  120A  118A  2003  120A  118A  	fcall	stringtab
  2808     04D4  3A00               	xorlw	0
  2809     04D5  1D03               	skipz
  2810     04D6  2CD8               	goto	u931
  2811     04D7  2CD9               	goto	u930
  2812     04D8                     u931:
  2813     04D8  2C9B               	goto	l1378
  2814     04D9                     u930:
  2815     04D9                     l79:
  2816     04D9  0008               	return
  2817     04DA                     __end_of_Lcd_Write_String:
  2818                           
  2819                           	psect	text14
  2820     038F                     __ptext14:	
  2821 ;; *************** function _Lcd_Write_Char *****************
  2822 ;; Defined at:
  2823 ;;		line 96 in file "lcd.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  a               1    wreg     unsigned char 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  a               1    2[COMMON] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, status,2, status,0, pclath, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2837 ;;      Params:         0       0       0       0       0
  2838 ;;      Locals:         1       0       0       0       0
  2839 ;;      Temps:          1       0       0       0       0
  2840 ;;      Totals:         2       0       0       0       0
  2841 ;;Total ram usage:        2 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; Hardware stack levels required when called: 1
  2844 ;; This function calls:
  2845 ;;		_Lcd_Port
  2846 ;; This function is called by:
  2847 ;;		_Lcd_Write_String
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851     038F                     _Lcd_Write_Char:	
  2852                           ;psect for function _Lcd_Write_Char
  2853                           
  2854                           
  2855                           ;incstack = 0
  2856                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2857                           ;Lcd_Write_Char@a stored from wreg
  2858     038F  00F2               	movwf	Lcd_Write_Char@a
  2859     0390                     l1264:
  2860                           
  2861                           ;lcd.c: 97:     RC0 = 1;
  2862     0390  1283               	bcf	3,5	;RP0=0, select bank0
  2863     0391  1303               	bcf	3,6	;RP1=0, select bank0
  2864     0392  1407               	bsf	7,0	;volatile
  2865     0393                     l1266:
  2866                           
  2867                           ;lcd.c: 98:     Lcd_Port(a);
  2868     0393  0872               	movf	Lcd_Write_Char@a,w
  2869     0394  120A  118A  245A  120A  118A  	fcall	_Lcd_Port
  2870     0399                     l1268:
  2871                           
  2872                           ;lcd.c: 99:     RC1 = 1;
  2873     0399  1283               	bcf	3,5	;RP0=0, select bank0
  2874     039A  1303               	bcf	3,6	;RP1=0, select bank0
  2875     039B  1487               	bsf	7,1	;volatile
  2876     039C                     l1270:
  2877                           
  2878                           ;lcd.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2879     039C  301A               	movlw	26
  2880     039D  00F1               	movwf	??_Lcd_Write_Char
  2881     039E                     u1197:
  2882     039E  0BF1               	decfsz	??_Lcd_Write_Char,f
  2883     039F  2B9E               	goto	u1197
  2884     03A0  0000               	nop
  2885     03A1                     l1272:
  2886                           
  2887                           ;lcd.c: 101:     RC1 = 0;
  2888     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2889     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2890     03A3  1087               	bcf	7,1	;volatile
  2891     03A4                     l73:
  2892     03A4  0008               	return
  2893     03A5                     __end_of_Lcd_Write_Char:
  2894                           
  2895                           	psect	text15
  2896     03D5                     __ptext15:	
  2897 ;; *************** function _Lcd_Set_Cursor *****************
  2898 ;; Defined at:
  2899 ;;		line 68 in file "lcd.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;  a               1    wreg     unsigned char 
  2902 ;;  b               1    4[COMMON] unsigned char 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  a               1    5[COMMON] unsigned char 
  2905 ;;  temp            1    6[COMMON] unsigned char 
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      void 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0, pclath, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2915 ;;      Params:         1       0       0       0       0
  2916 ;;      Locals:         2       0       0       0       0
  2917 ;;      Temps:          0       0       0       0       0
  2918 ;;      Totals:         3       0       0       0       0
  2919 ;;Total ram usage:        3 bytes
  2920 ;; Hardware stack levels used: 1
  2921 ;; Hardware stack levels required when called: 2
  2922 ;; This function calls:
  2923 ;;		_Lcd_Cmd
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929     03D5                     _Lcd_Set_Cursor:	
  2930                           ;psect for function _Lcd_Set_Cursor
  2931                           
  2932                           
  2933                           ;incstack = 0
  2934                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2935                           ;Lcd_Set_Cursor@a stored from wreg
  2936     03D5  00F5               	movwf	Lcd_Set_Cursor@a
  2937     03D6                     l1364:
  2938                           
  2939                           ;lcd.c: 69:     unsigned char temp;;lcd.c: 70:     if (a == 1) {
  2940     03D6  0375               	decf	Lcd_Set_Cursor@a,w
  2941     03D7  1D03               	btfss	3,2
  2942     03D8  2BDA               	goto	u891
  2943     03D9  2BDB               	goto	u890
  2944     03DA                     u891:
  2945     03DA  2BE5               	goto	l1370
  2946     03DB                     u890:
  2947     03DB                     l1366:
  2948                           
  2949                           ;lcd.c: 71:         temp = 0x80 + b - 1;
  2950     03DB  0874               	movf	Lcd_Set_Cursor@b,w
  2951     03DC  3E7F               	addlw	127
  2952     03DD  00F6               	movwf	Lcd_Set_Cursor@temp
  2953     03DE                     l1368:
  2954                           
  2955                           ;lcd.c: 72:         Lcd_Cmd(temp);
  2956     03DE  0876               	movf	Lcd_Set_Cursor@temp,w
  2957     03DF  120A  118A  23BB  120A  118A  	fcall	_Lcd_Cmd
  2958                           
  2959                           ;lcd.c: 74:     } else if (a == 2) {
  2960     03E4  2BF4               	goto	l67
  2961     03E5                     l1370:
  2962     03E5  3002               	movlw	2
  2963     03E6  0675               	xorwf	Lcd_Set_Cursor@a,w
  2964     03E7  1D03               	btfss	3,2
  2965     03E8  2BEA               	goto	u901
  2966     03E9  2BEB               	goto	u900
  2967     03EA                     u901:
  2968     03EA  2BF4               	goto	l67
  2969     03EB                     u900:
  2970     03EB                     l1372:
  2971                           
  2972                           ;lcd.c: 75:         temp = 0xC0 + b - 1;
  2973     03EB  0874               	movf	Lcd_Set_Cursor@b,w
  2974     03EC  3EBF               	addlw	191
  2975     03ED  00F6               	movwf	Lcd_Set_Cursor@temp
  2976     03EE                     l1374:
  2977                           
  2978                           ;lcd.c: 76:         Lcd_Cmd(temp);
  2979     03EE  0876               	movf	Lcd_Set_Cursor@temp,w
  2980     03EF  120A  118A  23BB  120A  118A  	fcall	_Lcd_Cmd
  2981     03F4                     l67:
  2982     03F4  0008               	return
  2983     03F5                     __end_of_Lcd_Set_Cursor:
  2984                           
  2985                           	psect	text16
  2986     035B                     __ptext16:	
  2987 ;; *************** function _Lcd_Clear *****************
  2988 ;; Defined at:
  2989 ;;		line 63 in file "lcd.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg, status,2, status,0, pclath, cstack
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3003 ;;      Params:         0       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0
  3005 ;;      Temps:          0       0       0       0       0
  3006 ;;      Totals:         0       0       0       0       0
  3007 ;;Total ram usage:        0 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 2
  3010 ;; This function calls:
  3011 ;;		_Lcd_Cmd
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017     035B                     _Lcd_Clear:	
  3018                           ;psect for function _Lcd_Clear
  3019                           
  3020     035B                     l1362:	
  3021                           ;incstack = 0
  3022                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3023                           
  3024                           
  3025                           ;lcd.c: 64:     Lcd_Cmd(0);
  3026     035B  3000               	movlw	0
  3027     035C  120A  118A  23BB  120A  118A  	fcall	_Lcd_Cmd
  3028                           
  3029                           ;lcd.c: 65:     Lcd_Cmd(1);
  3030     0361  3001               	movlw	1
  3031     0362  120A  118A  23BB  120A  118A  	fcall	_Lcd_Cmd
  3032     0367                     l61:
  3033     0367  0008               	return
  3034     0368                     __end_of_Lcd_Clear:
  3035                           
  3036                           	psect	text17
  3037     03BB                     __ptext17:	
  3038 ;; *************** function _Lcd_Cmd *****************
  3039 ;; Defined at:
  3040 ;;		line 55 in file "lcd.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  a               1    wreg     unsigned char 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;  a               1    3[COMMON] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0, pclath, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3054 ;;      Params:         0       0       0       0       0
  3055 ;;      Locals:         1       0       0       0       0
  3056 ;;      Temps:          2       0       0       0       0
  3057 ;;      Totals:         3       0       0       0       0
  3058 ;;Total ram usage:        3 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 1
  3061 ;; This function calls:
  3062 ;;		_Lcd_Port
  3063 ;; This function is called by:
  3064 ;;		_Lcd_Clear
  3065 ;;		_Lcd_Set_Cursor
  3066 ;;		_Lcd_Init
  3067 ;;		_Lcd_Shift_Right
  3068 ;;		_Lcd_Shift_Left
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072     03BB                     _Lcd_Cmd:	
  3073                           ;psect for function _Lcd_Cmd
  3074                           
  3075                           
  3076                           ;incstack = 0
  3077                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3078                           ;Lcd_Cmd@a stored from wreg
  3079     03BB  00F3               	movwf	Lcd_Cmd@a
  3080     03BC                     l1226:
  3081                           
  3082                           ;lcd.c: 56:     RC0 = 0;
  3083     03BC  1283               	bcf	3,5	;RP0=0, select bank0
  3084     03BD  1303               	bcf	3,6	;RP1=0, select bank0
  3085     03BE  1007               	bcf	7,0	;volatile
  3086     03BF                     l1228:
  3087                           
  3088                           ;lcd.c: 57:     Lcd_Port(a);
  3089     03BF  0873               	movf	Lcd_Cmd@a,w
  3090     03C0  120A  118A  245A  120A  118A  	fcall	_Lcd_Port
  3091     03C5                     l1230:
  3092                           
  3093                           ;lcd.c: 58:     RC1 = 1;
  3094     03C5  1283               	bcf	3,5	;RP0=0, select bank0
  3095     03C6  1303               	bcf	3,6	;RP1=0, select bank0
  3096     03C7  1487               	bsf	7,1	;volatile
  3097     03C8                     l1232:
  3098                           
  3099                           ;lcd.c: 59:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3100     03C8  300B               	movlw	11
  3101     03C9  00F2               	movwf	??_Lcd_Cmd+1
  3102     03CA  3062               	movlw	98
  3103     03CB  00F1               	movwf	??_Lcd_Cmd
  3104     03CC                     u1207:
  3105     03CC  0BF1               	decfsz	??_Lcd_Cmd,f
  3106     03CD  2BCC               	goto	u1207
  3107     03CE  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3108     03CF  2BCC               	goto	u1207
  3109     03D0  0000               	nop
  3110     03D1                     l1234:
  3111                           
  3112                           ;lcd.c: 60:     RC1 = 0;
  3113     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3114     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3115     03D3  1087               	bcf	7,1	;volatile
  3116     03D4                     l58:
  3117     03D4  0008               	return
  3118     03D5                     __end_of_Lcd_Cmd:
  3119                           
  3120                           	psect	text18
  3121     045A                     __ptext18:	
  3122 ;; *************** function _Lcd_Port *****************
  3123 ;; Defined at:
  3124 ;;		line 13 in file "lcd.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;  a               1    wreg     unsigned char 
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;  a               1    0[COMMON] unsigned char 
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  1    wreg      void 
  3131 ;; Registers used:
  3132 ;;		wreg
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3138 ;;      Params:         0       0       0       0       0
  3139 ;;      Locals:         1       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0
  3141 ;;      Totals:         1       0       0       0       0
  3142 ;;Total ram usage:        1 bytes
  3143 ;; Hardware stack levels used: 1
  3144 ;; This function calls:
  3145 ;;		Nothing
  3146 ;; This function is called by:
  3147 ;;		_Lcd_Cmd
  3148 ;;		_Lcd_Init
  3149 ;;		_Lcd_Write_Char
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153     045A                     _Lcd_Port:	
  3154                           ;psect for function _Lcd_Port
  3155                           
  3156                           
  3157                           ;incstack = 0
  3158                           ; Regs used in _Lcd_Port: [wreg]
  3159                           ;Lcd_Port@a stored from wreg
  3160     045A  00F0               	movwf	Lcd_Port@a
  3161     045B                     l1208:
  3162                           
  3163                           ;lcd.c: 14:     if (a & 1)
  3164     045B  1C70               	btfss	Lcd_Port@a,0
  3165     045C  2C5E               	goto	u551
  3166     045D  2C5F               	goto	u550
  3167     045E                     u551:
  3168     045E  2C63               	goto	l39
  3169     045F                     u550:
  3170     045F                     l1210:
  3171                           
  3172                           ;lcd.c: 15:         RD0 = 1;
  3173     045F  1283               	bcf	3,5	;RP0=0, select bank0
  3174     0460  1303               	bcf	3,6	;RP1=0, select bank0
  3175     0461  1408               	bsf	8,0	;volatile
  3176     0462  2C66               	goto	l40
  3177     0463                     l39:	
  3178                           ;lcd.c: 16:     else
  3179                           
  3180                           
  3181                           ;lcd.c: 17:         RD0 = 0;
  3182     0463  1283               	bcf	3,5	;RP0=0, select bank0
  3183     0464  1303               	bcf	3,6	;RP1=0, select bank0
  3184     0465  1008               	bcf	8,0	;volatile
  3185     0466                     l40:
  3186                           
  3187                           ;lcd.c: 19:     if (a & 2)
  3188     0466  1CF0               	btfss	Lcd_Port@a,1
  3189     0467  2C69               	goto	u561
  3190     0468  2C6A               	goto	u560
  3191     0469                     u561:
  3192     0469  2C6C               	goto	l41
  3193     046A                     u560:
  3194     046A                     l1212:
  3195                           
  3196                           ;lcd.c: 20:         RD1 = 1;
  3197     046A  1488               	bsf	8,1	;volatile
  3198     046B  2C6D               	goto	l42
  3199     046C                     l41:	
  3200                           ;lcd.c: 21:     else
  3201                           
  3202                           
  3203                           ;lcd.c: 22:         RD1 = 0;
  3204     046C  1088               	bcf	8,1	;volatile
  3205     046D                     l42:
  3206                           
  3207                           ;lcd.c: 24:     if (a & 4)
  3208     046D  1D70               	btfss	Lcd_Port@a,2
  3209     046E  2C70               	goto	u571
  3210     046F  2C71               	goto	u570
  3211     0470                     u571:
  3212     0470  2C73               	goto	l43
  3213     0471                     u570:
  3214     0471                     l1214:
  3215                           
  3216                           ;lcd.c: 25:         RD2 = 1;
  3217     0471  1508               	bsf	8,2	;volatile
  3218     0472  2C74               	goto	l44
  3219     0473                     l43:	
  3220                           ;lcd.c: 26:     else
  3221                           
  3222                           
  3223                           ;lcd.c: 27:         RD2 = 0;
  3224     0473  1108               	bcf	8,2	;volatile
  3225     0474                     l44:
  3226                           
  3227                           ;lcd.c: 29:     if (a & 8)
  3228     0474  1DF0               	btfss	Lcd_Port@a,3
  3229     0475  2C77               	goto	u581
  3230     0476  2C78               	goto	u580
  3231     0477                     u581:
  3232     0477  2C7A               	goto	l45
  3233     0478                     u580:
  3234     0478                     l1216:
  3235                           
  3236                           ;lcd.c: 30:         RD3 = 1;
  3237     0478  1588               	bsf	8,3	;volatile
  3238     0479  2C7B               	goto	l46
  3239     047A                     l45:	
  3240                           ;lcd.c: 31:     else
  3241                           
  3242                           
  3243                           ;lcd.c: 32:         RD3 = 0;
  3244     047A  1188               	bcf	8,3	;volatile
  3245     047B                     l46:
  3246                           
  3247                           ;lcd.c: 34:     if (a & 16)
  3248     047B  1E70               	btfss	Lcd_Port@a,4
  3249     047C  2C7E               	goto	u591
  3250     047D  2C7F               	goto	u590
  3251     047E                     u591:
  3252     047E  2C81               	goto	l47
  3253     047F                     u590:
  3254     047F                     l1218:
  3255                           
  3256                           ;lcd.c: 35:         RD4 = 1;
  3257     047F  1608               	bsf	8,4	;volatile
  3258     0480  2C82               	goto	l48
  3259     0481                     l47:	
  3260                           ;lcd.c: 36:     else
  3261                           
  3262                           
  3263                           ;lcd.c: 37:         RD4 = 0;
  3264     0481  1208               	bcf	8,4	;volatile
  3265     0482                     l48:
  3266                           
  3267                           ;lcd.c: 39:     if (a & 32)
  3268     0482  1EF0               	btfss	Lcd_Port@a,5
  3269     0483  2C85               	goto	u601
  3270     0484  2C86               	goto	u600
  3271     0485                     u601:
  3272     0485  2C88               	goto	l49
  3273     0486                     u600:
  3274     0486                     l1220:
  3275                           
  3276                           ;lcd.c: 40:         RD5 = 1;
  3277     0486  1688               	bsf	8,5	;volatile
  3278     0487  2C89               	goto	l50
  3279     0488                     l49:	
  3280                           ;lcd.c: 41:     else
  3281                           
  3282                           
  3283                           ;lcd.c: 42:         RD5 = 0;
  3284     0488  1288               	bcf	8,5	;volatile
  3285     0489                     l50:
  3286                           
  3287                           ;lcd.c: 44:     if (a & 64)
  3288     0489  1F70               	btfss	Lcd_Port@a,6
  3289     048A  2C8C               	goto	u611
  3290     048B  2C8D               	goto	u610
  3291     048C                     u611:
  3292     048C  2C8F               	goto	l51
  3293     048D                     u610:
  3294     048D                     l1222:
  3295                           
  3296                           ;lcd.c: 45:         RD6 = 1;
  3297     048D  1708               	bsf	8,6	;volatile
  3298     048E  2C90               	goto	l52
  3299     048F                     l51:	
  3300                           ;lcd.c: 46:     else
  3301                           
  3302                           
  3303                           ;lcd.c: 47:         RD6 = 0;
  3304     048F  1308               	bcf	8,6	;volatile
  3305     0490                     l52:
  3306                           
  3307                           ;lcd.c: 49:     if (a & 128)
  3308     0490  1FF0               	btfss	Lcd_Port@a,7
  3309     0491  2C93               	goto	u621
  3310     0492  2C94               	goto	u620
  3311     0493                     u621:
  3312     0493  2C96               	goto	l53
  3313     0494                     u620:
  3314     0494                     l1224:
  3315                           
  3316                           ;lcd.c: 50:         RD7 = 1;
  3317     0494  1788               	bsf	8,7	;volatile
  3318     0495  2C97               	goto	l55
  3319     0496                     l53:	
  3320                           ;lcd.c: 51:     else
  3321                           
  3322                           
  3323                           ;lcd.c: 52:         RD7 = 0;
  3324     0496  1388               	bcf	8,7	;volatile
  3325     0497                     l55:
  3326     0497  0008               	return
  3327     0498                     __end_of_Lcd_Port:
  3328     007E                     btemp	set	126	;btemp
  3329     007E                     wtemp0	set	126
  3330                           
  3331                           	psect	idloc
  3332                           
  3333                           ;Config register IDLOC0 @ 0x2000
  3334                           ;	unspecified, using default values
  3335     2000                     	org	8192
  3336     2000  3FFF               	dw	16383
  3337                           
  3338                           ;Config register IDLOC1 @ 0x2001
  3339                           ;	unspecified, using default values
  3340     2001                     	org	8193
  3341     2001  3FFF               	dw	16383
  3342                           
  3343                           ;Config register IDLOC2 @ 0x2002
  3344                           ;	unspecified, using default values
  3345     2002                     	org	8194
  3346     2002  3FFF               	dw	16383
  3347                           
  3348                           ;Config register IDLOC3 @ 0x2003
  3349                           ;	unspecified, using default values
  3350     2003                     	org	8195
  3351     2003  3FFF               	dw	16383
  3352                           
  3353                           	psect	config
  3354                           
  3355                           ;Config register CONFIG1 @ 0x2007
  3356                           ;	Oscillator Selection bits
  3357                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3358                           ;	Watchdog Timer Enable bit
  3359                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3360                           ;	Power-up Timer Enable bit
  3361                           ;	PWRTE = OFF, PWRT disabled
  3362                           ;	RE3/MCLR pin function select bit
  3363                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3364                           ;	Code Protection bit
  3365                           ;	CP = OFF, Program memory code protection is disabled
  3366                           ;	Data Code Protection bit
  3367                           ;	CPD = OFF, Data memory code protection is disabled
  3368                           ;	Brown Out Reset Selection bits
  3369                           ;	BOREN = OFF, BOR disabled
  3370                           ;	Internal External Switchover bit
  3371                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3372                           ;	Fail-Safe Clock Monitor Enabled bit
  3373                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3374                           ;	Low Voltage Programming Enable bit
  3375                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3376                           ;	In-Circuit Debugger Mode bit
  3377                           ;	DEBUG = 0x1, unprogramme  3378     2007                     	org	8199
  3379     2007  20D4               	dw	8404
  3380                           
  3381                           ;Config register CONFIG2 @ 0x2008
  3382                           ;	Brown-out Reset Selection bit
  3383                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3384                           ;	Flash Program Memory Self Write Enable bits
  3385                           ;	WRT = OFF, Write protection off
  3386     2008                     	org	8200
  3387     2008  3FFF               	dw	16383

Data Sizes:
    Strings     38
    Constant    10
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     21      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_2(CODE[22]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> volt(BANK0[16]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3805
                                             17 BANK0      4     4      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    18      7    1697
                                              0 BANK0     17    10      7
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     168
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     964
                           _Lcd_Init
                          _configOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _configOsc                                            2     0      2     230
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1     484
                                              4 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _configOsc
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      36       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      29       5       51.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      36      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Aug 02 23:31:26 2023

                       l5 057A                         l6 0587                         l7 0593  
                       l8 05A2                         l9 05AF                         _a 007C  
                       pc 0002            ___bmul@product 0071               _SSPSTATbits 0094  
                      l10 05BC                        l12 05CA                        l40 0466  
                      l41 046C                        l50 0489                        l42 046D  
                      l51 048F                        l43 0473                        l52 0490  
                      l44 0474                        l53 0496                        l45 047A  
                      l61 0367                        l46 047B                        l70 056E  
                      l55 0497                        l47 0481                        l39 0463  
                      l48 0482                        l49 0488                        l73 03A4  
                      l58 03D4                        l67 03F4                        l79 04D9  
                      _s1 0038                        _s2 0036                        fsr 0004  
                     l170 03B5                       l154 041F                       l146 05D0  
                     l171 03BA                       l180 0342                       l309 07F1  
                     l174 0343                       l177 0349                       l339 038E  
                     l188 035A                       l585 051D                       l595 0459  
                     l766 0379                       _RC0 0038                       _RC1 0039  
                     _RD0 0040                       _RD1 0041                       _RD2 0042  
                     _RD3 0043                       _RD4 0044                       _RD5 0045  
                     _RD6 0046                       _RD7 0047                       u600 0486  
                     u601 0485                       u610 048D                       u611 048C  
                     u620 0494                       u700 03AD                       u621 0493  
                     u701 03AC                       u550 045F                       u630 0576  
                     u710 0349                       u551 045E                       u631 0575  
                     u711 0348                       u560 046A                       u640 0581  
                     u800 0505                       u720 0370                       u561 0469  
                     u641 0580                       u801 0504                       u721 036F  
                     u570 0471                       u650 058D                       u730 0376  
                     u571 0470                       u651 058C                       u731 0375  
                     u580 0478                       u900 03EB                       u660 059C  
                     u740 0380                       u820 0519                       u581 0477  
                     u901 03EA                       u661 059B                       u741 037F  
                     u821 0518                       u805 0501                       u590 047F  
                     u910 04A5                       u670 05A9                       u750 038D  
                     u830 0426                       u591 047E                       u671 05A8  
                     u751 038C                       u815 050D                       u831 0425  
                     u920 04C7                       u680 05B6                       u760 04E2  
                     u681 05B5                       u761 04E1                       u930 04D9  
                     u690 05C3                       u850 0438                       u931 04D8  
                     u691 05C2                       u851 0437                       u780 04F4  
                     u860 0442                       u940 06AD                       u781 04F3  
                     u861 0441                       u845 042A                       u941 06AC  
                     u950 06C4                       u775 04E6                       u951 06C3  
                     u880 0455                       u960 06F6                       u881 0454  
                     u865 043E                       u961 06F5                       u890 03DB  
                     u970 0727                       u891 03DA                       u795 04F5  
                     u875 0449                       u971 0726                       u980 0735  
                     u981 0734                       u990 073B                       u991 073A  
                     fsr0 0004                       indf 0000                      l1210 045F  
                    l1220 0486                      l1212 046A                      l1300 037C  
                    l1222 048D                      l1214 0471                      l1230 03C5  
                    l1310 038D                      l1302 0380                      l1224 0494  
                    l1216 0478                      l1208 045B                      l1232 03C8  
                    l1240 0581                      l1400 040C                      l1304 0384  
                    l1320 04E5                      l1218 047F                      l1234 03D1  
                    l1226 03BC                      l1250 05C3                      l1242 058D  
                    l1410 0411                      l1402 040D                      l1306 0386  
                    l1330 050B                      l1322 04EC                      l1314 04DA  
                    l1228 03BF                      l1260 053C                      l1252 05C7  
                    l1244 059C                      l1236 056F                      l1412 041A  
                    l1404 040E                      l1308 0388                      l1332 050C  
                    l1324 04F0                      l1316 04DC                      l1340 0420  
                    l1420 06B2                      l1270 039C                      l1262 0542  
                    l1254 051E                      l1246 05A9                      l1238 0576  
                    l1406 040F                      l1510 0352                      l1334 0513  
                    l1326 04F4                      l1318 04E2                      l1350 0438  
                    l1342 0426                      l1430 06CA                      l1422 06B7  
                    l1414 06A4                      l1272 03A1                      l1264 0390  
                    l1256 0524                      l1248 05B6                      l1280 03B1  
                    l1408 0410                      l1512 0357                      l1328 0505  
                    l1336 0519                      l1352 0442                      l1344 0429  
                    l1432 06D7                      l1424 06B8                      l1416 06A7  
                    l1520 05CB                      l1362 035B                      l1370 03E5  
                    l1266 0393                      l1258 052D                      l1282 03B4  
                    l1274 03A6                      l1354 0448                      l1346 0430  
                    l1290 0370                      l1450 0727                      l1442 06F8  
                    l1434 06E2                      l1426 06C4                      l1418 06AD  
                    l1530 0623                      l1522 05DD                      l1372 03EB  
                    l1364 03D6                      l1268 0399                      l1380 04B7  
                    l1276 03AD                      l1284 0343                      l1508 033E  
                    l1356 044F                      l1348 0434                      l1292 0376  
                    l1460 073F                      l1452 072B                      l1444 0717  
                    l1436 06E6                      l1428 06C8                      l1540 065A  
                    l1532 0624                      l1524 05E6                      l1374 03EE  
                    l1366 03DB                      l1382 04BD                      l1278 03AF  
                    l1390 0405                      l1358 0455                      l1294 0378  
                    l1286 0369                      l1470 075D                      l1454 0730  
                    l1446 071F                      l1438 06F7                      l1550 0675  
                    l1534 062E                      l1542 065D                      l1526 0612  
                    l1368 03DE                      l1376 0498                      l1392 0406  
                    l1384 03F5                      l1288 036A                      l1480 078C  
                    l1472 0761                      l1456 0735                      l1448 0723  
                    l1552 0687                      l1544 0662                      l1536 0636  
                    l1528 061C                      l1378 049B                      l1394 0407  
                    l1386 03FE                      l1298 037B                      l1490 07CE  
                    l1482 0790                      l1474 0767                      l1466 0741  
                    l1458 073B                      l1554 0699                      l1546 0663  
                    l1538 0648                      l1396 0408                      l1388 0401  
                    l1484 0798                      l1476 0777                      l1548 066D  
                    l1398 0409                      l1486 079D                      l1494 07D4  
                    l1478 0778                      l1488 07A2                      l1496 07DD  
                    l1498 07ED                      l1586 070C                      STR_1 0033  
                    STR_2 001D                      u1000 075C                      u1001 075B  
                    u1010 0767                      u1011 0766                      u1020 0777  
                    u1021 0776                      u1005 0758                      u1030 078C  
                    u1031 078B                      u1040 0798                      u1041 0797  
                    u1025 0773                      u1050 07DD                      u1051 07DC  
                    u1035 0788                      u1107 062A                      u1060 07ED  
                    u1061 07EC                      u1117 0644                      u1070 0623  
                    u1207 03CC                      u1127 0653                      u1071 0622  
                    u1080 0662                      u1137 0669                      u1081 0661  
                    u1147 0683                      u1157 0692                      u1167 0528  
                    u1177 0537                      u1097 0618                      u1187 0546  
                    u1197 039E         ?_Lcd_Write_String 0073                      _main 05CB  
                    btemp 007E                      _volt 0039                      start 0000  
      ??_Lcd_Write_String 0075           __end_of_Lcd_Cmd 03D5         ___bmul@multiplier 0072  
           configOsc@frec 0070                     ?_main 0070           __end_of___lwdiv 051E  
         __end_of___lwmod 045A                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088           __end_of_dpowers 001D           __end_of_isdigit 037A  
                   _setup 03F5                     pclath 000A           __end_of_spiInit 03BB  
         __end_of_spiRead 035B                     status 0003                     wtemp0 007E  
         __end_of_sprintf 07F2          __end_of_Lcd_Init 056F          __end_of_Lcd_Port 0498  
         __initialization 07F2              __end_of_main 06A1                    ??_main 0031  
                  ?_setup 0070                    _ANSELH 0189                 ??_Lcd_Cmd 0071  
                  _TRISC2 043A                    _TRISC3 043B                    _TRISC5 043D  
                  _TRISC6 043E                    _SSPCON 0014                    _SSPBUF 0013  
                  ___bmul 037A                 ??___lwdiv 0074                 ??___lwmod 007B  
               ??_isdigit 0070          __end_of_spiWrite 0343                 ??_spiInit 0073  
               ??_spiRead 0070                 ??_sprintf 0027           Lcd_Set_Cursor@a 0075  
         Lcd_Set_Cursor@b 0074   __end_of__initialization 07FC         __end_of_Lcd_Clear 0368  
     ___bmul@multiplicand 0070            __pcstackCOMMON 0070             __end_of_setup 0420  
          _Lcd_Set_Cursor 03D5                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_setup 0076                __pbssBANK0 0035                __pmaintext 05CB  
                 ?___bmul 0070    __end_of_Lcd_Set_Cursor 03F5                ??_Lcd_Init 0074  
              ??_Lcd_Port 0070                   _SSPSTAT 0094                __stringtab 0003  
          _Lcd_Write_Char 038F                   _Lcd_Cmd 03BB         __end_of_configOsc 05CB  
               ?_spiWrite 0070                   ___lwdiv 04DA                   ___lwmod 0420  
         ?_Lcd_Set_Cursor 0074                   __ptext1 06A1                   __ptext2 0368  
                 __ptext3 0420                   __ptext4 04DA                   __ptext5 037A  
                 __ptext6 033D                   __ptext7 0352                   __ptext8 0343  
                 __ptext9 03F5                   _dpowers 0013                   _isdigit 0368  
                 _spiInit 03A5                   _spiRead 0352                   _sprintf 06A1  
                 clrloop0 034B    __end_of_Lcd_Write_Char 03A5      end_of_initialization 07FC  
              ??_spiWrite 0070                 Lcd_Port@a 0070                 _PORTCbits 0007  
             spiWrite@dat 0070           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0073  
       Lcd_Write_String@i 0078                 _Lcd_Clear 035B            _spiReceiveWait 0343  
          __end_of___bmul 038F          _Lcd_Write_String 0498       start_initialization 07F2  
  __end_of_spiReceiveWait 034A                ?_Lcd_Clear 0070                  ??___bmul 0071  
         Lcd_Write_Char@a 0072               __pbssCOMMON 007C                 ___latbits 0002  
           __pcstackBANK0 0020                  ?_Lcd_Cmd 0070               sprintf@flag 002B  
             sprintf@prec 002F          ___lwdiv@dividend 0072           ?_spiReceiveWait 0070  
        ??_Lcd_Set_Cursor 0075                  ?___lwdiv 0070                  ?___lwmod 0077  
               _configOsc 056F                 __pstrings 0003                  ?_isdigit 0070  
                ?_spiInit 0070                  ?_spiRead 0070          ___lwdiv@quotient 0074  
                ?_sprintf 0020      spiInit@sTransmitEdge 0072                 clear_ram0 034A  
      spiInit@sDataSample 0070                  Lcd_Cmd@a 0073               ??_Lcd_Clear 0074  
              ?_configOsc 0070               __stringbase 0012          ??_Lcd_Write_Char 0071  
                _Lcd_Init 051E                  _Lcd_Port 045A  __end_of_Lcd_Write_String 04DA  
      __end_of__stringtab 0013               _isdigit$820 0070                sprintf@val 002D  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0076                  __ptext10 03A5  
                __ptext11 056F                  __ptext12 051E                  __ptext13 0498  
                __ptext14 038F                  __ptext15 03D5                  __ptext16 035B  
                __ptext17 03BB                  __ptext18 045A                  _contador 0037  
                _spiWrite 033D              spiInit@sType 0073               ??_configOsc 0072  
       spiInit@sClockIdle 0071                _INTCONbits 000B                  isdigit@c 0071  
               sprintf@ap 002A                 sprintf@sp 002C          ___lwmod@dividend 0079  
        ??_spiReceiveWait 0070                 stringcode 000D                _OSCCONbits 008F  
             _slaveSelect 0035        Lcd_Set_Cursor@temp 0076                  sprintf@c 0030  
                sprintf@f 0020           ___lwmod@divisor 0077           ___lwmod@counter 007B  
                stringdir 000D                  stringtab 0003  
