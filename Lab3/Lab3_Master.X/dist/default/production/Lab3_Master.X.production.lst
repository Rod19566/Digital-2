

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Aug 02 20:01:59 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0088                     	;# 
   111     0089                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     008F                     	;# 
   116     0090                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0095                     	;# 
   124     0096                     	;# 
   125     0097                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     0105                     	;# 
   135     0107                     	;# 
   136     0108                     	;# 
   137     0109                     	;# 
   138     010C                     	;# 
   139     010C                     	;# 
   140     010D                     	;# 
   141     010E                     	;# 
   142     010F                     	;# 
   143     0185                     	;# 
   144     0187                     	;# 
   145     0188                     	;# 
   146     0189                     	;# 
   147     018C                     	;# 
   148     018D                     	;# 
   149     0000                     	;# 
   150     0001                     	;# 
   151     0002                     	;# 
   152     0003                     	;# 
   153     0004                     	;# 
   154     0005                     	;# 
   155     0006                     	;# 
   156     0007                     	;# 
   157     0008                     	;# 
   158     0009                     	;# 
   159     000A                     	;# 
   160     000B                     	;# 
   161     000C                     	;# 
   162     000D                     	;# 
   163     000E                     	;# 
   164     000E                     	;# 
   165     000F                     	;# 
   166     0010                     	;# 
   167     0011                     	;# 
   168     0012                     	;# 
   169     0013                     	;# 
   170     0014                     	;# 
   171     0015                     	;# 
   172     0015                     	;# 
   173     0016                     	;# 
   174     0017                     	;# 
   175     0018                     	;# 
   176     0019                     	;# 
   177     001A                     	;# 
   178     001B                     	;# 
   179     001B                     	;# 
   180     001C                     	;# 
   181     001D                     	;# 
   182     001E                     	;# 
   183     001F                     	;# 
   184     0081                     	;# 
   185     0085                     	;# 
   186     0086                     	;# 
   187     0087                     	;# 
   188     0088                     	;# 
   189     0089                     	;# 
   190     008C                     	;# 
   191     008D                     	;# 
   192     008E                     	;# 
   193     008F                     	;# 
   194     0090                     	;# 
   195     0091                     	;# 
   196     0092                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0094                     	;# 
   201     0095                     	;# 
   202     0096                     	;# 
   203     0097                     	;# 
   204     0098                     	;# 
   205     0099                     	;# 
   206     009A                     	;# 
   207     009B                     	;# 
   208     009C                     	;# 
   209     009D                     	;# 
   210     009E                     	;# 
   211     009F                     	;# 
   212     0105                     	;# 
   213     0107                     	;# 
   214     0108                     	;# 
   215     0109                     	;# 
   216     010C                     	;# 
   217     010C                     	;# 
   218     010D                     	;# 
   219     010E                     	;# 
   220     010F                     	;# 
   221     0185                     	;# 
   222     0187                     	;# 
   223     0188                     	;# 
   224     0189                     	;# 
   225     018C                     	;# 
   226     018D                     	;# 
   227     0000                     	;# 
   228     0001                     	;# 
   229     0002                     	;# 
   230     0003                     	;# 
   231     0004                     	;# 
   232     0005                     	;# 
   233     0006                     	;# 
   234     0007                     	;# 
   235     0008                     	;# 
   236     0009                     	;# 
   237     000A                     	;# 
   238     000B                     	;# 
   239     000C                     	;# 
   240     000D                     	;# 
   241     000E                     	;# 
   242     000E                     	;# 
   243     000F                     	;# 
   244     0010                     	;# 
   245     0011                     	;# 
   246     0012                     	;# 
   247     0013                     	;# 
   248     0014                     	;# 
   249     0015                     	;# 
   250     0015                     	;# 
   251     0016                     	;# 
   252     0017                     	;# 
   253     0018                     	;# 
   254     0019                     	;# 
   255     001A                     	;# 
   256     001B                     	;# 
   257     001B                     	;# 
   258     001C                     	;# 
   259     001D                     	;# 
   260     001E                     	;# 
   261     001F                     	;# 
   262     0081                     	;# 
   263     0085                     	;# 
   264     0086                     	;# 
   265     0087                     	;# 
   266     0088                     	;# 
   267     0089                     	;# 
   268     008C                     	;# 
   269     008D                     	;# 
   270     008E                     	;# 
   271     008F                     	;# 
   272     0090                     	;# 
   273     0091                     	;# 
   274     0092                     	;# 
   275     0093                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0094                     	;# 
   279     0095                     	;# 
   280     0096                     	;# 
   281     0097                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009A                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     009F                     	;# 
   290     0105                     	;# 
   291     0107                     	;# 
   292     0108                     	;# 
   293     0109                     	;# 
   294     010C                     	;# 
   295     010C                     	;# 
   296     010D                     	;# 
   297     010E                     	;# 
   298     010F                     	;# 
   299     0185                     	;# 
   300     0187                     	;# 
   301     0188                     	;# 
   302     0189                     	;# 
   303     018C                     	;# 
   304     018D                     	;# 
   305     0000                     	;# 
   306     0001                     	;# 
   307     0002                     	;# 
   308     0003                     	;# 
   309     0004                     	;# 
   310     0005                     	;# 
   311     0006                     	;# 
   312     0007                     	;# 
   313     0008                     	;# 
   314     0009                     	;# 
   315     000A                     	;# 
   316     000B                     	;# 
   317     000C                     	;# 
   318     000D                     	;# 
   319     000E                     	;# 
   320     000E                     	;# 
   321     000F                     	;# 
   322     0010                     	;# 
   323     0011                     	;# 
   324     0012                     	;# 
   325     0013                     	;# 
   326     0014                     	;# 
   327     0015                     	;# 
   328     0015                     	;# 
   329     0016                     	;# 
   330     0017                     	;# 
   331     0018                     	;# 
   332     0019                     	;# 
   333     001A                     	;# 
   334     001B                     	;# 
   335     001B                     	;# 
   336     001C                     	;# 
   337     001D                     	;# 
   338     001E                     	;# 
   339     001F                     	;# 
   340     0081                     	;# 
   341     0085                     	;# 
   342     0086                     	;# 
   343     0087                     	;# 
   344     0088                     	;# 
   345     0089                     	;# 
   346     008C                     	;# 
   347     008D                     	;# 
   348     008E                     	;# 
   349     008F                     	;# 
   350     0090                     	;# 
   351     0091                     	;# 
   352     0092                     	;# 
   353     0093                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0094                     	;# 
   357     0095                     	;# 
   358     0096                     	;# 
   359     0097                     	;# 
   360     0098                     	;# 
   361     0099                     	;# 
   362     009A                     	;# 
   363     009B                     	;# 
   364     009C                     	;# 
   365     009D                     	;# 
   366     009E                     	;# 
   367     009F                     	;# 
   368     0105                     	;# 
   369     0107                     	;# 
   370     0108                     	;# 
   371     0109                     	;# 
   372     010C                     	;# 
   373     010C                     	;# 
   374     010D                     	;# 
   375     010E                     	;# 
   376     010F                     	;# 
   377     0185                     	;# 
   378     0187                     	;# 
   379     0188                     	;# 
   380     0189                     	;# 
   381     018C                     	;# 
   382     018D                     	;# 
   383     0000                     	;# 
   384     0001                     	;# 
   385     0002                     	;# 
   386     0003                     	;# 
   387     0004                     	;# 
   388     0005                     	;# 
   389     0006                     	;# 
   390     0007                     	;# 
   391     0008                     	;# 
   392     0009                     	;# 
   393     000A                     	;# 
   394     000B                     	;# 
   395     000C                     	;# 
   396     000D                     	;# 
   397     000E                     	;# 
   398     000E                     	;# 
   399     000F                     	;# 
   400     0010                     	;# 
   401     0011                     	;# 
   402     0012                     	;# 
   403     0013                     	;# 
   404     0014                     	;# 
   405     0015                     	;# 
   406     0015                     	;# 
   407     0016                     	;# 
   408     0017                     	;# 
   409     0018                     	;# 
   410     0019                     	;# 
   411     001A                     	;# 
   412     001B                     	;# 
   413     001B                     	;# 
   414     001C                     	;# 
   415     001D                     	;# 
   416     001E                     	;# 
   417     001F                     	;# 
   418     0081                     	;# 
   419     0085                     	;# 
   420     0086                     	;# 
   421     0087                     	;# 
   422     0088                     	;# 
   423     0089                     	;# 
   424     008C                     	;# 
   425     008D                     	;# 
   426     008E                     	;# 
   427     008F                     	;# 
   428     0090                     	;# 
   429     0091                     	;# 
   430     0092                     	;# 
   431     0093                     	;# 
   432     0093                     	;# 
   433     0093                     	;# 
   434     0094                     	;# 
   435     0095                     	;# 
   436     0096                     	;# 
   437     0097                     	;# 
   438     0098                     	;# 
   439     0099                     	;# 
   440     009A                     	;# 
   441     009B                     	;# 
   442     009C                     	;# 
   443     009D                     	;# 
   444     009E                     	;# 
   445     009F                     	;# 
   446     0105                     	;# 
   447     0107                     	;# 
   448     0108                     	;# 
   449     0109                     	;# 
   450     010C                     	;# 
   451     010C                     	;# 
   452     010D                     	;# 
   453     010E                     	;# 
   454     010F                     	;# 
   455     0185                     	;# 
   456     0187                     	;# 
   457     0188                     	;# 
   458     0189                     	;# 
   459     018C                     	;# 
   460     018D                     	;# 
   461                           
   462                           	psect	idataBANK0
   463     026D                     __pidataBANK0:
   464                           
   465                           ;initializer for _slaveSelect
   466     026D  3401               	retlw	1
   467                           
   468                           	psect	strings
   469     0003                     __pstrings:
   470     0003                     stringtab:
   471     0003                     __stringtab:
   472                           
   473                           ;	String table - string pointers are 1 byte each
   474     0003  1BFF               	btfsc	btemp+1,7
   475     0004  280D               	ljmp	stringcode
   476     0005  1383               	bcf	3,7
   477     0006  187F               	btfsc	btemp+1,0
   478     0007  1783               	bsf	3,7
   479     0008  0800               	movf	0,w
   480     0009  0A84               	incf	4,f
   481     000A  1903               	skipnz
   482     000B  0AFF               	incf	btemp+1,f
   483     000C  0008               	return
   484     000D                     stringcode:
   485     000D                     stringdir:
   486     000D  3000               	movlw	high stringdir
   487     000E  008A               	movwf	10
   488     000F  0804               	movf	4,w
   489     0010  0A84               	incf	4,f
   490     0011  0782               	addwf	2,f
   491     0012                     __stringbase:
   492     0012  3400               	retlw	0
   493     0013                     __end_of__stringtab:
   494     0013                     _dpowers:
   495     0013  3401               	retlw	1
   496     0014  3400               	retlw	0
   497     0015  340A               	retlw	10
   498     0016  3400               	retlw	0
   499     0017  3464               	retlw	100
   500     0018  3400               	retlw	0
   501     0019  34E8               	retlw	232
   502     001A  3403               	retlw	3
   503     001B  3410               	retlw	16
   504     001C  3427               	retlw	39
   505     001D                     __end_of_dpowers:
   506     0013                     _SSPBUF	set	19
   507     0014                     _SSPCON	set	20
   508     000B                     _INTCONbits	set	11
   509     0008                     _PORTD	set	8
   510     0007                     _PORTC	set	7
   511     0006                     _PORTB	set	6
   512     0007                     _PORTCbits	set	7
   513     0039                     _RC1	set	57
   514     0038                     _RC0	set	56
   515     0047                     _RD7	set	71
   516     0046                     _RD6	set	70
   517     0045                     _RD5	set	69
   518     0044                     _RD4	set	68
   519     0043                     _RD3	set	67
   520     0042                     _RD2	set	66
   521     0041                     _RD1	set	65
   522     0040                     _RD0	set	64
   523     0094                     _SSPSTATbits	set	148
   524     0094                     _SSPSTAT	set	148
   525     0088                     _TRISD	set	136
   526     0086                     _TRISB	set	134
   527     0087                     _TRISC	set	135
   528     008F                     _OSCCONbits	set	143
   529     043B                     _TRISC3	set	1083
   530     043D                     _TRISC5	set	1085
   531     043A                     _TRISC2	set	1082
   532     0189                     _ANSELH	set	393
   533     001D                     STR_1:
   534     001D  3453               	retlw	83	;'S'
   535     001E  346C               	retlw	108	;'l'
   536     001F  3461               	retlw	97	;'a'
   537     0020  3476               	retlw	118	;'v'
   538     0021  3465               	retlw	101	;'e'
   539     0022  3431               	retlw	49	;'1'
   540     0023  3420               	retlw	32	;' '
   541     0024  3450               	retlw	80	;'P'
   542     0025  346F               	retlw	111	;'o'
   543     0026  3474               	retlw	116	;'t'
   544     0027  343A               	retlw	58	;':'
   545     0028  3400               	retlw	0
   546     0029                     STR_2:
   547     0029  3425               	retlw	37	;'%'
   548     002A  342E               	retlw	46	;'.'
   549     002B  3432               	retlw	50	;'2'
   550     002C  3464               	retlw	100	;'d'
   551     002D  3420               	retlw	32	;' '
   552     002E  3400               	retlw	0
   553                           
   554                           	psect	cinit
   555     07ED                     start_initialization:	
   556                           ; #config settings
   557                           
   558     07ED                     __initialization:
   559                           
   560                           ; Initialize objects allocated to BANK0
   561     07ED  120A  118A  226D  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   562     07F2  00C7               	movwf	__pdataBANK0& (0+127)
   563                           
   564                           ; Clear objects allocated to BANK0
   565     07F3  1383               	bcf	3,7	;select IRP bank0
   566     07F4  3020               	movlw	low __pbssBANK0
   567     07F5  0084               	movwf	4
   568     07F6  3036               	movlw	low (__pbssBANK0+22)
   569     07F7  120A  118A  227B  120A  118A  	fcall	clear_ram0
   570     07FC                     end_of_initialization:	
   571                           ;End of C runtime variable initialization code
   572                           
   573     07FC                     __end_of__initialization:
   574     07FC  0183               	clrf	3
   575     07FD  120A  118A  2DB3   	ljmp	_main	;jump to C main() function
   576                           
   577                           	psect	bssBANK0
   578     0020                     __pbssBANK0:
   579     0020                     _s2:
   580     0020                     	ds	4
   581     0024                     _s1:
   582     0024                     	ds	1
   583     0025                     _a:
   584     0025                     	ds	1
   585     0026                     _volt:
   586     0026                     	ds	16
   587                           
   588                           	psect	dataBANK0
   589     0047                     __pdataBANK0:
   590     0047                     _slaveSelect:
   591     0047                     	ds	1
   592                           
   593                           	psect	clrtext
   594     027B                     clear_ram0:	
   595                           ;	Called with FSR containing the base address, and
   596                           ;	W with the last address+1
   597                           
   598     027B  0064               	clrwdt	;clear the watchdog before getting into this loop
   599     027C                     clrloop0:
   600     027C  0180               	clrf	0	;clear RAM location pointed to by FSR
   601     027D  0A84               	incf	4,f	;increment pointer
   602     027E  0604               	xorwf	4,w	;XOR with final address
   603     027F  1903               	btfsc	3,2	;have we reached the end yet?
   604     0280  3400               	retlw	0	;all done for this memory range, return
   605     0281  0604               	xorwf	4,w	;XOR again to restore value
   606     0282  2A7C               	goto	clrloop0	;do the next byte
   607                           
   608                           	psect	cstackCOMMON
   609     0070                     __pcstackCOMMON:
   610     0070                     ?_isdigit:
   611     0070                     ?_setup:	
   612                           ; 1 bit 
   613                           
   614     0070                     ?_spiWrite:	
   615                           ; 1 bytes @ 0x0
   616                           
   617     0070                     ??_spiWrite:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0070                     ?_spiRead:	
   621                           ; 1 bytes @ 0x0
   622                           
   623     0070                     ??_spiRead:	
   624                           ; 1 bytes @ 0x0
   625                           
   626     0070                     ?_spiInit:	
   627                           ; 1 bytes @ 0x0
   628                           
   629     0070                     ??_isdigit:	
   630                           ; 1 bytes @ 0x0
   631                           
   632     0070                     ?_configOsc:	
   633                           ; 1 bytes @ 0x0
   634                           
   635     0070                     ?_Lcd_Port:	
   636                           ; 1 bytes @ 0x0
   637                           
   638     0070                     ??_Lcd_Port:	
   639                           ; 1 bytes @ 0x0
   640                           
   641     0070                     ?_Lcd_Cmd:	
   642                           ; 1 bytes @ 0x0
   643                           
   644     0070                     ?_Lcd_Clear:	
   645                           ; 1 bytes @ 0x0
   646                           
   647     0070                     ?_Lcd_Init:	
   648                           ; 1 bytes @ 0x0
   649                           
   650     0070                     ?_Lcd_Write_Char:	
   651                           ; 1 bytes @ 0x0
   652                           
   653     0070                     ?_main:	
   654                           ; 1 bytes @ 0x0
   655                           
   656     0070                     ?_spiReceiveWait:	
   657                           ; 1 bytes @ 0x0
   658                           
   659     0070                     ??_spiReceiveWait:	
   660                           ; 1 bytes @ 0x0
   661                           
   662     0070                     ?___bmul:	
   663                           ; 1 bytes @ 0x0
   664                           
   665     0070                     ?___lwdiv:	
   666                           ; 1 bytes @ 0x0
   667                           
   668     0070                     ?___xxtofl:	
   669                           ; 2 bytes @ 0x0
   670                           
   671     0070                     Lcd_Port@a:	
   672                           ; 4 bytes @ 0x0
   673                           
   674     0070                     spiInit@sDataSample:	
   675                           ; 1 bytes @ 0x0
   676                           
   677     0070                     spiWrite@dat:	
   678                           ; 1 bytes @ 0x0
   679                           
   680     0070                     ___bmul@multiplicand:	
   681                           ; 1 bytes @ 0x0
   682                           
   683     0070                     _isdigit$818:	
   684                           ; 1 bytes @ 0x0
   685                           
   686     0070                     configOsc@frec:	
   687                           ; 1 bytes @ 0x0
   688                           
   689     0070                     ___lwdiv@divisor:	
   690                           ; 2 bytes @ 0x0
   691                           
   692     0070                     ___xxtofl@val:	
   693                           ; 2 bytes @ 0x0
   694                           
   695                           
   696                           ; 4 bytes @ 0x0
   697     0070                     	ds	1
   698     0071                     ??_Lcd_Cmd:
   699     0071                     ??_Lcd_Write_Char:	
   700                           ; 1 bytes @ 0x1
   701                           
   702     0071                     ??___bmul:	
   703                           ; 1 bytes @ 0x1
   704                           
   705     0071                     spiInit@sClockIdle:	
   706                           ; 1 bytes @ 0x1
   707                           
   708     0071                     ___bmul@product:	
   709                           ; 1 bytes @ 0x1
   710                           
   711     0071                     isdigit@c:	
   712                           ; 1 bytes @ 0x1
   713                           
   714                           
   715                           ; 1 bytes @ 0x1
   716     0071                     	ds	1
   717     0072                     ??_configOsc:
   718     0072                     Lcd_Write_Char@a:	
   719                           ; 1 bytes @ 0x2
   720                           
   721     0072                     spiInit@sTransmitEdge:	
   722                           ; 1 bytes @ 0x2
   723                           
   724     0072                     ___bmul@multiplier:	
   725                           ; 1 bytes @ 0x2
   726                           
   727     0072                     ___lwdiv@dividend:	
   728                           ; 1 bytes @ 0x2
   729                           
   730                           
   731                           ; 2 bytes @ 0x2
   732     0072                     	ds	1
   733     0073                     ??_spiInit:
   734     0073                     ?_Lcd_Write_String:	
   735                           ; 1 bytes @ 0x3
   736                           
   737     0073                     Lcd_Cmd@a:	
   738                           ; 1 bytes @ 0x3
   739                           
   740     0073                     spiInit@sType:	
   741                           ; 1 bytes @ 0x3
   742                           
   743     0073                     Lcd_Write_String@a:	
   744                           ; 1 bytes @ 0x3
   745                           
   746                           
   747                           ; 2 bytes @ 0x3
   748     0073                     	ds	1
   749     0074                     ??_Lcd_Clear:
   750     0074                     ?_Lcd_Set_Cursor:	
   751                           ; 1 bytes @ 0x4
   752                           
   753     0074                     ??_Lcd_Init:	
   754                           ; 1 bytes @ 0x4
   755                           
   756     0074                     ??___lwdiv:	
   757                           ; 1 bytes @ 0x4
   758                           
   759     0074                     ??___xxtofl:	
   760                           ; 1 bytes @ 0x4
   761                           
   762     0074                     Lcd_Set_Cursor@b:	
   763                           ; 1 bytes @ 0x4
   764                           
   765     0074                     ___lwdiv@quotient:	
   766                           ; 1 bytes @ 0x4
   767                           
   768                           
   769                           ; 2 bytes @ 0x4
   770     0074                     	ds	1
   771     0075                     ??_Lcd_Set_Cursor:
   772     0075                     ??_Lcd_Write_String:	
   773                           ; 1 bytes @ 0x5
   774                           
   775     0075                     Lcd_Set_Cursor@a:	
   776                           ; 1 bytes @ 0x5
   777                           
   778                           
   779                           ; 1 bytes @ 0x5
   780     0075                     	ds	1
   781     0076                     ??_setup:
   782     0076                     Lcd_Set_Cursor@temp:	
   783                           ; 1 bytes @ 0x6
   784                           
   785     0076                     ___lwdiv@counter:	
   786                           ; 1 bytes @ 0x6
   787                           
   788                           
   789                           ; 1 bytes @ 0x6
   790     0076                     	ds	1
   791     0077                     ?___lwmod:
   792     0077                     ___lwmod@divisor:	
   793                           ; 2 bytes @ 0x7
   794                           
   795                           
   796                           ; 2 bytes @ 0x7
   797     0077                     	ds	1
   798     0078                     ___xxtofl@sign:
   799     0078                     Lcd_Write_String@i:	
   800                           ; 1 bytes @ 0x8
   801                           
   802                           
   803                           ; 2 bytes @ 0x8
   804     0078                     	ds	1
   805     0079                     ___xxtofl@exp:
   806     0079                     ___lwmod@dividend:	
   807                           ; 1 bytes @ 0x9
   808                           
   809                           
   810                           ; 2 bytes @ 0x9
   811     0079                     	ds	1
   812     007A                     ___xxtofl@arg:
   813                           
   814                           ; 4 bytes @ 0xA
   815     007A                     	ds	1
   816     007B                     ??___lwmod:
   817     007B                     ___lwmod@counter:	
   818                           ; 1 bytes @ 0xB
   819                           
   820                           
   821                           ; 1 bytes @ 0xB
   822     007B                     	ds	3
   823                           
   824                           	psect	cstackBANK0
   825     0036                     __pcstackBANK0:
   826     0036                     ?_sprintf:
   827     0036                     sprintf@f:	
   828                           ; 2 bytes @ 0x0
   829                           
   830                           
   831                           ; 1 bytes @ 0x0
   832     0036                     	ds	3
   833     0039                     ??_sprintf:
   834                           
   835                           ; 1 bytes @ 0x3
   836     0039                     	ds	3
   837     003C                     sprintf@ap:
   838                           
   839                           ; 1 bytes @ 0x6
   840     003C                     	ds	1
   841     003D                     sprintf@flag:
   842                           
   843                           ; 1 bytes @ 0x7
   844     003D                     	ds	1
   845     003E                     sprintf@sp:
   846                           
   847                           ; 1 bytes @ 0x8
   848     003E                     	ds	1
   849     003F                     sprintf@val:
   850                           
   851                           ; 2 bytes @ 0x9
   852     003F                     	ds	2
   853     0041                     sprintf@prec:
   854                           
   855                           ; 1 bytes @ 0xB
   856     0041                     	ds	1
   857     0042                     sprintf@c:
   858                           
   859                           ; 1 bytes @ 0xC
   860     0042                     	ds	1
   861     0043                     ??_main:
   862                           
   863                           ; 1 bytes @ 0xD
   864     0043                     	ds	4
   865                           
   866                           	psect	maintext
   867     05B3                     __pmaintext:	
   868 ;;
   869 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   870 ;;
   871 ;; *************** function _main *****************
   872 ;; Defined at:
   873 ;;		line 69 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;                  1    wreg      void 
   880 ;; Registers used:
   881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : B00/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   887 ;;      Params:         0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0
   889 ;;      Temps:          0       4       0       0       0
   890 ;;      Totals:         0       4       0       0       0
   891 ;;Total ram usage:        4 bytes
   892 ;; Hardware stack levels required when called: 4
   893 ;; This function calls:
   894 ;;		_Lcd_Clear
   895 ;;		_Lcd_Set_Cursor
   896 ;;		_Lcd_Write_String
   897 ;;		___xxtofl
   898 ;;		_setup
   899 ;;		_spiRead
   900 ;;		_spiWrite
   901 ;;		_sprintf
   902 ;; This function is called by:
   903 ;;		Startup code after reset
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907     05B3                     _main:	
   908                           ;psect for function _main
   909                           
   910     05B3                     l1618:	
   911                           ;incstack = 0
   912                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   913                           
   914                           
   915                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 70:     setup(
      +                          );
   916     05B3  120A  118A  2326  120A  118A  	fcall	_setup
   917     05B8                     l1620:
   918                           
   919                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 76:         if
      +                           (slaveSelect == 1){
   920     05B8  1283               	bcf	3,5	;RP0=0, select bank0
   921     05B9  1303               	bcf	3,6	;RP1=0, select bank0
   922     05BA  0347               	decf	_slaveSelect,w
   923     05BB  1D03               	btfss	3,2
   924     05BC  2DBE               	goto	u1341
   925     05BD  2DBF               	goto	u1340
   926     05BE                     u1341:
   927     05BE  2DFA               	goto	l143
   928     05BF                     u1340:
   929     05BF                     l1622:
   930                           
   931                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 77:           
      +                            PORTCbits.RC2 = 0;
   932     05BF  1107               	bcf	7,2	;volatile
   933     05C0                     l1624:
   934                           
   935                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 78:           
      +                            _delay((unsigned long)((1)*(8000000/4000.0)));
   936     05C0  3003               	movlw	3
   937     05C1  1283               	bcf	3,5	;RP0=0, select bank0
   938     05C2  1303               	bcf	3,6	;RP1=0, select bank0
   939     05C3  00C4               	movwf	??_main+1
   940     05C4  3097               	movlw	151
   941     05C5  00C3               	movwf	??_main
   942     05C6                     u1357:
   943     05C6  0BC3               	decfsz	??_main,f
   944     05C7  2DC6               	goto	u1357
   945     05C8  0BC4               	decfsz	??_main+1,f
   946     05C9  2DC6               	goto	u1357
   947     05CA                     l1626:
   948                           
   949                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 80:           
      +                            spiWrite(slaveSelect);
   950     05CA  1283               	bcf	3,5	;RP0=0, select bank0
   951     05CB  1303               	bcf	3,6	;RP1=0, select bank0
   952     05CC  0847               	movf	_slaveSelect,w
   953     05CD  120A  118A  226E  120A  118A  	fcall	_spiWrite
   954     05D2                     l1628:
   955                           
   956                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 81:           
      +                            s1 = spiRead();
   957     05D2  120A  118A  2283  120A  118A  	fcall	_spiRead
   958     05D7  1283               	bcf	3,5	;RP0=0, select bank0
   959     05D8  1303               	bcf	3,6	;RP1=0, select bank0
   960     05D9  00A4               	movwf	_s1
   961                           
   962                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 83:           
      +                            _delay((unsigned long)((1)*(8000000/4000.0)));
   963     05DA  3003               	movlw	3
   964     05DB  1283               	bcf	3,5	;RP0=0, select bank0
   965     05DC  1303               	bcf	3,6	;RP1=0, select bank0
   966     05DD  00C4               	movwf	??_main+1
   967     05DE  3097               	movlw	151
   968     05DF  00C3               	movwf	??_main
   969     05E0                     u1367:
   970     05E0  0BC3               	decfsz	??_main,f
   971     05E1  2DE0               	goto	u1367
   972     05E2  0BC4               	decfsz	??_main+1,f
   973     05E3  2DE0               	goto	u1367
   974     05E4                     l1630:
   975                           
   976                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 85:           
      +                            PORTCbits.RC2 = 1;
   977     05E4  1283               	bcf	3,5	;RP0=0, select bank0
   978     05E5  1303               	bcf	3,6	;RP1=0, select bank0
   979     05E6  1507               	bsf	7,2	;volatile
   980                           
   981                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 86:           
      +                            _delay((unsigned long)((100)*(8000000/4000.0)));
   982     05E7  3002               	movlw	2
   983     05E8  1283               	bcf	3,5	;RP0=0, select bank0
   984     05E9  1303               	bcf	3,6	;RP1=0, select bank0
   985     05EA  00C5               	movwf	??_main+2
   986     05EB  3004               	movlw	4
   987     05EC  00C4               	movwf	??_main+1
   988     05ED  30B9               	movlw	185
   989     05EE  00C3               	movwf	??_main
   990     05EF                     u1377:
   991     05EF  0BC3               	decfsz	??_main,f
   992     05F0  2DEF               	goto	u1377
   993     05F1  0BC4               	decfsz	??_main+1,f
   994     05F2  2DEF               	goto	u1377
   995     05F3  0BC5               	decfsz	??_main+2,f
   996     05F4  2DEF               	goto	u1377
   997     05F5  2DF6               	nop2
   998     05F6                     l1632:
   999                           
  1000                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 87:           
      +                            slaveSelect = 0;
  1001     05F6  1283               	bcf	3,5	;RP0=0, select bank0
  1002     05F7  1303               	bcf	3,6	;RP1=0, select bank0
  1003     05F8  01C7               	clrf	_slaveSelect
  1004                           
  1005                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 88:        }
  1006     05F9  2E50               	goto	l1648
  1007     05FA                     l143:	
  1008                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 89:         el
      +                          se {
  1009                           
  1010                           
  1011                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 90:           
      +                            PORTCbits.RC2 = 0;
  1012     05FA  1107               	bcf	7,2	;volatile
  1013     05FB                     l1634:
  1014                           
  1015                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 91:           
      +                            _delay((unsigned long)((1)*(8000000/4000.0)));
  1016     05FB  3003               	movlw	3
  1017     05FC  1283               	bcf	3,5	;RP0=0, select bank0
  1018     05FD  1303               	bcf	3,6	;RP1=0, select bank0
  1019     05FE  00C4               	movwf	??_main+1
  1020     05FF  3097               	movlw	151
  1021     0600  00C3               	movwf	??_main
  1022     0601                     u1387:
  1023     0601  0BC3               	decfsz	??_main,f
  1024     0602  2E01               	goto	u1387
  1025     0603  0BC4               	decfsz	??_main+1,f
  1026     0604  2E01               	goto	u1387
  1027     0605                     l1636:
  1028                           
  1029                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 93:           
      +                            spiWrite(slaveSelect);
  1030     0605  1283               	bcf	3,5	;RP0=0, select bank0
  1031     0606  1303               	bcf	3,6	;RP1=0, select bank0
  1032     0607  0847               	movf	_slaveSelect,w
  1033     0608  120A  118A  226E  120A  118A  	fcall	_spiWrite
  1034     060D                     l1638:
  1035                           
  1036                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 94:           
      +                            s2 = spiRead();
  1037     060D  120A  118A  2283  120A  118A  	fcall	_spiRead
  1038     0612  1283               	bcf	3,5	;RP0=0, select bank0
  1039     0613  1303               	bcf	3,6	;RP1=0, select bank0
  1040     0614  00C3               	movwf	??_main
  1041     0615  01C4               	clrf	??_main+1
  1042     0616  01C5               	clrf	??_main+2
  1043     0617  01C6               	clrf	??_main+3
  1044     0618  0846               	movf	??_main+3,w
  1045     0619  00F3               	movwf	___xxtofl@val+3
  1046     061A  0845               	movf	??_main+2,w
  1047     061B  00F2               	movwf	___xxtofl@val+2
  1048     061C  0844               	movf	??_main+1,w
  1049     061D  00F1               	movwf	___xxtofl@val+1
  1050     061E  0843               	movf	??_main,w
  1051     061F  00F0               	movwf	___xxtofl@val
  1052     0620  3000               	movlw	0
  1053     0621  120A  118A  24FB  120A  118A  	fcall	___xxtofl
  1054     0626  0873               	movf	?___xxtofl+3,w
  1055     0627  1283               	bcf	3,5	;RP0=0, select bank0
  1056     0628  1303               	bcf	3,6	;RP1=0, select bank0
  1057     0629  00A3               	movwf	_s2+3
  1058     062A  0872               	movf	?___xxtofl+2,w
  1059     062B  00A2               	movwf	_s2+2
  1060     062C  0871               	movf	?___xxtofl+1,w
  1061     062D  00A1               	movwf	_s2+1
  1062     062E  0870               	movf	?___xxtofl,w
  1063     062F  00A0               	movwf	_s2
  1064     0630                     l1640:
  1065                           
  1066                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 95:           
      +                            _delay((unsigned long)((1)*(8000000/4000.0)));
  1067     0630  3003               	movlw	3
  1068     0631  1283               	bcf	3,5	;RP0=0, select bank0
  1069     0632  1303               	bcf	3,6	;RP1=0, select bank0
  1070     0633  00C4               	movwf	??_main+1
  1071     0634  3097               	movlw	151
  1072     0635  00C3               	movwf	??_main
  1073     0636                     u1397:
  1074     0636  0BC3               	decfsz	??_main,f
  1075     0637  2E36               	goto	u1397
  1076     0638  0BC4               	decfsz	??_main+1,f
  1077     0639  2E36               	goto	u1397
  1078     063A                     l1642:
  1079                           
  1080                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 97:           
      +                            PORTCbits.RC2 = 1;
  1081     063A  1283               	bcf	3,5	;RP0=0, select bank0
  1082     063B  1303               	bcf	3,6	;RP1=0, select bank0
  1083     063C  1507               	bsf	7,2	;volatile
  1084     063D                     l1644:
  1085                           
  1086                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 98:           
      +                            _delay((unsigned long)((100)*(8000000/4000.0)));
  1087     063D  3002               	movlw	2
  1088     063E  1283               	bcf	3,5	;RP0=0, select bank0
  1089     063F  1303               	bcf	3,6	;RP1=0, select bank0
  1090     0640  00C5               	movwf	??_main+2
  1091     0641  3004               	movlw	4
  1092     0642  00C4               	movwf	??_main+1
  1093     0643  30B9               	movlw	185
  1094     0644  00C3               	movwf	??_main
  1095     0645                     u1407:
  1096     0645  0BC3               	decfsz	??_main,f
  1097     0646  2E45               	goto	u1407
  1098     0647  0BC4               	decfsz	??_main+1,f
  1099     0648  2E45               	goto	u1407
  1100     0649  0BC5               	decfsz	??_main+2,f
  1101     064A  2E45               	goto	u1407
  1102     064B  2E4C               	nop2
  1103     064C                     l1646:
  1104                           
  1105                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 99:           
      +                            slaveSelect = 1;
  1106     064C  1283               	bcf	3,5	;RP0=0, select bank0
  1107     064D  1303               	bcf	3,6	;RP1=0, select bank0
  1108     064E  01C7               	clrf	_slaveSelect
  1109     064F  0AC7               	incf	_slaveSelect,f
  1110     0650                     l1648:
  1111                           
  1112                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 102:        PO
      +                          RTB = s1;
  1113     0650  0824               	movf	_s1,w
  1114     0651  0086               	movwf	6	;volatile
  1115     0652                     l1650:
  1116                           
  1117                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 103:        Lc
      +                          d_Clear();
  1118     0652  120A  118A  228C  120A  118A  	fcall	_Lcd_Clear
  1119     0657                     l1652:
  1120                           
  1121                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 104:        Lc
      +                          d_Set_Cursor(1,1);
  1122     0657  01F4               	clrf	Lcd_Set_Cursor@b
  1123     0658  0AF4               	incf	Lcd_Set_Cursor@b,f
  1124     0659  3001               	movlw	1
  1125     065A  120A  118A  2306  120A  118A  	fcall	_Lcd_Set_Cursor
  1126     065F                     l1654:
  1127                           
  1128                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 105:        Lc
      +                          d_Write_String("Slave1 Pot:");
  1129     065F  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1130     0660  00F3               	movwf	Lcd_Write_String@a
  1131     0661  3080               	movlw	128
  1132     0662  00F4               	movwf	Lcd_Write_String@a+1
  1133     0663  120A  118A  23C8  120A  118A  	fcall	_Lcd_Write_String
  1134     0668                     l1656:
  1135                           
  1136                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 106:        Lc
      +                          d_Set_Cursor(2,1);
  1137     0668  01F4               	clrf	Lcd_Set_Cursor@b
  1138     0669  0AF4               	incf	Lcd_Set_Cursor@b,f
  1139     066A  3002               	movlw	2
  1140     066B  120A  118A  2306  120A  118A  	fcall	_Lcd_Set_Cursor
  1141     0670                     l1658:
  1142                           
  1143                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 107:        sp
      +                          rintf(volt, "%.2d ", s1);
  1144     0670  3017               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1145     0671  1283               	bcf	3,5	;RP0=0, select bank0
  1146     0672  1303               	bcf	3,6	;RP1=0, select bank0
  1147     0673  00B6               	movwf	sprintf@f
  1148     0674  0824               	movf	_s1,w
  1149     0675  00C3               	movwf	??_main
  1150     0676  01C4               	clrf	??_main+1
  1151     0677  0843               	movf	??_main,w
  1152     0678  00B7               	movwf	?_sprintf+1
  1153     0679  0844               	movf	??_main+1,w
  1154     067A  00B8               	movwf	?_sprintf+2
  1155     067B  3026               	movlw	(low (_volt| 0))& (0+255)
  1156     067C  120A  118A  269C  120A  118A  	fcall	_sprintf
  1157     0681                     l1660:
  1158                           
  1159                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 108:        Lc
      +                          d_Write_String(volt);
  1160     0681  3026               	movlw	(low (_volt| 0))& (0+255)
  1161     0682  00F3               	movwf	Lcd_Write_String@a
  1162     0683  3000               	movlw	0
  1163     0684  00F4               	movwf	Lcd_Write_String@a+1
  1164     0685  120A  118A  23C8  120A  118A  	fcall	_Lcd_Write_String
  1165     068A                     l1662:
  1166                           
  1167                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 109:        _d
      +                          elay((unsigned long)((500)*(8000000/4000.0)));
  1168     068A  3006               	movlw	6
  1169     068B  1283               	bcf	3,5	;RP0=0, select bank0
  1170     068C  1303               	bcf	3,6	;RP1=0, select bank0
  1171     068D  00C5               	movwf	??_main+2
  1172     068E  3013               	movlw	19
  1173     068F  00C4               	movwf	??_main+1
  1174     0690  30AD               	movlw	173
  1175     0691  00C3               	movwf	??_main
  1176     0692                     u1417:
  1177     0692  0BC3               	decfsz	??_main,f
  1178     0693  2E92               	goto	u1417
  1179     0694  0BC4               	decfsz	??_main+1,f
  1180     0695  2E92               	goto	u1417
  1181     0696  0BC5               	decfsz	??_main+2,f
  1182     0697  2E92               	goto	u1417
  1183     0698  2DB8               	goto	l1620
  1184     0699  120A  118A  2800   	ljmp	start
  1185     069C                     __end_of_main:
  1186                           
  1187                           	psect	text1
  1188     069C                     __ptext1:	
  1189 ;; *************** function _sprintf *****************
  1190 ;; Defined at:
  1191 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  sp              1    wreg     PTR unsigned char 
  1194 ;;		 -> volt(16), 
  1195 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1196 ;;		 -> STR_2(6), 
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;  sp              1    8[BANK0 ] PTR unsigned char 
  1199 ;;		 -> volt(16), 
  1200 ;;  tmpval          4    0        struct .
  1201 ;;  val             2    9[BANK0 ] unsigned int 
  1202 ;;  cp              2    0        PTR const unsigned char 
  1203 ;;  len             2    0        unsigned int 
  1204 ;;  c               1   12[BANK0 ] unsigned char 
  1205 ;;  prec            1   11[BANK0 ] char 
  1206 ;;  flag            1    7[BANK0 ] unsigned char 
  1207 ;;  ap              1    6[BANK0 ] PTR void [1]
  1208 ;;		 -> ?_sprintf(2), 
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  2    0[BANK0 ] int 
  1211 ;; Registers used:
  1212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1218 ;;      Params:         0       3       0       0       0
  1219 ;;      Locals:         0       7       0       0       0
  1220 ;;      Temps:          0       3       0       0       0
  1221 ;;      Totals:         0      13       0       0       0
  1222 ;;Total ram usage:       13 bytes
  1223 ;; Hardware stack levels used: 1
  1224 ;; Hardware stack levels required when called: 1
  1225 ;; This function calls:
  1226 ;;		___bmul
  1227 ;;		___lwdiv
  1228 ;;		___lwmod
  1229 ;;		_isdigit
  1230 ;; This function is called by:
  1231 ;;		_main
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235     069C                     _sprintf:	
  1236                           ;psect for function _sprintf
  1237                           
  1238                           
  1239                           ;incstack = 0
  1240                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1241                           ;sprintf@sp stored from wreg
  1242     069C  1283               	bcf	3,5	;RP0=0, select bank0
  1243     069D  1303               	bcf	3,6	;RP1=0, select bank0
  1244     069E  00BE               	movwf	sprintf@sp
  1245     069F                     l1472:
  1246                           
  1247                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1248     069F  3037               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1249     06A0  00BC               	movwf	sprintf@ap
  1250                           
  1251                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1252     06A1  2FD8               	goto	l1554
  1253     06A2                     l1474:
  1254                           
  1255                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1256     06A2  3025               	movlw	37
  1257     06A3  0642               	xorwf	sprintf@c,w
  1258     06A4  1903               	btfsc	3,2
  1259     06A5  2EA7               	goto	u1071
  1260     06A6  2EA8               	goto	u1070
  1261     06A7                     u1071:
  1262     06A7  2EB2               	goto	l1480
  1263     06A8                     u1070:
  1264     06A8                     l1476:
  1265                           
  1266                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1267     06A8  083E               	movf	sprintf@sp,w
  1268     06A9  0084               	movwf	4
  1269     06AA  0842               	movf	sprintf@c,w
  1270     06AB  1383               	bcf	3,7	;select IRP bank0
  1271     06AC  0080               	movwf	0
  1272     06AD                     l1478:
  1273     06AD  3001               	movlw	1
  1274     06AE  00FF               	movwf	btemp+1
  1275     06AF  087F               	movf	btemp+1,w
  1276     06B0  07BE               	addwf	sprintf@sp,f
  1277                           
  1278                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1279     06B1  2FD8               	goto	l1554
  1280     06B2                     l1480:
  1281                           
  1282                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1283     06B2  01BD               	clrf	sprintf@flag
  1284     06B3                     l1482:
  1285                           
  1286                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1287     06B3  0836               	movf	sprintf@f,w
  1288     06B4  0084               	movwf	4
  1289     06B5  120A  118A  200D  120A  118A  	fcall	stringdir
  1290     06BA  3A2E               	xorlw	46
  1291     06BB  1D03               	skipz
  1292     06BC  2EBE               	goto	u1081
  1293     06BD  2EBF               	goto	u1080
  1294     06BE                     u1081:
  1295     06BE  2EF2               	goto	l1496
  1296     06BF                     u1080:
  1297     06BF                     l1484:
  1298                           
  1299                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 630:    f++;
  1300     06BF  3001               	movlw	1
  1301     06C0  00FF               	movwf	btemp+1
  1302     06C1  087F               	movf	btemp+1,w
  1303     06C2  07B6               	addwf	sprintf@f,f
  1304     06C3                     l1486:
  1305                           
  1306                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1307     06C3  01C1               	clrf	sprintf@prec
  1308                           
  1309                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1310     06C4  2EE1               	goto	l1494
  1311     06C5                     l1488:
  1312                           
  1313                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1314     06C5  1283               	bcf	3,5	;RP0=0, select bank0
  1315     06C6  1303               	bcf	3,6	;RP1=0, select bank0
  1316     06C7  0841               	movf	sprintf@prec,w
  1317     06C8  00F0               	movwf	___bmul@multiplicand
  1318     06C9  300A               	movlw	10
  1319     06CA  120A  118A  22AB  120A  118A  	fcall	___bmul
  1320     06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1321     06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1322     06D1  00C1               	movwf	sprintf@prec
  1323     06D2                     l1490:
  1324                           
  1325                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1326     06D2  0836               	movf	sprintf@f,w
  1327     06D3  0084               	movwf	4
  1328     06D4  120A  118A  200D  120A  118A  	fcall	stringdir
  1329     06D9  3ED0               	addlw	-48
  1330     06DA  00FF               	movwf	btemp+1
  1331     06DB  087F               	movf	btemp+1,w
  1332     06DC  07C1               	addwf	sprintf@prec,f
  1333     06DD                     l1492:
  1334     06DD  3001               	movlw	1
  1335     06DE  00FF               	movwf	btemp+1
  1336     06DF  087F               	movf	btemp+1,w
  1337     06E0  07B6               	addwf	sprintf@f,f
  1338     06E1                     l1494:
  1339                           
  1340                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1341     06E1  0836               	movf	sprintf@f,w
  1342     06E2  0084               	movwf	4
  1343     06E3  120A  118A  200D  120A  118A  	fcall	stringdir
  1344     06E8  120A  118A  2299  120A  118A  	fcall	_isdigit
  1345     06ED  1803               	btfsc	3,0
  1346     06EE  2EF0               	goto	u1091
  1347     06EF  2EF1               	goto	u1090
  1348     06F0                     u1091:
  1349     06F0  2EC5               	goto	l1488
  1350     06F1                     u1090:
  1351     06F1  2EF3               	goto	l1500
  1352     06F2                     l1496:
  1353                           
  1354                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1355     06F2  01C1               	clrf	sprintf@prec
  1356     06F3                     l1500:
  1357     06F3  3001               	movlw	1
  1358     06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1359     06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1360     06F6  07B6               	addwf	sprintf@f,f
  1361     06F7  30FF               	movlw	-1
  1362     06F8  0736               	addwf	sprintf@f,w
  1363     06F9  0084               	movwf	4
  1364     06FA  120A  118A  200D  120A  118A  	fcall	stringdir
  1365     06FF  00C2               	movwf	sprintf@c
  1366     0700  00B9               	movwf	??_sprintf
  1367     0701  01BA               	clrf	??_sprintf+1
  1368                           
  1369                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1370                           ; Switch size 1, requested type "simple"
  1371                           ; Number of cases is 1, Range of values is 0 to 0
  1372                           ; switch strategies available:
  1373                           ; Name         Instructions Cycles
  1374                           ; simple_byte            4     3 (average)
  1375                           ; direct_byte           11     8 (fixed)
  1376                           ; jumptable            260     6 (fixed)
  1377                           ;	Chosen strategy is simple_byte
  1378     0702  083A               	movf	??_sprintf+1,w
  1379     0703  3A00               	xorlw	0	; case 0
  1380     0704  1903               	skipnz
  1381     0705  2F07               	goto	l1694
  1382     0706  2FD8               	goto	l1554
  1383     0707                     l1694:
  1384                           
  1385                           ; Switch size 1, requested type "simple"
  1386                           ; Number of cases is 3, Range of values is 0 to 105
  1387                           ; switch strategies available:
  1388                           ; Name         Instructions Cycles
  1389                           ; simple_byte           10     6 (average)
  1390                           ; jumptable            260     6 (fixed)
  1391                           ;	Chosen strategy is simple_byte
  1392     0707  0839               	movf	??_sprintf,w
  1393     0708  3A00               	xorlw	0	; case 0
  1394     0709  1903               	skipnz
  1395     070A  2FE8               	goto	l1556
  1396     070B  3A64               	xorlw	100	; case 100
  1397     070C  1903               	skipnz
  1398     070D  2F12               	goto	l1502
  1399     070E  3A0D               	xorlw	13	; case 105
  1400     070F  1903               	skipnz
  1401     0710  2F12               	goto	l1502
  1402     0711  2FD8               	goto	l1554
  1403     0712                     l1502:
  1404                           
  1405                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1406     0712  083C               	movf	sprintf@ap,w
  1407     0713  0084               	movwf	4
  1408     0714  1383               	bcf	3,7	;select IRP bank0
  1409     0715  0800               	movf	0,w
  1410     0716  00BF               	movwf	sprintf@val
  1411     0717  0A84               	incf	4,f
  1412     0718  0800               	movf	0,w
  1413     0719  00C0               	movwf	sprintf@val+1
  1414     071A                     l1504:
  1415     071A  3002               	movlw	2
  1416     071B  00FF               	movwf	btemp+1
  1417     071C  087F               	movf	btemp+1,w
  1418     071D  07BC               	addwf	sprintf@ap,f
  1419     071E                     l1506:
  1420                           
  1421                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1422     071E  1FC0               	btfss	sprintf@val+1,7
  1423     071F  2F21               	goto	u1101
  1424     0720  2F22               	goto	u1100
  1425     0721                     u1101:
  1426     0721  2F2B               	goto	l1512
  1427     0722                     u1100:
  1428     0722                     l1508:
  1429                           
  1430                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1431     0722  3003               	movlw	3
  1432     0723  00FF               	movwf	btemp+1
  1433     0724  087F               	movf	btemp+1,w
  1434     0725  04BD               	iorwf	sprintf@flag,f
  1435     0726                     l1510:
  1436                           
  1437                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1438     0726  09BF               	comf	sprintf@val,f
  1439     0727  09C0               	comf	sprintf@val+1,f
  1440     0728  0ABF               	incf	sprintf@val,f
  1441     0729  1903               	skipnz
  1442     072A  0AC0               	incf	sprintf@val+1,f
  1443     072B                     l1512:
  1444                           
  1445                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  1446     072B  0841               	movf	sprintf@prec,w
  1447     072C  1D03               	btfss	3,2
  1448     072D  2F2F               	goto	u1111
  1449     072E  2F30               	goto	u1110
  1450     072F                     u1111:
  1451     072F  2F3A               	goto	l1518
  1452     0730                     u1110:
  1453     0730                     l1514:
  1454     0730  083F               	movf	sprintf@val,w
  1455     0731  0440               	iorwf	sprintf@val+1,w
  1456     0732  1D03               	btfss	3,2
  1457     0733  2F35               	goto	u1121
  1458     0734  2F36               	goto	u1120
  1459     0735                     u1121:
  1460     0735  2F3A               	goto	l1518
  1461     0736                     u1120:
  1462     0736                     l1516:
  1463                           
  1464                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  1465     0736  3001               	movlw	1
  1466     0737  00FF               	movwf	btemp+1
  1467     0738  087F               	movf	btemp+1,w
  1468     0739  07C1               	addwf	sprintf@prec,f
  1469     073A                     l1518:
  1470                           
  1471                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1472     073A  01C2               	clrf	sprintf@c
  1473     073B  0AC2               	incf	sprintf@c,f
  1474     073C                     l1524:
  1475                           
  1476                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1477     073C  0842               	movf	sprintf@c,w
  1478     073D  00B9               	movwf	??_sprintf
  1479     073E  0739               	addwf	??_sprintf,w
  1480     073F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1481     0740  0084               	movwf	4
  1482     0741  120A  118A  200D  120A  118A  	fcall	stringdir
  1483     0746  00BA               	movwf	??_sprintf+1
  1484     0747  120A  118A  200D  120A  118A  	fcall	stringdir
  1485     074C  00BB               	movwf	??_sprintf+2
  1486     074D  083B               	movf	??_sprintf+2,w
  1487     074E  0240               	subwf	sprintf@val+1,w
  1488     074F  1D03               	skipz
  1489     0750  2F53               	goto	u1135
  1490     0751  083A               	movf	??_sprintf+1,w
  1491     0752  023F               	subwf	sprintf@val,w
  1492     0753                     u1135:
  1493     0753  1803               	skipnc
  1494     0754  2F56               	goto	u1131
  1495     0755  2F57               	goto	u1130
  1496     0756                     u1131:
  1497     0756  2F58               	goto	l1528
  1498     0757                     u1130:
  1499     0757  2F62               	goto	l1532
  1500     0758                     l1528:
  1501     0758  3001               	movlw	1
  1502     0759  00FF               	movwf	btemp+1
  1503     075A  087F               	movf	btemp+1,w
  1504     075B  07C2               	addwf	sprintf@c,f
  1505     075C                     l1530:
  1506     075C  3005               	movlw	5
  1507     075D  0642               	xorwf	sprintf@c,w
  1508     075E  1D03               	btfss	3,2
  1509     075F  2F61               	goto	u1141
  1510     0760  2F62               	goto	u1140
  1511     0761                     u1141:
  1512     0761  2F3C               	goto	l1524
  1513     0762                     u1140:
  1514     0762                     l1532:
  1515                           
  1516                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  1517     0762  0841               	movf	sprintf@prec,w
  1518     0763  00B9               	movwf	??_sprintf
  1519     0764  01BA               	clrf	??_sprintf+1
  1520     0765  1BB9               	btfsc	??_sprintf,7
  1521     0766  03BA               	decf	??_sprintf+1,f
  1522     0767  083A               	movf	??_sprintf+1,w
  1523     0768  3A80               	xorlw	128
  1524     0769  3C80               	sublw	128
  1525     076A  1D03               	skipz
  1526     076B  2F6E               	goto	u1155
  1527     076C  0839               	movf	??_sprintf,w
  1528     076D  0242               	subwf	sprintf@c,w
  1529     076E                     u1155:
  1530     076E  1803               	skipnc
  1531     076F  2F71               	goto	u1151
  1532     0770  2F72               	goto	u1150
  1533     0771                     u1151:
  1534     0771  2F73               	goto	l1536
  1535     0772                     u1150:
  1536     0772                     l1534:
  1537     0772  2F8B               	goto	l1540
  1538     0773                     l1536:
  1539     0773  1283               	bcf	3,5	;RP0=0, select bank0
  1540     0774  1303               	bcf	3,6	;RP1=0, select bank0
  1541     0775  0841               	movf	sprintf@prec,w
  1542     0776  00B9               	movwf	??_sprintf
  1543     0777  01BA               	clrf	??_sprintf+1
  1544     0778  1BB9               	btfsc	??_sprintf,7
  1545     0779  03BA               	decf	??_sprintf+1,f
  1546     077A  083A               	movf	??_sprintf+1,w
  1547     077B  3A80               	xorlw	128
  1548     077C  00BB               	movwf	??_sprintf+2
  1549     077D  3080               	movlw	128
  1550     077E  023B               	subwf	??_sprintf+2,w
  1551     077F  1D03               	skipz
  1552     0780  2F83               	goto	u1165
  1553     0781  0842               	movf	sprintf@c,w
  1554     0782  0239               	subwf	??_sprintf,w
  1555     0783                     u1165:
  1556     0783  1803               	skipnc
  1557     0784  2F86               	goto	u1161
  1558     0785  2F87               	goto	u1160
  1559     0786                     u1161:
  1560     0786  2F8B               	goto	l1540
  1561     0787                     u1160:
  1562     0787                     l1538:
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  1565     0787  1283               	bcf	3,5	;RP0=0, select bank0
  1566     0788  1303               	bcf	3,6	;RP1=0, select bank0
  1567     0789  0842               	movf	sprintf@c,w
  1568     078A  00C1               	movwf	sprintf@prec
  1569     078B                     l1540:
  1570                           
  1571                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1572     078B  1283               	bcf	3,5	;RP0=0, select bank0
  1573     078C  1303               	bcf	3,6	;RP1=0, select bank0
  1574     078D  083D               	movf	sprintf@flag,w
  1575     078E  3903               	andlw	3
  1576     078F  1903               	btfsc	3,2
  1577     0790  2F92               	goto	u1171
  1578     0791  2F93               	goto	u1170
  1579     0792                     u1171:
  1580     0792  2FCF               	goto	l1552
  1581     0793                     u1170:
  1582     0793                     l1542:
  1583                           
  1584                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1585     0793  083E               	movf	sprintf@sp,w
  1586     0794  0084               	movwf	4
  1587     0795  302D               	movlw	45
  1588     0796  1383               	bcf	3,7	;select IRP bank0
  1589     0797  0080               	movwf	0
  1590     0798                     l1544:
  1591     0798  3001               	movlw	1
  1592     0799  00FF               	movwf	btemp+1
  1593     079A  087F               	movf	btemp+1,w
  1594     079B  07BE               	addwf	sprintf@sp,f
  1595     079C  2FCF               	goto	l1552
  1596     079D                     l1546:
  1597                           
  1598                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1599     079D  300A               	movlw	10
  1600     079E  00F7               	movwf	___lwmod@divisor
  1601     079F  3000               	movlw	0
  1602     07A0  00F8               	movwf	___lwmod@divisor+1
  1603     07A1  0841               	movf	sprintf@prec,w
  1604     07A2  00B9               	movwf	??_sprintf
  1605     07A3  0739               	addwf	??_sprintf,w
  1606     07A4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1607     07A5  0084               	movwf	4
  1608     07A6  120A  118A  200D  120A  118A  	fcall	stringdir
  1609     07AB  00F0               	movwf	___lwdiv@divisor
  1610     07AC  120A  118A  200D  120A  118A  	fcall	stringdir
  1611     07B1  00F1               	movwf	___lwdiv@divisor+1
  1612     07B2  0840               	movf	sprintf@val+1,w
  1613     07B3  00F3               	movwf	___lwdiv@dividend+1
  1614     07B4  083F               	movf	sprintf@val,w
  1615     07B5  00F2               	movwf	___lwdiv@dividend
  1616     07B6  120A  118A  240A  120A  118A  	fcall	___lwdiv
  1617     07BB  0871               	movf	?___lwdiv+1,w
  1618     07BC  00FA               	movwf	___lwmod@dividend+1
  1619     07BD  0870               	movf	?___lwdiv,w
  1620     07BE  00F9               	movwf	___lwmod@dividend
  1621     07BF  120A  118A  2350  120A  118A  	fcall	___lwmod
  1622     07C4  0877               	movf	?___lwmod,w
  1623     07C5  3E30               	addlw	48
  1624     07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1625     07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1626     07C8  00C2               	movwf	sprintf@c
  1627     07C9                     l1548:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1630     07C9  083E               	movf	sprintf@sp,w
  1631     07CA  0084               	movwf	4
  1632     07CB  0842               	movf	sprintf@c,w
  1633     07CC  1383               	bcf	3,7	;select IRP bank0
  1634     07CD  0080               	movwf	0
  1635     07CE  2F98               	goto	l1544
  1636     07CF                     l1552:
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1639     07CF  30FF               	movlw	255
  1640     07D0  00FF               	movwf	btemp+1
  1641     07D1  087F               	movf	btemp+1,w
  1642     07D2  07C1               	addwf	sprintf@prec,f
  1643     07D3  0A41               	incf	sprintf@prec,w
  1644     07D4  1D03               	btfss	3,2
  1645     07D5  2FD7               	goto	u1181
  1646     07D6  2FD8               	goto	u1180
  1647     07D7                     u1181:
  1648     07D7  2F9D               	goto	l1546
  1649     07D8                     u1180:
  1650     07D8                     l1554:
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1653     07D8  3001               	movlw	1
  1654     07D9  07B6               	addwf	sprintf@f,f
  1655     07DA  30FF               	movlw	-1
  1656     07DB  0736               	addwf	sprintf@f,w
  1657     07DC  0084               	movwf	4
  1658     07DD  120A  118A  200D  120A  118A  	fcall	stringdir
  1659     07E2  00C2               	movwf	sprintf@c
  1660     07E3  0842               	movf	sprintf@c,w
  1661     07E4  1D03               	btfss	3,2
  1662     07E5  2FE7               	goto	u1191
  1663     07E6  2FE8               	goto	u1190
  1664     07E7                     u1191:
  1665     07E7  2EA2               	goto	l1474
  1666     07E8                     u1190:
  1667     07E8                     l1556:
  1668                           
  1669                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1670     07E8  083E               	movf	sprintf@sp,w
  1671     07E9  0084               	movwf	4
  1672     07EA  1383               	bcf	3,7	;select IRP bank0
  1673     07EB  0180               	clrf	0
  1674     07EC                     l305:
  1675     07EC  0008               	return
  1676     07ED                     __end_of_sprintf:
  1677                           
  1678                           	psect	text2
  1679     0299                     __ptext2:	
  1680 ;; *************** function _isdigit *****************
  1681 ;; Defined at:
  1682 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  c               1    wreg     unsigned char 
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  c               1    1[COMMON] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;		None               void
  1689 ;; Registers used:
  1690 ;;		wreg, status,2, status,0
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1696 ;;      Params:         0       0       0       0       0
  1697 ;;      Locals:         2       0       0       0       0
  1698 ;;      Temps:          0       0       0       0       0
  1699 ;;      Totals:         2       0       0       0       0
  1700 ;;Total ram usage:        2 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; This function calls:
  1703 ;;		Nothing
  1704 ;; This function is called by:
  1705 ;;		_sprintf
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709     0299                     _isdigit:	
  1710                           ;psect for function _isdigit
  1711                           
  1712                           
  1713                           ;incstack = 0
  1714                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1715                           ;isdigit@c stored from wreg
  1716     0299  00F1               	movwf	isdigit@c
  1717     029A                     l1338:
  1718     029A  01F0               	clrf	_isdigit$818
  1719     029B                     l1340:
  1720     029B  303A               	movlw	58
  1721     029C  0271               	subwf	isdigit@c,w
  1722     029D  1803               	skipnc
  1723     029E  2AA0               	goto	u851
  1724     029F  2AA1               	goto	u850
  1725     02A0                     u851:
  1726     02A0  2AA9               	goto	l1346
  1727     02A1                     u850:
  1728     02A1                     l1342:
  1729     02A1  3030               	movlw	48
  1730     02A2  0271               	subwf	isdigit@c,w
  1731     02A3  1C03               	skipc
  1732     02A4  2AA6               	goto	u861
  1733     02A5  2AA7               	goto	u860
  1734     02A6                     u861:
  1735     02A6  2AA9               	goto	l1346
  1736     02A7                     u860:
  1737     02A7                     l1344:
  1738     02A7  01F0               	clrf	_isdigit$818
  1739     02A8  0AF0               	incf	_isdigit$818,f
  1740     02A9                     l1346:
  1741     02A9  0C70               	rrf	_isdigit$818,w
  1742     02AA                     l762:
  1743     02AA  0008               	return
  1744     02AB                     __end_of_isdigit:
  1745                           
  1746                           	psect	text3
  1747     0350                     __ptext3:	
  1748 ;; *************** function ___lwmod *****************
  1749 ;; Defined at:
  1750 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  divisor         2    7[COMMON] unsigned int 
  1753 ;;  dividend        2    9[COMMON] unsigned int 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  counter         1   11[COMMON] unsigned char 
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  2    7[COMMON] unsigned int 
  1758 ;; Registers used:
  1759 ;;		wreg, status,2, status,0, btemp+1
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1765 ;;      Params:         4       0       0       0       0
  1766 ;;      Locals:         1       0       0       0       0
  1767 ;;      Temps:          0       0       0       0       0
  1768 ;;      Totals:         5       0       0       0       0
  1769 ;;Total ram usage:        5 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_sprintf
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778     0350                     ___lwmod:	
  1779                           ;psect for function ___lwmod
  1780                           
  1781     0350                     l1392:	
  1782                           ;incstack = 0
  1783                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1784                           
  1785     0350  0877               	movf	___lwmod@divisor,w
  1786     0351  0478               	iorwf	___lwmod@divisor+1,w
  1787     0352  1903               	btfsc	3,2
  1788     0353  2B55               	goto	u961
  1789     0354  2B56               	goto	u960
  1790     0355                     u961:
  1791     0355  2B85               	goto	l1410
  1792     0356                     u960:
  1793     0356                     l1394:
  1794     0356  01FB               	clrf	___lwmod@counter
  1795     0357  0AFB               	incf	___lwmod@counter,f
  1796     0358  2B64               	goto	l1400
  1797     0359                     l1396:
  1798     0359  3001               	movlw	1
  1799     035A                     u975:
  1800     035A  1003               	clrc
  1801     035B  0DF7               	rlf	___lwmod@divisor,f
  1802     035C  0DF8               	rlf	___lwmod@divisor+1,f
  1803     035D  3EFF               	addlw	-1
  1804     035E  1D03               	skipz
  1805     035F  2B5A               	goto	u975
  1806     0360                     l1398:
  1807     0360  3001               	movlw	1
  1808     0361  00FF               	movwf	btemp+1
  1809     0362  087F               	movf	btemp+1,w
  1810     0363  07FB               	addwf	___lwmod@counter,f
  1811     0364                     l1400:
  1812     0364  1FF8               	btfss	___lwmod@divisor+1,7
  1813     0365  2B67               	goto	u981
  1814     0366  2B68               	goto	u980
  1815     0367                     u981:
  1816     0367  2B59               	goto	l1396
  1817     0368                     u980:
  1818     0368                     l1402:
  1819     0368  0878               	movf	___lwmod@divisor+1,w
  1820     0369  027A               	subwf	___lwmod@dividend+1,w
  1821     036A  1D03               	skipz
  1822     036B  2B6E               	goto	u995
  1823     036C  0877               	movf	___lwmod@divisor,w
  1824     036D  0279               	subwf	___lwmod@dividend,w
  1825     036E                     u995:
  1826     036E  1C03               	skipc
  1827     036F  2B71               	goto	u991
  1828     0370  2B72               	goto	u990
  1829     0371                     u991:
  1830     0371  2B78               	goto	l1406
  1831     0372                     u990:
  1832     0372                     l1404:
  1833     0372  0877               	movf	___lwmod@divisor,w
  1834     0373  02F9               	subwf	___lwmod@dividend,f
  1835     0374  0878               	movf	___lwmod@divisor+1,w
  1836     0375  1C03               	skipc
  1837     0376  03FA               	decf	___lwmod@dividend+1,f
  1838     0377  02FA               	subwf	___lwmod@dividend+1,f
  1839     0378                     l1406:
  1840     0378  3001               	movlw	1
  1841     0379                     u1005:
  1842     0379  1003               	clrc
  1843     037A  0CF8               	rrf	___lwmod@divisor+1,f
  1844     037B  0CF7               	rrf	___lwmod@divisor,f
  1845     037C  3EFF               	addlw	-1
  1846     037D  1D03               	skipz
  1847     037E  2B79               	goto	u1005
  1848     037F                     l1408:
  1849     037F  3001               	movlw	1
  1850     0380  02FB               	subwf	___lwmod@counter,f
  1851     0381  1D03               	btfss	3,2
  1852     0382  2B84               	goto	u1011
  1853     0383  2B85               	goto	u1010
  1854     0384                     u1011:
  1855     0384  2B68               	goto	l1402
  1856     0385                     u1010:
  1857     0385                     l1410:
  1858     0385  087A               	movf	___lwmod@dividend+1,w
  1859     0386  00F8               	movwf	?___lwmod+1
  1860     0387  0879               	movf	___lwmod@dividend,w
  1861     0388  00F7               	movwf	?___lwmod
  1862     0389                     l591:
  1863     0389  0008               	return
  1864     038A                     __end_of___lwmod:
  1865                           
  1866                           	psect	text4
  1867     040A                     __ptext4:	
  1868 ;; *************** function ___lwdiv *****************
  1869 ;; Defined at:
  1870 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  divisor         2    0[COMMON] unsigned int 
  1873 ;;  dividend        2    2[COMMON] unsigned int 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  quotient        2    4[COMMON] unsigned int 
  1876 ;;  counter         1    6[COMMON] unsigned char 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  2    0[COMMON] unsigned int 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0, btemp+1
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1886 ;;      Params:         4       0       0       0       0
  1887 ;;      Locals:         3       0       0       0       0
  1888 ;;      Temps:          0       0       0       0       0
  1889 ;;      Totals:         7       0       0       0       0
  1890 ;;Total ram usage:        7 bytes
  1891 ;; Hardware stack levels used: 1
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_sprintf
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899     040A                     ___lwdiv:	
  1900                           ;psect for function ___lwdiv
  1901                           
  1902     040A                     l1366:	
  1903                           ;incstack = 0
  1904                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1905                           
  1906     040A  01F4               	clrf	___lwdiv@quotient
  1907     040B  01F5               	clrf	___lwdiv@quotient+1
  1908     040C                     l1368:
  1909     040C  0870               	movf	___lwdiv@divisor,w
  1910     040D  0471               	iorwf	___lwdiv@divisor+1,w
  1911     040E  1903               	btfsc	3,2
  1912     040F  2C11               	goto	u891
  1913     0410  2C12               	goto	u890
  1914     0411                     u891:
  1915     0411  2C49               	goto	l1388
  1916     0412                     u890:
  1917     0412                     l1370:
  1918     0412  01F6               	clrf	___lwdiv@counter
  1919     0413  0AF6               	incf	___lwdiv@counter,f
  1920     0414  2C20               	goto	l1376
  1921     0415                     l1372:
  1922     0415  3001               	movlw	1
  1923     0416                     u905:
  1924     0416  1003               	clrc
  1925     0417  0DF0               	rlf	___lwdiv@divisor,f
  1926     0418  0DF1               	rlf	___lwdiv@divisor+1,f
  1927     0419  3EFF               	addlw	-1
  1928     041A  1D03               	skipz
  1929     041B  2C16               	goto	u905
  1930     041C                     l1374:
  1931     041C  3001               	movlw	1
  1932     041D  00FF               	movwf	btemp+1
  1933     041E  087F               	movf	btemp+1,w
  1934     041F  07F6               	addwf	___lwdiv@counter,f
  1935     0420                     l1376:
  1936     0420  1FF1               	btfss	___lwdiv@divisor+1,7
  1937     0421  2C23               	goto	u911
  1938     0422  2C24               	goto	u910
  1939     0423                     u911:
  1940     0423  2C15               	goto	l1372
  1941     0424                     u910:
  1942     0424                     l1378:
  1943     0424  3001               	movlw	1
  1944     0425                     u925:
  1945     0425  1003               	clrc
  1946     0426  0DF4               	rlf	___lwdiv@quotient,f
  1947     0427  0DF5               	rlf	___lwdiv@quotient+1,f
  1948     0428  3EFF               	addlw	-1
  1949     0429  1D03               	skipz
  1950     042A  2C25               	goto	u925
  1951     042B  0871               	movf	___lwdiv@divisor+1,w
  1952     042C  0273               	subwf	___lwdiv@dividend+1,w
  1953     042D  1D03               	skipz
  1954     042E  2C31               	goto	u935
  1955     042F  0870               	movf	___lwdiv@divisor,w
  1956     0430  0272               	subwf	___lwdiv@dividend,w
  1957     0431                     u935:
  1958     0431  1C03               	skipc
  1959     0432  2C34               	goto	u931
  1960     0433  2C35               	goto	u930
  1961     0434                     u931:
  1962     0434  2C3C               	goto	l1384
  1963     0435                     u930:
  1964     0435                     l1380:
  1965     0435  0870               	movf	___lwdiv@divisor,w
  1966     0436  02F2               	subwf	___lwdiv@dividend,f
  1967     0437  0871               	movf	___lwdiv@divisor+1,w
  1968     0438  1C03               	skipc
  1969     0439  03F3               	decf	___lwdiv@dividend+1,f
  1970     043A  02F3               	subwf	___lwdiv@dividend+1,f
  1971     043B                     l1382:
  1972     043B  1474               	bsf	___lwdiv@quotient,0
  1973     043C                     l1384:
  1974     043C  3001               	movlw	1
  1975     043D                     u945:
  1976     043D  1003               	clrc
  1977     043E  0CF1               	rrf	___lwdiv@divisor+1,f
  1978     043F  0CF0               	rrf	___lwdiv@divisor,f
  1979     0440  3EFF               	addlw	-1
  1980     0441  1D03               	skipz
  1981     0442  2C3D               	goto	u945
  1982     0443                     l1386:
  1983     0443  3001               	movlw	1
  1984     0444  02F6               	subwf	___lwdiv@counter,f
  1985     0445  1D03               	btfss	3,2
  1986     0446  2C48               	goto	u951
  1987     0447  2C49               	goto	u950
  1988     0448                     u951:
  1989     0448  2C24               	goto	l1378
  1990     0449                     u950:
  1991     0449                     l1388:
  1992     0449  0875               	movf	___lwdiv@quotient+1,w
  1993     044A  00F1               	movwf	?___lwdiv+1
  1994     044B  0874               	movf	___lwdiv@quotient,w
  1995     044C  00F0               	movwf	?___lwdiv
  1996     044D                     l581:
  1997     044D  0008               	return
  1998     044E                     __end_of___lwdiv:
  1999                           
  2000                           	psect	text5
  2001     02AB                     __ptext5:	
  2002 ;; *************** function ___bmul *****************
  2003 ;; Defined at:
  2004 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  multiplier      1    wreg     unsigned char 
  2007 ;;  multiplicand    1    0[COMMON] unsigned char 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  multiplier      1    2[COMMON] unsigned char 
  2010 ;;  product         1    1[COMMON] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      unsigned char 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0, btemp+1
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2020 ;;      Params:         1       0       0       0       0
  2021 ;;      Locals:         2       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0
  2023 ;;      Totals:         3       0       0       0       0
  2024 ;;Total ram usage:        3 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; This function calls:
  2027 ;;		Nothing
  2028 ;; This function is called by:
  2029 ;;		_sprintf
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033     02AB                     ___bmul:	
  2034                           ;psect for function ___bmul
  2035                           
  2036                           
  2037                           ;incstack = 0
  2038                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  2039                           ;___bmul@multiplier stored from wreg
  2040     02AB  00F2               	movwf	___bmul@multiplier
  2041     02AC                     l1350:
  2042     02AC  01F1               	clrf	___bmul@product
  2043     02AD                     l1352:
  2044     02AD  1C72               	btfss	___bmul@multiplier,0
  2045     02AE  2AB0               	goto	u871
  2046     02AF  2AB1               	goto	u870
  2047     02B0                     u871:
  2048     02B0  2AB5               	goto	l1356
  2049     02B1                     u870:
  2050     02B1                     l1354:
  2051     02B1  0870               	movf	___bmul@multiplicand,w
  2052     02B2  00FF               	movwf	btemp+1
  2053     02B3  087F               	movf	btemp+1,w
  2054     02B4  07F1               	addwf	___bmul@product,f
  2055     02B5                     l1356:
  2056     02B5  1003               	clrc
  2057     02B6  0DF0               	rlf	___bmul@multiplicand,f
  2058     02B7                     l1358:
  2059     02B7  1003               	clrc
  2060     02B8  0CF2               	rrf	___bmul@multiplier,f
  2061     02B9                     l1360:
  2062     02B9  0872               	movf	___bmul@multiplier,w
  2063     02BA  1D03               	btfss	3,2
  2064     02BB  2ABD               	goto	u881
  2065     02BC  2ABE               	goto	u880
  2066     02BD                     u881:
  2067     02BD  2AAD               	goto	l1352
  2068     02BE                     u880:
  2069     02BE                     l1362:
  2070     02BE  0871               	movf	___bmul@product,w
  2071     02BF                     l335:
  2072     02BF  0008               	return
  2073     02C0                     __end_of___bmul:
  2074                           
  2075                           	psect	text6
  2076     026E                     __ptext6:	
  2077 ;; *************** function _spiWrite *****************
  2078 ;; Defined at:
  2079 ;;		line 34 in file "SPI.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  dat             1    wreg     unsigned char 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  dat             1    0[COMMON] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		wreg
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2093 ;;      Params:         0       0       0       0       0
  2094 ;;      Locals:         1       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0
  2096 ;;      Totals:         1       0       0       0       0
  2097 ;;Total ram usage:        1 bytes
  2098 ;; Hardware stack levels used: 1
  2099 ;; This function calls:
  2100 ;;		Nothing
  2101 ;; This function is called by:
  2102 ;;		_main
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106     026E                     _spiWrite:	
  2107                           ;psect for function _spiWrite
  2108                           
  2109                           
  2110                           ;incstack = 0
  2111                           ; Regs used in _spiWrite: [wreg]
  2112                           ;spiWrite@dat stored from wreg
  2113     026E  00F0               	movwf	spiWrite@dat
  2114     026F                     l1464:
  2115                           
  2116                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  2117     026F  0870               	movf	spiWrite@dat,w
  2118     0270  1283               	bcf	3,5	;RP0=0, select bank0
  2119     0271  1303               	bcf	3,6	;RP1=0, select bank0
  2120     0272  0093               	movwf	19	;volatile
  2121     0273                     l176:
  2122     0273  0008               	return
  2123     0274                     __end_of_spiWrite:
  2124                           
  2125                           	psect	text7
  2126     0283                     __ptext7:	
  2127 ;; *************** function _spiRead *****************
  2128 ;; Defined at:
  2129 ;;		line 47 in file "SPI.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      unsigned char 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, pclath, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2143 ;;      Params:         0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0
  2146 ;;      Totals:         0       0       0       0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 1
  2150 ;; This function calls:
  2151 ;;		_spiReceiveWait
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157     0283                     _spiRead:	
  2158                           ;psect for function _spiRead
  2159                           
  2160     0283                     l1466:	
  2161                           ;incstack = 0
  2162                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2163                           
  2164                           
  2165                           ;SPI.c: 49:     spiReceiveWait();
  2166     0283  120A  118A  2274  120A  118A  	fcall	_spiReceiveWait
  2167     0288                     l1468:
  2168                           
  2169                           ;SPI.c: 50:     return(SSPBUF);
  2170     0288  1283               	bcf	3,5	;RP0=0, select bank0
  2171     0289  1303               	bcf	3,6	;RP1=0, select bank0
  2172     028A  0813               	movf	19,w	;volatile
  2173     028B                     l184:
  2174     028B  0008               	return
  2175     028C                     __end_of_spiRead:
  2176                           
  2177                           	psect	text8
  2178     0274                     __ptext8:	
  2179 ;; *************** function _spiReceiveWait *****************
  2180 ;; Defined at:
  2181 ;;		line 29 in file "SPI.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		None
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2195 ;;      Params:         0       0       0       0       0
  2196 ;;      Locals:         0       0       0       0       0
  2197 ;;      Temps:          0       0       0       0       0
  2198 ;;      Totals:         0       0       0       0       0
  2199 ;;Total ram usage:        0 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; This function calls:
  2202 ;;		Nothing
  2203 ;; This function is called by:
  2204 ;;		_spiRead
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208     0274                     _spiReceiveWait:	
  2209                           ;psect for function _spiReceiveWait
  2210                           
  2211     0274                     l1336:	
  2212                           ;incstack = 0
  2213                           ; Regs used in _spiReceiveWait: []
  2214                           
  2215     0274                     l170:	
  2216                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  2217                           
  2218     0274  1683               	bsf	3,5	;RP0=1, select bank1
  2219     0275  1303               	bcf	3,6	;RP1=0, select bank1
  2220     0276  1C14               	btfss	20,0	;volatile
  2221     0277  2A79               	goto	u841
  2222     0278  2A7A               	goto	u840
  2223     0279                     u841:
  2224     0279  2A74               	goto	l170
  2225     027A                     u840:
  2226     027A                     l173:
  2227     027A  0008               	return
  2228     027B                     __end_of_spiReceiveWait:
  2229                           
  2230                           	psect	text9
  2231     0326                     __ptext9:	
  2232 ;; *************** function _setup *****************
  2233 ;; Defined at:
  2234 ;;		line 116 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;		None
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;		None
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2, status,0, pclath, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2248 ;;      Params:         0       0       0       0       0
  2249 ;;      Locals:         0       0       0       0       0
  2250 ;;      Temps:          0       0       0       0       0
  2251 ;;      Totals:         0       0       0       0       0
  2252 ;;Total ram usage:        0 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; Hardware stack levels required when called: 3
  2255 ;; This function calls:
  2256 ;;		_Lcd_Init
  2257 ;;		_configOsc
  2258 ;;		_spiInit
  2259 ;; This function is called by:
  2260 ;;		_main
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264     0326                     _setup:	
  2265                           ;psect for function _setup
  2266                           
  2267     0326                     l1436:	
  2268                           ;incstack = 0
  2269                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2270                           
  2271                           
  2272                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 117:     confi
      +                          gOsc(8);
  2273     0326  3008               	movlw	8
  2274     0327  00F0               	movwf	configOsc@frec
  2275     0328  3000               	movlw	0
  2276     0329  00F1               	movwf	configOsc@frec+1
  2277     032A  120A  118A  249F  120A  118A  	fcall	_configOsc
  2278     032F                     l1438:
  2279                           
  2280                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 118:     ANSEL
      +                          H = 0;
  2281     032F  1683               	bsf	3,5	;RP0=1, select bank3
  2282     0330  1703               	bsf	3,6	;RP1=1, select bank3
  2283     0331  0189               	clrf	9	;volatile
  2284     0332                     l1440:
  2285                           
  2286                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 119:     TRISC
      +                           = 144;
  2287     0332  3090               	movlw	144
  2288     0333  1683               	bsf	3,5	;RP0=1, select bank1
  2289     0334  1303               	bcf	3,6	;RP1=0, select bank1
  2290     0335  0087               	movwf	7	;volatile
  2291     0336                     l1442:
  2292                           
  2293                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 120:     TRISC
      +                          2 = 0;
  2294     0336  1107               	bcf	7,2	;volatile
  2295     0337                     l1444:
  2296                           
  2297                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 121:     TRISB
      +                           = 0;
  2298     0337  0186               	clrf	6	;volatile
  2299     0338                     l1446:
  2300                           
  2301                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 122:     TRISD
      +                           = 0;
  2302     0338  0188               	clrf	8	;volatile
  2303     0339                     l1448:
  2304                           
  2305                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 123:     PORTB
      +                           = 0;
  2306     0339  1283               	bcf	3,5	;RP0=0, select bank0
  2307     033A  1303               	bcf	3,6	;RP1=0, select bank0
  2308     033B  0186               	clrf	6	;volatile
  2309     033C                     l1450:
  2310                           
  2311                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 124:     PORTC
      +                           = 0;
  2312     033C  0187               	clrf	7	;volatile
  2313     033D                     l1452:
  2314                           
  2315                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 125:     PORTD
      +                           = 0;
  2316     033D  0188               	clrf	8	;volatile
  2317     033E                     l1454:
  2318                           
  2319                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 126:     PORTC
      +                          bits.RC2 = 1;
  2320     033E  1507               	bsf	7,2	;volatile
  2321     033F                     l1456:
  2322                           
  2323                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 127:     INTCO
      +                          Nbits.GIE = 1;
  2324     033F  178B               	bsf	11,7	;volatile
  2325     0340                     l1458:
  2326                           
  2327                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 128:     INTCO
      +                          Nbits.PEIE = 1;
  2328     0340  170B               	bsf	11,6	;volatile
  2329     0341                     l1460:
  2330                           
  2331                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 129:     spiIn
      +                          it(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SPI_IDLE_2_ACTIVE);
  2332     0341  01F0               	clrf	spiInit@sDataSample
  2333     0342  01F1               	clrf	spiInit@sClockIdle
  2334     0343  01F2               	clrf	spiInit@sTransmitEdge
  2335     0344  3020               	movlw	32
  2336     0345  120A  118A  22D6  120A  118A  	fcall	_spiInit
  2337     034A                     l1462:
  2338                           
  2339                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3_Master.X/Lab3Master.c: 130:     Lcd_I
      +                          nit();
  2340     034A  120A  118A  244E  120A  118A  	fcall	_Lcd_Init
  2341     034F                     l150:
  2342     034F  0008               	return
  2343     0350                     __end_of_setup:
  2344                           
  2345                           	psect	text10
  2346     02D6                     __ptext10:	
  2347 ;; *************** function _spiInit *****************
  2348 ;; Defined at:
  2349 ;;		line 12 in file "SPI.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  sType           1    wreg     enum E1292
  2352 ;;  sDataSample     1    0[COMMON] enum E1300
  2353 ;;  sClockIdle      1    1[COMMON] enum E1304
  2354 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  sType           1    3[COMMON] enum E1292
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, status,2, status,0
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2366 ;;      Params:         3       0       0       0       0
  2367 ;;      Locals:         1       0       0       0       0
  2368 ;;      Temps:          0       0       0       0       0
  2369 ;;      Totals:         4       0       0       0       0
  2370 ;;Total ram usage:        4 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; This function calls:
  2373 ;;		Nothing
  2374 ;; This function is called by:
  2375 ;;		_setup
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379     02D6                     _spiInit:	
  2380                           ;psect for function _spiInit
  2381                           
  2382                           
  2383                           ;incstack = 0
  2384                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2385                           ;spiInit@sType stored from wreg
  2386     02D6  00F3               	movwf	spiInit@sType
  2387     02D7                     l1326:
  2388                           
  2389                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  2390     02D7  1683               	bsf	3,5	;RP0=1, select bank1
  2391     02D8  1303               	bcf	3,6	;RP1=0, select bank1
  2392     02D9  1287               	bcf	7,5	;volatile
  2393                           
  2394                           ;SPI.c: 15:     if(sType & 0b00000100)
  2395     02DA  1D73               	btfss	spiInit@sType,2
  2396     02DB  2ADD               	goto	u831
  2397     02DC  2ADE               	goto	u830
  2398     02DD                     u831:
  2399     02DD  2AE2               	goto	l1332
  2400     02DE                     u830:
  2401     02DE                     l1328:
  2402                           
  2403                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  2404     02DE  0872               	movf	spiInit@sTransmitEdge,w
  2405     02DF  0094               	movwf	20	;volatile
  2406     02E0                     l1330:
  2407                           
  2408                           ;SPI.c: 18:         TRISC3 = 1;
  2409     02E0  1587               	bsf	7,3	;volatile
  2410                           
  2411                           ;SPI.c: 19:     }
  2412     02E1  2AE6               	goto	l166
  2413     02E2                     l1332:
  2414                           
  2415                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  2416     02E2  0870               	movf	spiInit@sDataSample,w
  2417     02E3  0472               	iorwf	spiInit@sTransmitEdge,w
  2418     02E4  0094               	movwf	20	;volatile
  2419     02E5                     l1334:
  2420                           
  2421                           ;SPI.c: 23:         TRISC3 = 0;
  2422     02E5  1187               	bcf	7,3	;volatile
  2423     02E6                     l166:	
  2424                           ;SPI.c: 24:     }
  2425                           
  2426                           
  2427                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  2428     02E6  0873               	movf	spiInit@sType,w
  2429     02E7  0471               	iorwf	spiInit@sClockIdle,w
  2430     02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2431     02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2432     02EA  0094               	movwf	20	;volatile
  2433     02EB                     l167:
  2434     02EB  0008               	return
  2435     02EC                     __end_of_spiInit:
  2436                           
  2437                           	psect	text11
  2438     049F                     __ptext11:	
  2439 ;; *************** function _configOsc *****************
  2440 ;; Defined at:
  2441 ;;		line 4 in file "oscilador.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  frec            2    0[COMMON] unsigned int 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         2       0       0       0       0
  2456 ;;      Locals:         0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0
  2458 ;;      Totals:         2       0       0       0       0
  2459 ;;Total ram usage:        2 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; This function calls:
  2462 ;;		Nothing
  2463 ;; This function is called by:
  2464 ;;		_setup
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468     049F                     _configOsc:	
  2469                           ;psect for function _configOsc
  2470                           
  2471     049F                     l1288:	
  2472                           ;incstack = 0
  2473                           ; Regs used in _configOsc: [wreg+status,2+status,0]
  2474                           
  2475                           
  2476                           ;oscilador.c: 5:         if (frec == 8) OSCCONbits.IRCF = 0b111;
  2477     049F  3008               	movlw	8
  2478     04A0  0670               	xorwf	configOsc@frec,w
  2479     04A1  0471               	iorwf	configOsc@frec+1,w
  2480     04A2  1D03               	btfss	3,2
  2481     04A3  2CA5               	goto	u761
  2482     04A4  2CA6               	goto	u760
  2483     04A5                     u761:
  2484     04A5  2CAA               	goto	l5
  2485     04A6                     u760:
  2486     04A6                     l1290:
  2487     04A6  3070               	movlw	112
  2488     04A7  1683               	bsf	3,5	;RP0=1, select bank1
  2489     04A8  1303               	bcf	3,6	;RP1=0, select bank1
  2490     04A9  048F               	iorwf	15,f	;volatile
  2491     04AA                     l5:
  2492                           
  2493                           ;oscilador.c: 6:         if (frec == 4) OSCCONbits.IRCF = 0b110;
  2494     04AA  3004               	movlw	4
  2495     04AB  0670               	xorwf	configOsc@frec,w
  2496     04AC  0471               	iorwf	configOsc@frec+1,w
  2497     04AD  1D03               	btfss	3,2
  2498     04AE  2CB0               	goto	u771
  2499     04AF  2CB1               	goto	u770
  2500     04B0                     u771:
  2501     04B0  2CB7               	goto	l6
  2502     04B1                     u770:
  2503     04B1                     l1292:
  2504     04B1  1683               	bsf	3,5	;RP0=1, select bank1
  2505     04B2  1303               	bcf	3,6	;RP1=0, select bank1
  2506     04B3  080F               	movf	15,w	;volatile
  2507     04B4  398F               	andlw	-113
  2508     04B5  3860               	iorlw	96
  2509     04B6  008F               	movwf	15	;volatile
  2510     04B7                     l6:
  2511                           
  2512                           ;oscilador.c: 7:         if (frec == 1) OSCCONbits.IRCF = 0b100;
  2513     04B7  0370               	decf	configOsc@frec,w
  2514     04B8  0471               	iorwf	configOsc@frec+1,w
  2515     04B9  1D03               	btfss	3,2
  2516     04BA  2CBC               	goto	u781
  2517     04BB  2CBD               	goto	u780
  2518     04BC                     u781:
  2519     04BC  2CC3               	goto	l7
  2520     04BD                     u780:
  2521     04BD                     l1294:
  2522     04BD  1683               	bsf	3,5	;RP0=1, select bank1
  2523     04BE  1303               	bcf	3,6	;RP1=0, select bank1
  2524     04BF  080F               	movf	15,w	;volatile
  2525     04C0  398F               	andlw	-113
  2526     04C1  3840               	iorlw	64
  2527     04C2  008F               	movwf	15	;volatile
  2528     04C3                     l7:
  2529                           
  2530                           ;oscilador.c: 8:         if (frec == 500) OSCCONbits.IRCF = 0b011;
  2531     04C3  30F4               	movlw	244
  2532     04C4  0670               	xorwf	configOsc@frec,w
  2533     04C5  1D03               	skipz
  2534     04C6  2CCB               	goto	u791
  2535     04C7  0371               	decf	configOsc@frec+1,w
  2536     04C8  1D03               	btfss	3,2
  2537     04C9  2CCB               	goto	u791
  2538     04CA  2CCC               	goto	u790
  2539     04CB                     u791:
  2540     04CB  2CD2               	goto	l8
  2541     04CC                     u790:
  2542     04CC                     l1296:
  2543     04CC  1683               	bsf	3,5	;RP0=1, select bank1
  2544     04CD  1303               	bcf	3,6	;RP1=0, select bank1
  2545     04CE  080F               	movf	15,w	;volatile
  2546     04CF  398F               	andlw	-113
  2547     04D0  3830               	iorlw	48
  2548     04D1  008F               	movwf	15	;volatile
  2549     04D2                     l8:
  2550                           
  2551                           ;oscilador.c: 9:         if (frec == 250) OSCCONbits.IRCF = 0b101;
  2552     04D2  30FA               	movlw	250
  2553     04D3  0670               	xorwf	configOsc@frec,w
  2554     04D4  0471               	iorwf	configOsc@frec+1,w
  2555     04D5  1D03               	btfss	3,2
  2556     04D6  2CD8               	goto	u801
  2557     04D7  2CD9               	goto	u800
  2558     04D8                     u801:
  2559     04D8  2CDF               	goto	l9
  2560     04D9                     u800:
  2561     04D9                     l1298:
  2562     04D9  1683               	bsf	3,5	;RP0=1, select bank1
  2563     04DA  1303               	bcf	3,6	;RP1=0, select bank1
  2564     04DB  080F               	movf	15,w	;volatile
  2565     04DC  398F               	andlw	-113
  2566     04DD  3850               	iorlw	80
  2567     04DE  008F               	movwf	15	;volatile
  2568     04DF                     l9:
  2569                           
  2570                           ;oscilador.c: 10:         if (frec == 125) OSCCONbits.IRCF = 0b001;
  2571     04DF  307D               	movlw	125
  2572     04E0  0670               	xorwf	configOsc@frec,w
  2573     04E1  0471               	iorwf	configOsc@frec+1,w
  2574     04E2  1D03               	btfss	3,2
  2575     04E3  2CE5               	goto	u811
  2576     04E4  2CE6               	goto	u810
  2577     04E5                     u811:
  2578     04E5  2CEC               	goto	l10
  2579     04E6                     u810:
  2580     04E6                     l1300:
  2581     04E6  1683               	bsf	3,5	;RP0=1, select bank1
  2582     04E7  1303               	bcf	3,6	;RP1=0, select bank1
  2583     04E8  080F               	movf	15,w	;volatile
  2584     04E9  398F               	andlw	-113
  2585     04EA  3810               	iorlw	16
  2586     04EB  008F               	movwf	15	;volatile
  2587     04EC                     l10:
  2588                           
  2589                           ;oscilador.c: 11:         if (frec == 31) OSCCONbits.IRCF = 0b000;
  2590     04EC  301F               	movlw	31
  2591     04ED  0670               	xorwf	configOsc@frec,w
  2592     04EE  0471               	iorwf	configOsc@frec+1,w
  2593     04EF  1D03               	btfss	3,2
  2594     04F0  2CF2               	goto	u821
  2595     04F1  2CF3               	goto	u820
  2596     04F2                     u821:
  2597     04F2  2CF7               	goto	l1304
  2598     04F3                     u820:
  2599     04F3                     l1302:
  2600     04F3  308F               	movlw	-113
  2601     04F4  1683               	bsf	3,5	;RP0=1, select bank1
  2602     04F5  1303               	bcf	3,6	;RP1=0, select bank1
  2603     04F6  058F               	andwf	15,f	;volatile
  2604     04F7                     l1304:
  2605                           
  2606                           ;oscilador.c: 12:         OSCCONbits.SCS = 1;
  2607     04F7  1683               	bsf	3,5	;RP0=1, select bank1
  2608     04F8  1303               	bcf	3,6	;RP1=0, select bank1
  2609     04F9  140F               	bsf	15,0	;volatile
  2610     04FA                     l12:
  2611     04FA  0008               	return
  2612     04FB                     __end_of_configOsc:
  2613                           
  2614                           	psect	text12
  2615     044E                     __ptext12:	
  2616 ;; *************** function _Lcd_Init *****************
  2617 ;; Defined at:
  2618 ;;		line 80 in file "lcd.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0, pclath, cstack
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2632 ;;      Params:         0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0
  2634 ;;      Temps:          2       0       0       0       0
  2635 ;;      Totals:         2       0       0       0       0
  2636 ;;Total ram usage:        2 bytes
  2637 ;; Hardware stack levels used: 1
  2638 ;; Hardware stack levels required when called: 2
  2639 ;; This function calls:
  2640 ;;		_Lcd_Cmd
  2641 ;;		_Lcd_Port
  2642 ;; This function is called by:
  2643 ;;		_setup
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647     044E                     _Lcd_Init:	
  2648                           ;psect for function _Lcd_Init
  2649                           
  2650     044E                     l1306:	
  2651                           ;incstack = 0
  2652                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2653                           
  2654                           
  2655                           ;lcd.c: 81:     Lcd_Port(0);
  2656     044E  3000               	movlw	0
  2657     044F  120A  118A  238A  120A  118A  	fcall	_Lcd_Port
  2658     0454                     l1308:
  2659                           
  2660                           ;lcd.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2661     0454  3034               	movlw	52
  2662     0455  00F5               	movwf	??_Lcd_Init+1
  2663     0456  30F1               	movlw	241
  2664     0457  00F4               	movwf	??_Lcd_Init
  2665     0458                     u1427:
  2666     0458  0BF4               	decfsz	??_Lcd_Init,f
  2667     0459  2C58               	goto	u1427
  2668     045A  0BF5               	decfsz	??_Lcd_Init+1,f
  2669     045B  2C58               	goto	u1427
  2670     045C  2C5D               	nop2
  2671     045D                     l1310:
  2672                           
  2673                           ;lcd.c: 83:     Lcd_Cmd(48);
  2674     045D  3030               	movlw	48
  2675     045E  120A  118A  22EC  120A  118A  	fcall	_Lcd_Cmd
  2676                           
  2677                           ;lcd.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2678     0463  300D               	movlw	13
  2679     0464  00F5               	movwf	??_Lcd_Init+1
  2680     0465  30FB               	movlw	251
  2681     0466  00F4               	movwf	??_Lcd_Init
  2682     0467                     u1437:
  2683     0467  0BF4               	decfsz	??_Lcd_Init,f
  2684     0468  2C67               	goto	u1437
  2685     0469  0BF5               	decfsz	??_Lcd_Init+1,f
  2686     046A  2C67               	goto	u1437
  2687     046B  2C6C               	nop2
  2688     046C                     l1312:
  2689                           
  2690                           ;lcd.c: 85:     Lcd_Cmd(48);
  2691     046C  3030               	movlw	48
  2692     046D  120A  118A  22EC  120A  118A  	fcall	_Lcd_Cmd
  2693     0472                     l1314:
  2694                           
  2695                           ;lcd.c: 86:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2696     0472  301D               	movlw	29
  2697     0473  00F5               	movwf	??_Lcd_Init+1
  2698     0474  3091               	movlw	145
  2699     0475  00F4               	movwf	??_Lcd_Init
  2700     0476                     u1447:
  2701     0476  0BF4               	decfsz	??_Lcd_Init,f
  2702     0477  2C76               	goto	u1447
  2703     0478  0BF5               	decfsz	??_Lcd_Init+1,f
  2704     0479  2C76               	goto	u1447
  2705                           
  2706                           ;lcd.c: 87:     Lcd_Cmd(48);
  2707     047A  3030               	movlw	48
  2708     047B  120A  118A  22EC  120A  118A  	fcall	_Lcd_Cmd
  2709                           
  2710                           ;lcd.c: 89:     Lcd_Cmd(56);
  2711     0480  3038               	movlw	56
  2712     0481  120A  118A  22EC  120A  118A  	fcall	_Lcd_Cmd
  2713                           
  2714                           ;lcd.c: 90:     Lcd_Cmd(8);
  2715     0486  3008               	movlw	8
  2716     0487  120A  118A  22EC  120A  118A  	fcall	_Lcd_Cmd
  2717                           
  2718                           ;lcd.c: 91:     Lcd_Cmd(1);
  2719     048C  3001               	movlw	1
  2720     048D  120A  118A  22EC  120A  118A  	fcall	_Lcd_Cmd
  2721                           
  2722                           ;lcd.c: 92:     Lcd_Cmd(6);
  2723     0492  3006               	movlw	6
  2724     0493  120A  118A  22EC  120A  118A  	fcall	_Lcd_Cmd
  2725                           
  2726                           ;lcd.c: 93:     Lcd_Cmd(12);
  2727     0498  300C               	movlw	12
  2728     0499  120A  118A  22EC  120A  118A  	fcall	_Lcd_Cmd
  2729     049E                     l70:
  2730     049E  0008               	return
  2731     049F                     __end_of_Lcd_Init:
  2732                           
  2733                           	psect	text13
  2734     04FB                     __ptext13:	
  2735 ;; *************** function ___xxtofl *****************
  2736 ;; Defined at:
  2737 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  sign            1    wreg     unsigned char 
  2740 ;;  val             4    0[COMMON] long 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  sign            1    8[COMMON] unsigned char 
  2743 ;;  arg             4   10[COMMON] unsigned long 
  2744 ;;  exp             1    9[COMMON] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  4    0[COMMON] unsigned char 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0, btemp+1
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         4       0       0       0       0
  2755 ;;      Locals:         6       0       0       0       0
  2756 ;;      Temps:          4       0       0       0       0
  2757 ;;      Totals:        14       0       0       0       0
  2758 ;;Total ram usage:       14 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_main
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767     04FB                     ___xxtofl:	
  2768                           ;psect for function ___xxtofl
  2769                           
  2770                           
  2771                           ;incstack = 0
  2772                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  2773                           ;___xxtofl@sign stored from wreg
  2774     04FB  00F8               	movwf	___xxtofl@sign
  2775     04FC                     l1566:
  2776     04FC  0878               	movf	___xxtofl@sign,w
  2777     04FD  1903               	btfsc	3,2
  2778     04FE  2D00               	goto	u1201
  2779     04FF  2D01               	goto	u1200
  2780     0500                     u1201:
  2781     0500  2D15               	goto	l1572
  2782     0501                     u1200:
  2783     0501                     l1568:
  2784     0501  1FF3               	btfss	___xxtofl@val+3,7
  2785     0502  2D04               	goto	u1211
  2786     0503  2D05               	goto	u1210
  2787     0504                     u1211:
  2788     0504  2D15               	goto	l1572
  2789     0505                     u1210:
  2790     0505                     l1570:
  2791     0505  0970               	comf	___xxtofl@val,w
  2792     0506  00FA               	movwf	___xxtofl@arg
  2793     0507  0971               	comf	___xxtofl@val+1,w
  2794     0508  00FB               	movwf	___xxtofl@arg+1
  2795     0509  0972               	comf	___xxtofl@val+2,w
  2796     050A  00FC               	movwf	___xxtofl@arg+2
  2797     050B  0973               	comf	___xxtofl@val+3,w
  2798     050C  00FD               	movwf	___xxtofl@arg+3
  2799     050D  0AFA               	incf	___xxtofl@arg,f
  2800     050E  1903               	skipnz
  2801     050F  0AFB               	incf	___xxtofl@arg+1,f
  2802     0510  1903               	skipnz
  2803     0511  0AFC               	incf	___xxtofl@arg+2,f
  2804     0512  1903               	skipnz
  2805     0513  0AFD               	incf	___xxtofl@arg+3,f
  2806     0514  2D1D               	goto	l742
  2807     0515                     l1572:
  2808     0515  0873               	movf	___xxtofl@val+3,w
  2809     0516  00FD               	movwf	___xxtofl@arg+3
  2810     0517  0872               	movf	___xxtofl@val+2,w
  2811     0518  00FC               	movwf	___xxtofl@arg+2
  2812     0519  0871               	movf	___xxtofl@val+1,w
  2813     051A  00FB               	movwf	___xxtofl@arg+1
  2814     051B  0870               	movf	___xxtofl@val,w
  2815     051C  00FA               	movwf	___xxtofl@arg
  2816     051D                     l742:
  2817     051D  0873               	movf	___xxtofl@val+3,w
  2818     051E  0472               	iorwf	___xxtofl@val+2,w
  2819     051F  0471               	iorwf	___xxtofl@val+1,w
  2820     0520  0470               	iorwf	___xxtofl@val,w
  2821     0521  1D03               	skipz
  2822     0522  2D24               	goto	u1221
  2823     0523  2D25               	goto	u1220
  2824     0524                     u1221:
  2825     0524  2D2E               	goto	l1578
  2826     0525                     u1220:
  2827     0525                     l1574:
  2828     0525  3000               	movlw	0
  2829     0526  00F3               	movwf	?___xxtofl+3
  2830     0527  3000               	movlw	0
  2831     0528  00F2               	movwf	?___xxtofl+2
  2832     0529  3000               	movlw	0
  2833     052A  00F1               	movwf	?___xxtofl+1
  2834     052B  3000               	movlw	0
  2835     052C  00F0               	movwf	?___xxtofl
  2836     052D  2DB2               	goto	l744
  2837     052E                     l1578:
  2838     052E  3096               	movlw	150
  2839     052F  00F9               	movwf	___xxtofl@exp
  2840     0530  2D3E               	goto	l1584
  2841     0531                     l1580:
  2842     0531  3001               	movlw	1
  2843     0532  00FF               	movwf	btemp+1
  2844     0533  087F               	movf	btemp+1,w
  2845     0534  07F9               	addwf	___xxtofl@exp,f
  2846     0535                     l1582:
  2847     0535  3001               	movlw	1
  2848     0536                     u1235:
  2849     0536  1003               	clrc
  2850     0537  0CFD               	rrf	___xxtofl@arg+3,f
  2851     0538  0CFC               	rrf	___xxtofl@arg+2,f
  2852     0539  0CFB               	rrf	___xxtofl@arg+1,f
  2853     053A  0CFA               	rrf	___xxtofl@arg,f
  2854     053B  3EFF               	addlw	-1
  2855     053C  1D03               	skipz
  2856     053D  2D36               	goto	u1235
  2857     053E                     l1584:
  2858     053E  30FE               	movlw	254
  2859     053F  057D               	andwf	___xxtofl@arg+3,w
  2860     0540  1D03               	btfss	3,2
  2861     0541  2D43               	goto	u1241
  2862     0542  2D44               	goto	u1240
  2863     0543                     u1241:
  2864     0543  2D31               	goto	l1580
  2865     0544                     u1240:
  2866     0544  2D60               	goto	l1592
  2867     0545                     l1586:
  2868     0545  3001               	movlw	1
  2869     0546  00FF               	movwf	btemp+1
  2870     0547  087F               	movf	btemp+1,w
  2871     0548  07F9               	addwf	___xxtofl@exp,f
  2872     0549                     l1588:
  2873     0549  3001               	movlw	1
  2874     054A  07FA               	addwf	___xxtofl@arg,f
  2875     054B  3000               	movlw	0
  2876     054C  1803               	skipnc
  2877     054D  3001               	movlw	1
  2878     054E  07FB               	addwf	___xxtofl@arg+1,f
  2879     054F  3000               	movlw	0
  2880     0550  1803               	skipnc
  2881     0551  3001               	movlw	1
  2882     0552  07FC               	addwf	___xxtofl@arg+2,f
  2883     0553  3000               	movlw	0
  2884     0554  1803               	skipnc
  2885     0555  3001               	movlw	1
  2886     0556  07FD               	addwf	___xxtofl@arg+3,f
  2887     0557                     l1590:
  2888     0557  3001               	movlw	1
  2889     0558                     u1255:
  2890     0558  1003               	clrc
  2891     0559  0CFD               	rrf	___xxtofl@arg+3,f
  2892     055A  0CFC               	rrf	___xxtofl@arg+2,f
  2893     055B  0CFB               	rrf	___xxtofl@arg+1,f
  2894     055C  0CFA               	rrf	___xxtofl@arg,f
  2895     055D  3EFF               	addlw	-1
  2896     055E  1D03               	skipz
  2897     055F  2D58               	goto	u1255
  2898     0560                     l1592:
  2899     0560  30FF               	movlw	255
  2900     0561  057D               	andwf	___xxtofl@arg+3,w
  2901     0562  1D03               	btfss	3,2
  2902     0563  2D65               	goto	u1261
  2903     0564  2D66               	goto	u1260
  2904     0565                     u1261:
  2905     0565  2D45               	goto	l1586
  2906     0566                     u1260:
  2907     0566  2D72               	goto	l1596
  2908     0567                     l1594:
  2909     0567  3001               	movlw	1
  2910     0568  02F9               	subwf	___xxtofl@exp,f
  2911     0569  3001               	movlw	1
  2912     056A  00F4               	movwf	??___xxtofl
  2913     056B                     u1275:
  2914     056B  1003               	clrc
  2915     056C  0DFA               	rlf	___xxtofl@arg,f
  2916     056D  0DFB               	rlf	___xxtofl@arg+1,f
  2917     056E  0DFC               	rlf	___xxtofl@arg+2,f
  2918     056F  0DFD               	rlf	___xxtofl@arg+3,f
  2919     0570  0BF4               	decfsz	??___xxtofl,f
  2920     0571  2D6B               	goto	u1275
  2921     0572                     l1596:
  2922     0572  1BFC               	btfsc	___xxtofl@arg+2,7
  2923     0573  2D75               	goto	u1281
  2924     0574  2D76               	goto	u1280
  2925     0575                     u1281:
  2926     0575  2D7C               	goto	l755
  2927     0576                     u1280:
  2928     0576                     l1598:
  2929     0576  3002               	movlw	2
  2930     0577  0279               	subwf	___xxtofl@exp,w
  2931     0578  1803               	skipnc
  2932     0579  2D7B               	goto	u1291
  2933     057A  2D7C               	goto	u1290
  2934     057B                     u1291:
  2935     057B  2D67               	goto	l1594
  2936     057C                     u1290:
  2937     057C                     l755:
  2938     057C  1879               	btfsc	___xxtofl@exp,0
  2939     057D  2D7F               	goto	u1301
  2940     057E  2D80               	goto	u1300
  2941     057F                     u1301:
  2942     057F  2D88               	goto	l756
  2943     0580                     u1300:
  2944     0580                     l1600:
  2945     0580  30FF               	movlw	255
  2946     0581  05FA               	andwf	___xxtofl@arg,f
  2947     0582  30FF               	movlw	255
  2948     0583  05FB               	andwf	___xxtofl@arg+1,f
  2949     0584  307F               	movlw	127
  2950     0585  05FC               	andwf	___xxtofl@arg+2,f
  2951     0586  30FF               	movlw	255
  2952     0587  05FD               	andwf	___xxtofl@arg+3,f
  2953     0588                     l756:
  2954     0588  1003               	clrc
  2955     0589  0CF9               	rrf	___xxtofl@exp,f
  2956     058A                     l1602:
  2957     058A  0879               	movf	___xxtofl@exp,w
  2958     058B  00F4               	movwf	??___xxtofl
  2959     058C  01F5               	clrf	??___xxtofl+1
  2960     058D  01F6               	clrf	??___xxtofl+2
  2961     058E  01F7               	clrf	??___xxtofl+3
  2962     058F  3018               	movlw	24
  2963     0590                     u1315:
  2964     0590  1003               	clrc
  2965     0591  0DF4               	rlf	??___xxtofl,f
  2966     0592  0DF5               	rlf	??___xxtofl+1,f
  2967     0593  0DF6               	rlf	??___xxtofl+2,f
  2968     0594  0DF7               	rlf	??___xxtofl+3,f
  2969     0595                     u1310:
  2970     0595  3EFF               	addlw	-1
  2971     0596  1D03               	skipz
  2972     0597  2D90               	goto	u1315
  2973     0598  0874               	movf	??___xxtofl,w
  2974     0599  04FA               	iorwf	___xxtofl@arg,f
  2975     059A  0875               	movf	??___xxtofl+1,w
  2976     059B  04FB               	iorwf	___xxtofl@arg+1,f
  2977     059C  0876               	movf	??___xxtofl+2,w
  2978     059D  04FC               	iorwf	___xxtofl@arg+2,f
  2979     059E  0877               	movf	??___xxtofl+3,w
  2980     059F  04FD               	iorwf	___xxtofl@arg+3,f
  2981     05A0                     l1604:
  2982     05A0  0878               	movf	___xxtofl@sign,w
  2983     05A1  1903               	btfsc	3,2
  2984     05A2  2DA4               	goto	u1321
  2985     05A3  2DA5               	goto	u1320
  2986     05A4                     u1321:
  2987     05A4  2DAA               	goto	l1610
  2988     05A5                     u1320:
  2989     05A5                     l1606:
  2990     05A5  1FF3               	btfss	___xxtofl@val+3,7
  2991     05A6  2DA8               	goto	u1331
  2992     05A7  2DA9               	goto	u1330
  2993     05A8                     u1331:
  2994     05A8  2DAA               	goto	l1610
  2995     05A9                     u1330:
  2996     05A9                     l1608:
  2997     05A9  17FD               	bsf	___xxtofl@arg+3,7
  2998     05AA                     l1610:
  2999     05AA  087D               	movf	___xxtofl@arg+3,w
  3000     05AB  00F3               	movwf	?___xxtofl+3
  3001     05AC  087C               	movf	___xxtofl@arg+2,w
  3002     05AD  00F2               	movwf	?___xxtofl+2
  3003     05AE  087B               	movf	___xxtofl@arg+1,w
  3004     05AF  00F1               	movwf	?___xxtofl+1
  3005     05B0  087A               	movf	___xxtofl@arg,w
  3006     05B1  00F0               	movwf	?___xxtofl
  3007     05B2                     l744:
  3008     05B2  0008               	return
  3009     05B3                     __end_of___xxtofl:
  3010                           
  3011                           	psect	text14
  3012     03C8                     __ptext14:	
  3013 ;; *************** function _Lcd_Write_String *****************
  3014 ;; Defined at:
  3015 ;;		line 104 in file "lcd.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  a               2    3[COMMON] PTR unsigned char 
  3018 ;;		 -> volt(16), STR_1(12), 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  i               2    8[COMMON] int 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3030 ;;      Params:         2       0       0       0       0
  3031 ;;      Locals:         2       0       0       0       0
  3032 ;;      Temps:          3       0       0       0       0
  3033 ;;      Totals:         7       0       0       0       0
  3034 ;;Total ram usage:        7 bytes
  3035 ;; Hardware stack levels used: 1
  3036 ;; Hardware stack levels required when called: 2
  3037 ;; This function calls:
  3038 ;;		_Lcd_Write_Char
  3039 ;; This function is called by:
  3040 ;;		_main
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044     03C8                     _Lcd_Write_String:	
  3045                           ;psect for function _Lcd_Write_String
  3046                           
  3047     03C8                     l1428:	
  3048                           ;incstack = 0
  3049                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3050                           
  3051                           
  3052                           ;lcd.c: 105:     int i;;lcd.c: 106:     for (i = 0; a[i] != '\0'; i++)
  3053     03C8  01F8               	clrf	Lcd_Write_String@i
  3054     03C9  01F9               	clrf	Lcd_Write_String@i+1
  3055     03CA  2BED               	goto	l1434
  3056     03CB                     l1430:
  3057                           
  3058                           ;lcd.c: 107:         Lcd_Write_Char(a[i]);
  3059     03CB  0878               	movf	Lcd_Write_String@i,w
  3060     03CC  0773               	addwf	Lcd_Write_String@a,w
  3061     03CD  00F6               	movwf	??_Lcd_Write_String+1
  3062     03CE  0874               	movf	Lcd_Write_String@a+1,w
  3063     03CF  00F5               	movwf	??_Lcd_Write_String
  3064     03D0  1803               	skipnc
  3065     03D1  0AF5               	incf	??_Lcd_Write_String,f
  3066     03D2  1FF8               	btfss	Lcd_Write_String@i,7
  3067     03D3  2BD5               	goto	u1040
  3068     03D4  03F5               	decf	??_Lcd_Write_String,f
  3069     03D5                     u1040:
  3070     03D5  0875               	movf	??_Lcd_Write_String,w
  3071     03D6  00F7               	movwf	??_Lcd_Write_String+2
  3072     03D7  0877               	movf	??_Lcd_Write_String+2,w
  3073     03D8  1283               	bcf	3,5	;RP0=0, select bank0
  3074     03D9  1303               	bcf	3,6	;RP1=0, select bank0
  3075     03DA  00FF               	movwf	btemp+1
  3076     03DB  0876               	movf	??_Lcd_Write_String+1,w
  3077     03DC  0084               	movwf	4
  3078     03DD  120A  118A  2003  120A  118A  	fcall	stringtab
  3079     03E2  120A  118A  22C0  120A  118A  	fcall	_Lcd_Write_Char
  3080     03E7                     l1432:
  3081     03E7  3001               	movlw	1
  3082     03E8  07F8               	addwf	Lcd_Write_String@i,f
  3083     03E9  1803               	skipnc
  3084     03EA  0AF9               	incf	Lcd_Write_String@i+1,f
  3085     03EB  3000               	movlw	0
  3086     03EC  07F9               	addwf	Lcd_Write_String@i+1,f
  3087     03ED                     l1434:
  3088     03ED  0878               	movf	Lcd_Write_String@i,w
  3089     03EE  0773               	addwf	Lcd_Write_String@a,w
  3090     03EF  00F6               	movwf	??_Lcd_Write_String+1
  3091     03F0  0874               	movf	Lcd_Write_String@a+1,w
  3092     03F1  00F5               	movwf	??_Lcd_Write_String
  3093     03F2  1803               	skipnc
  3094     03F3  0AF5               	incf	??_Lcd_Write_String,f
  3095     03F4  1FF8               	btfss	Lcd_Write_String@i,7
  3096     03F5  2BF7               	goto	u1050
  3097     03F6  03F5               	decf	??_Lcd_Write_String,f
  3098     03F7                     u1050:
  3099     03F7  0875               	movf	??_Lcd_Write_String,w
  3100     03F8  00F7               	movwf	??_Lcd_Write_String+2
  3101     03F9  0877               	movf	??_Lcd_Write_String+2,w
  3102     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  3103     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  3104     03FC  00FF               	movwf	btemp+1
  3105     03FD  0876               	movf	??_Lcd_Write_String+1,w
  3106     03FE  0084               	movwf	4
  3107     03FF  120A  118A  2003  120A  118A  	fcall	stringtab
  3108     0404  3A00               	xorlw	0
  3109     0405  1D03               	skipz
  3110     0406  2C08               	goto	u1061
  3111     0407  2C09               	goto	u1060
  3112     0408                     u1061:
  3113     0408  2BCB               	goto	l1430
  3114     0409                     u1060:
  3115     0409                     l79:
  3116     0409  0008               	return
  3117     040A                     __end_of_Lcd_Write_String:
  3118                           
  3119                           	psect	text15
  3120     02C0                     __ptext15:	
  3121 ;; *************** function _Lcd_Write_Char *****************
  3122 ;; Defined at:
  3123 ;;		line 96 in file "lcd.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  a               1    wreg     unsigned char 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  a               1    2[COMMON] unsigned char 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg, status,2, status,0, pclath, cstack
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3137 ;;      Params:         0       0       0       0       0
  3138 ;;      Locals:         1       0       0       0       0
  3139 ;;      Temps:          1       0       0       0       0
  3140 ;;      Totals:         2       0       0       0       0
  3141 ;;Total ram usage:        2 bytes
  3142 ;; Hardware stack levels used: 1
  3143 ;; Hardware stack levels required when called: 1
  3144 ;; This function calls:
  3145 ;;		_Lcd_Port
  3146 ;; This function is called by:
  3147 ;;		_Lcd_Write_String
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151     02C0                     _Lcd_Write_Char:	
  3152                           ;psect for function _Lcd_Write_Char
  3153                           
  3154                           
  3155                           ;incstack = 0
  3156                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3157                           ;Lcd_Write_Char@a stored from wreg
  3158     02C0  00F2               	movwf	Lcd_Write_Char@a
  3159     02C1                     l1316:
  3160                           
  3161                           ;lcd.c: 97:     RC0 = 1;
  3162     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  3163     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  3164     02C3  1407               	bsf	7,0	;volatile
  3165     02C4                     l1318:
  3166                           
  3167                           ;lcd.c: 98:     Lcd_Port(a);
  3168     02C4  0872               	movf	Lcd_Write_Char@a,w
  3169     02C5  120A  118A  238A  120A  118A  	fcall	_Lcd_Port
  3170     02CA                     l1320:
  3171                           
  3172                           ;lcd.c: 99:     RC1 = 1;
  3173     02CA  1283               	bcf	3,5	;RP0=0, select bank0
  3174     02CB  1303               	bcf	3,6	;RP1=0, select bank0
  3175     02CC  1487               	bsf	7,1	;volatile
  3176     02CD                     l1322:
  3177                           
  3178                           ;lcd.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3179     02CD  301A               	movlw	26
  3180     02CE  00F1               	movwf	??_Lcd_Write_Char
  3181     02CF                     u1457:
  3182     02CF  0BF1               	decfsz	??_Lcd_Write_Char,f
  3183     02D0  2ACF               	goto	u1457
  3184     02D1  0000               	nop
  3185     02D2                     l1324:
  3186                           
  3187                           ;lcd.c: 101:     RC1 = 0;
  3188     02D2  1283               	bcf	3,5	;RP0=0, select bank0
  3189     02D3  1303               	bcf	3,6	;RP1=0, select bank0
  3190     02D4  1087               	bcf	7,1	;volatile
  3191     02D5                     l73:
  3192     02D5  0008               	return
  3193     02D6                     __end_of_Lcd_Write_Char:
  3194                           
  3195                           	psect	text16
  3196     0306                     __ptext16:	
  3197 ;; *************** function _Lcd_Set_Cursor *****************
  3198 ;; Defined at:
  3199 ;;		line 68 in file "lcd.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  a               1    wreg     unsigned char 
  3202 ;;  b               1    4[COMMON] unsigned char 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  a               1    5[COMMON] unsigned char 
  3205 ;;  temp            1    6[COMMON] unsigned char 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2, status,0, pclath, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3215 ;;      Params:         1       0       0       0       0
  3216 ;;      Locals:         2       0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0
  3218 ;;      Totals:         3       0       0       0       0
  3219 ;;Total ram usage:        3 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 2
  3222 ;; This function calls:
  3223 ;;		_Lcd_Cmd
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229     0306                     _Lcd_Set_Cursor:	
  3230                           ;psect for function _Lcd_Set_Cursor
  3231                           
  3232                           
  3233                           ;incstack = 0
  3234                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3235                           ;Lcd_Set_Cursor@a stored from wreg
  3236     0306  00F5               	movwf	Lcd_Set_Cursor@a
  3237     0307                     l1416:
  3238                           
  3239                           ;lcd.c: 69:     unsigned char temp;;lcd.c: 70:     if (a == 1) {
  3240     0307  0375               	decf	Lcd_Set_Cursor@a,w
  3241     0308  1D03               	btfss	3,2
  3242     0309  2B0B               	goto	u1021
  3243     030A  2B0C               	goto	u1020
  3244     030B                     u1021:
  3245     030B  2B16               	goto	l1422
  3246     030C                     u1020:
  3247     030C                     l1418:
  3248                           
  3249                           ;lcd.c: 71:         temp = 0x80 + b - 1;
  3250     030C  0874               	movf	Lcd_Set_Cursor@b,w
  3251     030D  3E7F               	addlw	127
  3252     030E  00F6               	movwf	Lcd_Set_Cursor@temp
  3253     030F                     l1420:
  3254                           
  3255                           ;lcd.c: 72:         Lcd_Cmd(temp);
  3256     030F  0876               	movf	Lcd_Set_Cursor@temp,w
  3257     0310  120A  118A  22EC  120A  118A  	fcall	_Lcd_Cmd
  3258                           
  3259                           ;lcd.c: 74:     } else if (a == 2) {
  3260     0315  2B25               	goto	l67
  3261     0316                     l1422:
  3262     0316  3002               	movlw	2
  3263     0317  0675               	xorwf	Lcd_Set_Cursor@a,w
  3264     0318  1D03               	btfss	3,2
  3265     0319  2B1B               	goto	u1031
  3266     031A  2B1C               	goto	u1030
  3267     031B                     u1031:
  3268     031B  2B25               	goto	l67
  3269     031C                     u1030:
  3270     031C                     l1424:
  3271                           
  3272                           ;lcd.c: 75:         temp = 0xC0 + b - 1;
  3273     031C  0874               	movf	Lcd_Set_Cursor@b,w
  3274     031D  3EBF               	addlw	191
  3275     031E  00F6               	movwf	Lcd_Set_Cursor@temp
  3276     031F                     l1426:
  3277                           
  3278                           ;lcd.c: 76:         Lcd_Cmd(temp);
  3279     031F  0876               	movf	Lcd_Set_Cursor@temp,w
  3280     0320  120A  118A  22EC  120A  118A  	fcall	_Lcd_Cmd
  3281     0325                     l67:
  3282     0325  0008               	return
  3283     0326                     __end_of_Lcd_Set_Cursor:
  3284                           
  3285                           	psect	text17
  3286     028C                     __ptext17:	
  3287 ;; *************** function _Lcd_Clear *****************
  3288 ;; Defined at:
  3289 ;;		line 63 in file "lcd.c"
  3290 ;; Parameters:    Size  Location     Type
  3291 ;;		None
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0, pclath, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3303 ;;      Params:         0       0       0       0       0
  3304 ;;      Locals:         0       0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0
  3306 ;;      Totals:         0       0       0       0       0
  3307 ;;Total ram usage:        0 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; Hardware stack levels required when called: 2
  3310 ;; This function calls:
  3311 ;;		_Lcd_Cmd
  3312 ;; This function is called by:
  3313 ;;		_main
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317     028C                     _Lcd_Clear:	
  3318                           ;psect for function _Lcd_Clear
  3319                           
  3320     028C                     l1414:	
  3321                           ;incstack = 0
  3322                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3323                           
  3324                           
  3325                           ;lcd.c: 64:     Lcd_Cmd(0);
  3326     028C  3000               	movlw	0
  3327     028D  120A  118A  22EC  120A  118A  	fcall	_Lcd_Cmd
  3328                           
  3329                           ;lcd.c: 65:     Lcd_Cmd(1);
  3330     0292  3001               	movlw	1
  3331     0293  120A  118A  22EC  120A  118A  	fcall	_Lcd_Cmd
  3332     0298                     l61:
  3333     0298  0008               	return
  3334     0299                     __end_of_Lcd_Clear:
  3335                           
  3336                           	psect	text18
  3337     02EC                     __ptext18:	
  3338 ;; *************** function _Lcd_Cmd *****************
  3339 ;; Defined at:
  3340 ;;		line 55 in file "lcd.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  a               1    wreg     unsigned char 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  a               1    3[COMMON] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  1    wreg      void 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0, pclath, cstack
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         0       0       0       0       0
  3355 ;;      Locals:         1       0       0       0       0
  3356 ;;      Temps:          2       0       0       0       0
  3357 ;;      Totals:         3       0       0       0       0
  3358 ;;Total ram usage:        3 bytes
  3359 ;; Hardware stack levels used: 1
  3360 ;; Hardware stack levels required when called: 1
  3361 ;; This function calls:
  3362 ;;		_Lcd_Port
  3363 ;; This function is called by:
  3364 ;;		_Lcd_Clear
  3365 ;;		_Lcd_Set_Cursor
  3366 ;;		_Lcd_Init
  3367 ;;		_Lcd_Shift_Right
  3368 ;;		_Lcd_Shift_Left
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372     02EC                     _Lcd_Cmd:	
  3373                           ;psect for function _Lcd_Cmd
  3374                           
  3375                           
  3376                           ;incstack = 0
  3377                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3378                           ;Lcd_Cmd@a stored from wreg
  3379     02EC  00F3               	movwf	Lcd_Cmd@a
  3380     02ED                     l1278:
  3381                           
  3382                           ;lcd.c: 56:     RC0 = 0;
  3383     02ED  1283               	bcf	3,5	;RP0=0, select bank0
  3384     02EE  1303               	bcf	3,6	;RP1=0, select bank0
  3385     02EF  1007               	bcf	7,0	;volatile
  3386     02F0                     l1280:
  3387                           
  3388                           ;lcd.c: 57:     Lcd_Port(a);
  3389     02F0  0873               	movf	Lcd_Cmd@a,w
  3390     02F1  120A  118A  238A  120A  118A  	fcall	_Lcd_Port
  3391     02F6                     l1282:
  3392                           
  3393                           ;lcd.c: 58:     RC1 = 1;
  3394     02F6  1283               	bcf	3,5	;RP0=0, select bank0
  3395     02F7  1303               	bcf	3,6	;RP1=0, select bank0
  3396     02F8  1487               	bsf	7,1	;volatile
  3397     02F9                     l1284:
  3398                           
  3399                           ;lcd.c: 59:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3400     02F9  300B               	movlw	11
  3401     02FA  00F2               	movwf	??_Lcd_Cmd+1
  3402     02FB  3062               	movlw	98
  3403     02FC  00F1               	movwf	??_Lcd_Cmd
  3404     02FD                     u1467:
  3405     02FD  0BF1               	decfsz	??_Lcd_Cmd,f
  3406     02FE  2AFD               	goto	u1467
  3407     02FF  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3408     0300  2AFD               	goto	u1467
  3409     0301  0000               	nop
  3410     0302                     l1286:
  3411                           
  3412                           ;lcd.c: 60:     RC1 = 0;
  3413     0302  1283               	bcf	3,5	;RP0=0, select bank0
  3414     0303  1303               	bcf	3,6	;RP1=0, select bank0
  3415     0304  1087               	bcf	7,1	;volatile
  3416     0305                     l58:
  3417     0305  0008               	return
  3418     0306                     __end_of_Lcd_Cmd:
  3419                           
  3420                           	psect	text19
  3421     038A                     __ptext19:	
  3422 ;; *************** function _Lcd_Port *****************
  3423 ;; Defined at:
  3424 ;;		line 13 in file "lcd.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  a               1    wreg     unsigned char 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  a               1    0[COMMON] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;                  1    wreg      void 
  3431 ;; Registers used:
  3432 ;;		wreg
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3438 ;;      Params:         0       0       0       0       0
  3439 ;;      Locals:         1       0       0       0       0
  3440 ;;      Temps:          0       0       0       0       0
  3441 ;;      Totals:         1       0       0       0       0
  3442 ;;Total ram usage:        1 bytes
  3443 ;; Hardware stack levels used: 1
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_Lcd_Cmd
  3448 ;;		_Lcd_Init
  3449 ;;		_Lcd_Write_Char
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453     038A                     _Lcd_Port:	
  3454                           ;psect for function _Lcd_Port
  3455                           
  3456                           
  3457                           ;incstack = 0
  3458                           ; Regs used in _Lcd_Port: [wreg]
  3459                           ;Lcd_Port@a stored from wreg
  3460     038A  00F0               	movwf	Lcd_Port@a
  3461     038B                     l1260:
  3462                           
  3463                           ;lcd.c: 14:     if (a & 1)
  3464     038B  1C70               	btfss	Lcd_Port@a,0
  3465     038C  2B8E               	goto	u681
  3466     038D  2B8F               	goto	u680
  3467     038E                     u681:
  3468     038E  2B93               	goto	l39
  3469     038F                     u680:
  3470     038F                     l1262:
  3471                           
  3472                           ;lcd.c: 15:         RD0 = 1;
  3473     038F  1283               	bcf	3,5	;RP0=0, select bank0
  3474     0390  1303               	bcf	3,6	;RP1=0, select bank0
  3475     0391  1408               	bsf	8,0	;volatile
  3476     0392  2B96               	goto	l40
  3477     0393                     l39:	
  3478                           ;lcd.c: 16:     else
  3479                           
  3480                           
  3481                           ;lcd.c: 17:         RD0 = 0;
  3482     0393  1283               	bcf	3,5	;RP0=0, select bank0
  3483     0394  1303               	bcf	3,6	;RP1=0, select bank0
  3484     0395  1008               	bcf	8,0	;volatile
  3485     0396                     l40:
  3486                           
  3487                           ;lcd.c: 19:     if (a & 2)
  3488     0396  1CF0               	btfss	Lcd_Port@a,1
  3489     0397  2B99               	goto	u691
  3490     0398  2B9A               	goto	u690
  3491     0399                     u691:
  3492     0399  2B9C               	goto	l41
  3493     039A                     u690:
  3494     039A                     l1264:
  3495                           
  3496                           ;lcd.c: 20:         RD1 = 1;
  3497     039A  1488               	bsf	8,1	;volatile
  3498     039B  2B9D               	goto	l42
  3499     039C                     l41:	
  3500                           ;lcd.c: 21:     else
  3501                           
  3502                           
  3503                           ;lcd.c: 22:         RD1 = 0;
  3504     039C  1088               	bcf	8,1	;volatile
  3505     039D                     l42:
  3506                           
  3507                           ;lcd.c: 24:     if (a & 4)
  3508     039D  1D70               	btfss	Lcd_Port@a,2
  3509     039E  2BA0               	goto	u701
  3510     039F  2BA1               	goto	u700
  3511     03A0                     u701:
  3512     03A0  2BA3               	goto	l43
  3513     03A1                     u700:
  3514     03A1                     l1266:
  3515                           
  3516                           ;lcd.c: 25:         RD2 = 1;
  3517     03A1  1508               	bsf	8,2	;volatile
  3518     03A2  2BA4               	goto	l44
  3519     03A3                     l43:	
  3520                           ;lcd.c: 26:     else
  3521                           
  3522                           
  3523                           ;lcd.c: 27:         RD2 = 0;
  3524     03A3  1108               	bcf	8,2	;volatile
  3525     03A4                     l44:
  3526                           
  3527                           ;lcd.c: 29:     if (a & 8)
  3528     03A4  1DF0               	btfss	Lcd_Port@a,3
  3529     03A5  2BA7               	goto	u711
  3530     03A6  2BA8               	goto	u710
  3531     03A7                     u711:
  3532     03A7  2BAA               	goto	l45
  3533     03A8                     u710:
  3534     03A8                     l1268:
  3535                           
  3536                           ;lcd.c: 30:         RD3 = 1;
  3537     03A8  1588               	bsf	8,3	;volatile
  3538     03A9  2BAB               	goto	l46
  3539     03AA                     l45:	
  3540                           ;lcd.c: 31:     else
  3541                           
  3542                           
  3543                           ;lcd.c: 32:         RD3 = 0;
  3544     03AA  1188               	bcf	8,3	;volatile
  3545     03AB                     l46:
  3546                           
  3547                           ;lcd.c: 34:     if (a & 16)
  3548     03AB  1E70               	btfss	Lcd_Port@a,4
  3549     03AC  2BAE               	goto	u721
  3550     03AD  2BAF               	goto	u720
  3551     03AE                     u721:
  3552     03AE  2BB1               	goto	l47
  3553     03AF                     u720:
  3554     03AF                     l1270:
  3555                           
  3556                           ;lcd.c: 35:         RD4 = 1;
  3557     03AF  1608               	bsf	8,4	;volatile
  3558     03B0  2BB2               	goto	l48
  3559     03B1                     l47:	
  3560                           ;lcd.c: 36:     else
  3561                           
  3562                           
  3563                           ;lcd.c: 37:         RD4 = 0;
  3564     03B1  1208               	bcf	8,4	;volatile
  3565     03B2                     l48:
  3566                           
  3567                           ;lcd.c: 39:     if (a & 32)
  3568     03B2  1EF0               	btfss	Lcd_Port@a,5
  3569     03B3  2BB5               	goto	u731
  3570     03B4  2BB6               	goto	u730
  3571     03B5                     u731:
  3572     03B5  2BB8               	goto	l49
  3573     03B6                     u730:
  3574     03B6                     l1272:
  3575                           
  3576                           ;lcd.c: 40:         RD5 = 1;
  3577     03B6  1688               	bsf	8,5	;volatile
  3578     03B7  2BB9               	goto	l50
  3579     03B8                     l49:	
  3580                           ;lcd.c: 41:     else
  3581                           
  3582                           
  3583                           ;lcd.c: 42:         RD5 = 0;
  3584     03B8  1288               	bcf	8,5	;volatile
  3585     03B9                     l50:
  3586                           
  3587                           ;lcd.c: 44:     if (a & 64)
  3588     03B9  1F70               	btfss	Lcd_Port@a,6
  3589     03BA  2BBC               	goto	u741
  3590     03BB  2BBD               	goto	u740
  3591     03BC                     u741:
  3592     03BC  2BBF               	goto	l51
  3593     03BD                     u740:
  3594     03BD                     l1274:
  3595                           
  3596                           ;lcd.c: 45:         RD6 = 1;
  3597     03BD  1708               	bsf	8,6	;volatile
  3598     03BE  2BC0               	goto	l52
  3599     03BF                     l51:	
  3600                           ;lcd.c: 46:     else
  3601                           
  3602                           
  3603                           ;lcd.c: 47:         RD6 = 0;
  3604     03BF  1308               	bcf	8,6	;volatile
  3605     03C0                     l52:
  3606                           
  3607                           ;lcd.c: 49:     if (a & 128)
  3608     03C0  1FF0               	btfss	Lcd_Port@a,7
  3609     03C1  2BC3               	goto	u751
  3610     03C2  2BC4               	goto	u750
  3611     03C3                     u751:
  3612     03C3  2BC6               	goto	l53
  3613     03C4                     u750:
  3614     03C4                     l1276:
  3615                           
  3616                           ;lcd.c: 50:         RD7 = 1;
  3617     03C4  1788               	bsf	8,7	;volatile
  3618     03C5  2BC7               	goto	l55
  3619     03C6                     l53:	
  3620                           ;lcd.c: 51:     else
  3621                           
  3622                           
  3623                           ;lcd.c: 52:         RD7 = 0;
  3624     03C6  1388               	bcf	8,7	;volatile
  3625     03C7                     l55:
  3626     03C7  0008               	return
  3627     03C8                     __end_of_Lcd_Port:
  3628     007E                     btemp	set	126	;btemp
  3629     007E                     wtemp0	set	126
  3630                           
  3631                           	psect	idloc
  3632                           
  3633                           ;Config register IDLOC0 @ 0x2000
  3634                           ;	unspecified, using default values
  3635     2000                     	org	8192
  3636     2000  3FFF               	dw	16383
  3637                           
  3638                           ;Config register IDLOC1 @ 0x2001
  3639                           ;	unspecified, using default values
  3640     2001                     	org	8193
  3641     2001  3FFF               	dw	16383
  3642                           
  3643                           ;Config register IDLOC2 @ 0x2002
  3644                           ;	unspecified, using default values
  3645     2002                     	org	8194
  3646     2002  3FFF               	dw	16383
  3647                           
  3648                           ;Config register IDLOC3 @ 0x2003
  3649                           ;	unspecified, using default values
  3650     2003                     	org	8195
  3651     2003  3FFF               	dw	16383
  3652                           
  3653                           	psect	config
  3654                           
  3655                           ;Config register CONFIG1 @ 0x2007
  3656                           ;	Oscillator Selection bits
  3657                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3658                           ;	Watchdog Timer Enable bit
  3659                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3660                           ;	Power-up Timer Enable bit
  3661                           ;	PWRTE = OFF, PWRT disabled
  3662                           ;	RE3/MCLR pin function select bit
  3663                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3664                           ;	Code Protection bit
  3665                           ;	CP = OFF, Program memory code protection is disabled
  3666                           ;	Data Code Protection bit
  3667                           ;	CPD = OFF, Data memory code protection is disabled
  3668                           ;	Brown Out Reset Selection bits
  3669                           ;	BOREN = OFF, BOR disabled
  3670                           ;	Internal External Switchover bit
  3671                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3672                           ;	Fail-Safe Clock Monitor Enabled bit
  3673                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3674                           ;	Low Voltage Programming Enable bit
  3675                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3676                           ;	In-Circuit Debugger Mode bit
  3677                           ;	DEBUG = 0x1, unprogramme  3678     2007                     	org	8199
  3679     2007  20D4               	dw	8404
  3680                           
  3681                           ;Config register CONFIG2 @ 0x2008
  3682                           ;	Brown-out Reset Selection bit
  3683                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3684                           ;	Flash Program Memory Self Write Enable bits
  3685                           ;	WRT = OFF, Write protection off
  3686     2008                     	org	8200
  3687     2008  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    10
    Data        1
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     17      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> volt(BANK0[16]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4203
                                             13 BANK0      4     4      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           ___xxtofl
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1697
                                              0 BANK0     13    10      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     168
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     964
                           _Lcd_Init
                          _configOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _configOsc                                            2     0      2     230
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
                            _spiRead (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1     484
                                              4 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___xxtofl
     _spiRead (ARG)
       _spiReceiveWait
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _configOsc
     _spiInit
   _spiRead
   _spiWrite
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      28       5       50.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      12        0.0%
ABS                  0      0      36       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Aug 02 20:01:59 2023

                       l5 04AA                         l6 04B7                         l7 04C3  
                       l8 04D2                         l9 04DF                         _a 0025  
                       pc 0002            ___bmul@product 0071               _SSPSTATbits 0094  
                      l10 04EC                        l12 04FA                        l40 0396  
                      l41 039C                        l50 03B9                        l42 039D  
                      l51 03BF                        l43 03A3                        l52 03C0  
                      l44 03A4                        l53 03C6                        l45 03AA  
                      l61 0298                        l46 03AB                        l70 049E  
                      l55 03C7                        l47 03B1                        l39 0393  
                      l48 03B2                        l49 03B8                        l73 02D5  
                      l58 0305                        l67 0325                        l79 0409  
                      _s1 0024                        _s2 0020                        fsr 0004  
                     l150 034F                       l143 05FA                       l305 07EC  
                     l170 0274                       l173 027A                       l166 02E6  
                     l167 02EB                       l335 02BF                       l184 028B  
                     l176 0273                       l581 044D                       l742 051D  
                     l591 0389                       l744 05B2                       l762 02AA  
                     l755 057C                       l756 0588                       _RC0 0038  
                     _RC1 0039                       _RD0 0040                       _RD1 0041  
                     _RD2 0042                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     u700 03A1                       u701 03A0                       u710 03A8  
                     u711 03A7                       u720 03AF                       u800 04D9  
                     u721 03AE                       u801 04D8                       u730 03B6  
                     u810 04E6                       u731 03B5                       u811 04E5  
                     u740 03BD                       u820 04F3                       u741 03BC  
                     u821 04F2                       u750 03C4                       u830 02DE  
                     u910 0424                       u751 03C3                       u831 02DD  
                     u911 0423                       u680 038F                       u760 04A6  
                     u840 027A                       u681 038E                       u761 04A5  
                     u841 0279                       u905 0416                       u690 039A  
                     u770 04B1                       u930 0435                       u850 02A1  
                     u691 0399                       u771 04B0                       u931 0434  
                     u851 02A0                       u780 04BD                       u860 02A7  
                     u781 04BC                       u925 0425                       u861 02A6  
                     u790 04CC                       u870 02B1                       u950 0449  
                     u791 04CB                       u871 02B0                       u951 0448  
                     u935 0431                       u880 02BE                       u960 0356  
                     u881 02BD                       u945 043D                       u961 0355  
                     u890 0412                       u891 0411                       u980 0368  
                     u981 0367                       u990 0372                       u991 0371  
                     u975 035A                       u995 036E                       fsr0 0004  
                     indf 0000                      l1300 04E6                      l1310 045D  
                    l1302 04F3                      l1320 02CA                      l1312 046C  
                    l1304 04F7                      l1400 0364                      l1322 02CD  
                    l1314 0472                      l1306 044E                      l1330 02E0  
                    l1402 0368                      l1410 0385                      l1260 038B  
                    l1420 030F                      l1324 02D2                      l1316 02C1  
                    l1308 0454                      l1332 02E2                      l1404 0372  
                    l1340 029B                      l1500 06F3                      l1270 03AF  
                    l1262 038F                      l1414 028C                      l1422 0316  
                    l1318 02C4                      l1430 03CB                      l1334 02E5  
                    l1326 02D7                      l1350 02AC                      l1406 0378  
                    l1342 02A1                      l1510 0726                      l1502 0712  
                    l1272 03B6                      l1264 039A                      l1280 02F0  
                    l1424 031C                      l1416 0307                      l1432 03E7  
                    l1600 0580                      l1328 02DE                      l1440 0332  
                    l1336 0274                      l1360 02B9                      l1352 02AD  
                    l1408 037F                      l1344 02A7                      l1512 072B  
                    l1504 071A                      l1274 03BD                      l1266 03A1  
                    l1282 02F6                      l1426 031F                      l1418 030C  
                    l1434 03ED                      l1610 05AA                      l1602 058A  
                    l1290 04A6                      l1450 033C                      l1442 0336  
                    l1362 02BE                      l1354 02B1                      l1370 0412  
                    l1346 02A9                      l1338 029A                      l1530 075C  
                    l1514 0730                      l1506 071E                      l1276 03C4  
                    l1268 03A8                      l1284 02F9                      l1428 03C8  
                    l1604 05A0                      l1292 04B1                      l1460 0341  
                    l1452 033D                      l1444 0337                      l1436 0326  
                    l1356 02B5                      l1380 0435                      l1372 0415  
                    l1540 078B                      l1532 0762                      l1524 073C  
                    l1516 0736                      l1508 0722                      l1620 05B8  
                    l1286 0302                      l1278 02ED                      l1606 05A5  
                    l1294 04BD                      l1462 034A                      l1454 033E  
                    l1446 0338                      l1438 032F                      l1358 02B7  
                    l1382 043B                      l1374 041C                      l1366 040A  
                    l1542 0793                      l1534 0772                      l1518 073A  
                    l1630 05E4                      l1622 05BF                      l1608 05A9  
                    l1296 04CC                      l1288 049F                      l1456 033F  
                    l1448 0339                      l1464 026F                      l1384 043C  
                    l1376 0420                      l1368 040C                      l1392 0350  
                    l1544 0798                      l1552 07CF                      l1536 0773  
                    l1528 0758                      l1480 06B2                      l1472 069F  
                    l1640 0630                      l1632 05F6                      l1624 05C0  
                    l1570 0505                      l1298 04D9                      l1458 0340  
                    l1466 0283                      l1386 0443                      l1378 0424  
                    l1394 0356                      l1546 079D                      l1538 0787  
                    l1490 06D2                      l1482 06B3                      l1474 06A2  
                    l1554 07D8                      l1650 0652                      l1642 063A  
                    l1634 05FB                      l1626 05CA                      l1618 05B3  
                    l1580 0531                      l1572 0515                      l1468 0288  
                    l1388 0449                      l1396 0359                      l1548 07C9  
                    l1556 07E8                      l1492 06DD                      l1484 06BF  
                    l1476 06A8                      l1660 0681                      l1652 0657  
                    l1644 063D                      l1636 0605                      l1628 05D2  
                    l1590 0557                      l1582 0535                      l1574 0525  
                    l1566 04FC                      l1398 0360                      l1494 06E1  
                    l1486 06C3                      l1478 06AD                      l1662 068A  
                    l1654 065F                      l1646 064C                      l1638 060D  
                    l1592 0560                      l1584 053E                      l1568 0501  
                    l1488 06C5                      l1496 06F2                      l1656 0668  
                    l1648 0650                      l1594 0567                      l1586 0545  
                    l1578 052E                      l1658 0670                      l1596 0572  
                    l1588 0549                      l1598 0576                      l1694 0707  
                    STR_1 001D                      STR_2 0029                      u1010 0385  
                    u1011 0384                      u1020 030C                      u1100 0722  
                    u1021 030B                      u1005 0379                      u1101 0721  
                    u1030 031C                      u1110 0730                      u1031 031B  
                    u1111 072F                      u1040 03D5                      u1200 0501  
                    u1120 0736                      u1201 0500                      u1121 0735  
                    u1050 03F7                      u1210 0505                      u1130 0757  
                    u1211 0504                      u1131 0756                      u1060 0409  
                    u1300 0580                      u1220 0525                      u1140 0762  
                    u1061 0408                      u1301 057F                      u1221 0524  
                    u1141 0761                      u1310 0595                      u1150 0772  
                    u1070 06A8                      u1151 0771                      u1135 0753  
                    u1071 06A7                      u1320 05A5                      u1240 0544  
                    u1160 0787                      u1080 06BF                      u1321 05A4  
                    u1241 0543                      u1161 0786                      u1081 06BE  
                    u1330 05A9                      u1170 0793                      u1090 06F1  
                    u1331 05A8                      u1315 0590                      u1235 0536  
                    u1171 0792                      u1155 076E                      u1091 06F0  
                    u1260 0566                      u1180 07D8                      u1340 05BF  
                    u1261 0565                      u1181 07D7                      u1165 0783  
                    u1341 05BE                      u1190 07E8                      u1255 0558  
                    u1191 07E7                      u1407 0645                      u1280 0576  
                    u1281 0575                      u1417 0692                      u1290 057C  
                    u1291 057B                      u1275 056B                      u1427 0458  
                    u1437 0467                      u1357 05C6                      u1447 0476  
                    u1367 05E0                      u1457 02CF                      u1377 05EF  
                    u1467 02FD                      u1387 0601                      u1397 0636  
       ?_Lcd_Write_String 0073                      _main 05B3                      btemp 007E  
                    _volt 0026                      start 0000        ??_Lcd_Write_String 0075  
         __end_of_Lcd_Cmd 0306         ___bmul@multiplier 0072             configOsc@frec 0070  
                   ?_main 0070           __end_of___lwdiv 044E           __end_of___lwmod 038A  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
         __end_of_dpowers 001D           __end_of_isdigit 02AB                     _setup 0326  
                   pclath 000A           __end_of_spiInit 02EC           __end_of_spiRead 028C  
                   status 0003                     wtemp0 007E           __end_of_sprintf 07ED  
        __end_of_Lcd_Init 049F          __end_of_Lcd_Port 03C8           __initialization 07ED  
            __end_of_main 069C                    ??_main 0043                    ?_setup 0070  
                  _ANSELH 0189                 ??_Lcd_Cmd 0071                    _TRISC2 043A  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013          __end_of___xxtofl 05B3                    ___bmul 02AB  
               ??___lwdiv 0074                 ??___lwmod 007B                 ??_isdigit 0070  
        __end_of_spiWrite 0274                 ??_spiInit 0073                 ??_spiRead 0070  
               ??_sprintf 0039           Lcd_Set_Cursor@a 0075           Lcd_Set_Cursor@b 0074  
            ___xxtofl@arg 007A              ___xxtofl@exp 0079              ___xxtofl@val 0070  
 __end_of__initialization 07FC         __end_of_Lcd_Clear 0299       ___bmul@multiplicand 0070  
          __pcstackCOMMON 0070              __pidataBANK0 026D             __end_of_setup 0350  
          _Lcd_Set_Cursor 0306                 ?_Lcd_Init 0070                 ?_Lcd_Port 0070  
                 ??_setup 0076                __pbssBANK0 0020                __pmaintext 05B3  
                 ?___bmul 0070    __end_of_Lcd_Set_Cursor 0326                 ?___xxtofl 0070  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                   _SSPSTAT 0094  
              __stringtab 0003            _Lcd_Write_Char 02C0                   _Lcd_Cmd 02EC  
       __end_of_configOsc 04FB                 ?_spiWrite 0070                   ___lwdiv 040A  
                 ___lwmod 0350           ?_Lcd_Set_Cursor 0074                   __ptext1 069C  
                 __ptext2 0299                   __ptext3 0350                   __ptext4 040A  
                 __ptext5 02AB                   __ptext6 026E                   __ptext7 0283  
                 __ptext8 0274                   __ptext9 0326                   _dpowers 0013  
                 _isdigit 0299                ??___xxtofl 0074                   _spiInit 02D6  
                 _spiRead 0283                   _sprintf 069C                   clrloop0 027C  
  __end_of_Lcd_Write_Char 02D6      end_of_initialization 07FC                ??_spiWrite 0070  
               Lcd_Port@a 0070                 _PORTCbits 0007             ___xxtofl@sign 0078  
             spiWrite@dat 0070           ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0073  
       Lcd_Write_String@i 0078                 _Lcd_Clear 028C            _spiReceiveWait 0274  
          __end_of___bmul 02C0          _Lcd_Write_String 03C8       start_initialization 07ED  
  __end_of_spiReceiveWait 027B                ?_Lcd_Clear 0070                  ??___bmul 0071  
             __pdataBANK0 0047           Lcd_Write_Char@a 0072                 ___latbits 0002  
           __pcstackBANK0 0036                  ?_Lcd_Cmd 0070               sprintf@flag 003D  
             sprintf@prec 0041          ___lwdiv@dividend 0072           ?_spiReceiveWait 0070  
        ??_Lcd_Set_Cursor 0075                  ?___lwdiv 0070                  ?___lwmod 0077  
               _configOsc 049F                 __pstrings 0003                  ?_isdigit 0070  
                ?_spiInit 0070                  ?_spiRead 0070          ___lwdiv@quotient 0074  
                ?_sprintf 0036      spiInit@sTransmitEdge 0072                 clear_ram0 027B  
      spiInit@sDataSample 0070                  Lcd_Cmd@a 0073               ??_Lcd_Clear 0074  
              ?_configOsc 0070               __stringbase 0012          ??_Lcd_Write_Char 0071  
                _Lcd_Init 044E                  _Lcd_Port 038A  __end_of_Lcd_Write_String 040A  
      __end_of__stringtab 0013               _isdigit$818 0070                sprintf@val 003F  
                ___xxtofl 04FB           ___lwdiv@divisor 0070           ___lwdiv@counter 0076  
                __ptext10 02D6                  __ptext11 049F                  __ptext12 044E  
                __ptext13 04FB                  __ptext14 03C8                  __ptext15 02C0  
                __ptext16 0306                  __ptext17 028C                  __ptext18 02EC  
                __ptext19 038A                  _spiWrite 026E              spiInit@sType 0073  
             ??_configOsc 0072         spiInit@sClockIdle 0071                _INTCONbits 000B  
                isdigit@c 0071                 sprintf@ap 003C                 sprintf@sp 003E  
        ___lwmod@dividend 0079          ??_spiReceiveWait 0070                 stringcode 000D  
              _OSCCONbits 008F               _slaveSelect 0047        Lcd_Set_Cursor@temp 0076  
                sprintf@c 0042                  sprintf@f 0036           ___lwmod@divisor 0077  
         ___lwmod@counter 007B                  stringdir 000D                  stringtab 0003  
