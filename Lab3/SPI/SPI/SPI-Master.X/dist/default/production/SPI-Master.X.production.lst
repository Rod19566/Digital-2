

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jul 27 16:08:57 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.36
    17                           ; Generated 28/01/2022 GMT
    18                           ; 
    19                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0013                     _SSPBUF	set	19
   286  0014                     _SSPCON	set	20
   287  0008                     _PORTD	set	8
   288  0006                     _PORTB	set	6
   289  0007                     _PORTCbits	set	7
   290  0094                     _SSPSTATbits	set	148
   291  0094                     _SSPSTAT	set	148
   292  0088                     _TRISD	set	136
   293  0086                     _TRISB	set	134
   294  043B                     _TRISC3	set	1083
   295  043D                     _TRISC5	set	1085
   296  043A                     _TRISC2	set	1082
   297  0189                     _ANSELH	set	393
   298  0188                     _ANSEL	set	392
   299                           
   300                           	psect	cinit
   301  07FC                     start_initialization:	
   302                           ; #config settings
   303                           
   304  07FC                     __initialization:
   305  07FC                     end_of_initialization:	
   306                           ;End of C runtime variable initialization code
   307                           
   308  07FC                     __end_of__initialization:
   309  07FC  0183               	clrf	3
   310  07FD  120A  118A  2FB8   	ljmp	_main	;jump to C main() function
   311                           
   312                           	psect	cstackCOMMON
   313  0070                     __pcstackCOMMON:
   314  0070                     ?_setup:
   315  0070                     ?_spiWrite:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ??_spiWrite:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_spiRead:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ??_spiRead:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_spiInit:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_main:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_spiReceiveWait:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ??_spiReceiveWait:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     spiInit@sDataSample:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     spiWrite@dat:	
   343                           ; 1 bytes @ 0x0
   344                           
   345                           
   346                           ; 1 bytes @ 0x0
   347  0070                     	ds	1
   348  0071                     spiInit@sClockIdle:
   349                           
   350                           ; 1 bytes @ 0x1
   351  0071                     	ds	1
   352  0072                     spiInit@sTransmitEdge:
   353                           
   354                           ; 1 bytes @ 0x2
   355  0072                     	ds	1
   356  0073                     ??_spiInit:
   357  0073                     spiInit@sType:	
   358                           ; 1 bytes @ 0x3
   359                           
   360                           
   361                           ; 1 bytes @ 0x3
   362  0073                     	ds	1
   363  0074                     ??_setup:
   364  0074                     ??_main:	
   365                           ; 1 bytes @ 0x4
   366                           
   367                           
   368                           ; 1 bytes @ 0x4
   369  0074                     	ds	3
   370                           
   371                           	psect	maintext
   372  07B8                     __pmaintext:	
   373 ;;
   374 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   375 ;;
   376 ;; *************** function _main *****************
   377 ;; Defined at:
   378 ;;		line 51 in file "main.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;		None
   381 ;; Auto vars:     Size  Location     Type
   382 ;;		None
   383 ;; Return value:  Size  Location     Type
   384 ;;                  1    wreg      void 
   385 ;; Registers used:
   386 ;;		wreg, status,2, status,0, pclath, cstack
   387 ;; Tracked objects:
   388 ;;		On entry : B00/0
   389 ;;		On exit  : 0/0
   390 ;;		Unchanged: 0/0
   391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   392 ;;      Params:         0       0       0       0       0
   393 ;;      Locals:         0       0       0       0       0
   394 ;;      Temps:          3       0       0       0       0
   395 ;;      Totals:         3       0       0       0       0
   396 ;;Total ram usage:        3 bytes
   397 ;; Hardware stack levels required when called: 2
   398 ;; This function calls:
   399 ;;		_setup
   400 ;;		_spiRead
   401 ;;		_spiWrite
   402 ;; This function is called by:
   403 ;;		Startup code after reset
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407  07B8                     _main:	
   408                           ;psect for function _main
   409                           
   410  07B8                     l733:	
   411                           ;incstack = 0
   412                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   413                           
   414                           
   415                           ;main.c: 52:     setup();
   416  07B8  120A  118A  27A0  120A  118A  	fcall	_setup
   417  07BD                     l735:
   418                           
   419                           ;main.c: 57:        PORTCbits.RC2 = 0;
   420  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   421  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   422  07BF  1107               	bcf	7,2	;volatile
   423  07C0                     l737:
   424                           
   425                           ;main.c: 58:        _delay((unsigned long)((1)*(8000000/4000.0)));
   426  07C0  3003               	movlw	3
   427  07C1  00F5               	movwf	??_main+1
   428  07C2  3097               	movlw	151
   429  07C3  00F4               	movwf	??_main
   430  07C4                     u47:
   431  07C4  0BF4               	decfsz	??_main,f
   432  07C5  2FC4               	goto	u47
   433  07C6  0BF5               	decfsz	??_main+1,f
   434  07C7  2FC4               	goto	u47
   435  07C8  2FC9               	nop2
   436  07C9                     l739:
   437                           
   438                           ;main.c: 60:        spiWrite(PORTB);
   439  07C9  1283               	bcf	3,5	;RP0=0, select bank0
   440  07CA  1303               	bcf	3,6	;RP1=0, select bank0
   441  07CB  0806               	movf	6,w	;volatile
   442  07CC  120A  118A  2774  120A  118A  	fcall	_spiWrite
   443  07D1                     l741:
   444                           
   445                           ;main.c: 61:        PORTD = spiRead();
   446  07D1  120A  118A  2781  120A  118A  	fcall	_spiRead
   447  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   448  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   449  07D8  0088               	movwf	8	;volatile
   450  07D9                     l743:
   451                           
   452                           ;main.c: 63:        _delay((unsigned long)((1)*(8000000/4000.0)));
   453  07D9  3003               	movlw	3
   454  07DA  00F5               	movwf	??_main+1
   455  07DB  3097               	movlw	151
   456  07DC  00F4               	movwf	??_main
   457  07DD                     u57:
   458  07DD  0BF4               	decfsz	??_main,f
   459  07DE  2FDD               	goto	u57
   460  07DF  0BF5               	decfsz	??_main+1,f
   461  07E0  2FDD               	goto	u57
   462  07E1  2FE2               	nop2
   463  07E2                     l745:
   464                           
   465                           ;main.c: 64:        PORTCbits.RC2 = 1;
   466  07E2  1283               	bcf	3,5	;RP0=0, select bank0
   467  07E3  1303               	bcf	3,6	;RP1=0, select bank0
   468  07E4  1507               	bsf	7,2	;volatile
   469  07E5                     l747:
   470                           
   471                           ;main.c: 66:        _delay((unsigned long)((250)*(8000000/4000.0)));
   472  07E5  3003               	movlw	3
   473  07E6  00F6               	movwf	??_main+2
   474  07E7  308A               	movlw	138
   475  07E8  00F5               	movwf	??_main+1
   476  07E9  3055               	movlw	85
   477  07EA  00F4               	movwf	??_main
   478  07EB                     u67:
   479  07EB  0BF4               	decfsz	??_main,f
   480  07EC  2FEB               	goto	u67
   481  07ED  0BF5               	decfsz	??_main+1,f
   482  07EE  2FEB               	goto	u67
   483  07EF  0BF6               	decfsz	??_main+2,f
   484  07F0  2FEB               	goto	u67
   485  07F1  2FF2               	nop2
   486  07F2                     l749:
   487                           
   488                           ;main.c: 67:        PORTB++;
   489  07F2  3001               	movlw	1
   490  07F3  00F4               	movwf	??_main
   491  07F4  0874               	movf	??_main,w
   492  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   493  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   494  07F7  0786               	addwf	6,f	;volatile
   495  07F8  2FBD               	goto	l735
   496  07F9  120A  118A  2800   	ljmp	start
   497  07FC                     __end_of_main:
   498                           
   499                           	psect	text1
   500  0774                     __ptext1:	
   501 ;; *************** function _spiWrite *****************
   502 ;; Defined at:
   503 ;;		line 34 in file "SPI.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;  dat             1    wreg     unsigned char 
   506 ;; Auto vars:     Size  Location     Type
   507 ;;  dat             1    0[COMMON] unsigned char 
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   517 ;;      Params:         0       0       0       0       0
   518 ;;      Locals:         1       0       0       0       0
   519 ;;      Temps:          0       0       0       0       0
   520 ;;      Totals:         1       0       0       0       0
   521 ;;Total ram usage:        1 bytes
   522 ;; Hardware stack levels used: 1
   523 ;; This function calls:
   524 ;;		Nothing
   525 ;; This function is called by:
   526 ;;		_main
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530  0774                     _spiWrite:	
   531                           ;psect for function _spiWrite
   532                           
   533                           
   534                           ;incstack = 0
   535                           ; Regs used in _spiWrite: [wreg]
   536                           ;spiWrite@dat stored from wreg
   537  0774  00F0               	movwf	spiWrite@dat
   538  0775                     l683:
   539                           
   540                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   541  0775  0870               	movf	spiWrite@dat,w
   542  0776  1283               	bcf	3,5	;RP0=0, select bank0
   543  0777  1303               	bcf	3,6	;RP1=0, select bank0
   544  0778  0093               	movwf	19	;volatile
   545  0779                     l63:
   546  0779  0008               	return
   547  077A                     __end_of_spiWrite:
   548                           
   549                           	psect	text2
   550  0781                     __ptext2:	
   551 ;; *************** function _spiRead *****************
   552 ;; Defined at:
   553 ;;		line 47 in file "SPI.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      unsigned char 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0, pclath, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         0       0       0       0       0
   568 ;;      Locals:         0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0
   570 ;;      Totals:         0       0       0       0       0
   571 ;;Total ram usage:        0 bytes
   572 ;; Hardware stack levels used: 1
   573 ;; Hardware stack levels required when called: 1
   574 ;; This function calls:
   575 ;;		_spiReceiveWait
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581  0781                     _spiRead:	
   582                           ;psect for function _spiRead
   583                           
   584  0781                     l685:	
   585                           ;incstack = 0
   586                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   587                           
   588                           
   589                           ;SPI.c: 49:     spiReceiveWait();
   590  0781  120A  118A  277A  120A  118A  	fcall	_spiReceiveWait
   591  0786                     l687:
   592                           
   593                           ;SPI.c: 50:     return(SSPBUF);
   594  0786  1283               	bcf	3,5	;RP0=0, select bank0
   595  0787  1303               	bcf	3,6	;RP1=0, select bank0
   596  0788  0813               	movf	19,w	;volatile
   597  0789                     l71:
   598  0789  0008               	return
   599  078A                     __end_of_spiRead:
   600                           
   601                           	psect	text3
   602  077A                     __ptext3:	
   603 ;; *************** function _spiReceiveWait *****************
   604 ;; Defined at:
   605 ;;		line 29 in file "SPI.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		None
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0
   622 ;;      Totals:         0       0       0       0       0
   623 ;;Total ram usage:        0 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_spiRead
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632  077A                     _spiReceiveWait:	
   633                           ;psect for function _spiReceiveWait
   634                           
   635  077A                     l673:	
   636                           ;incstack = 0
   637                           ; Regs used in _spiReceiveWait: []
   638                           
   639  077A                     l57:	
   640                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   641                           
   642  077A  1683               	bsf	3,5	;RP0=1, select bank1
   643  077B  1303               	bcf	3,6	;RP1=0, select bank1
   644  077C  1C14               	btfss	20,0	;volatile
   645  077D  2F7F               	goto	u21
   646  077E  2F80               	goto	u20
   647  077F                     u21:
   648  077F  2F7A               	goto	l57
   649  0780                     u20:
   650  0780                     l60:
   651  0780  0008               	return
   652  0781                     __end_of_spiReceiveWait:
   653                           
   654                           	psect	text4
   655  07A0                     __ptext4:	
   656 ;; *************** function _setup *****************
   657 ;; Defined at:
   658 ;;		line 74 in file "main.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2, status,0, pclath, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         0       0       0       0       0
   673 ;;      Locals:         0       0       0       0       0
   674 ;;      Temps:          0       0       0       0       0
   675 ;;      Totals:         0       0       0       0       0
   676 ;;Total ram usage:        0 bytes
   677 ;; Hardware stack levels used: 1
   678 ;; Hardware stack levels required when called: 1
   679 ;; This function calls:
   680 ;;		_spiInit
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686  07A0                     _setup:	
   687                           ;psect for function _setup
   688                           
   689  07A0                     l725:	
   690                           ;incstack = 0
   691                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   692                           
   693                           
   694                           ;main.c: 75:     ANSEL = 0;
   695  07A0  1683               	bsf	3,5	;RP0=1, select bank3
   696  07A1  1703               	bsf	3,6	;RP1=1, select bank3
   697  07A2  0188               	clrf	8	;volatile
   698                           
   699                           ;main.c: 76:     ANSELH = 0;
   700  07A3  0189               	clrf	9	;volatile
   701  07A4                     l727:
   702                           
   703                           ;main.c: 77:     TRISC2 = 0;
   704  07A4  1683               	bsf	3,5	;RP0=1, select bank1
   705  07A5  1303               	bcf	3,6	;RP1=0, select bank1
   706  07A6  1107               	bcf	7,2	;volatile
   707                           
   708                           ;main.c: 78:     TRISB = 0;
   709  07A7  0186               	clrf	6	;volatile
   710                           
   711                           ;main.c: 79:     TRISD = 0;
   712  07A8  0188               	clrf	8	;volatile
   713                           
   714                           ;main.c: 80:     PORTB = 0;
   715  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   716  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   717  07AB  0186               	clrf	6	;volatile
   718                           
   719                           ;main.c: 81:     PORTD = 0;
   720  07AC  0188               	clrf	8	;volatile
   721  07AD                     l729:
   722                           
   723                           ;main.c: 82:     PORTCbits.RC2 = 1;
   724  07AD  1507               	bsf	7,2	;volatile
   725  07AE                     l731:
   726                           
   727                           ;main.c: 83:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   728  07AE  01F0               	clrf	spiInit@sDataSample
   729  07AF  01F1               	clrf	spiInit@sClockIdle
   730  07B0  01F2               	clrf	spiInit@sTransmitEdge
   731  07B1  3020               	movlw	32
   732  07B2  120A  118A  278A  120A  118A  	fcall	_spiInit
   733  07B7                     l37:
   734  07B7  0008               	return
   735  07B8                     __end_of_setup:
   736                           
   737                           	psect	text5
   738  078A                     __ptext5:	
   739 ;; *************** function _spiInit *****************
   740 ;; Defined at:
   741 ;;		line 12 in file "SPI.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;  sType           1    wreg     enum E1292
   744 ;;  sDataSample     1    0[COMMON] enum E1300
   745 ;;  sClockIdle      1    1[COMMON] enum E1304
   746 ;;  sTransmitEdg    1    2[COMMON] enum E1308
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  sType           1    3[COMMON] enum E1292
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         3       0       0       0       0
   759 ;;      Locals:         1       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0
   761 ;;      Totals:         4       0       0       0       0
   762 ;;Total ram usage:        4 bytes
   763 ;; Hardware stack levels used: 1
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_setup
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771  078A                     _spiInit:	
   772                           ;psect for function _spiInit
   773                           
   774                           
   775                           ;incstack = 0
   776                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   777                           ;spiInit@sType stored from wreg
   778  078A  00F3               	movwf	spiInit@sType
   779  078B                     l715:
   780                           
   781                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   782  078B  1683               	bsf	3,5	;RP0=1, select bank1
   783  078C  1303               	bcf	3,6	;RP1=0, select bank1
   784  078D  1287               	bcf	7,5	;volatile
   785                           
   786                           ;SPI.c: 15:     if(sType & 0b00000100)
   787  078E  1D73               	btfss	spiInit@sType,2
   788  078F  2F91               	goto	u31
   789  0790  2F92               	goto	u30
   790  0791                     u31:
   791  0791  2F96               	goto	l721
   792  0792                     u30:
   793  0792                     l717:
   794                           
   795                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   796  0792  0872               	movf	spiInit@sTransmitEdge,w
   797  0793  0094               	movwf	20	;volatile
   798  0794                     l719:
   799                           
   800                           ;SPI.c: 18:         TRISC3 = 1;
   801  0794  1587               	bsf	7,3	;volatile
   802                           
   803                           ;SPI.c: 19:     }
   804  0795  2F9A               	goto	l53
   805  0796                     l721:
   806                           
   807                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   808  0796  0870               	movf	spiInit@sDataSample,w
   809  0797  0472               	iorwf	spiInit@sTransmitEdge,w
   810  0798  0094               	movwf	20	;volatile
   811  0799                     l723:
   812                           
   813                           ;SPI.c: 23:         TRISC3 = 0;
   814  0799  1187               	bcf	7,3	;volatile
   815  079A                     l53:	
   816                           ;SPI.c: 24:     }
   817                           
   818                           
   819                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   820  079A  0873               	movf	spiInit@sType,w
   821  079B  0471               	iorwf	spiInit@sClockIdle,w
   822  079C  1283               	bcf	3,5	;RP0=0, select bank0
   823  079D  1303               	bcf	3,6	;RP1=0, select bank0
   824  079E  0094               	movwf	20	;volatile
   825  079F                     l54:
   826  079F  0008               	return
   827  07A0                     __end_of_spiInit:
   828  007E                     btemp	set	126	;btemp
   829  007E                     wtemp0	set	126
   830                           
   831                           	psect	idloc
   832                           
   833                           ;Config register IDLOC0 @ 0x2000
   834                           ;	unspecified, using default values
   835  2000                     	org	8192
   836  2000  3FFF               	dw	16383
   837                           
   838                           ;Config register IDLOC1 @ 0x2001
   839                           ;	unspecified, using default values
   840  2001                     	org	8193
   841  2001  3FFF               	dw	16383
   842                           
   843                           ;Config register IDLOC2 @ 0x2002
   844                           ;	unspecified, using default values
   845  2002                     	org	8194
   846  2002  3FFF               	dw	16383
   847                           
   848                           ;Config register IDLOC3 @ 0x2003
   849                           ;	unspecified, using default values
   850  2003                     	org	8195
   851  2003  3FFF               	dw	16383
   852                           
   853                           	psect	config
   854                           
   855                           ;Config register CONFIG1 @ 0x2007
   856                           ;	Oscillator Selection bits
   857                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
   858                           ;	Watchdog Timer Enable bit
   859                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   860                           ;	Power-up Timer Enable bit
   861                           ;	PWRTE = OFF, PWRT disabled
   862                           ;	RE3/MCLR pin function select bit
   863                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   864                           ;	Code Protection bit
   865                           ;	CP = OFF, Program memory code protection is disabled
   866                           ;	Data Code Protection bit
   867                           ;	CPD = OFF, Data memory code protection is disabled
   868                           ;	Brown Out Reset Selection bits
   869                           ;	BOREN = OFF, BOR disabled
   870                           ;	Internal External Switchover bit
   871                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   872                           ;	Fail-Safe Clock Monitor Enabled bit
   873                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   874                           ;	Low Voltage Programming Enable bit
   875                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   876                           ;	In-Circuit Debugger Mode bit
   877                           ;	DEBUG = 0x1, unprogrammed default
   878  2007                     	org	8199
   879  2007  20D6               	dw	8406
   880                           
   881                           ;Config register CONFIG2 @ 0x2008
   882                           ;	Brown-out Reset Selection bit
   883                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   884                           ;	Flash Program Memory Self Write Enable bits
   885                           ;	WRT = OFF, Write protection off
   886  2008                     	org	8200
   887  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     375
                                              4 COMMON     3     3      0
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jul 27 16:08:57 2023

            _SSPSTATbits 0094                       l60 0780                       l53 079A  
                     l37 07B7                       l54 079F                       l71 0789  
                     l63 0779                       l57 077A                       u20 0780  
                     u21 077F                       u30 0792                       u31 0791  
                     u47 07C4                       u57 07DD                       u67 07EB  
                    l721 0796                      l723 0799                      l715 078B  
                    l731 07AE                      l717 0792                      l725 07A0  
                    l741 07D1                      l733 07B8                      l719 0794  
                    l727 07A4                      l743 07D9                      l735 07BD  
                    l729 07AD                      l673 077A                      l745 07E2  
                    l737 07C0                      l683 0775                      l747 07E5  
                    l739 07C9                      l685 0781                      l749 07F2  
                    l687 0786                     _main 07B8                     btemp 007E  
                   start 0000                    ?_main 0070                    _ANSEL 0188  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _setup 07A0          __end_of_spiInit 07A0  
        __end_of_spiRead 078A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0074  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC2 043A  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of_spiWrite 077A                ??_spiInit 0073  
              ??_spiRead 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_setup 07B8                  ??_setup 0074               __pmaintext 07B8  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 0774  
                __ptext2 0781                  __ptext3 077A                  __ptext4 07A0  
                __ptext5 078A                  _spiInit 078A                  _spiRead 0781  
   end_of_initialization 07FC               ??_spiWrite 0070                _PORTCbits 0007  
            spiWrite@dat 0070           _spiReceiveWait 077A      start_initialization 07FC  
 __end_of_spiReceiveWait 0781                ___latbits 0002          ?_spiReceiveWait 0070  
               ?_spiInit 0070                 ?_spiRead 0070     spiInit@sTransmitEdge 0072  
     spiInit@sDataSample 0070                 _spiWrite 0774             spiInit@sType 0073  
      spiInit@sClockIdle 0071         ??_spiReceiveWait 0070  
