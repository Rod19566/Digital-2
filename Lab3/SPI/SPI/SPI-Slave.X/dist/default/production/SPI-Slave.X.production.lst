

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jul 27 16:57:33 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.36
    20                           ; Generated 28/01/2022 GMT
    21                           ; 
    22                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0013                     _SSPBUF	set	19
   289  0014                     _SSPCON	set	20
   290  000C                     _PIR1bits	set	12
   291  000B                     _INTCONbits	set	11
   292  0006                     _PORTB	set	6
   293  0008                     _PORTD	set	8
   294  0063                     _SSPIF	set	99
   295  0094                     _SSPSTATbits	set	148
   296  0094                     _SSPSTAT	set	148
   297  0085                     _TRISAbits	set	133
   298  008C                     _PIE1bits	set	140
   299  0088                     _TRISD	set	136
   300  0086                     _TRISB	set	134
   301  043B                     _TRISC3	set	1083
   302  043D                     _TRISC5	set	1085
   303  0189                     _ANSELH	set	393
   304  0188                     _ANSEL	set	392
   305                           
   306                           	psect	cinit
   307  000F                     start_initialization:	
   308                           ; #config settings
   309                           
   310  000F                     __initialization:
   311                           
   312                           ; Clear objects allocated to COMMON
   313  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   314  0010                     end_of_initialization:	
   315                           ;End of C runtime variable initialization code
   316                           
   317  0010                     __end_of__initialization:
   318  0010  0183               	clrf	3
   319  0011  120A  118A  284F   	ljmp	_main	;jump to C main() function
   320                           
   321                           	psect	bssCOMMON
   322  007A                     __pbssCOMMON:
   323  007A                     _temporal:
   324  007A                     	ds	1
   325                           
   326                           	psect	cstackCOMMON
   327  0070                     __pcstackCOMMON:
   328  0070                     ?_spiRead:
   329  0070                     ??_spiRead:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0070                     ?_spiWrite:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0070                     ??_spiWrite:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_setup:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_isr:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_main:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_spiReceiveWait:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0070                     ??_spiReceiveWait:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     spiWrite@dat:	
   354                           ; 1 bytes @ 0x0
   355                           
   356                           
   357                           ; 1 bytes @ 0x0
   358  0070                     	ds	1
   359  0071                     ??_isr:
   360                           
   361                           ; 1 bytes @ 0x1
   362  0071                     	ds	2
   363  0073                     ?_spiInit:
   364  0073                     spiInit@sDataSample:	
   365                           ; 1 bytes @ 0x3
   366                           
   367                           
   368                           ; 1 bytes @ 0x3
   369  0073                     	ds	1
   370  0074                     spiInit@sClockIdle:
   371                           
   372                           ; 1 bytes @ 0x4
   373  0074                     	ds	1
   374  0075                     spiInit@sTransmitEdge:
   375                           
   376                           ; 1 bytes @ 0x5
   377  0075                     	ds	1
   378  0076                     ??_spiInit:
   379  0076                     spiInit@sType:	
   380                           ; 1 bytes @ 0x6
   381                           
   382                           
   383                           ; 1 bytes @ 0x6
   384  0076                     	ds	1
   385  0077                     ??_setup:
   386  0077                     ??_main:	
   387                           ; 1 bytes @ 0x7
   388                           
   389                           
   390                           ; 1 bytes @ 0x7
   391  0077                     	ds	3
   392                           
   393                           	psect	maintext
   394  004F                     __pmaintext:	
   395 ;;
   396 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   397 ;;
   398 ;; *************** function _main *****************
   399 ;; Defined at:
   400 ;;		line 62 in file "main.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, status,2, status,0, pclath, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : B00/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   414 ;;      Params:         0       0       0       0       0
   415 ;;      Locals:         0       0       0       0       0
   416 ;;      Temps:          3       0       0       0       0
   417 ;;      Totals:         3       0       0       0       0
   418 ;;Total ram usage:        3 bytes
   419 ;; Hardware stack levels required when called: 5
   420 ;; This function calls:
   421 ;;		_setup
   422 ;; This function is called by:
   423 ;;		Startup code after reset
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427  004F                     _main:	
   428                           ;psect for function _main
   429                           
   430  004F                     l753:	
   431                           ;incstack = 0
   432                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   433                           
   434                           
   435                           ;main.c: 63:     setup();
   436  004F  120A  118A  2032  120A  118A  	fcall	_setup
   437  0054                     l755:
   438                           
   439                           ;main.c: 68:        PORTB--;
   440  0054  3001               	movlw	1
   441  0055  1283               	bcf	3,5	;RP0=0, select bank0
   442  0056  1303               	bcf	3,6	;RP1=0, select bank0
   443  0057  0286               	subwf	6,f	;volatile
   444  0058                     l757:
   445                           
   446                           ;main.c: 69:        _delay((unsigned long)((250)*(8000000/4000.0)));
   447  0058  3003               	movlw	3
   448  0059  00F9               	movwf	??_main+2
   449  005A  308A               	movlw	138
   450  005B  00F8               	movwf	??_main+1
   451  005C  3055               	movlw	85
   452  005D  00F7               	movwf	??_main
   453  005E                     u57:
   454  005E  0BF7               	decfsz	??_main,f
   455  005F  285E               	goto	u57
   456  0060  0BF8               	decfsz	??_main+1,f
   457  0061  285E               	goto	u57
   458  0062  0BF9               	decfsz	??_main+2,f
   459  0063  285E               	goto	u57
   460  0064  2865               	nop2
   461  0065  2854               	goto	l755
   462  0066  120A  118A  280C   	ljmp	start
   463  0069                     __end_of_main:
   464                           
   465                           	psect	text1
   466  0032                     __ptext1:	
   467 ;; *************** function _setup *****************
   468 ;; Defined at:
   469 ;;		line 76 in file "main.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;		None
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		wreg, status,2, status,0, pclath, cstack
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   483 ;;      Params:         0       0       0       0       0
   484 ;;      Locals:         0       0       0       0       0
   485 ;;      Temps:          0       0       0       0       0
   486 ;;      Totals:         0       0       0       0       0
   487 ;;Total ram usage:        0 bytes
   488 ;; Hardware stack levels used: 1
   489 ;; Hardware stack levels required when called: 4
   490 ;; This function calls:
   491 ;;		_spiInit
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497  0032                     _setup:	
   498                           ;psect for function _setup
   499                           
   500  0032                     l739:	
   501                           ;incstack = 0
   502                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   503                           
   504                           
   505                           ;main.c: 77:     ANSEL = 0;
   506  0032  1683               	bsf	3,5	;RP0=1, select bank3
   507  0033  1703               	bsf	3,6	;RP1=1, select bank3
   508  0034  0188               	clrf	8	;volatile
   509                           
   510                           ;main.c: 78:     ANSELH = 0;
   511  0035  0189               	clrf	9	;volatile
   512                           
   513                           ;main.c: 80:     TRISB = 0;
   514  0036  1683               	bsf	3,5	;RP0=1, select bank1
   515  0037  1303               	bcf	3,6	;RP1=0, select bank1
   516  0038  0186               	clrf	6	;volatile
   517                           
   518                           ;main.c: 81:     TRISD = 0;
   519  0039  0188               	clrf	8	;volatile
   520                           
   521                           ;main.c: 83:     PORTB = 0;
   522  003A  1283               	bcf	3,5	;RP0=0, select bank0
   523  003B  1303               	bcf	3,6	;RP1=0, select bank0
   524  003C  0186               	clrf	6	;volatile
   525                           
   526                           ;main.c: 84:     PORTD = 0;
   527  003D  0188               	clrf	8	;volatile
   528  003E                     l741:
   529                           
   530                           ;main.c: 86:     INTCONbits.GIE = 1;
   531  003E  178B               	bsf	11,7	;volatile
   532  003F                     l743:
   533                           
   534                           ;main.c: 87:     INTCONbits.PEIE = 1;
   535  003F  170B               	bsf	11,6	;volatile
   536  0040                     l745:
   537                           
   538                           ;main.c: 88:     PIR1bits.SSPIF = 0;
   539  0040  118C               	bcf	12,3	;volatile
   540  0041                     l747:
   541                           
   542                           ;main.c: 89:     PIE1bits.SSPIE = 1;
   543  0041  1683               	bsf	3,5	;RP0=1, select bank1
   544  0042  1303               	bcf	3,6	;RP1=0, select bank1
   545  0043  158C               	bsf	12,3	;volatile
   546  0044                     l749:
   547                           
   548                           ;main.c: 90:     TRISAbits.TRISA5 = 1;
   549  0044  1685               	bsf	5,5	;volatile
   550  0045                     l751:
   551                           
   552                           ;main.c: 91:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   553  0045  01F3               	clrf	spiInit@sDataSample
   554  0046  01F4               	clrf	spiInit@sClockIdle
   555  0047  01F5               	clrf	spiInit@sTransmitEdge
   556  0048  3024               	movlw	36
   557  0049  120A  118A  2069  120A  118A  	fcall	_spiInit
   558  004E                     l51:
   559  004E  0008               	return
   560  004F                     __end_of_setup:
   561                           
   562                           	psect	text2
   563  0069                     __ptext2:	
   564 ;; *************** function _spiInit *****************
   565 ;; Defined at:
   566 ;;		line 12 in file "SPI.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;  sType           1    wreg     enum E1292
   569 ;;  sDataSample     1    3[COMMON] enum E1300
   570 ;;  sClockIdle      1    4[COMMON] enum E1304
   571 ;;  sTransmitEdg    1    5[COMMON] enum E1308
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  sType           1    6[COMMON] enum E1292
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   583 ;;      Params:         3       0       0       0       0
   584 ;;      Locals:         1       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0
   586 ;;      Totals:         4       0       0       0       0
   587 ;;Total ram usage:        4 bytes
   588 ;; Hardware stack levels used: 1
   589 ;; Hardware stack levels required when called: 3
   590 ;; This function calls:
   591 ;;		Nothing
   592 ;; This function is called by:
   593 ;;		_setup
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597  0069                     _spiInit:	
   598                           ;psect for function _spiInit
   599                           
   600                           
   601                           ;incstack = 0
   602                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   603                           ;spiInit@sType stored from wreg
   604  0069  00F6               	movwf	spiInit@sType
   605  006A                     l729:
   606                           
   607                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   608  006A  1683               	bsf	3,5	;RP0=1, select bank1
   609  006B  1303               	bcf	3,6	;RP1=0, select bank1
   610  006C  1287               	bcf	7,5	;volatile
   611                           
   612                           ;SPI.c: 15:     if(sType & 0b00000100)
   613  006D  1D76               	btfss	spiInit@sType,2
   614  006E  2870               	goto	u41
   615  006F  2871               	goto	u40
   616  0070                     u41:
   617  0070  2875               	goto	l735
   618  0071                     u40:
   619  0071                     l731:
   620                           
   621                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   622  0071  0875               	movf	spiInit@sTransmitEdge,w
   623  0072  0094               	movwf	20	;volatile
   624  0073                     l733:
   625                           
   626                           ;SPI.c: 18:         TRISC3 = 1;
   627  0073  1587               	bsf	7,3	;volatile
   628                           
   629                           ;SPI.c: 19:     }
   630  0074  2879               	goto	l67
   631  0075                     l735:
   632                           
   633                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   634  0075  0873               	movf	spiInit@sDataSample,w
   635  0076  0475               	iorwf	spiInit@sTransmitEdge,w
   636  0077  0094               	movwf	20	;volatile
   637  0078                     l737:
   638                           
   639                           ;SPI.c: 23:         TRISC3 = 0;
   640  0078  1187               	bcf	7,3	;volatile
   641  0079                     l67:	
   642                           ;SPI.c: 24:     }
   643                           
   644                           
   645                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   646  0079  0876               	movf	spiInit@sType,w
   647  007A  0474               	iorwf	spiInit@sClockIdle,w
   648  007B  1283               	bcf	3,5	;RP0=0, select bank0
   649  007C  1303               	bcf	3,6	;RP1=0, select bank0
   650  007D  0094               	movwf	20	;volatile
   651  007E                     l68:
   652  007E  0008               	return
   653  007F                     __end_of_spiInit:
   654                           
   655                           	psect	text3
   656  0014                     __ptext3:	
   657 ;; *************** function _isr *****************
   658 ;; Defined at:
   659 ;;		line 52 in file "main.c"
   660 ;; Parameters:    Size  Location     Type
   661 ;;		None
   662 ;; Auto vars:     Size  Location     Type
   663 ;;		None
   664 ;; Return value:  Size  Location     Type
   665 ;;                  1    wreg      void 
   666 ;; Registers used:
   667 ;;		wreg, status,2, status,0, pclath, cstack
   668 ;; Tracked objects:
   669 ;;		On entry : 0/0
   670 ;;		On exit  : 0/0
   671 ;;		Unchanged: 0/0
   672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   673 ;;      Params:         0       0       0       0       0
   674 ;;      Locals:         0       0       0       0       0
   675 ;;      Temps:          2       0       0       0       0
   676 ;;      Totals:         2       0       0       0       0
   677 ;;Total ram usage:        2 bytes
   678 ;; Hardware stack levels used: 1
   679 ;; Hardware stack levels required when called: 2
   680 ;; This function calls:
   681 ;;		_spiRead
   682 ;;		_spiWrite
   683 ;; This function is called by:
   684 ;;		Interrupt level 1
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688  0014                     _isr:	
   689                           ;psect for function _isr
   690                           
   691  0014                     i1l711:
   692                           
   693                           ;main.c: 53:    if(SSPIF == 1){
   694  0014  1283               	bcf	3,5	;RP0=0, select bank0
   695  0015  1303               	bcf	3,6	;RP1=0, select bank0
   696  0016  1D8C               	btfss	12,3	;volatile
   697  0017  2819               	goto	u3_21
   698  0018  281A               	goto	u3_20
   699  0019                     u3_21:
   700  0019  282B               	goto	i1l40
   701  001A                     u3_20:
   702  001A                     i1l713:
   703                           
   704                           ;main.c: 54:         PORTD = spiRead();
   705  001A  120A  118A  207F  120A  118A  	fcall	_spiRead
   706  001F  1283               	bcf	3,5	;RP0=0, select bank0
   707  0020  1303               	bcf	3,6	;RP1=0, select bank0
   708  0021  0088               	movwf	8	;volatile
   709                           
   710                           ;main.c: 55:         spiWrite(PORTB);
   711  0022  0806               	movf	6,w	;volatile
   712  0023  120A  118A  208F  120A  118A  	fcall	_spiWrite
   713  0028                     i1l715:
   714                           
   715                           ;main.c: 56:         SSPIF = 0;
   716  0028  1283               	bcf	3,5	;RP0=0, select bank0
   717  0029  1303               	bcf	3,6	;RP1=0, select bank0
   718  002A  118C               	bcf	12,3	;volatile
   719  002B                     i1l40:
   720  002B  0872               	movf	??_isr+1,w
   721  002C  008A               	movwf	10
   722  002D  0E71               	swapf	??_isr,w
   723  002E  0083               	movwf	3
   724  002F  0EFE               	swapf	btemp,f
   725  0030  0E7E               	swapf	btemp,w
   726  0031  0009               	retfie
   727  0032                     __end_of_isr:
   728                           
   729                           	psect	intentry
   730  0004                     __pintentry:	
   731                           ;incstack = 0
   732                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   733                           
   734  0004                     interrupt_function:
   735  007E                     saved_w	set	btemp
   736  0004  00FE               	movwf	btemp
   737  0005  0E03               	swapf	3,w
   738  0006  00F1               	movwf	??_isr
   739  0007  080A               	movf	10,w
   740  0008  00F2               	movwf	??_isr+1
   741  0009  120A  118A  2814   	ljmp	_isr
   742                           
   743                           	psect	text4
   744  008F                     __ptext4:	
   745 ;; *************** function _spiWrite *****************
   746 ;; Defined at:
   747 ;;		line 34 in file "SPI.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;  dat             1    wreg     unsigned char 
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  dat             1    0[COMMON] unsigned char 
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg
   756 ;; Tracked objects:
   757 ;;		On entry : 0/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       0       0       0       0
   762 ;;      Locals:         1       0       0       0       0
   763 ;;      Temps:          0       0       0       0       0
   764 ;;      Totals:         1       0       0       0       0
   765 ;;Total ram usage:        1 bytes
   766 ;; Hardware stack levels used: 1
   767 ;; This function calls:
   768 ;;		Nothing
   769 ;; This function is called by:
   770 ;;		_isr
   771 ;; This function uses a non-reentrant model
   772 ;;
   773                           
   774  008F                     _spiWrite:	
   775                           ;psect for function _spiWrite
   776                           
   777                           
   778                           ;incstack = 0
   779                           ; Regs used in _spiWrite: [wreg]
   780                           ;spiWrite@dat stored from wreg
   781  008F  00F0               	movwf	spiWrite@dat
   782  0090                     i1l695:
   783                           
   784                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
   785  0090  0870               	movf	spiWrite@dat,w
   786  0091  1283               	bcf	3,5	;RP0=0, select bank0
   787  0092  1303               	bcf	3,6	;RP1=0, select bank0
   788  0093  0093               	movwf	19	;volatile
   789  0094                     i1l77:
   790  0094  0008               	return
   791  0095                     __end_of_spiWrite:
   792                           
   793                           	psect	text5
   794  007F                     __ptext5:	
   795 ;; *************** function _spiRead *****************
   796 ;; Defined at:
   797 ;;		line 47 in file "SPI.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;                  1    wreg      unsigned char 
   804 ;; Registers used:
   805 ;;		wreg, status,2, status,0, pclath, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   811 ;;      Params:         0       0       0       0       0
   812 ;;      Locals:         0       0       0       0       0
   813 ;;      Temps:          0       0       0       0       0
   814 ;;      Totals:         0       0       0       0       0
   815 ;;Total ram usage:        0 bytes
   816 ;; Hardware stack levels used: 1
   817 ;; Hardware stack levels required when called: 1
   818 ;; This function calls:
   819 ;;		_spiReceiveWait
   820 ;; This function is called by:
   821 ;;		_isr
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825  007F                     _spiRead:	
   826                           ;psect for function _spiRead
   827                           
   828  007F                     i1l689:	
   829                           ;incstack = 0
   830                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   831                           
   832                           
   833                           ;SPI.c: 49:     spiReceiveWait();
   834  007F  120A  118A  2088  120A  118A  	fcall	_spiReceiveWait
   835  0084                     i1l691:
   836                           
   837                           ;SPI.c: 50:     return(SSPBUF);
   838  0084  1283               	bcf	3,5	;RP0=0, select bank0
   839  0085  1303               	bcf	3,6	;RP1=0, select bank0
   840  0086  0813               	movf	19,w	;volatile
   841  0087                     i1l85:
   842  0087  0008               	return
   843  0088                     __end_of_spiRead:
   844                           
   845                           	psect	text6
   846  0088                     __ptext6:	
   847 ;; *************** function _spiReceiveWait *****************
   848 ;; Defined at:
   849 ;;		line 29 in file "SPI.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		None
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   863 ;;      Params:         0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0
   865 ;;      Temps:          0       0       0       0       0
   866 ;;      Totals:         0       0       0       0       0
   867 ;;Total ram usage:        0 bytes
   868 ;; Hardware stack levels used: 1
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		_spiRead
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876  0088                     _spiReceiveWait:	
   877                           ;psect for function _spiReceiveWait
   878                           
   879  0088                     i1l687:	
   880                           ;incstack = 0
   881                           ; Regs used in _spiReceiveWait: []
   882                           
   883  0088                     i1l71:	
   884                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
   885                           
   886  0088  1683               	bsf	3,5	;RP0=1, select bank1
   887  0089  1303               	bcf	3,6	;RP1=0, select bank1
   888  008A  1C14               	btfss	20,0	;volatile
   889  008B  288D               	goto	u2_21
   890  008C  288E               	goto	u2_20
   891  008D                     u2_21:
   892  008D  2888               	goto	i1l71
   893  008E                     u2_20:
   894  008E                     i1l74:
   895  008E  0008               	return
   896  008F                     __end_of_spiReceiveWait:
   897  007E                     btemp	set	126	;btemp
   898  007E                     wtemp0	set	126
   899                           
   900                           	psect	idloc
   901                           
   902                           ;Config register IDLOC0 @ 0x2000
   903                           ;	unspecified, using default values
   904  2000                     	org	8192
   905  2000  3FFF               	dw	16383
   906                           
   907                           ;Config register IDLOC1 @ 0x2001
   908                           ;	unspecified, using default values
   909  2001                     	org	8193
   910  2001  3FFF               	dw	16383
   911                           
   912                           ;Config register IDLOC2 @ 0x2002
   913                           ;	unspecified, using default values
   914  2002                     	org	8194
   915  2002  3FFF               	dw	16383
   916                           
   917                           ;Config register IDLOC3 @ 0x2003
   918                           ;	unspecified, using default values
   919  2003                     	org	8195
   920  2003  3FFF               	dw	16383
   921                           
   922                           	psect	config
   923                           
   924                           ;Config register CONFIG1 @ 0x2007
   925                           ;	Oscillator Selection bits
   926                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
   927                           ;	Watchdog Timer Enable bit
   928                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   929                           ;	Power-up Timer Enable bit
   930                           ;	PWRTE = OFF, PWRT disabled
   931                           ;	RE3/MCLR pin function select bit
   932                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   933                           ;	Code Protection bit
   934                           ;	CP = OFF, Program memory code protection is disabled
   935                           ;	Data Code Protection bit
   936                           ;	CPD = OFF, Data memory code protection is disabled
   937                           ;	Brown Out Reset Selection bits
   938                           ;	BOREN = OFF, BOR disabled
   939                           ;	Internal External Switchover bit
   940                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   941                           ;	Fail-Safe Clock Monitor Enabled bit
   942                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   943                           ;	Low Voltage Programming Enable bit
   944                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   945                           ;	In-Circuit Debugger Mode bit
   946                           ;	DEBUG = 0x1, unprogrammed default
   947  2007                     	org	8199
   948  2007  20D6               	dw	8406
   949                           
   950                           ;Config register CONFIG2 @ 0x2008
   951                           ;	Brown-out Reset Selection bit
   952                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   953                           ;	Flash Program Memory Self Write Enable bits
   954                           ;	WRT = OFF, Write protection off
   955  2008                     	org	8200
   956  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     360
                                              7 COMMON     3     3      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jul 27 16:57:33 2023

            _SSPSTATbits 0094                       l51 004E                       l67 0079  
                     l68 007E                       u40 0071                       u41 0070  
                     u57 005E                      l731 0071                      l733 0073  
                    l741 003E                      l735 0075                      l751 0045  
                    l743 003F                      l737 0078                      l729 006A  
                    l745 0040                      l753 004F                      l747 0041  
                    l739 0032                      l755 0054                      l749 0044  
                    l757 0058                      _isr 0014                     ?_isr 0070  
                   i1l40 002B                     i1l71 0088                     i1l74 008E  
                   i1l85 0087                     i1l77 0094                     u2_20 008E  
                   u2_21 008D                     u3_20 001A                     u3_21 0019  
                   _main 004F                     btemp 007E                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l711 0014                    i1l713 001A                    i1l715 0028  
                  i1l691 0084                    i1l687 0088                    i1l695 0090  
                  i1l689 007F                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
                  _setup 0032                    pclath 000A          __end_of_spiInit 007F  
        __end_of_spiRead 0088                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0069                   ??_main 0077  
                 ?_setup 0070                   _ANSELH 0189                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
                 saved_w 007E         __end_of_spiWrite 0095                ??_spiInit 0076  
              ??_spiRead 0070  __end_of__initialization 0010           __pcstackCOMMON 0070  
          __end_of_setup 004F                  ??_setup 0077               __pmaintext 004F  
             __pintentry 0004                  _SSPSTAT 0094                ?_spiWrite 0070  
                __ptext1 0032                  __ptext2 0069                  __ptext3 0014  
                __ptext4 008F                  __ptext5 007F                  __ptext6 0088  
                _spiInit 0069                  _spiRead 007F     end_of_initialization 0010  
             ??_spiWrite 0070                _TRISAbits 0085              spiWrite@dat 0070  
         _spiReceiveWait 0088      start_initialization 000F              __end_of_isr 0032  
 __end_of_spiReceiveWait 008F              __pbssCOMMON 007A                ___latbits 0002  
        ?_spiReceiveWait 0070                 ?_spiInit 0073                 ?_spiRead 0070  
   spiInit@sTransmitEdge 0075        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0073                 _PIR1bits 000C                 _temporal 007A  
               _spiWrite 008F             spiInit@sType 0076        spiInit@sClockIdle 0074  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0070  
