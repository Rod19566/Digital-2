

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Aug 02 16:32:31 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.40
    53                           ; Generated 17/11/2021 GMT
    54                           ; 
    55                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F887 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001D                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  0087                     	;# 
   126  0088                     	;# 
   127  0089                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0094                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0097                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  009F                     	;# 
   150  0105                     	;# 
   151  0107                     	;# 
   152  0108                     	;# 
   153  0109                     	;# 
   154  010C                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  0185                     	;# 
   160  0187                     	;# 
   161  0188                     	;# 
   162  0189                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  0007                     	;# 
   173  0008                     	;# 
   174  0009                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  000D                     	;# 
   179  000E                     	;# 
   180  000E                     	;# 
   181  000F                     	;# 
   182  0010                     	;# 
   183  0011                     	;# 
   184  0012                     	;# 
   185  0013                     	;# 
   186  0014                     	;# 
   187  0015                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001B                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  001D                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  0081                     	;# 
   201  0085                     	;# 
   202  0086                     	;# 
   203  0087                     	;# 
   204  0088                     	;# 
   205  0089                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  008F                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  0105                     	;# 
   229  0107                     	;# 
   230  0108                     	;# 
   231  0109                     	;# 
   232  010C                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  0185                     	;# 
   238  0187                     	;# 
   239  0188                     	;# 
   240  0189                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0088                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  008F                     	;# 
   288  0090                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0094                     	;# 
   295  0095                     	;# 
   296  0096                     	;# 
   297  0097                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009A                     	;# 
   301  009B                     	;# 
   302  009C                     	;# 
   303  009D                     	;# 
   304  009E                     	;# 
   305  009F                     	;# 
   306  0105                     	;# 
   307  0107                     	;# 
   308  0108                     	;# 
   309  0109                     	;# 
   310  010C                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  010E                     	;# 
   314  010F                     	;# 
   315  0185                     	;# 
   316  0187                     	;# 
   317  0188                     	;# 
   318  0189                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321  0000                     	;# 
   322  0001                     	;# 
   323  0002                     	;# 
   324  0003                     	;# 
   325  0004                     	;# 
   326  0005                     	;# 
   327  0006                     	;# 
   328  0007                     	;# 
   329  0008                     	;# 
   330  0009                     	;# 
   331  000A                     	;# 
   332  000B                     	;# 
   333  000C                     	;# 
   334  000D                     	;# 
   335  000E                     	;# 
   336  000E                     	;# 
   337  000F                     	;# 
   338  0010                     	;# 
   339  0011                     	;# 
   340  0012                     	;# 
   341  0013                     	;# 
   342  0014                     	;# 
   343  0015                     	;# 
   344  0015                     	;# 
   345  0016                     	;# 
   346  0017                     	;# 
   347  0018                     	;# 
   348  0019                     	;# 
   349  001A                     	;# 
   350  001B                     	;# 
   351  001B                     	;# 
   352  001C                     	;# 
   353  001D                     	;# 
   354  001E                     	;# 
   355  001F                     	;# 
   356  0081                     	;# 
   357  0085                     	;# 
   358  0086                     	;# 
   359  0087                     	;# 
   360  0088                     	;# 
   361  0089                     	;# 
   362  008C                     	;# 
   363  008D                     	;# 
   364  008E                     	;# 
   365  008F                     	;# 
   366  0090                     	;# 
   367  0091                     	;# 
   368  0092                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0093                     	;# 
   372  0094                     	;# 
   373  0095                     	;# 
   374  0096                     	;# 
   375  0097                     	;# 
   376  0098                     	;# 
   377  0099                     	;# 
   378  009A                     	;# 
   379  009B                     	;# 
   380  009C                     	;# 
   381  009D                     	;# 
   382  009E                     	;# 
   383  009F                     	;# 
   384  0105                     	;# 
   385  0107                     	;# 
   386  0108                     	;# 
   387  0109                     	;# 
   388  010C                     	;# 
   389  010C                     	;# 
   390  010D                     	;# 
   391  010E                     	;# 
   392  010F                     	;# 
   393  0185                     	;# 
   394  0187                     	;# 
   395  0188                     	;# 
   396  0189                     	;# 
   397  018C                     	;# 
   398  018D                     	;# 
   399  0000                     	;# 
   400  0001                     	;# 
   401  0002                     	;# 
   402  0003                     	;# 
   403  0004                     	;# 
   404  0005                     	;# 
   405  0006                     	;# 
   406  0007                     	;# 
   407  0008                     	;# 
   408  0009                     	;# 
   409  000A                     	;# 
   410  000B                     	;# 
   411  000C                     	;# 
   412  000D                     	;# 
   413  000E                     	;# 
   414  000E                     	;# 
   415  000F                     	;# 
   416  0010                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0014                     	;# 
   421  0015                     	;# 
   422  0015                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  001A                     	;# 
   428  001B                     	;# 
   429  001B                     	;# 
   430  001C                     	;# 
   431  001D                     	;# 
   432  001E                     	;# 
   433  001F                     	;# 
   434  0081                     	;# 
   435  0085                     	;# 
   436  0086                     	;# 
   437  0087                     	;# 
   438  0088                     	;# 
   439  0089                     	;# 
   440  008C                     	;# 
   441  008D                     	;# 
   442  008E                     	;# 
   443  008F                     	;# 
   444  0090                     	;# 
   445  0091                     	;# 
   446  0092                     	;# 
   447  0093                     	;# 
   448  0093                     	;# 
   449  0093                     	;# 
   450  0094                     	;# 
   451  0095                     	;# 
   452  0096                     	;# 
   453  0097                     	;# 
   454  0098                     	;# 
   455  0099                     	;# 
   456  009A                     	;# 
   457  009B                     	;# 
   458  009C                     	;# 
   459  009D                     	;# 
   460  009E                     	;# 
   461  009F                     	;# 
   462  0105                     	;# 
   463  0107                     	;# 
   464  0108                     	;# 
   465  0109                     	;# 
   466  010C                     	;# 
   467  010C                     	;# 
   468  010D                     	;# 
   469  010E                     	;# 
   470  010F                     	;# 
   471  0185                     	;# 
   472  0187                     	;# 
   473  0188                     	;# 
   474  0189                     	;# 
   475  018C                     	;# 
   476  018D                     	;# 
   477                           
   478                           	psect	strings
   479  1000                     __pstrings:
   480  1000                     stringtab:
   481  1000                     __stringtab:
   482                           
   483                           ;	String table - string pointers are 1 byte each
   484  1000  1BFF               	btfsc	btemp+1,7
   485  1001  280A               	ljmp	stringcode
   486  1002  1383               	bcf	3,7
   487  1003  187F               	btfsc	btemp+1,0
   488  1004  1783               	bsf	3,7
   489  1005  0800               	movf	0,w
   490  1006  0A84               	incf	4,f
   491  1007  1903               	skipnz
   492  1008  0AFF               	incf	btemp+1,f
   493  1009  0008               	return
   494  100A                     stringcode:
   495  100A                     stringdir:
   496  100A  3010               	movlw	high stringdir
   497  100B  008A               	movwf	10
   498  100C  0804               	movf	4,w
   499  100D  0A84               	incf	4,f
   500  100E  0782               	addwf	2,f
   501  100F                     __stringbase:
   502  100F  3400               	retlw	0
   503  1010                     __end_of__stringtab:
   504  1010                     __powers_:
   505  1010  3400               	retlw	0
   506  1011  3400               	retlw	0
   507  1012  3480               	retlw	128
   508  1013  343F               	retlw	63
   509  1014  3400               	retlw	0
   510  1015  3400               	retlw	0
   511  1016  3420               	retlw	32
   512  1017  3441               	retlw	65
   513  1018  3400               	retlw	0
   514  1019  3400               	retlw	0
   515  101A  34C8               	retlw	200
   516  101B  3442               	retlw	66
   517  101C  3400               	retlw	0
   518  101D  3400               	retlw	0
   519  101E  347A               	retlw	122
   520  101F  3444               	retlw	68
   521  1020  3400               	retlw	0
   522  1021  3440               	retlw	64
   523  1022  341C               	retlw	28
   524  1023  3446               	retlw	70
   525  1024  3400               	retlw	0
   526  1025  3450               	retlw	80
   527  1026  34C3               	retlw	195
   528  1027  3447               	retlw	71
   529  1028  3400               	retlw	0
   530  1029  3424               	retlw	36
   531  102A  3474               	retlw	116
   532  102B  3449               	retlw	73
   533  102C  3480               	retlw	128
   534  102D  3496               	retlw	150
   535  102E  3418               	retlw	24
   536  102F  344B               	retlw	75
   537  1030  3420               	retlw	32
   538  1031  34BC               	retlw	188
   539  1032  34BE               	retlw	190
   540  1033  344C               	retlw	76
   541  1034  3428               	retlw	40
   542  1035  346B               	retlw	107
   543  1036  346E               	retlw	110
   544  1037  344E               	retlw	78
   545  1038  34F9               	retlw	249
   546  1039  3402               	retlw	2
   547  103A  3415               	retlw	21
   548  103B  3450               	retlw	80
   549  103C  34EC               	retlw	236
   550  103D  3478               	retlw	120
   551  103E  34AD               	retlw	173
   552  103F  3460               	retlw	96
   553  1040  34CA               	retlw	202
   554  1041  34F2               	retlw	242
   555  1042  3449               	retlw	73
   556  1043  3471               	retlw	113
   557  1044                     __end_of__powers_:
   558  1044                     __npowers_:
   559  1044  3400               	retlw	0
   560  1045  3400               	retlw	0
   561  1046  3480               	retlw	128
   562  1047  343F               	retlw	63
   563  1048  34CD               	retlw	205
   564  1049  34CC               	retlw	204
   565  104A  34CC               	retlw	204
   566  104B  343D               	retlw	61
   567  104C  340A               	retlw	10
   568  104D  34D7               	retlw	215
   569  104E  3423               	retlw	35
   570  104F  343C               	retlw	60
   571  1050  346F               	retlw	111
   572  1051  3412               	retlw	18
   573  1052  3483               	retlw	131
   574  1053  343A               	retlw	58
   575  1054  3417               	retlw	23
   576  1055  34B7               	retlw	183
   577  1056  34D1               	retlw	209
   578  1057  3438               	retlw	56
   579  1058  34AC               	retlw	172
   580  1059  34C5               	retlw	197
   581  105A  3427               	retlw	39
   582  105B  3437               	retlw	55
   583  105C  34BD               	retlw	189
   584  105D  3437               	retlw	55
   585  105E  3486               	retlw	134
   586  105F  3435               	retlw	53
   587  1060  3495               	retlw	149
   588  1061  34BF               	retlw	191
   589  1062  34D6               	retlw	214
   590  1063  3433               	retlw	51
   591  1064  3477               	retlw	119
   592  1065  34CC               	retlw	204
   593  1066  342B               	retlw	43
   594  1067  3432               	retlw	50
   595  1068  345F               	retlw	95
   596  1069  3470               	retlw	112
   597  106A  3489               	retlw	137
   598  106B  3430               	retlw	48
   599  106C  34FF               	retlw	255
   600  106D  34E6               	retlw	230
   601  106E  34DB               	retlw	219
   602  106F  342E               	retlw	46
   603  1070  3408               	retlw	8
   604  1071  34E5               	retlw	229
   605  1072  343C               	retlw	60
   606  1073  341E               	retlw	30
   607  1074  3460               	retlw	96
   608  1075  3442               	retlw	66
   609  1076  34A2               	retlw	162
   610  1077  340D               	retlw	13
   611  1078                     __end_of__npowers_:
   612  1078                     _dpowers:
   613  1078  3401               	retlw	1
   614  1079  3400               	retlw	0
   615  107A  3400               	retlw	0
   616  107B  3400               	retlw	0
   617  107C  340A               	retlw	10
   618  107D  3400               	retlw	0
   619  107E  3400               	retlw	0
   620  107F  3400               	retlw	0
   621  1080  3464               	retlw	100
   622  1081  3400               	retlw	0
   623  1082  3400               	retlw	0
   624  1083  3400               	retlw	0
   625  1084  34E8               	retlw	232
   626  1085  3403               	retlw	3
   627  1086  3400               	retlw	0
   628  1087  3400               	retlw	0
   629  1088  3410               	retlw	16
   630  1089  3427               	retlw	39
   631  108A  3400               	retlw	0
   632  108B  3400               	retlw	0
   633  108C  34A0               	retlw	160
   634  108D  3486               	retlw	134
   635  108E  3401               	retlw	1
   636  108F  3400               	retlw	0
   637  1090  3440               	retlw	64
   638  1091  3442               	retlw	66
   639  1092  340F               	retlw	15
   640  1093  3400               	retlw	0
   641  1094  3480               	retlw	128
   642  1095  3496               	retlw	150
   643  1096  3498               	retlw	152
   644  1097  3400               	retlw	0
   645  1098  3400               	retlw	0
   646  1099  34E1               	retlw	225
   647  109A  34F5               	retlw	245
   648  109B  3405               	retlw	5
   649  109C  3400               	retlw	0
   650  109D  34CA               	retlw	202
   651  109E  349A               	retlw	154
   652  109F  343B               	retlw	59
   653  10A0                     __end_of_dpowers:
   654  0013                     _SSPBUF	set	19
   655  0014                     _SSPCON	set	20
   656  0008                     _PORTD	set	8
   657  0006                     _PORTB	set	6
   658  0007                     _PORTCbits	set	7
   659  0039                     _RC1	set	57
   660  0038                     _RC0	set	56
   661  0047                     _RD7	set	71
   662  0046                     _RD6	set	70
   663  0045                     _RD5	set	69
   664  0044                     _RD4	set	68
   665  0043                     _RD3	set	67
   666  0042                     _RD2	set	66
   667  0041                     _RD1	set	65
   668  0040                     _RD0	set	64
   669  0094                     _SSPSTATbits	set	148
   670  0094                     _SSPSTAT	set	148
   671  008F                     _OSCCONbits	set	143
   672  0088                     _TRISD	set	136
   673  0086                     _TRISB	set	134
   674  0087                     _TRISC	set	135
   675  043B                     _TRISC3	set	1083
   676  043D                     _TRISC5	set	1085
   677  043A                     _TRISC2	set	1082
   678  10A0                     STR_1:
   679  10A0  3453               	retlw	83	;'S'
   680  10A1  346C               	retlw	108	;'l'
   681  10A2  3461               	retlw	97	;'a'
   682  10A3  3476               	retlw	118	;'v'
   683  10A4  3465               	retlw	101	;'e'
   684  10A5  3431               	retlw	49	;'1'
   685  10A6  3420               	retlw	32	;' '
   686  10A7  3450               	retlw	80	;'P'
   687  10A8  346F               	retlw	111	;'o'
   688  10A9  3474               	retlw	116	;'t'
   689  10AA  343A               	retlw	58	;':'
   690  10AB  3400               	retlw	0
   691  10AC                     STR_2:
   692  10AC  3425               	retlw	37	;'%'
   693  10AD  342E               	retlw	46	;'.'
   694  10AE  3432               	retlw	50	;'2'
   695  10AF  3466               	retlw	102	;'f'
   696  10B0  3420               	retlw	32	;' '
   697  10B1  3400               	retlw	0
   698                           
   699                           	psect	cinit
   700  07F0                     start_initialization:	
   701                           ; #config settings
   702                           
   703  07F0                     __initialization:
   704                           
   705                           ; Clear objects allocated to BANK0
   706  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   707  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   708  07F2  01EE               	clrf	__pbssBANK0& (0+127)
   709                           
   710                           ; Clear objects allocated to BANK1
   711  07F3  1383               	bcf	3,7	;select IRP bank0
   712  07F4  30C7               	movlw	low __pbssBANK1
   713  07F5  0084               	movwf	4
   714  07F6  30DC               	movlw	low (__pbssBANK1+21)
   715  07F7  160A  158A  2460  120A  118A  	fcall	clear_ram0
   716  07FC                     end_of_initialization:	
   717                           ;End of C runtime variable initialization code
   718                           
   719  07FC                     __end_of__initialization:
   720  07FC  0183               	clrf	3
   721  07FD  120A  118A  2875   	ljmp	_main	;jump to C main() function
   722                           
   723                           	psect	bssBANK0
   724  006E                     __pbssBANK0:
   725  006E                     _a:
   726  006E                     	ds	1
   727                           
   728                           	psect	bssBANK1
   729  00C7                     __pbssBANK1:
   730  00C7                     _s1:
   731  00C7                     	ds	4
   732  00CB                     _dummydata:
   733  00CB                     	ds	1
   734  00CC                     _volt:
   735  00CC                     	ds	16
   736                           
   737                           	psect	clrtext
   738  1C60                     clear_ram0:	
   739                           ;	Called with FSR containing the base address, and
   740                           ;	W with the last address+1
   741                           
   742  1C60  0064               	clrwdt	;clear the watchdog before getting into this loop
   743  1C61                     clrloop0:
   744  1C61  0180               	clrf	0	;clear RAM location pointed to by FSR
   745  1C62  0A84               	incf	4,f	;increment pointer
   746  1C63  0604               	xorwf	4,w	;XOR with final address
   747  1C64  1903               	btfsc	3,2	;have we reached the end yet?
   748  1C65  3400               	retlw	0	;all done for this memory range, return
   749  1C66  0604               	xorwf	4,w	;XOR again to restore value
   750  1C67  2C61               	goto	clrloop0	;do the next byte
   751                           
   752                           	psect	cstackBANK1
   753  00A0                     __pcstackBANK1:
   754  00A0                     ?_sprintf:
   755  00A0                     sprintf@f:	
   756                           ; 2 bytes @ 0x0
   757                           
   758                           
   759                           ; 1 bytes @ 0x0
   760  00A0                     	ds	5
   761  00A5                     ??_sprintf:
   762                           
   763                           ; 1 bytes @ 0x5
   764  00A5                     	ds	5
   765  00AA                     _sprintf$1032:
   766                           
   767                           ; 4 bytes @ 0xA
   768  00AA                     	ds	4
   769  00AE                     sprintf@ap:
   770                           
   771                           ; 1 bytes @ 0xE
   772  00AE                     	ds	1
   773  00AF                     sprintf@flag:
   774                           
   775                           ; 2 bytes @ 0xF
   776  00AF                     	ds	2
   777  00B1                     sprintf@val:
   778                           
   779                           ; 4 bytes @ 0x11
   780  00B1                     	ds	4
   781  00B5                     sprintf@eexp:
   782                           
   783                           ; 2 bytes @ 0x15
   784  00B5                     	ds	2
   785  00B7                     sprintf@tmpval:
   786                           
   787                           ; 4 bytes @ 0x17
   788  00B7                     	ds	4
   789  00BB                     sprintf@sp:
   790                           
   791                           ; 1 bytes @ 0x1B
   792  00BB                     	ds	1
   793  00BC                     sprintf@prec:
   794                           
   795                           ; 2 bytes @ 0x1C
   796  00BC                     	ds	2
   797  00BE                     sprintf@fval:
   798                           
   799                           ; 4 bytes @ 0x1E
   800  00BE                     	ds	4
   801  00C2                     sprintf@c:
   802                           
   803                           ; 1 bytes @ 0x22
   804  00C2                     	ds	1
   805  00C3                     ??_main:
   806                           
   807                           ; 1 bytes @ 0x23
   808  00C3                     	ds	4
   809                           
   810                           	psect	cstackCOMMON
   811  0070                     __pcstackCOMMON:
   812  0070                     ?_isdigit:
   813  0070                     ?___fleq:	
   814                           ; 1 bit 
   815                           
   816  0070                     ?___flge:	
   817                           ; 1 bit 
   818                           
   819  0070                     ?_setup:	
   820                           ; 1 bit 
   821                           
   822  0070                     ?_spiWrite:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ??_spiWrite:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_spiRead:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ??_spiRead:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ?_Lcd_Clear:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ?_configOsc:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_spiInit:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0070                     ?_Lcd_Init:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0070                     ??_isdigit:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0070                     ?_main:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0070                     ?_Lcd_Port:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0070                     ??_Lcd_Port:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0070                     ?_Lcd_Cmd:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0070                     ?_Lcd_Write_Char:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     ?_spiReceiveWait:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     ??_spiReceiveWait:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?__Umul8_16:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ?___wmul:	
   874                           ; 2 bytes @ 0x0
   875                           
   876  0070                     ?___awmod:	
   877                           ; 2 bytes @ 0x0
   878                           
   879  0070                     ?___lwmod:	
   880                           ; 2 bytes @ 0x0
   881                           
   882  0070                     ?__tdiv_to_l_:	
   883                           ; 2 bytes @ 0x0
   884                           
   885  0070                     ?__div_to_l_:	
   886                           ; 4 bytes @ 0x0
   887                           
   888  0070                     ?___lldiv:	
   889                           ; 4 bytes @ 0x0
   890                           
   891  0070                     ?___flneg:	
   892                           ; 4 bytes @ 0x0
   893                           
   894  0070                     ?___llmod:	
   895                           ; 4 bytes @ 0x0
   896                           
   897  0070                     ?___xxtofl:	
   898                           ; 4 bytes @ 0x0
   899                           
   900  0070                     Lcd_Port@a:	
   901                           ; 4 bytes @ 0x0
   902                           
   903  0070                     spiInit@sDataSample:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     spiWrite@dat:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     __Umul8_16@multiplicand:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     _isdigit$846:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     configOsc@frec:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ___wmul@multiplier:	
   919                           ; 2 bytes @ 0x0
   920                           
   921  0070                     ___awmod@divisor:	
   922                           ; 2 bytes @ 0x0
   923                           
   924  0070                     ___lwmod@divisor:	
   925                           ; 2 bytes @ 0x0
   926                           
   927  0070                     ___lldiv@divisor:	
   928                           ; 2 bytes @ 0x0
   929                           
   930  0070                     __div_to_l_@f1:	
   931                           ; 4 bytes @ 0x0
   932                           
   933  0070                     ___fleq@ff1:	
   934                           ; 4 bytes @ 0x0
   935                           
   936  0070                     ___flge@ff1:	
   937                           ; 4 bytes @ 0x0
   938                           
   939  0070                     ___flneg@f1:	
   940                           ; 4 bytes @ 0x0
   941                           
   942  0070                     __tdiv_to_l_@f1:	
   943                           ; 4 bytes @ 0x0
   944                           
   945  0070                     ___llmod@divisor:	
   946                           ; 4 bytes @ 0x0
   947                           
   948  0070                     ___xxtofl@val:	
   949                           ; 4 bytes @ 0x0
   950                           
   951                           
   952                           ; 4 bytes @ 0x0
   953  0070                     	ds	1
   954  0071                     ??_Lcd_Cmd:
   955  0071                     ??_Lcd_Write_Char:	
   956                           ; 1 bytes @ 0x1
   957                           
   958  0071                     spiInit@sClockIdle:	
   959                           ; 1 bytes @ 0x1
   960                           
   961  0071                     isdigit@c:	
   962                           ; 1 bytes @ 0x1
   963                           
   964                           
   965                           ; 1 bytes @ 0x1
   966  0071                     	ds	1
   967  0072                     ??_configOsc:
   968  0072                     ??__Umul8_16:	
   969                           ; 1 bytes @ 0x2
   970                           
   971  0072                     Lcd_Write_Char@a:	
   972                           ; 1 bytes @ 0x2
   973                           
   974  0072                     spiInit@sTransmitEdge:	
   975                           ; 1 bytes @ 0x2
   976                           
   977  0072                     ___wmul@multiplicand:	
   978                           ; 1 bytes @ 0x2
   979                           
   980  0072                     ___awmod@dividend:	
   981                           ; 2 bytes @ 0x2
   982                           
   983  0072                     ___lwmod@dividend:	
   984                           ; 2 bytes @ 0x2
   985                           
   986                           
   987                           ; 2 bytes @ 0x2
   988  0072                     	ds	1
   989  0073                     ?_Lcd_Write_String:
   990  0073                     ??_spiInit:	
   991                           ; 1 bytes @ 0x3
   992                           
   993  0073                     Lcd_Cmd@a:	
   994                           ; 1 bytes @ 0x3
   995                           
   996  0073                     spiInit@sType:	
   997                           ; 1 bytes @ 0x3
   998                           
   999  0073                     Lcd_Write_String@a:	
  1000                           ; 1 bytes @ 0x3
  1001                           
  1002                           
  1003                           ; 2 bytes @ 0x3
  1004  0073                     	ds	1
  1005  0074                     ??_Lcd_Clear:
  1006  0074                     ?_Lcd_Set_Cursor:	
  1007                           ; 1 bytes @ 0x4
  1008                           
  1009  0074                     ??_Lcd_Init:	
  1010                           ; 1 bytes @ 0x4
  1011                           
  1012  0074                     ??___wmul:	
  1013                           ; 1 bytes @ 0x4
  1014                           
  1015  0074                     ??___awmod:	
  1016                           ; 1 bytes @ 0x4
  1017                           
  1018  0074                     ??___flneg:	
  1019                           ; 1 bytes @ 0x4
  1020                           
  1021  0074                     ??___lwmod:	
  1022                           ; 1 bytes @ 0x4
  1023                           
  1024  0074                     ??___xxtofl:	
  1025                           ; 1 bytes @ 0x4
  1026                           
  1027  0074                     Lcd_Set_Cursor@b:	
  1028                           ; 1 bytes @ 0x4
  1029                           
  1030  0074                     ___wmul@product:	
  1031                           ; 1 bytes @ 0x4
  1032                           
  1033  0074                     __Umul8_16@product:	
  1034                           ; 2 bytes @ 0x4
  1035                           
  1036  0074                     ___lldiv@dividend:	
  1037                           ; 2 bytes @ 0x4
  1038                           
  1039  0074                     __div_to_l_@f2:	
  1040                           ; 4 bytes @ 0x4
  1041                           
  1042  0074                     ___fleq@ff2:	
  1043                           ; 4 bytes @ 0x4
  1044                           
  1045  0074                     ___flge@ff2:	
  1046                           ; 4 bytes @ 0x4
  1047                           
  1048  0074                     __tdiv_to_l_@f2:	
  1049                           ; 4 bytes @ 0x4
  1050                           
  1051  0074                     ___llmod@dividend:	
  1052                           ; 4 bytes @ 0x4
  1053                           
  1054                           
  1055                           ; 4 bytes @ 0x4
  1056  0074                     	ds	1
  1057  0075                     ??_Lcd_Set_Cursor:
  1058  0075                     ??_Lcd_Write_String:	
  1059                           ; 1 bytes @ 0x5
  1060                           
  1061  0075                     ___awmod@counter:	
  1062                           ; 1 bytes @ 0x5
  1063                           
  1064  0075                     ___lwmod@counter:	
  1065                           ; 1 bytes @ 0x5
  1066                           
  1067                           
  1068                           ; 1 bytes @ 0x5
  1069  0075                     	ds	1
  1070  0076                     ??_setup:
  1071  0076                     ?___lwdiv:	
  1072                           ; 1 bytes @ 0x6
  1073                           
  1074  0076                     Lcd_Set_Cursor@a:	
  1075                           ; 2 bytes @ 0x6
  1076                           
  1077  0076                     ___awmod@sign:	
  1078                           ; 1 bytes @ 0x6
  1079                           
  1080  0076                     ___lwdiv@divisor:	
  1081                           ; 1 bytes @ 0x6
  1082                           
  1083  0076                     __Umul8_16@word_mpld:	
  1084                           ; 2 bytes @ 0x6
  1085                           
  1086                           
  1087                           ; 2 bytes @ 0x6
  1088  0076                     	ds	1
  1089  0077                     ?___awdiv:
  1090  0077                     Lcd_Set_Cursor@temp:	
  1091                           ; 2 bytes @ 0x7
  1092                           
  1093  0077                     ___awdiv@divisor:	
  1094                           ; 1 bytes @ 0x7
  1095                           
  1096                           
  1097                           ; 2 bytes @ 0x7
  1098  0077                     	ds	1
  1099  0078                     ??__tdiv_to_l_:
  1100  0078                     ??__div_to_l_:	
  1101                           ; 1 bytes @ 0x8
  1102                           
  1103  0078                     ??___lldiv:	
  1104                           ; 1 bytes @ 0x8
  1105                           
  1106  0078                     ??___fleq:	
  1107                           ; 1 bytes @ 0x8
  1108                           
  1109  0078                     ??___flge:	
  1110                           ; 1 bytes @ 0x8
  1111                           
  1112  0078                     ??___llmod:	
  1113                           ; 1 bytes @ 0x8
  1114                           
  1115  0078                     __Umul8_16@multiplier:	
  1116                           ; 1 bytes @ 0x8
  1117                           
  1118  0078                     ___xxtofl@sign:	
  1119                           ; 1 bytes @ 0x8
  1120                           
  1121  0078                     Lcd_Write_String@i:	
  1122                           ; 1 bytes @ 0x8
  1123                           
  1124  0078                     ___lwdiv@dividend:	
  1125                           ; 2 bytes @ 0x8
  1126                           
  1127                           
  1128                           ; 2 bytes @ 0x8
  1129  0078                     	ds	1
  1130  0079                     ___llmod@counter:
  1131  0079                     ___xxtofl@exp:	
  1132                           ; 1 bytes @ 0x9
  1133                           
  1134  0079                     ___awdiv@dividend:	
  1135                           ; 1 bytes @ 0x9
  1136                           
  1137  0079                     ___lldiv@quotient:	
  1138                           ; 2 bytes @ 0x9
  1139                           
  1140                           
  1141                           ; 4 bytes @ 0x9
  1142  0079                     	ds	1
  1143  007A                     ??___lwdiv:
  1144  007A                     ___xxtofl@arg:	
  1145                           ; 1 bytes @ 0xA
  1146                           
  1147                           
  1148                           ; 4 bytes @ 0xA
  1149  007A                     	ds	1
  1150  007B                     ??___awdiv:
  1151  007B                     ___lwdiv@quotient:	
  1152                           ; 1 bytes @ 0xB
  1153                           
  1154                           
  1155                           ; 2 bytes @ 0xB
  1156  007B                     	ds	2
  1157  007D                     ___lldiv@counter:
  1158  007D                     ___lwdiv@counter:	
  1159                           ; 1 bytes @ 0xD
  1160                           
  1161                           
  1162                           ; 1 bytes @ 0xD
  1163  007D                     	ds	1
  1164  007E                     ??___flsub:
  1165                           
  1166                           	psect	cstackBANK0
  1167  0020                     __pcstackBANK0:	
  1168                           ; 1 bytes @ 0xE
  1169                           
  1170  0020                     ___awdiv@counter:
  1171  0020                     __div_to_l_@quot:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0020                     __tdiv_to_l_@quot:	
  1175                           ; 4 bytes @ 0x0
  1176                           
  1177                           
  1178                           ; 4 bytes @ 0x0
  1179  0020                     	ds	1
  1180  0021                     ___awdiv@sign:
  1181                           
  1182                           ; 1 bytes @ 0x1
  1183  0021                     	ds	1
  1184  0022                     ___awdiv@quotient:
  1185                           
  1186                           ; 2 bytes @ 0x2
  1187  0022                     	ds	2
  1188  0024                     ?___flmul:
  1189  0024                     __div_to_l_@cntr:	
  1190                           ; 4 bytes @ 0x4
  1191                           
  1192  0024                     __tdiv_to_l_@cntr:	
  1193                           ; 1 bytes @ 0x4
  1194                           
  1195  0024                     ___flmul@b:	
  1196                           ; 1 bytes @ 0x4
  1197                           
  1198                           
  1199                           ; 4 bytes @ 0x4
  1200  0024                     	ds	1
  1201  0025                     __div_to_l_@exp1:
  1202  0025                     __tdiv_to_l_@exp1:	
  1203                           ; 1 bytes @ 0x5
  1204                           
  1205                           
  1206                           ; 1 bytes @ 0x5
  1207  0025                     	ds	3
  1208  0028                     ___flmul@a:
  1209                           
  1210                           ; 4 bytes @ 0x8
  1211  0028                     	ds	4
  1212  002C                     ??___flmul:
  1213                           
  1214                           ; 1 bytes @ 0xC
  1215  002C                     	ds	5
  1216  0031                     ___flmul@sign:
  1217                           
  1218                           ; 1 bytes @ 0x11
  1219  0031                     	ds	1
  1220  0032                     ___flmul@grs:
  1221                           
  1222                           ; 4 bytes @ 0x12
  1223  0032                     	ds	4
  1224  0036                     ___flmul@aexp:
  1225                           
  1226                           ; 1 bytes @ 0x16
  1227  0036                     	ds	1
  1228  0037                     ___flmul@bexp:
  1229                           
  1230                           ; 1 bytes @ 0x17
  1231  0037                     	ds	1
  1232  0038                     ___flmul@prod:
  1233                           
  1234                           ; 4 bytes @ 0x18
  1235  0038                     	ds	4
  1236  003C                     ___flmul@temp:
  1237                           
  1238                           ; 2 bytes @ 0x1C
  1239  003C                     	ds	2
  1240  003E                     ?_fround:
  1241  003E                     ?_scale:	
  1242                           ; 4 bytes @ 0x1E
  1243                           
  1244                           
  1245                           ; 4 bytes @ 0x1E
  1246  003E                     	ds	4
  1247  0042                     ??_fround:
  1248  0042                     ??_scale:	
  1249                           ; 1 bytes @ 0x22
  1250                           
  1251                           
  1252                           ; 1 bytes @ 0x22
  1253  0042                     	ds	7
  1254  0049                     _fround$1030:
  1255                           
  1256                           ; 4 bytes @ 0x29
  1257  0049                     	ds	3
  1258  004C                     _scale$1031:
  1259                           
  1260                           ; 4 bytes @ 0x2C
  1261  004C                     	ds	1
  1262  004D                     _fround$1029:
  1263                           
  1264                           ; 4 bytes @ 0x2D
  1265  004D                     	ds	3
  1266  0050                     scale@scl:
  1267                           
  1268                           ; 1 bytes @ 0x30
  1269  0050                     	ds	1
  1270  0051                     ?___fltol:
  1271  0051                     fround@prec:	
  1272                           ; 4 bytes @ 0x31
  1273                           
  1274  0051                     ___fltol@f1:	
  1275                           ; 1 bytes @ 0x31
  1276                           
  1277                           
  1278                           ; 4 bytes @ 0x31
  1279  0051                     	ds	1
  1280  0052                     ?___fladd:
  1281  0052                     ___fladd@b:	
  1282                           ; 4 bytes @ 0x32
  1283                           
  1284                           
  1285                           ; 4 bytes @ 0x32
  1286  0052                     	ds	3
  1287  0055                     ??___fltol:
  1288                           
  1289                           ; 1 bytes @ 0x35
  1290  0055                     	ds	1
  1291  0056                     ___fladd@a:
  1292                           
  1293                           ; 4 bytes @ 0x36
  1294  0056                     	ds	4
  1295  005A                     ??___fladd:
  1296  005A                     ___fltol@sign1:	
  1297                           ; 1 bytes @ 0x3A
  1298                           
  1299                           
  1300                           ; 1 bytes @ 0x3A
  1301  005A                     	ds	1
  1302  005B                     ___fltol@exp1:
  1303                           
  1304                           ; 1 bytes @ 0x3B
  1305  005B                     	ds	7
  1306  0062                     ___fladd@signs:
  1307                           
  1308                           ; 1 bytes @ 0x42
  1309  0062                     	ds	1
  1310  0063                     ___fladd@aexp:
  1311                           
  1312                           ; 1 bytes @ 0x43
  1313  0063                     	ds	1
  1314  0064                     ___fladd@bexp:
  1315                           
  1316                           ; 1 bytes @ 0x44
  1317  0064                     	ds	1
  1318  0065                     ___fladd@grs:
  1319                           
  1320                           ; 1 bytes @ 0x45
  1321  0065                     	ds	1
  1322  0066                     ?___flsub:
  1323  0066                     ___flsub@a:	
  1324                           ; 4 bytes @ 0x46
  1325                           
  1326                           
  1327                           ; 4 bytes @ 0x46
  1328  0066                     	ds	4
  1329  006A                     ___flsub@b:
  1330                           
  1331                           ; 4 bytes @ 0x4A
  1332  006A                     	ds	4
  1333                           
  1334                           	psect	maintext
  1335  0075                     __pmaintext:	
  1336 ;;
  1337 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1338 ;;
  1339 ;; *************** function _main *****************
  1340 ;; Defined at:
  1341 ;;		line 67 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;		None
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;		None
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : B00/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         0       0       0       0       0
  1356 ;;      Locals:         0       0       0       0       0
  1357 ;;      Temps:          0       0       4       0       0
  1358 ;;      Totals:         0       0       4       0       0
  1359 ;;Total ram usage:        4 bytes
  1360 ;; Hardware stack levels required when called: 4
  1361 ;; This function calls:
  1362 ;;		_Lcd_Clear
  1363 ;;		_Lcd_Set_Cursor
  1364 ;;		_Lcd_Write_String
  1365 ;;		___xxtofl
  1366 ;;		_setup
  1367 ;;		_spiRead
  1368 ;;		_spiWrite
  1369 ;;		_sprintf
  1370 ;; This function is called by:
  1371 ;;		Startup code after reset
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375  0075                     _main:	
  1376                           ;psect for function _main
  1377                           
  1378  0075                     l3360:	
  1379                           ;incstack = 0
  1380                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1381                           
  1382                           
  1383                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 68:     setup();
  1384  0075  160A  158A  256C  120A  118A  	fcall	_setup
  1385  007A                     l3362:
  1386                           
  1387                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 73:         PORTCbits.RC2 =
      +                           0;
  1388  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1389  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1390  007C  1107               	bcf	7,2	;volatile
  1391  007D                     l3364:
  1392                           
  1393                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 74:        _delay((unsigned
      +                           long)((1)*(8000000/4000.0)));
  1394  007D  3003               	movlw	3
  1395  007E  1683               	bsf	3,5	;RP0=1, select bank1
  1396  007F  1303               	bcf	3,6	;RP1=0, select bank1
  1397  0080  00C4               	movwf	(??_main^(0+128)+1)
  1398  0081  3097               	movlw	151
  1399  0082  00C3               	movwf	??_main^(0+128)
  1400  0083                     u5637:
  1401  0083  0BC3               	decfsz	??_main^(0+128),f
  1402  0084  2883               	goto	u5637
  1403  0085  0BC4               	decfsz	(??_main^(0+128)+1),f
  1404  0086  2883               	goto	u5637
  1405  0087                     l3366:
  1406                           
  1407                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 77:         if (dummydata =
      +                          = 1){
  1408  0087  1683               	bsf	3,5	;RP0=1, select bank1
  1409  0088  1303               	bcf	3,6	;RP1=0, select bank1
  1410  0089  034B               	decf	_dummydata^(0+128),w
  1411  008A  1D03               	btfss	3,2
  1412  008B  288D               	goto	u5621
  1413  008C  288E               	goto	u5620
  1414  008D                     u5621:
  1415  008D  28E6               	goto	l48
  1416  008E                     u5620:
  1417  008E                     l3368:
  1418                           
  1419                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 78:             PORTCbits.R
      +                          C2 = 0;
  1420  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1421  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0090  1107               	bcf	7,2	;volatile
  1423  0091                     l3370:
  1424                           
  1425                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 79:             _delay((uns
      +                          igned long)((1)*(8000000/4000.0)));
  1426  0091  3003               	movlw	3
  1427  0092  1683               	bsf	3,5	;RP0=1, select bank1
  1428  0093  1303               	bcf	3,6	;RP1=0, select bank1
  1429  0094  00C4               	movwf	(??_main^(0+128)+1)
  1430  0095  3097               	movlw	151
  1431  0096  00C3               	movwf	??_main^(0+128)
  1432  0097                     u5647:
  1433  0097  0BC3               	decfsz	??_main^(0+128),f
  1434  0098  2897               	goto	u5647
  1435  0099  0BC4               	decfsz	(??_main^(0+128)+1),f
  1436  009A  2897               	goto	u5647
  1437  009B                     l3372:
  1438                           
  1439                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 81:             spiWrite(du
      +                          mmydata);
  1440  009B  1683               	bsf	3,5	;RP0=1, select bank1
  1441  009C  1303               	bcf	3,6	;RP1=0, select bank1
  1442  009D  084B               	movf	_dummydata^(0+128),w
  1443  009E  120A  158A  2000  120A  118A  	fcall	_spiWrite
  1444  00A3                     l3374:
  1445                           
  1446                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 82:             s1 = spiRea
      +                          d();
  1447  00A3  120A  118A  2003  120A  118A  	fcall	_spiRead
  1448  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  1449  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  1450  00AA  00C3               	movwf	??_main^(0+128)
  1451  00AB  01C4               	clrf	(??_main^(0+128)+1)
  1452  00AC  01C5               	clrf	(??_main^(0+128)+2)
  1453  00AD  01C6               	clrf	(??_main^(0+128)+3)
  1454  00AE  0846               	movf	(??_main+3)^(0+128),w
  1455  00AF  00F3               	movwf	___xxtofl@val+3
  1456  00B0  0845               	movf	(??_main+2)^(0+128),w
  1457  00B1  00F2               	movwf	___xxtofl@val+2
  1458  00B2  0844               	movf	(??_main+1)^(0+128),w
  1459  00B3  00F1               	movwf	___xxtofl@val+1
  1460  00B4  0843               	movf	??_main^(0+128),w
  1461  00B5  00F0               	movwf	___xxtofl@val
  1462  00B6  3000               	movlw	0
  1463  00B7  160A  118A  21F6  120A  118A  	fcall	___xxtofl
  1464  00BC  0873               	movf	?___xxtofl+3,w
  1465  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  1466  00BE  1303               	bcf	3,6	;RP1=0, select bank1
  1467  00BF  00CA               	movwf	(_s1+3)^(0+128)
  1468  00C0  0872               	movf	?___xxtofl+2,w
  1469  00C1  00C9               	movwf	(_s1+2)^(0+128)
  1470  00C2  0871               	movf	?___xxtofl+1,w
  1471  00C3  00C8               	movwf	(_s1+1)^(0+128)
  1472  00C4  0870               	movf	?___xxtofl,w
  1473  00C5  00C7               	movwf	_s1^(0+128)
  1474                           
  1475                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 84:             _delay((uns
      +                          igned long)((1)*(8000000/4000.0)));
  1476  00C6  3003               	movlw	3
  1477  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  1478  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  1479  00C9  00C4               	movwf	(??_main^(0+128)+1)
  1480  00CA  3097               	movlw	151
  1481  00CB  00C3               	movwf	??_main^(0+128)
  1482  00CC                     u5657:
  1483  00CC  0BC3               	decfsz	??_main^(0+128),f
  1484  00CD  28CC               	goto	u5657
  1485  00CE  0BC4               	decfsz	(??_main^(0+128)+1),f
  1486  00CF  28CC               	goto	u5657
  1487  00D0                     l3376:
  1488                           
  1489                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 89:             PORTCbits.R
      +                          C2 = 1;
  1490  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1491  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1492  00D2  1507               	bsf	7,2	;volatile
  1493                           
  1494                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 91:             _delay((uns
      +                          igned long)((100)*(8000000/4000.0)));
  1495  00D3  3002               	movlw	2
  1496  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1497  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1498  00D6  00C5               	movwf	(??_main^(0+128)+2)
  1499  00D7  3004               	movlw	4
  1500  00D8  00C4               	movwf	(??_main^(0+128)+1)
  1501  00D9  30B9               	movlw	185
  1502  00DA  00C3               	movwf	??_main^(0+128)
  1503  00DB                     u5667:
  1504  00DB  0BC3               	decfsz	??_main^(0+128),f
  1505  00DC  28DB               	goto	u5667
  1506  00DD  0BC4               	decfsz	(??_main^(0+128)+1),f
  1507  00DE  28DB               	goto	u5667
  1508  00DF  0BC5               	decfsz	(??_main^(0+128)+2),f
  1509  00E0  28DB               	goto	u5667
  1510  00E1  28E2               	nop2
  1511  00E2                     l3378:
  1512                           
  1513                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 92:             dummydata =
      +                           0;
  1514  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  1515  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  1516  00E4  01CB               	clrf	_dummydata^(0+128)
  1517                           
  1518                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 93:        }
  1519  00E5  293E               	goto	l49
  1520  00E6                     l48:	
  1521                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 94:         else {
  1522                           
  1523                           
  1524                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 95:             PORTCbits.R
      +                          C2 = 0;
  1525  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1526  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1527  00E8  1107               	bcf	7,2	;volatile
  1528  00E9                     l3380:
  1529                           
  1530                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 96:             _delay((uns
      +                          igned long)((1)*(8000000/4000.0)));
  1531  00E9  3003               	movlw	3
  1532  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  1533  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  1534  00EC  00C4               	movwf	(??_main^(0+128)+1)
  1535  00ED  3097               	movlw	151
  1536  00EE  00C3               	movwf	??_main^(0+128)
  1537  00EF                     u5677:
  1538  00EF  0BC3               	decfsz	??_main^(0+128),f
  1539  00F0  28EF               	goto	u5677
  1540  00F1  0BC4               	decfsz	(??_main^(0+128)+1),f
  1541  00F2  28EF               	goto	u5677
  1542  00F3                     l3382:
  1543                           
  1544                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 98:             spiWrite(du
      +                          mmydata);
  1545  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  1546  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  1547  00F5  084B               	movf	_dummydata^(0+128),w
  1548  00F6  120A  158A  2000  120A  118A  	fcall	_spiWrite
  1549  00FB                     l3384:
  1550                           
  1551                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 99:             s1 = spiRea
      +                          d();
  1552  00FB  120A  118A  2003  120A  118A  	fcall	_spiRead
  1553  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1554  0101  1303               	bcf	3,6	;RP1=0, select bank1
  1555  0102  00C3               	movwf	??_main^(0+128)
  1556  0103  01C4               	clrf	(??_main^(0+128)+1)
  1557  0104  01C5               	clrf	(??_main^(0+128)+2)
  1558  0105  01C6               	clrf	(??_main^(0+128)+3)
  1559  0106  0846               	movf	(??_main+3)^(0+128),w
  1560  0107  00F3               	movwf	___xxtofl@val+3
  1561  0108  0845               	movf	(??_main+2)^(0+128),w
  1562  0109  00F2               	movwf	___xxtofl@val+2
  1563  010A  0844               	movf	(??_main+1)^(0+128),w
  1564  010B  00F1               	movwf	___xxtofl@val+1
  1565  010C  0843               	movf	??_main^(0+128),w
  1566  010D  00F0               	movwf	___xxtofl@val
  1567  010E  3000               	movlw	0
  1568  010F  160A  118A  21F6  120A  118A  	fcall	___xxtofl
  1569  0114  0873               	movf	?___xxtofl+3,w
  1570  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1571  0116  1303               	bcf	3,6	;RP1=0, select bank1
  1572  0117  00CA               	movwf	(_s1+3)^(0+128)
  1573  0118  0872               	movf	?___xxtofl+2,w
  1574  0119  00C9               	movwf	(_s1+2)^(0+128)
  1575  011A  0871               	movf	?___xxtofl+1,w
  1576  011B  00C8               	movwf	(_s1+1)^(0+128)
  1577  011C  0870               	movf	?___xxtofl,w
  1578  011D  00C7               	movwf	_s1^(0+128)
  1579                           
  1580                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 101:             _delay((un
      +                          signed long)((1)*(8000000/4000.0)));
  1581  011E  3003               	movlw	3
  1582  011F  1683               	bsf	3,5	;RP0=1, select bank1
  1583  0120  1303               	bcf	3,6	;RP1=0, select bank1
  1584  0121  00C4               	movwf	(??_main^(0+128)+1)
  1585  0122  3097               	movlw	151
  1586  0123  00C3               	movwf	??_main^(0+128)
  1587  0124                     u5687:
  1588  0124  0BC3               	decfsz	??_main^(0+128),f
  1589  0125  2924               	goto	u5687
  1590  0126  0BC4               	decfsz	(??_main^(0+128)+1),f
  1591  0127  2924               	goto	u5687
  1592  0128                     l3386:
  1593                           
  1594                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 106:             PORTCbits.
      +                          RC2 = 1;
  1595  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1597  012A  1507               	bsf	7,2	;volatile
  1598                           
  1599                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 108:             _delay((un
      +                          signed long)((100)*(8000000/4000.0)));
  1600  012B  3002               	movlw	2
  1601  012C  1683               	bsf	3,5	;RP0=1, select bank1
  1602  012D  1303               	bcf	3,6	;RP1=0, select bank1
  1603  012E  00C5               	movwf	(??_main^(0+128)+2)
  1604  012F  3004               	movlw	4
  1605  0130  00C4               	movwf	(??_main^(0+128)+1)
  1606  0131  30B9               	movlw	185
  1607  0132  00C3               	movwf	??_main^(0+128)
  1608  0133                     u5697:
  1609  0133  0BC3               	decfsz	??_main^(0+128),f
  1610  0134  2933               	goto	u5697
  1611  0135  0BC4               	decfsz	(??_main^(0+128)+1),f
  1612  0136  2933               	goto	u5697
  1613  0137  0BC5               	decfsz	(??_main^(0+128)+2),f
  1614  0138  2933               	goto	u5697
  1615  0139  293A               	nop2
  1616  013A                     l3388:
  1617                           
  1618                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 109:             dummydata 
      +                          = 1;
  1619  013A  1683               	bsf	3,5	;RP0=1, select bank1
  1620  013B  1303               	bcf	3,6	;RP1=0, select bank1
  1621  013C  01CB               	clrf	_dummydata^(0+128)
  1622  013D  0ACB               	incf	_dummydata^(0+128),f
  1623  013E                     l49:	
  1624                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 110:         }
  1625                           
  1626                           
  1627                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 112:        _delay((unsigne
      +                          d long)((1)*(8000000/4000.0)));
  1628  013E  3003               	movlw	3
  1629  013F  1683               	bsf	3,5	;RP0=1, select bank1
  1630  0140  1303               	bcf	3,6	;RP1=0, select bank1
  1631  0141  00C4               	movwf	(??_main^(0+128)+1)
  1632  0142  3097               	movlw	151
  1633  0143  00C3               	movwf	??_main^(0+128)
  1634  0144                     u5707:
  1635  0144  0BC3               	decfsz	??_main^(0+128),f
  1636  0145  2944               	goto	u5707
  1637  0146  0BC4               	decfsz	(??_main^(0+128)+1),f
  1638  0147  2944               	goto	u5707
  1639  0148                     l3390:
  1640                           
  1641                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 113:        PORTCbits.RC2 =
      +                           1;
  1642  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1644  014A  1507               	bsf	7,2	;volatile
  1645  014B                     l3392:
  1646                           
  1647                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 115:        Lcd_Clear();
  1648  014B  160A  158A  2473  120A  118A  	fcall	_Lcd_Clear
  1649  0150                     l3394:
  1650                           
  1651                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 116:        Lcd_Set_Cursor(
      +                          1,1);
  1652  0150  01F4               	clrf	Lcd_Set_Cursor@b
  1653  0151  0AF4               	incf	Lcd_Set_Cursor@b,f
  1654  0152  3001               	movlw	1
  1655  0153  160A  158A  24D8  120A  118A  	fcall	_Lcd_Set_Cursor
  1656  0158                     l3396:
  1657                           
  1658                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 117:        Lcd_Write_Strin
      +                          g("Slave1 Pot:");
  1659  0158  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1660  0159  00F3               	movwf	Lcd_Write_String@a
  1661  015A  3080               	movlw	128
  1662  015B  00F4               	movwf	Lcd_Write_String@a+1
  1663  015C  160A  158A  25D2  120A  118A  	fcall	_Lcd_Write_String
  1664  0161                     l3398:
  1665                           
  1666                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 118:        Lcd_Set_Cursor(
      +                          2,1);
  1667  0161  01F4               	clrf	Lcd_Set_Cursor@b
  1668  0162  0AF4               	incf	Lcd_Set_Cursor@b,f
  1669  0163  3002               	movlw	2
  1670  0164  160A  158A  24D8  120A  118A  	fcall	_Lcd_Set_Cursor
  1671  0169                     l3400:
  1672                           
  1673                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 119:        sprintf(volt, "
      +                          %.2f ", s1);
  1674  0169  309D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1675  016A  1683               	bsf	3,5	;RP0=1, select bank1
  1676  016B  1303               	bcf	3,6	;RP1=0, select bank1
  1677  016C  00C3               	movwf	??_main^(0+128)
  1678  016D  0843               	movf	??_main^(0+128),w
  1679  016E  00A0               	movwf	sprintf@f^(0+128)
  1680  016F  084A               	movf	(_s1+3)^(0+128),w
  1681  0170  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1682  0171  0849               	movf	(_s1+2)^(0+128),w
  1683  0172  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1684  0173  0848               	movf	(_s1+1)^(0+128),w
  1685  0174  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1686  0175  0847               	movf	_s1^(0+128),w
  1687  0176  00A1               	movwf	(?_sprintf^(0+128)+1)
  1688  0177  30CC               	movlw	(low (_volt| 0))& (0+255)
  1689  0178  120A  118A  2198  120A  118A  	fcall	_sprintf
  1690  017D                     l3402:
  1691                           
  1692                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 120:        Lcd_Write_Strin
      +                          g(volt);
  1693  017D  30CC               	movlw	(low (_volt| 0))& (0+255)
  1694  017E  00F3               	movwf	Lcd_Write_String@a
  1695  017F  3000               	movlw	0
  1696  0180  00F4               	movwf	Lcd_Write_String@a+1
  1697  0181  160A  158A  25D2  120A  118A  	fcall	_Lcd_Write_String
  1698  0186                     l3404:
  1699                           
  1700                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 121:        _delay((unsigne
      +                          d long)((500)*(8000000/4000.0)));
  1701  0186  3006               	movlw	6
  1702  0187  1683               	bsf	3,5	;RP0=1, select bank1
  1703  0188  1303               	bcf	3,6	;RP1=0, select bank1
  1704  0189  00C5               	movwf	(??_main^(0+128)+2)
  1705  018A  3013               	movlw	19
  1706  018B  00C4               	movwf	(??_main^(0+128)+1)
  1707  018C  30AD               	movlw	173
  1708  018D  00C3               	movwf	??_main^(0+128)
  1709  018E                     u5717:
  1710  018E  0BC3               	decfsz	??_main^(0+128),f
  1711  018F  298E               	goto	u5717
  1712  0190  0BC4               	decfsz	(??_main^(0+128)+1),f
  1713  0191  298E               	goto	u5717
  1714  0192  0BC5               	decfsz	(??_main^(0+128)+2),f
  1715  0193  298E               	goto	u5717
  1716  0194  287A               	goto	l3362
  1717  0195  120A  118A  2800   	ljmp	start
  1718  0198                     __end_of_main:
  1719                           
  1720                           	psect	text1
  1721  0198                     __ptext1:	
  1722 ;; *************** function _sprintf *****************
  1723 ;; Defined at:
  1724 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  sp              1    wreg     PTR unsigned char 
  1727 ;;		 -> volt(16), 
  1728 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1729 ;;		 -> STR_2(6), 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1732 ;;		 -> volt(16), 
  1733 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1734 ;;  tmpval          4   23[BANK1 ] struct .
  1735 ;;  val             4   17[BANK1 ] unsigned long 
  1736 ;;  prec            2   28[BANK1 ] int 
  1737 ;;  eexp            2   21[BANK1 ] int 
  1738 ;;  flag            2   15[BANK1 ] unsigned short 
  1739 ;;  cp              2    0        PTR const unsigned char 
  1740 ;;  len             2    0        unsigned int 
  1741 ;;  width           2    0        int 
  1742 ;;  c               1   34[BANK1 ] unsigned char 
  1743 ;;  ap              1   14[BANK1 ] PTR void [1]
  1744 ;;		 -> ?_sprintf(2), 
  1745 ;;  d               1    0        unsigned char 
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  2    0[BANK1 ] int 
  1748 ;; Registers used:
  1749 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1755 ;;      Params:         0       0       5       0       0
  1756 ;;      Locals:         0       0      25       0       0
  1757 ;;      Temps:          0       0       5       0       0
  1758 ;;      Totals:         0       0      35       0       0
  1759 ;;Total ram usage:       35 bytes
  1760 ;; Hardware stack levels used: 1
  1761 ;; Hardware stack levels required when called: 3
  1762 ;; This function calls:
  1763 ;;		___awdiv
  1764 ;;		___fladd
  1765 ;;		___fleq
  1766 ;;		___flge
  1767 ;;		___flmul
  1768 ;;		___flneg
  1769 ;;		___flsub
  1770 ;;		___fltol
  1771 ;;		___lldiv
  1772 ;;		___llmod
  1773 ;;		___wmul
  1774 ;;		___xxtofl
  1775 ;;		__div_to_l_
  1776 ;;		__tdiv_to_l_
  1777 ;;		_fround
  1778 ;;		_isdigit
  1779 ;;		_scale
  1780 ;; This function is called by:
  1781 ;;		_main
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785  0198                     _sprintf:	
  1786                           ;psect for function _sprintf
  1787                           
  1788                           
  1789                           ;incstack = 0
  1790                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1791                           ;sprintf@sp stored from wreg
  1792  0198  1683               	bsf	3,5	;RP0=1, select bank1
  1793  0199  1303               	bcf	3,6	;RP1=0, select bank1
  1794  019A  00BB               	movwf	sprintf@sp^(0+128)
  1795  019B                     l3154:
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1798  019B  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1799  019C  00A5               	movwf	??_sprintf^(0+128)
  1800  019D  0825               	movf	??_sprintf^(0+128),w
  1801  019E  00AE               	movwf	sprintf@ap^(0+128)
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1804  019F  2FD9               	goto	l3348
  1805  01A0                     l3156:
  1806                           
  1807                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1808  01A0  3025               	movlw	37
  1809  01A1  0642               	xorwf	sprintf@c^(0+128),w
  1810  01A2  1903               	btfsc	3,2
  1811  01A3  29A5               	goto	u5271
  1812  01A4  29A6               	goto	u5270
  1813  01A5                     u5271:
  1814  01A5  29B2               	goto	l3162
  1815  01A6                     u5270:
  1816  01A6                     l3158:
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1819  01A6  0842               	movf	sprintf@c^(0+128),w
  1820  01A7  00A5               	movwf	??_sprintf^(0+128)
  1821  01A8  083B               	movf	sprintf@sp^(0+128),w
  1822  01A9  0084               	movwf	4
  1823  01AA  0825               	movf	??_sprintf^(0+128),w
  1824  01AB  1383               	bcf	3,7	;select IRP bank0
  1825  01AC  0080               	movwf	0
  1826  01AD                     l3160:
  1827  01AD  3001               	movlw	1
  1828  01AE  00A5               	movwf	??_sprintf^(0+128)
  1829  01AF  0825               	movf	??_sprintf^(0+128),w
  1830  01B0  07BB               	addwf	sprintf@sp^(0+128),f
  1831                           
  1832                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 559:    continue;
  1833  01B1  2FD9               	goto	l3348
  1834  01B2                     l3162:
  1835                           
  1836                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1837  01B2  01AF               	clrf	sprintf@flag^(0+128)
  1838  01B3  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1839  01B4                     l3164:
  1840                           
  1841                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1842  01B4  0820               	movf	sprintf@f^(0+128),w
  1843  01B5  0084               	movwf	4
  1844  01B6  160A  118A  200A  120A  118A  	fcall	stringdir
  1845  01BB  3A2E               	xorlw	46
  1846  01BC  1D03               	skipz
  1847  01BD  29BF               	goto	u5281
  1848  01BE  29C0               	goto	u5280
  1849  01BF                     u5281:
  1850  01BF  2A05               	goto	l3180
  1851  01C0                     u5280:
  1852  01C0                     l3166:
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1855  01C0  1730               	bsf	(sprintf@flag^(0+128)+1),6
  1856  01C1                     l3168:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 630:    f++;
  1859  01C1  3001               	movlw	1
  1860  01C2  00A5               	movwf	??_sprintf^(0+128)
  1861  01C3  0825               	movf	??_sprintf^(0+128),w
  1862  01C4  07A0               	addwf	sprintf@f^(0+128),f
  1863  01C5                     l3170:
  1864                           
  1865                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1866  01C5  01BC               	clrf	sprintf@prec^(0+128)
  1867  01C6  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1868                           
  1869                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1870  01C7  29F4               	goto	l3178
  1871  01C8                     l3172:
  1872                           
  1873                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1874  01C8  300A               	movlw	10
  1875  01C9  00F0               	movwf	___wmul@multiplier
  1876  01CA  3000               	movlw	0
  1877  01CB  00F1               	movwf	___wmul@multiplier+1
  1878  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  1879  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  1880  01CE  083D               	movf	(sprintf@prec+1)^(0+128),w
  1881  01CF  00F3               	movwf	___wmul@multiplicand+1
  1882  01D0  083C               	movf	sprintf@prec^(0+128),w
  1883  01D1  00F2               	movwf	___wmul@multiplicand
  1884  01D2  160A  158A  2520  120A  118A  	fcall	___wmul
  1885  01D7  0871               	movf	?___wmul+1,w
  1886  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  1887  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  1888  01DA  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1889  01DB  0870               	movf	?___wmul,w
  1890  01DC  00BC               	movwf	sprintf@prec^(0+128)
  1891  01DD                     l3174:
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1894  01DD  0820               	movf	sprintf@f^(0+128),w
  1895  01DE  0084               	movwf	4
  1896  01DF  160A  118A  200A  120A  118A  	fcall	stringdir
  1897  01E4  3ED0               	addlw	208
  1898  01E5  00A5               	movwf	??_sprintf^(0+128)
  1899  01E6  30FF               	movlw	255
  1900  01E7  1803               	skipnc
  1901  01E8  3000               	movlw	0
  1902  01E9  00A6               	movwf	(??_sprintf^(0+128)+1)
  1903  01EA  0825               	movf	??_sprintf^(0+128),w
  1904  01EB  07BC               	addwf	sprintf@prec^(0+128),f
  1905  01EC  1803               	skipnc
  1906  01ED  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  1907  01EE  0826               	movf	(??_sprintf+1)^(0+128),w
  1908  01EF  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  1909  01F0                     l3176:
  1910  01F0  3001               	movlw	1
  1911  01F1  00A5               	movwf	??_sprintf^(0+128)
  1912  01F2  0825               	movf	??_sprintf^(0+128),w
  1913  01F3  07A0               	addwf	sprintf@f^(0+128),f
  1914  01F4                     l3178:
  1915                           
  1916                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1917  01F4  0820               	movf	sprintf@f^(0+128),w
  1918  01F5  0084               	movwf	4
  1919  01F6  160A  118A  200A  120A  118A  	fcall	stringdir
  1920  01FB  160A  158A  2480  120A  118A  	fcall	_isdigit
  1921  0200  1803               	btfsc	3,0
  1922  0201  2A03               	goto	u5291
  1923  0202  2A04               	goto	u5290
  1924  0203                     u5291:
  1925  0203  29C8               	goto	l3172
  1926  0204                     u5290:
  1927  0204  2A0B               	goto	l3186
  1928  0205                     l3180:
  1929                           
  1930                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1931  0205  01BC               	clrf	sprintf@prec^(0+128)
  1932  0206  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1933  0207                     l3182:
  1934                           
  1935                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1936  0207  1630               	bsf	(sprintf@flag^(0+128)+1),4
  1937  0208  2A0B               	goto	l3186
  1938  0209                     l302:	
  1939                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1940                           
  1941                           
  1942                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1943  0209  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1944                           
  1945                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 690:    break;
  1946  020A  2A27               	goto	l3188
  1947  020B                     l3186:
  1948  020B  3001               	movlw	1
  1949  020C  1683               	bsf	3,5	;RP0=1, select bank1
  1950  020D  1303               	bcf	3,6	;RP1=0, select bank1
  1951  020E  07A0               	addwf	sprintf@f^(0+128),f
  1952  020F  30FF               	movlw	-1
  1953  0210  0720               	addwf	sprintf@f^(0+128),w
  1954  0211  0084               	movwf	4
  1955  0212  160A  118A  200A  120A  118A  	fcall	stringdir
  1956  0217  00C2               	movwf	sprintf@c^(0+128)
  1957  0218  00A5               	movwf	??_sprintf^(0+128)
  1958  0219  01A6               	clrf	(??_sprintf^(0+128)+1)
  1959                           
  1960                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1961                           ; Switch size 1, requested type "simple"
  1962                           ; Number of cases is 1, Range of values is 0 to 0
  1963                           ; switch strategies available:
  1964                           ; Name         Instructions Cycles
  1965                           ; simple_byte            4     3 (average)
  1966                           ; direct_byte           11     8 (fixed)
  1967                           ; jumptable            260     6 (fixed)
  1968                           ;	Chosen strategy is simple_byte
  1969  021A  0826               	movf	(??_sprintf+1)^(0+128),w
  1970  021B  3A00               	xorlw	0	; case 0
  1971  021C  1903               	skipnz
  1972  021D  2A1F               	goto	l3440
  1973  021E  2FD9               	goto	l3348
  1974  021F                     l3440:
  1975                           
  1976                           ; Switch size 1, requested type "simple"
  1977                           ; Number of cases is 2, Range of values is 0 to 102
  1978                           ; switch strategies available:
  1979                           ; Name         Instructions Cycles
  1980                           ; simple_byte            7     4 (average)
  1981                           ; jumptable            260     6 (fixed)
  1982                           ;	Chosen strategy is simple_byte
  1983  021F  0825               	movf	??_sprintf^(0+128),w
  1984  0220  3A00               	xorlw	0	; case 0
  1985  0221  1903               	skipnz
  1986  0222  2FEB               	goto	l3350
  1987  0223  3A66               	xorlw	102	; case 102
  1988  0224  1903               	skipnz
  1989  0225  2A09               	goto	l302
  1990  0226  2FD9               	goto	l3348
  1991  0227                     l3188:
  1992                           
  1993                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1994  0227  3000               	movlw	0
  1995  0228  052F               	andwf	sprintf@flag^(0+128),w
  1996  0229  00A5               	movwf	??_sprintf^(0+128)
  1997  022A  3007               	movlw	7
  1998  022B  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1999  022C  00A6               	movwf	(??_sprintf+1)^(0+128)
  2000  022D  0825               	movf	??_sprintf^(0+128),w
  2001  022E  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2002  022F  1903               	btfsc	3,2
  2003  0230  2A32               	goto	u5301
  2004  0231  2A33               	goto	u5300
  2005  0232                     u5301:
  2006  0232  2F94               	goto	l3330
  2007  0233                     u5300:
  2008  0233                     l3190:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2011  0233  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  2012  0234  2A36               	goto	u5311
  2013  0235  2A37               	goto	u5310
  2014  0236                     u5311:
  2015  0236  2A3B               	goto	l3194
  2016  0237                     u5310:
  2017  0237                     l3192:
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2020  0237  3006               	movlw	6
  2021  0238  00BC               	movwf	sprintf@prec^(0+128)
  2022  0239  3000               	movlw	0
  2023  023A  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2024  023B                     l3194:
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2027  023B  082E               	movf	sprintf@ap^(0+128),w
  2028  023C  0084               	movwf	4
  2029  023D  1383               	bcf	3,7	;select IRP bank0
  2030  023E  0800               	movf	0,w
  2031  023F  00BE               	movwf	sprintf@fval^(0+128)
  2032  0240  0A84               	incf	4,f
  2033  0241  0800               	movf	0,w
  2034  0242  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2035  0243  0A84               	incf	4,f
  2036  0244  0800               	movf	0,w
  2037  0245  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2038  0246  0A84               	incf	4,f
  2039  0247  0800               	movf	0,w
  2040  0248  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2041  0249                     l3196:
  2042  0249  3004               	movlw	4
  2043  024A  00A5               	movwf	??_sprintf^(0+128)
  2044  024B  0825               	movf	??_sprintf^(0+128),w
  2045  024C  07AE               	addwf	sprintf@ap^(0+128),f
  2046  024D                     l3198:
  2047                           
  2048                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2049  024D  0841               	movf	(sprintf@fval+3)^(0+128),w
  2050  024E  00F3               	movwf	___flge@ff1+3
  2051  024F  0840               	movf	(sprintf@fval+2)^(0+128),w
  2052  0250  00F2               	movwf	___flge@ff1+2
  2053  0251  083F               	movf	(sprintf@fval+1)^(0+128),w
  2054  0252  00F1               	movwf	___flge@ff1+1
  2055  0253  083E               	movf	sprintf@fval^(0+128),w
  2056  0254  00F0               	movwf	___flge@ff1
  2057  0255  3000               	movlw	0
  2058  0256  00F7               	movwf	___flge@ff2+3
  2059  0257  3000               	movlw	0
  2060  0258  00F6               	movwf	___flge@ff2+2
  2061  0259  3000               	movlw	0
  2062  025A  00F5               	movwf	___flge@ff2+1
  2063  025B  3000               	movlw	0
  2064  025C  00F4               	movwf	___flge@ff2
  2065  025D  160A  118A  2154  120A  118A  	fcall	___flge
  2066  0262  1803               	btfsc	3,0
  2067  0263  2A65               	goto	u5321
  2068  0264  2A66               	goto	u5320
  2069  0265                     u5321:
  2070  0265  2A83               	goto	l3204
  2071  0266                     u5320:
  2072  0266                     l3200:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2075  0266  1683               	bsf	3,5	;RP0=1, select bank1
  2076  0267  1303               	bcf	3,6	;RP1=0, select bank1
  2077  0268  0841               	movf	(sprintf@fval+3)^(0+128),w
  2078  0269  00F3               	movwf	___flneg@f1+3
  2079  026A  0840               	movf	(sprintf@fval+2)^(0+128),w
  2080  026B  00F2               	movwf	___flneg@f1+2
  2081  026C  083F               	movf	(sprintf@fval+1)^(0+128),w
  2082  026D  00F1               	movwf	___flneg@f1+1
  2083  026E  083E               	movf	sprintf@fval^(0+128),w
  2084  026F  00F0               	movwf	___flneg@f1
  2085  0270  160A  158A  2468  120A  118A  	fcall	___flneg
  2086  0275  0873               	movf	?___flneg+3,w
  2087  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2088  0277  1303               	bcf	3,6	;RP1=0, select bank1
  2089  0278  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2090  0279  0872               	movf	?___flneg+2,w
  2091  027A  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2092  027B  0871               	movf	?___flneg+1,w
  2093  027C  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2094  027D  0870               	movf	?___flneg,w
  2095  027E  00BE               	movwf	sprintf@fval^(0+128)
  2096  027F                     l3202:
  2097                           
  2098                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2099  027F  3003               	movlw	3
  2100  0280  04AF               	iorwf	sprintf@flag^(0+128),f
  2101  0281  3000               	movlw	0
  2102  0282  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2103  0283                     l3204:
  2104                           
  2105                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2106  0283  1683               	bsf	3,5	;RP0=1, select bank1
  2107  0284  1303               	bcf	3,6	;RP1=0, select bank1
  2108  0285  01B5               	clrf	sprintf@eexp^(0+128)
  2109  0286  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2110  0287                     l3206:
  2111                           
  2112                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2113  0287  0841               	movf	(sprintf@fval+3)^(0+128),w
  2114  0288  00F3               	movwf	___fleq@ff1+3
  2115  0289  0840               	movf	(sprintf@fval+2)^(0+128),w
  2116  028A  00F2               	movwf	___fleq@ff1+2
  2117  028B  083F               	movf	(sprintf@fval+1)^(0+128),w
  2118  028C  00F1               	movwf	___fleq@ff1+1
  2119  028D  083E               	movf	sprintf@fval^(0+128),w
  2120  028E  00F0               	movwf	___fleq@ff1
  2121  028F  3000               	movlw	0
  2122  0290  00F7               	movwf	___fleq@ff2+3
  2123  0291  3000               	movlw	0
  2124  0292  00F6               	movwf	___fleq@ff2+2
  2125  0293  3000               	movlw	0
  2126  0294  00F5               	movwf	___fleq@ff2+1
  2127  0295  3000               	movlw	0
  2128  0296  00F4               	movwf	___fleq@ff2
  2129  0297  160A  158A  2658  120A  118A  	fcall	___fleq
  2130  029C  1803               	btfsc	3,0
  2131  029D  2A9F               	goto	u5331
  2132  029E  2AA0               	goto	u5330
  2133  029F                     u5331:
  2134  029F  2B90               	goto	l3232
  2135  02A0                     u5330:
  2136  02A0                     l3208:
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2139  02A0  1003               	clrc
  2140  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2141  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2142  02A3  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2143  02A4  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2144  02A5  3E82               	addlw	130
  2145  02A6  00B5               	movwf	sprintf@eexp^(0+128)
  2146  02A7  30FF               	movlw	255
  2147  02A8  1803               	skipnc
  2148  02A9  3000               	movlw	0
  2149  02AA  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  2150  02AB                     l3210:
  2151                           
  2152                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2153  02AB  30FF               	movlw	255
  2154  02AC  07B5               	addwf	sprintf@eexp^(0+128),f
  2155  02AD  1803               	skipnc
  2156  02AE  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2157  02AF  30FF               	movlw	255
  2158  02B0  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2159  02B1                     l3212:
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2162  02B1  3003               	movlw	3
  2163  02B2  00F0               	movwf	___wmul@multiplier
  2164  02B3  3000               	movlw	0
  2165  02B4  00F1               	movwf	___wmul@multiplier+1
  2166  02B5  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2167  02B6  00F3               	movwf	___wmul@multiplicand+1
  2168  02B7  0835               	movf	sprintf@eexp^(0+128),w
  2169  02B8  00F2               	movwf	___wmul@multiplicand
  2170  02B9  160A  158A  2520  120A  118A  	fcall	___wmul
  2171  02BE  0871               	movf	?___wmul+1,w
  2172  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  2173  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  2174  02C1  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2175  02C2  0870               	movf	?___wmul,w
  2176  02C3  00B5               	movwf	sprintf@eexp^(0+128)
  2177  02C4                     l3214:
  2178                           
  2179                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2180  02C4  300A               	movlw	10
  2181  02C5  00F7               	movwf	___awdiv@divisor
  2182  02C6  3000               	movlw	0
  2183  02C7  00F8               	movwf	___awdiv@divisor+1
  2184  02C8  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2185  02C9  00FA               	movwf	___awdiv@dividend+1
  2186  02CA  0835               	movf	sprintf@eexp^(0+128),w
  2187  02CB  00F9               	movwf	___awdiv@dividend
  2188  02CC  120A  118A  200C  120A  118A  	fcall	___awdiv
  2189  02D1  0878               	movf	?___awdiv+1,w
  2190  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  2191  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  2192  02D4  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2193  02D5  0877               	movf	?___awdiv,w
  2194  02D6  00B5               	movwf	sprintf@eexp^(0+128)
  2195  02D7                     l3216:
  2196                           
  2197                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2198  02D7  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  2199  02D8  2ADA               	goto	u5341
  2200  02D9  2ADB               	goto	u5340
  2201  02DA                     u5341:
  2202  02DA  2AE1               	goto	l3220
  2203  02DB                     u5340:
  2204  02DB                     l3218:
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2207  02DB  30FF               	movlw	255
  2208  02DC  07B5               	addwf	sprintf@eexp^(0+128),f
  2209  02DD  1803               	skipnc
  2210  02DE  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2211  02DF  30FF               	movlw	255
  2212  02E0  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2213  02E1                     l3220:
  2214                           
  2215                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2216  02E1  0335               	decf	sprintf@eexp^(0+128),w
  2217  02E2  3AFF               	xorlw	255
  2218  02E3  120A  158A  2140  120A  118A  	fcall	_scale
  2219  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2220  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2221  02EA  0841               	movf	?_scale+3,w
  2222  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2223  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2224  02ED  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2225  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2226  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2227  02F0  0840               	movf	?_scale+2,w
  2228  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2229  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2230  02F3  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2231  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2232  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2233  02F6  083F               	movf	?_scale+1,w
  2234  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2235  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2236  02F9  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2237  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2238  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2239  02FC  083E               	movf	?_scale,w
  2240  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  2241  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  2242  02FF  00B7               	movwf	sprintf@tmpval^(0+128)
  2243  0300                     l3222:
  2244                           
  2245                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2246  0300  0841               	movf	(sprintf@fval+3)^(0+128),w
  2247  0301  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0302  1303               	bcf	3,6	;RP1=0, select bank0
  2249  0303  00A7               	movwf	___flmul@b+3
  2250  0304  1683               	bsf	3,5	;RP0=1, select bank1
  2251  0305  1303               	bcf	3,6	;RP1=0, select bank1
  2252  0306  0840               	movf	(sprintf@fval+2)^(0+128),w
  2253  0307  1283               	bcf	3,5	;RP0=0, select bank0
  2254  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2255  0309  00A6               	movwf	___flmul@b+2
  2256  030A  1683               	bsf	3,5	;RP0=1, select bank1
  2257  030B  1303               	bcf	3,6	;RP1=0, select bank1
  2258  030C  083F               	movf	(sprintf@fval+1)^(0+128),w
  2259  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2260  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2261  030F  00A5               	movwf	___flmul@b+1
  2262  0310  1683               	bsf	3,5	;RP0=1, select bank1
  2263  0311  1303               	bcf	3,6	;RP1=0, select bank1
  2264  0312  083E               	movf	sprintf@fval^(0+128),w
  2265  0313  1283               	bcf	3,5	;RP0=0, select bank0
  2266  0314  1303               	bcf	3,6	;RP1=0, select bank0
  2267  0315  00A4               	movwf	___flmul@b
  2268  0316  1683               	bsf	3,5	;RP0=1, select bank1
  2269  0317  1303               	bcf	3,6	;RP1=0, select bank1
  2270  0318  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2271  0319  1283               	bcf	3,5	;RP0=0, select bank0
  2272  031A  1303               	bcf	3,6	;RP1=0, select bank0
  2273  031B  00AB               	movwf	___flmul@a+3
  2274  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2275  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2276  031E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2277  031F  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0320  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0321  00AA               	movwf	___flmul@a+2
  2280  0322  1683               	bsf	3,5	;RP0=1, select bank1
  2281  0323  1303               	bcf	3,6	;RP1=0, select bank1
  2282  0324  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2283  0325  1283               	bcf	3,5	;RP0=0, select bank0
  2284  0326  1303               	bcf	3,6	;RP1=0, select bank0
  2285  0327  00A9               	movwf	___flmul@a+1
  2286  0328  1683               	bsf	3,5	;RP0=1, select bank1
  2287  0329  1303               	bcf	3,6	;RP1=0, select bank1
  2288  032A  0837               	movf	sprintf@tmpval^(0+128),w
  2289  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2290  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2291  032D  00A8               	movwf	___flmul@a
  2292  032E  120A  158A  249F  120A  118A  	fcall	___flmul
  2293  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2295  0335  0827               	movf	?___flmul+3,w
  2296  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2297  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2298  0338  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2299  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2300  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2301  033B  0826               	movf	?___flmul+2,w
  2302  033C  1683               	bsf	3,5	;RP0=1, select bank1
  2303  033D  1303               	bcf	3,6	;RP1=0, select bank1
  2304  033E  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2305  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2306  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2307  0341  0825               	movf	?___flmul+1,w
  2308  0342  1683               	bsf	3,5	;RP0=1, select bank1
  2309  0343  1303               	bcf	3,6	;RP1=0, select bank1
  2310  0344  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2311  0345  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0346  1303               	bcf	3,6	;RP1=0, select bank0
  2313  0347  0824               	movf	?___flmul,w
  2314  0348  1683               	bsf	3,5	;RP0=1, select bank1
  2315  0349  1303               	bcf	3,6	;RP1=0, select bank1
  2316  034A  00B7               	movwf	sprintf@tmpval^(0+128)
  2317  034B                     l3224:
  2318                           
  2319                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2320  034B  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2321  034C  00F3               	movwf	___flge@ff1+3
  2322  034D  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2323  034E  00F2               	movwf	___flge@ff1+2
  2324  034F  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2325  0350  00F1               	movwf	___flge@ff1+1
  2326  0351  0837               	movf	sprintf@tmpval^(0+128),w
  2327  0352  00F0               	movwf	___flge@ff1
  2328  0353  303F               	movlw	63
  2329  0354  00F7               	movwf	___flge@ff2+3
  2330  0355  3080               	movlw	128
  2331  0356  00F6               	movwf	___flge@ff2+2
  2332  0357  3000               	movlw	0
  2333  0358  00F5               	movwf	___flge@ff2+1
  2334  0359  3000               	movlw	0
  2335  035A  00F4               	movwf	___flge@ff2
  2336  035B  160A  118A  2154  120A  118A  	fcall	___flge
  2337  0360  1803               	btfsc	3,0
  2338  0361  2B63               	goto	u5351
  2339  0362  2B64               	goto	u5350
  2340  0363                     u5351:
  2341  0363  2B6D               	goto	l3228
  2342  0364                     u5350:
  2343  0364                     l3226:
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2346  0364  30FF               	movlw	255
  2347  0365  1683               	bsf	3,5	;RP0=1, select bank1
  2348  0366  1303               	bcf	3,6	;RP1=0, select bank1
  2349  0367  07B5               	addwf	sprintf@eexp^(0+128),f
  2350  0368  1803               	skipnc
  2351  0369  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2352  036A  30FF               	movlw	255
  2353  036B  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2354  036C  2B90               	goto	l3232
  2355  036D                     l3228:
  2356  036D  1683               	bsf	3,5	;RP0=1, select bank1
  2357  036E  1303               	bcf	3,6	;RP1=0, select bank1
  2358  036F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2359  0370  00F3               	movwf	___flge@ff1+3
  2360  0371  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2361  0372  00F2               	movwf	___flge@ff1+2
  2362  0373  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2363  0374  00F1               	movwf	___flge@ff1+1
  2364  0375  0837               	movf	sprintf@tmpval^(0+128),w
  2365  0376  00F0               	movwf	___flge@ff1
  2366  0377  3041               	movlw	65
  2367  0378  00F7               	movwf	___flge@ff2+3
  2368  0379  3020               	movlw	32
  2369  037A  00F6               	movwf	___flge@ff2+2
  2370  037B  3000               	movlw	0
  2371  037C  00F5               	movwf	___flge@ff2+1
  2372  037D  3000               	movlw	0
  2373  037E  00F4               	movwf	___flge@ff2
  2374  037F  160A  118A  2154  120A  118A  	fcall	___flge
  2375  0384  1C03               	btfss	3,0
  2376  0385  2B87               	goto	u5361
  2377  0386  2B88               	goto	u5360
  2378  0387                     u5361:
  2379  0387  2B90               	goto	l3232
  2380  0388                     u5360:
  2381  0388                     l3230:
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2384  0388  3001               	movlw	1
  2385  0389  1683               	bsf	3,5	;RP0=1, select bank1
  2386  038A  1303               	bcf	3,6	;RP1=0, select bank1
  2387  038B  07B5               	addwf	sprintf@eexp^(0+128),f
  2388  038C  1803               	skipnc
  2389  038D  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2390  038E  3000               	movlw	0
  2391  038F  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2392  0390                     l3232:
  2393                           
  2394                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2395  0390  1683               	bsf	3,5	;RP0=1, select bank1
  2396  0391  1303               	bcf	3,6	;RP1=0, select bank1
  2397  0392  083D               	movf	(sprintf@prec+1)^(0+128),w
  2398  0393  3A80               	xorlw	128
  2399  0394  00FF               	movwf	btemp+1
  2400  0395  3080               	movlw	128
  2401  0396  027F               	subwf	btemp+1,w
  2402  0397  1D03               	skipz
  2403  0398  2B9B               	goto	u5375
  2404  0399  300D               	movlw	13
  2405  039A  023C               	subwf	sprintf@prec^(0+128),w
  2406  039B                     u5375:
  2407  039B  1803               	skipnc
  2408  039C  2B9E               	goto	u5371
  2409  039D  2B9F               	goto	u5370
  2410  039E                     u5371:
  2411  039E  2BE6               	goto	l3236
  2412  039F                     u5370:
  2413  039F                     l3234:
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2416  039F  1683               	bsf	3,5	;RP0=1, select bank1
  2417  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2418  03A1  083C               	movf	sprintf@prec^(0+128),w
  2419  03A2  160A  118A  236D  120A  118A  	fcall	_fround
  2420  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  2421  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  2422  03A9  0841               	movf	?_fround+3,w
  2423  03AA  00D5               	movwf	___fladd@b+3
  2424  03AB  0840               	movf	?_fround+2,w
  2425  03AC  00D4               	movwf	___fladd@b+2
  2426  03AD  083F               	movf	?_fround+1,w
  2427  03AE  00D3               	movwf	___fladd@b+1
  2428  03AF  083E               	movf	?_fround,w
  2429  03B0  00D2               	movwf	___fladd@b
  2430  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2431  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  2432  03B3  0841               	movf	(sprintf@fval+3)^(0+128),w
  2433  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2434  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2435  03B6  00D9               	movwf	___fladd@a+3
  2436  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  2437  03B8  1303               	bcf	3,6	;RP1=0, select bank1
  2438  03B9  0840               	movf	(sprintf@fval+2)^(0+128),w
  2439  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  2440  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  2441  03BC  00D8               	movwf	___fladd@a+2
  2442  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2443  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  2444  03BF  083F               	movf	(sprintf@fval+1)^(0+128),w
  2445  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  2446  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  2447  03C2  00D7               	movwf	___fladd@a+1
  2448  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  2449  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  2450  03C5  083E               	movf	sprintf@fval^(0+128),w
  2451  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2452  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2453  03C8  00D6               	movwf	___fladd@a
  2454  03C9  160A  118A  2578  120A  118A  	fcall	___fladd
  2455  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  2456  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  2457  03D0  0855               	movf	?___fladd+3,w
  2458  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  2459  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  2460  03D3  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2461  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2462  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  2463  03D6  0854               	movf	?___fladd+2,w
  2464  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  2465  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  2466  03D9  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2467  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2468  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2469  03DC  0853               	movf	?___fladd+1,w
  2470  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  2471  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  2472  03DF  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2473  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2474  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2475  03E2  0852               	movf	?___fladd,w
  2476  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  2477  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  2478  03E5  00BE               	movwf	sprintf@fval^(0+128)
  2479  03E6                     l3236:
  2480                           
  2481                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2482  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  2483  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  2484  03E8  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2485  03E9  3A80               	xorlw	128
  2486  03EA  00FF               	movwf	btemp+1
  2487  03EB  3080               	movlw	128
  2488  03EC  027F               	subwf	btemp+1,w
  2489  03ED  1D03               	skipz
  2490  03EE  2BF1               	goto	u5385
  2491  03EF  300A               	movlw	10
  2492  03F0  0235               	subwf	sprintf@eexp^(0+128),w
  2493  03F1                     u5385:
  2494  03F1  1803               	skipnc
  2495  03F2  2BF4               	goto	u5381
  2496  03F3  2BF5               	goto	u5380
  2497  03F4                     u5381:
  2498  03F4  2C46               	goto	l3244
  2499  03F5                     u5380:
  2500  03F5                     l3238:
  2501  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  2502  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  2503  03F7  0841               	movf	(sprintf@fval+3)^(0+128),w
  2504  03F8  00F3               	movwf	___fleq@ff1+3
  2505  03F9  0840               	movf	(sprintf@fval+2)^(0+128),w
  2506  03FA  00F2               	movwf	___fleq@ff1+2
  2507  03FB  083F               	movf	(sprintf@fval+1)^(0+128),w
  2508  03FC  00F1               	movwf	___fleq@ff1+1
  2509  03FD  083E               	movf	sprintf@fval^(0+128),w
  2510  03FE  00F0               	movwf	___fleq@ff1
  2511  03FF  3000               	movlw	0
  2512  0400  00F7               	movwf	___fleq@ff2+3
  2513  0401  3000               	movlw	0
  2514  0402  00F6               	movwf	___fleq@ff2+2
  2515  0403  3000               	movlw	0
  2516  0404  00F5               	movwf	___fleq@ff2+1
  2517  0405  3000               	movlw	0
  2518  0406  00F4               	movwf	___fleq@ff2
  2519  0407  160A  158A  2658  120A  118A  	fcall	___fleq
  2520  040C  1803               	btfsc	3,0
  2521  040D  2C0F               	goto	u5391
  2522  040E  2C10               	goto	u5390
  2523  040F                     u5391:
  2524  040F  2CB8               	goto	l3258
  2525  0410                     u5390:
  2526  0410                     l3240:
  2527  0410  1683               	bsf	3,5	;RP0=1, select bank1
  2528  0411  1303               	bcf	3,6	;RP1=0, select bank1
  2529  0412  0841               	movf	(sprintf@fval+3)^(0+128),w
  2530  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0414  1303               	bcf	3,6	;RP1=0, select bank0
  2532  0415  00D4               	movwf	___fltol@f1+3
  2533  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2534  0417  1303               	bcf	3,6	;RP1=0, select bank1
  2535  0418  0840               	movf	(sprintf@fval+2)^(0+128),w
  2536  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2537  041A  1303               	bcf	3,6	;RP1=0, select bank0
  2538  041B  00D3               	movwf	___fltol@f1+2
  2539  041C  1683               	bsf	3,5	;RP0=1, select bank1
  2540  041D  1303               	bcf	3,6	;RP1=0, select bank1
  2541  041E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2542  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0421  00D2               	movwf	___fltol@f1+1
  2545  0422  1683               	bsf	3,5	;RP0=1, select bank1
  2546  0423  1303               	bcf	3,6	;RP1=0, select bank1
  2547  0424  083E               	movf	sprintf@fval^(0+128),w
  2548  0425  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0426  1303               	bcf	3,6	;RP1=0, select bank0
  2550  0427  00D1               	movwf	___fltol@f1
  2551  0428  120A  158A  2006  120A  118A  	fcall	___fltol
  2552  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2553  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2554  042F  0854               	movf	?___fltol+3,w
  2555  0430  0453               	iorwf	?___fltol+2,w
  2556  0431  0452               	iorwf	?___fltol+1,w
  2557  0432  0451               	iorwf	?___fltol,w
  2558  0433  1D03               	skipz
  2559  0434  2C36               	goto	u5401
  2560  0435  2C37               	goto	u5400
  2561  0436                     u5401:
  2562  0436  2CB8               	goto	l3258
  2563  0437                     u5400:
  2564  0437                     l3242:
  2565  0437  1683               	bsf	3,5	;RP0=1, select bank1
  2566  0438  1303               	bcf	3,6	;RP1=0, select bank1
  2567  0439  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2568  043A  3A80               	xorlw	128
  2569  043B  00FF               	movwf	btemp+1
  2570  043C  3080               	movlw	128
  2571  043D  027F               	subwf	btemp+1,w
  2572  043E  1D03               	skipz
  2573  043F  2C42               	goto	u5415
  2574  0440  3002               	movlw	2
  2575  0441  0235               	subwf	sprintf@eexp^(0+128),w
  2576  0442                     u5415:
  2577  0442  1C03               	skipc
  2578  0443  2C45               	goto	u5411
  2579  0444  2C46               	goto	u5410
  2580  0445                     u5411:
  2581  0445  2CB8               	goto	l3258
  2582  0446                     u5410:
  2583  0446                     l3244:
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2586  0446  1683               	bsf	3,5	;RP0=1, select bank1
  2587  0447  1303               	bcf	3,6	;RP1=0, select bank1
  2588  0448  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2589  0449  00F3               	movwf	___flge@ff1+3
  2590  044A  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2591  044B  00F2               	movwf	___flge@ff1+2
  2592  044C  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2593  044D  00F1               	movwf	___flge@ff1+1
  2594  044E  0837               	movf	sprintf@tmpval^(0+128),w
  2595  044F  00F0               	movwf	___flge@ff1
  2596  0450  3040               	movlw	64
  2597  0451  00F7               	movwf	___flge@ff2+3
  2598  0452  3089               	movlw	137
  2599  0453  00F6               	movwf	___flge@ff2+2
  2600  0454  3070               	movlw	112
  2601  0455  00F5               	movwf	___flge@ff2+1
  2602  0456  305F               	movlw	95
  2603  0457  00F4               	movwf	___flge@ff2
  2604  0458  160A  118A  2154  120A  118A  	fcall	___flge
  2605  045D  1803               	btfsc	3,0
  2606  045E  2C60               	goto	u5421
  2607  045F  2C61               	goto	u5420
  2608  0460                     u5421:
  2609  0460  2C6A               	goto	l3248
  2610  0461                     u5420:
  2611  0461                     l3246:
  2612                           
  2613                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2614  0461  30F7               	movlw	247
  2615  0462  1683               	bsf	3,5	;RP0=1, select bank1
  2616  0463  1303               	bcf	3,6	;RP1=0, select bank1
  2617  0464  07B5               	addwf	sprintf@eexp^(0+128),f
  2618  0465  1803               	skipnc
  2619  0466  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2620  0467  30FF               	movlw	255
  2621  0468  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2622                           
  2623                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2624  0469  2C72               	goto	l3250
  2625  046A                     l3248:
  2626                           
  2627                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2628  046A  30F8               	movlw	248
  2629  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2630  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2631  046D  07B5               	addwf	sprintf@eexp^(0+128),f
  2632  046E  1803               	skipnc
  2633  046F  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2634  0470  30FF               	movlw	255
  2635  0471  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2636  0472                     l3250:
  2637                           
  2638                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2639  0472  0835               	movf	sprintf@eexp^(0+128),w
  2640  0473  120A  158A  2140  120A  118A  	fcall	_scale
  2641  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2642  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2643  047A  0841               	movf	?_scale+3,w
  2644  047B  1683               	bsf	3,5	;RP0=1, select bank1
  2645  047C  1303               	bcf	3,6	;RP1=0, select bank1
  2646  047D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2647  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2648  047F  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0480  0840               	movf	?_scale+2,w
  2650  0481  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0482  1303               	bcf	3,6	;RP1=0, select bank1
  2652  0483  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2653  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2654  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2655  0486  083F               	movf	?_scale+1,w
  2656  0487  1683               	bsf	3,5	;RP0=1, select bank1
  2657  0488  1303               	bcf	3,6	;RP1=0, select bank1
  2658  0489  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2659  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2660  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2661  048C  083E               	movf	?_scale,w
  2662  048D  1683               	bsf	3,5	;RP0=1, select bank1
  2663  048E  1303               	bcf	3,6	;RP1=0, select bank1
  2664  048F  00B7               	movwf	sprintf@tmpval^(0+128)
  2665  0490                     l3252:
  2666  0490  0841               	movf	(sprintf@fval+3)^(0+128),w
  2667  0491  00F3               	movwf	__div_to_l_@f1+3
  2668  0492  0840               	movf	(sprintf@fval+2)^(0+128),w
  2669  0493  00F2               	movwf	__div_to_l_@f1+2
  2670  0494  083F               	movf	(sprintf@fval+1)^(0+128),w
  2671  0495  00F1               	movwf	__div_to_l_@f1+1
  2672  0496  083E               	movf	sprintf@fval^(0+128),w
  2673  0497  00F0               	movwf	__div_to_l_@f1
  2674  0498  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2675  0499  00F7               	movwf	__div_to_l_@f2+3
  2676  049A  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2677  049B  00F6               	movwf	__div_to_l_@f2+2
  2678  049C  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2679  049D  00F5               	movwf	__div_to_l_@f2+1
  2680  049E  0837               	movf	sprintf@tmpval^(0+128),w
  2681  049F  00F4               	movwf	__div_to_l_@f2
  2682  04A0  120A  158A  2082  120A  118A  	fcall	__div_to_l_
  2683  04A5  0873               	movf	?__div_to_l_+3,w
  2684  04A6  1683               	bsf	3,5	;RP0=1, select bank1
  2685  04A7  1303               	bcf	3,6	;RP1=0, select bank1
  2686  04A8  00B4               	movwf	(sprintf@val+3)^(0+128)
  2687  04A9  0872               	movf	?__div_to_l_+2,w
  2688  04AA  00B3               	movwf	(sprintf@val+2)^(0+128)
  2689  04AB  0871               	movf	?__div_to_l_+1,w
  2690  04AC  00B2               	movwf	(sprintf@val+1)^(0+128)
  2691  04AD  0870               	movf	?__div_to_l_,w
  2692  04AE  00B1               	movwf	sprintf@val^(0+128)
  2693  04AF                     l3256:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2696  04AF  3000               	movlw	0
  2697  04B0  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2698  04B1  3000               	movlw	0
  2699  04B2  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2700  04B3  3000               	movlw	0
  2701  04B4  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2702  04B5  3000               	movlw	0
  2703  04B6  00BE               	movwf	sprintf@fval^(0+128)
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2706  04B7  2D3C               	goto	l3264
  2707  04B8                     l3258:
  2708                           
  2709                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2710  04B8  1683               	bsf	3,5	;RP0=1, select bank1
  2711  04B9  1303               	bcf	3,6	;RP1=0, select bank1
  2712  04BA  0841               	movf	(sprintf@fval+3)^(0+128),w
  2713  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  2714  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  2715  04BD  00D4               	movwf	___fltol@f1+3
  2716  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  2717  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  2718  04C0  0840               	movf	(sprintf@fval+2)^(0+128),w
  2719  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2720  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2721  04C3  00D3               	movwf	___fltol@f1+2
  2722  04C4  1683               	bsf	3,5	;RP0=1, select bank1
  2723  04C5  1303               	bcf	3,6	;RP1=0, select bank1
  2724  04C6  083F               	movf	(sprintf@fval+1)^(0+128),w
  2725  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2726  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2727  04C9  00D2               	movwf	___fltol@f1+1
  2728  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  2729  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  2730  04CC  083E               	movf	sprintf@fval^(0+128),w
  2731  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2732  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2733  04CF  00D1               	movwf	___fltol@f1
  2734  04D0  120A  158A  2006  120A  118A  	fcall	___fltol
  2735  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  2736  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  2737  04D7  0854               	movf	?___fltol+3,w
  2738  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  2739  04D9  1303               	bcf	3,6	;RP1=0, select bank1
  2740  04DA  00B4               	movwf	(sprintf@val+3)^(0+128)
  2741  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  2742  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  2743  04DD  0853               	movf	?___fltol+2,w
  2744  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  2745  04DF  1303               	bcf	3,6	;RP1=0, select bank1
  2746  04E0  00B3               	movwf	(sprintf@val+2)^(0+128)
  2747  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  2748  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  2749  04E3  0852               	movf	?___fltol+1,w
  2750  04E4  1683               	bsf	3,5	;RP0=1, select bank1
  2751  04E5  1303               	bcf	3,6	;RP1=0, select bank1
  2752  04E6  00B2               	movwf	(sprintf@val+1)^(0+128)
  2753  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  2754  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  2755  04E9  0851               	movf	?___fltol,w
  2756  04EA  1683               	bsf	3,5	;RP0=1, select bank1
  2757  04EB  1303               	bcf	3,6	;RP1=0, select bank1
  2758  04EC  00B1               	movwf	sprintf@val^(0+128)
  2759  04ED                     l3260:
  2760                           
  2761                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2762  04ED  0834               	movf	(sprintf@val+3)^(0+128),w
  2763  04EE  00F3               	movwf	___xxtofl@val+3
  2764  04EF  0833               	movf	(sprintf@val+2)^(0+128),w
  2765  04F0  00F2               	movwf	___xxtofl@val+2
  2766  04F1  0832               	movf	(sprintf@val+1)^(0+128),w
  2767  04F2  00F1               	movwf	___xxtofl@val+1
  2768  04F3  0831               	movf	sprintf@val^(0+128),w
  2769  04F4  00F0               	movwf	___xxtofl@val
  2770  04F5  3000               	movlw	0
  2771  04F6  160A  118A  21F6  120A  118A  	fcall	___xxtofl
  2772  04FB  0873               	movf	?___xxtofl+3,w
  2773  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2774  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2775  04FE  00E9               	movwf	___flsub@a+3
  2776  04FF  0872               	movf	?___xxtofl+2,w
  2777  0500  00E8               	movwf	___flsub@a+2
  2778  0501  0871               	movf	?___xxtofl+1,w
  2779  0502  00E7               	movwf	___flsub@a+1
  2780  0503  0870               	movf	?___xxtofl,w
  2781  0504  00E6               	movwf	___flsub@a
  2782  0505  1683               	bsf	3,5	;RP0=1, select bank1
  2783  0506  1303               	bcf	3,6	;RP1=0, select bank1
  2784  0507  0841               	movf	(sprintf@fval+3)^(0+128),w
  2785  0508  1283               	bcf	3,5	;RP0=0, select bank0
  2786  0509  1303               	bcf	3,6	;RP1=0, select bank0
  2787  050A  00ED               	movwf	___flsub@b+3
  2788  050B  1683               	bsf	3,5	;RP0=1, select bank1
  2789  050C  1303               	bcf	3,6	;RP1=0, select bank1
  2790  050D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2791  050E  1283               	bcf	3,5	;RP0=0, select bank0
  2792  050F  1303               	bcf	3,6	;RP1=0, select bank0
  2793  0510  00EC               	movwf	___flsub@b+2
  2794  0511  1683               	bsf	3,5	;RP0=1, select bank1
  2795  0512  1303               	bcf	3,6	;RP1=0, select bank1
  2796  0513  083F               	movf	(sprintf@fval+1)^(0+128),w
  2797  0514  1283               	bcf	3,5	;RP0=0, select bank0
  2798  0515  1303               	bcf	3,6	;RP1=0, select bank0
  2799  0516  00EB               	movwf	___flsub@b+1
  2800  0517  1683               	bsf	3,5	;RP0=1, select bank1
  2801  0518  1303               	bcf	3,6	;RP1=0, select bank1
  2802  0519  083E               	movf	sprintf@fval^(0+128),w
  2803  051A  1283               	bcf	3,5	;RP0=0, select bank0
  2804  051B  1303               	bcf	3,6	;RP1=0, select bank0
  2805  051C  00EA               	movwf	___flsub@b
  2806  051D  160A  158A  24FC  120A  118A  	fcall	___flsub
  2807  0522  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0523  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0524  0869               	movf	?___flsub+3,w
  2810  0525  1683               	bsf	3,5	;RP0=1, select bank1
  2811  0526  1303               	bcf	3,6	;RP1=0, select bank1
  2812  0527  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2813  0528  1283               	bcf	3,5	;RP0=0, select bank0
  2814  0529  1303               	bcf	3,6	;RP1=0, select bank0
  2815  052A  0868               	movf	?___flsub+2,w
  2816  052B  1683               	bsf	3,5	;RP0=1, select bank1
  2817  052C  1303               	bcf	3,6	;RP1=0, select bank1
  2818  052D  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2819  052E  1283               	bcf	3,5	;RP0=0, select bank0
  2820  052F  1303               	bcf	3,6	;RP1=0, select bank0
  2821  0530  0867               	movf	?___flsub+1,w
  2822  0531  1683               	bsf	3,5	;RP0=1, select bank1
  2823  0532  1303               	bcf	3,6	;RP1=0, select bank1
  2824  0533  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2825  0534  1283               	bcf	3,5	;RP0=0, select bank0
  2826  0535  1303               	bcf	3,6	;RP1=0, select bank0
  2827  0536  0866               	movf	?___flsub,w
  2828  0537  1683               	bsf	3,5	;RP0=1, select bank1
  2829  0538  1303               	bcf	3,6	;RP1=0, select bank1
  2830  0539  00BE               	movwf	sprintf@fval^(0+128)
  2831  053A                     l3262:
  2832                           
  2833                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2834  053A  01B5               	clrf	sprintf@eexp^(0+128)
  2835  053B  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2836  053C                     l3264:
  2837                           
  2838                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2839  053C  01C2               	clrf	sprintf@c^(0+128)
  2840  053D  0AC2               	incf	sprintf@c^(0+128),f
  2841  053E                     l3270:
  2842                           
  2843                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2844  053E  0842               	movf	sprintf@c^(0+128),w
  2845  053F  00A5               	movwf	??_sprintf^(0+128)
  2846  0540  3001               	movlw	1
  2847  0541                     u5435:
  2848  0541  1003               	clrc
  2849  0542  0DA5               	rlf	??_sprintf^(0+128),f
  2850  0543  3EFF               	addlw	-1
  2851  0544  1D03               	skipz
  2852  0545  2D41               	goto	u5435
  2853  0546  1003               	clrc
  2854  0547  0D25               	rlf	??_sprintf^(0+128),w
  2855  0548  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2856  0549  0084               	movwf	4
  2857  054A  160A  118A  200A  120A  118A  	fcall	stringdir
  2858  054F  00A6               	movwf	(??_sprintf+1)^(0+128)
  2859  0550  160A  118A  200A  120A  118A  	fcall	stringdir
  2860  0555  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2861  0556  160A  118A  200A  120A  118A  	fcall	stringdir
  2862  055B  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2863  055C  160A  118A  200A  120A  118A  	fcall	stringdir
  2864  0561  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2865  0562  0829               	movf	(??_sprintf+4)^(0+128),w
  2866  0563  0234               	subwf	(sprintf@val+3)^(0+128),w
  2867  0564  1D03               	skipz
  2868  0565  2D70               	goto	u5445
  2869  0566  0828               	movf	(??_sprintf+3)^(0+128),w
  2870  0567  0233               	subwf	(sprintf@val+2)^(0+128),w
  2871  0568  1D03               	skipz
  2872  0569  2D70               	goto	u5445
  2873  056A  0827               	movf	(??_sprintf+2)^(0+128),w
  2874  056B  0232               	subwf	(sprintf@val+1)^(0+128),w
  2875  056C  1D03               	skipz
  2876  056D  2D70               	goto	u5445
  2877  056E  0826               	movf	(??_sprintf+1)^(0+128),w
  2878  056F  0231               	subwf	sprintf@val^(0+128),w
  2879  0570                     u5445:
  2880  0570  1803               	skipnc
  2881  0571  2D73               	goto	u5441
  2882  0572  2D74               	goto	u5440
  2883  0573                     u5441:
  2884  0573  2D75               	goto	l3274
  2885  0574                     u5440:
  2886  0574  2D7F               	goto	l3276
  2887  0575                     l3274:
  2888  0575  3001               	movlw	1
  2889  0576  00A5               	movwf	??_sprintf^(0+128)
  2890  0577  0825               	movf	??_sprintf^(0+128),w
  2891  0578  07C2               	addwf	sprintf@c^(0+128),f
  2892  0579  300A               	movlw	10
  2893  057A  0642               	xorwf	sprintf@c^(0+128),w
  2894  057B  1D03               	btfss	3,2
  2895  057C  2D7E               	goto	u5451
  2896  057D  2D7F               	goto	u5450
  2897  057E                     u5451:
  2898  057E  2D3E               	goto	l3270
  2899  057F                     u5450:
  2900  057F                     l3276:
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  2903  057F  3003               	movlw	3
  2904  0580  052F               	andwf	sprintf@flag^(0+128),w
  2905  0581  00A5               	movwf	??_sprintf^(0+128)
  2906  0582  3000               	movlw	0
  2907  0583  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2908  0584  00A6               	movwf	(??_sprintf+1)^(0+128)
  2909  0585  0825               	movf	??_sprintf^(0+128),w
  2910  0586  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2911  0587  1903               	btfsc	3,2
  2912  0588  2D8A               	goto	u5461
  2913  0589  2D8B               	goto	u5460
  2914  058A                     u5461:
  2915  058A  2DFD               	goto	l328
  2916  058B                     u5460:
  2917  058B                     l3278:
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2920  058B  302D               	movlw	45
  2921  058C  00A5               	movwf	??_sprintf^(0+128)
  2922  058D  083B               	movf	sprintf@sp^(0+128),w
  2923  058E  0084               	movwf	4
  2924  058F  0825               	movf	??_sprintf^(0+128),w
  2925  0590  1383               	bcf	3,7	;select IRP bank0
  2926  0591  0080               	movwf	0
  2927  0592                     l3280:
  2928  0592  3001               	movlw	1
  2929  0593  00A5               	movwf	??_sprintf^(0+128)
  2930  0594  0825               	movf	??_sprintf^(0+128),w
  2931  0595  07BB               	addwf	sprintf@sp^(0+128),f
  2932  0596  2DFD               	goto	l328
  2933  0597                     l3282:
  2934                           
  2935                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2936  0597  0842               	movf	sprintf@c^(0+128),w
  2937  0598  00A5               	movwf	??_sprintf^(0+128)
  2938  0599  3001               	movlw	1
  2939  059A                     u5475:
  2940  059A  1003               	clrc
  2941  059B  0DA5               	rlf	??_sprintf^(0+128),f
  2942  059C  3EFF               	addlw	-1
  2943  059D  1D03               	skipz
  2944  059E  2D9A               	goto	u5475
  2945  059F  1003               	clrc
  2946  05A0  0D25               	rlf	??_sprintf^(0+128),w
  2947  05A1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2948  05A2  0084               	movwf	4
  2949  05A3  160A  118A  200A  120A  118A  	fcall	stringdir
  2950  05A8  00F0               	movwf	___lldiv@divisor
  2951  05A9  160A  118A  200A  120A  118A  	fcall	stringdir
  2952  05AE  00F1               	movwf	___lldiv@divisor+1
  2953  05AF  160A  118A  200A  120A  118A  	fcall	stringdir
  2954  05B4  00F2               	movwf	___lldiv@divisor+2
  2955  05B5  160A  118A  200A  120A  118A  	fcall	stringdir
  2956  05BA  00F3               	movwf	___lldiv@divisor+3
  2957  05BB  0834               	movf	(sprintf@val+3)^(0+128),w
  2958  05BC  00F7               	movwf	___lldiv@dividend+3
  2959  05BD  0833               	movf	(sprintf@val+2)^(0+128),w
  2960  05BE  00F6               	movwf	___lldiv@dividend+2
  2961  05BF  0832               	movf	(sprintf@val+1)^(0+128),w
  2962  05C0  00F5               	movwf	___lldiv@dividend+1
  2963  05C1  0831               	movf	sprintf@val^(0+128),w
  2964  05C2  00F4               	movwf	___lldiv@dividend
  2965  05C3  160A  118A  20EE  120A  118A  	fcall	___lldiv
  2966  05C8  0873               	movf	?___lldiv+3,w
  2967  05C9  1683               	bsf	3,5	;RP0=1, select bank1
  2968  05CA  1303               	bcf	3,6	;RP1=0, select bank1
  2969  05CB  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2970  05CC  0872               	movf	?___lldiv+2,w
  2971  05CD  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2972  05CE  0871               	movf	?___lldiv+1,w
  2973  05CF  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2974  05D0  0870               	movf	?___lldiv,w
  2975  05D1  00B7               	movwf	sprintf@tmpval^(0+128)
  2976  05D2                     l3284:
  2977                           
  2978                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2979  05D2  3000               	movlw	0
  2980  05D3  00F3               	movwf	___llmod@divisor+3
  2981  05D4  3000               	movlw	0
  2982  05D5  00F2               	movwf	___llmod@divisor+2
  2983  05D6  3000               	movlw	0
  2984  05D7  00F1               	movwf	___llmod@divisor+1
  2985  05D8  300A               	movlw	10
  2986  05D9  00F0               	movwf	___llmod@divisor
  2987  05DA  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2988  05DB  00F7               	movwf	___llmod@dividend+3
  2989  05DC  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2990  05DD  00F6               	movwf	___llmod@dividend+2
  2991  05DE  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2992  05DF  00F5               	movwf	___llmod@dividend+1
  2993  05E0  0837               	movf	sprintf@tmpval^(0+128),w
  2994  05E1  00F4               	movwf	___llmod@dividend
  2995  05E2  160A  158A  26F7  120A  118A  	fcall	___llmod
  2996  05E7  0873               	movf	?___llmod+3,w
  2997  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  2998  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  2999  05EA  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3000  05EB  0872               	movf	?___llmod+2,w
  3001  05EC  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3002  05ED  0871               	movf	?___llmod+1,w
  3003  05EE  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3004  05EF  0870               	movf	?___llmod,w
  3005  05F0  00B7               	movwf	sprintf@tmpval^(0+128)
  3006  05F1                     l3286:
  3007                           
  3008                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3009  05F1  0837               	movf	sprintf@tmpval^(0+128),w
  3010  05F2  3E30               	addlw	48
  3011  05F3  00A5               	movwf	??_sprintf^(0+128)
  3012  05F4  083B               	movf	sprintf@sp^(0+128),w
  3013  05F5  0084               	movwf	4
  3014  05F6  0825               	movf	??_sprintf^(0+128),w
  3015  05F7  1383               	bcf	3,7	;select IRP bank0
  3016  05F8  0080               	movwf	0
  3017  05F9  3001               	movlw	1
  3018  05FA  00A5               	movwf	??_sprintf^(0+128)
  3019  05FB  0825               	movf	??_sprintf^(0+128),w
  3020  05FC  07BB               	addwf	sprintf@sp^(0+128),f
  3021  05FD                     l328:	
  3022                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1232:    }
  3023                           
  3024                           
  3025                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3026  05FD  3001               	movlw	1
  3027  05FE  02C2               	subwf	sprintf@c^(0+128),f
  3028  05FF  0A42               	incf	sprintf@c^(0+128),w
  3029  0600  1D03               	btfss	3,2
  3030  0601  2E03               	goto	u5481
  3031  0602  2E04               	goto	u5480
  3032  0603                     u5481:
  3033  0603  2D97               	goto	l3282
  3034  0604                     u5480:
  3035  0604  2E18               	goto	l3294
  3036  0605                     l3288:
  3037                           
  3038                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3039  0605  3030               	movlw	48
  3040  0606  1683               	bsf	3,5	;RP0=1, select bank1
  3041  0607  1303               	bcf	3,6	;RP1=0, select bank1
  3042  0608  00A5               	movwf	??_sprintf^(0+128)
  3043  0609  083B               	movf	sprintf@sp^(0+128),w
  3044  060A  0084               	movwf	4
  3045  060B  0825               	movf	??_sprintf^(0+128),w
  3046  060C  1383               	bcf	3,7	;select IRP bank0
  3047  060D  0080               	movwf	0
  3048  060E                     l3290:
  3049  060E  3001               	movlw	1
  3050  060F  00A5               	movwf	??_sprintf^(0+128)
  3051  0610  0825               	movf	??_sprintf^(0+128),w
  3052  0611  07BB               	addwf	sprintf@sp^(0+128),f
  3053  0612                     l3292:
  3054                           
  3055                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3056  0612  30FF               	movlw	255
  3057  0613  07B5               	addwf	sprintf@eexp^(0+128),f
  3058  0614  1803               	skipnc
  3059  0615  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3060  0616  30FF               	movlw	255
  3061  0617  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3062  0618                     l3294:
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3065  0618  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3066  0619  3A80               	xorlw	128
  3067  061A  00FF               	movwf	btemp+1
  3068  061B  3080               	movlw	128
  3069  061C  027F               	subwf	btemp+1,w
  3070  061D  1D03               	skipz
  3071  061E  2E21               	goto	u5495
  3072  061F  3001               	movlw	1
  3073  0620  0235               	subwf	sprintf@eexp^(0+128),w
  3074  0621                     u5495:
  3075  0621  1803               	skipnc
  3076  0622  2E24               	goto	u5491
  3077  0623  2E25               	goto	u5490
  3078  0624                     u5491:
  3079  0624  2E05               	goto	l3288
  3080  0625                     u5490:
  3081  0625                     l3296:
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3084  0625  1683               	bsf	3,5	;RP0=1, select bank1
  3085  0626  1303               	bcf	3,6	;RP1=0, select bank1
  3086  0627  083D               	movf	(sprintf@prec+1)^(0+128),w
  3087  0628  3A80               	xorlw	128
  3088  0629  00FF               	movwf	btemp+1
  3089  062A  3080               	movlw	128
  3090  062B  027F               	subwf	btemp+1,w
  3091  062C  1D03               	skipz
  3092  062D  2E30               	goto	u5505
  3093  062E  3009               	movlw	9
  3094  062F  023C               	subwf	sprintf@prec^(0+128),w
  3095  0630                     u5505:
  3096  0630  1C03               	skipc
  3097  0631  2E33               	goto	u5501
  3098  0632  2E34               	goto	u5500
  3099  0633                     u5501:
  3100  0633  2E3B               	goto	l3300
  3101  0634                     u5500:
  3102  0634                     l3298:
  3103                           
  3104                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3105  0634  3008               	movlw	8
  3106  0635  1683               	bsf	3,5	;RP0=1, select bank1
  3107  0636  1303               	bcf	3,6	;RP1=0, select bank1
  3108  0637  00A5               	movwf	??_sprintf^(0+128)
  3109  0638  0825               	movf	??_sprintf^(0+128),w
  3110  0639  00C2               	movwf	sprintf@c^(0+128)
  3111  063A  2E41               	goto	l335
  3112  063B                     l3300:
  3113                           
  3114                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3115  063B  1683               	bsf	3,5	;RP0=1, select bank1
  3116  063C  1303               	bcf	3,6	;RP1=0, select bank1
  3117  063D  083C               	movf	sprintf@prec^(0+128),w
  3118  063E  00A5               	movwf	??_sprintf^(0+128)
  3119  063F  0825               	movf	??_sprintf^(0+128),w
  3120  0640  00C2               	movwf	sprintf@c^(0+128)
  3121  0641                     l335:
  3122                           
  3123                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3124  0641  0842               	movf	sprintf@c^(0+128),w
  3125  0642  00A5               	movwf	??_sprintf^(0+128)
  3126  0643  01A6               	clrf	(??_sprintf^(0+128)+1)
  3127  0644  0825               	movf	??_sprintf^(0+128),w
  3128  0645  02BC               	subwf	sprintf@prec^(0+128),f
  3129  0646  0826               	movf	(??_sprintf+1)^(0+128),w
  3130  0647  1C03               	skipc
  3131  0648  03BD               	decf	(sprintf@prec+1)^(0+128),f
  3132  0649  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  3133  064A                     l3302:
  3134                           
  3135                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3136  064A  0842               	movf	sprintf@c^(0+128),w
  3137  064B  1903               	btfsc	3,2
  3138  064C  2E4E               	goto	u5511
  3139  064D  2E4F               	goto	u5510
  3140  064E                     u5511:
  3141  064E  2E5A               	goto	l3308
  3142  064F                     u5510:
  3143  064F                     l3304:
  3144                           
  3145                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3146  064F  302E               	movlw	46
  3147  0650  00A5               	movwf	??_sprintf^(0+128)
  3148  0651  083B               	movf	sprintf@sp^(0+128),w
  3149  0652  0084               	movwf	4
  3150  0653  0825               	movf	??_sprintf^(0+128),w
  3151  0654  1383               	bcf	3,7	;select IRP bank0
  3152  0655  0080               	movwf	0
  3153  0656                     l3306:
  3154  0656  3001               	movlw	1
  3155  0657  00A5               	movwf	??_sprintf^(0+128)
  3156  0658  0825               	movf	??_sprintf^(0+128),w
  3157  0659  07BB               	addwf	sprintf@sp^(0+128),f
  3158  065A                     l3308:
  3159                           
  3160                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3161  065A  0842               	movf	sprintf@c^(0+128),w
  3162  065B  120A  158A  2140  120A  118A  	fcall	_scale
  3163  0660  1283               	bcf	3,5	;RP0=0, select bank0
  3164  0661  1303               	bcf	3,6	;RP1=0, select bank0
  3165  0662  0841               	movf	?_scale+3,w
  3166  0663  1683               	bsf	3,5	;RP0=1, select bank1
  3167  0664  1303               	bcf	3,6	;RP1=0, select bank1
  3168  0665  00AD               	movwf	(_sprintf$1032+3)^(0+128)
  3169  0666  1283               	bcf	3,5	;RP0=0, select bank0
  3170  0667  1303               	bcf	3,6	;RP1=0, select bank0
  3171  0668  0840               	movf	?_scale+2,w
  3172  0669  1683               	bsf	3,5	;RP0=1, select bank1
  3173  066A  1303               	bcf	3,6	;RP1=0, select bank1
  3174  066B  00AC               	movwf	(_sprintf$1032+2)^(0+128)
  3175  066C  1283               	bcf	3,5	;RP0=0, select bank0
  3176  066D  1303               	bcf	3,6	;RP1=0, select bank0
  3177  066E  083F               	movf	?_scale+1,w
  3178  066F  1683               	bsf	3,5	;RP0=1, select bank1
  3179  0670  1303               	bcf	3,6	;RP1=0, select bank1
  3180  0671  00AB               	movwf	(_sprintf$1032+1)^(0+128)
  3181  0672  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0673  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0674  083E               	movf	?_scale,w
  3184  0675  1683               	bsf	3,5	;RP0=1, select bank1
  3185  0676  1303               	bcf	3,6	;RP1=0, select bank1
  3186  0677  00AA               	movwf	_sprintf$1032^(0+128)
  3187  0678                     l3310:
  3188                           
  3189                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3190  0678  082D               	movf	(_sprintf$1032+3)^(0+128),w
  3191  0679  1283               	bcf	3,5	;RP0=0, select bank0
  3192  067A  1303               	bcf	3,6	;RP1=0, select bank0
  3193  067B  00AB               	movwf	___flmul@a+3
  3194  067C  1683               	bsf	3,5	;RP0=1, select bank1
  3195  067D  1303               	bcf	3,6	;RP1=0, select bank1
  3196  067E  082C               	movf	(_sprintf$1032+2)^(0+128),w
  3197  067F  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0680  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0681  00AA               	movwf	___flmul@a+2
  3200  0682  1683               	bsf	3,5	;RP0=1, select bank1
  3201  0683  1303               	bcf	3,6	;RP1=0, select bank1
  3202  0684  082B               	movf	(_sprintf$1032+1)^(0+128),w
  3203  0685  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0686  1303               	bcf	3,6	;RP1=0, select bank0
  3205  0687  00A9               	movwf	___flmul@a+1
  3206  0688  1683               	bsf	3,5	;RP0=1, select bank1
  3207  0689  1303               	bcf	3,6	;RP1=0, select bank1
  3208  068A  082A               	movf	_sprintf$1032^(0+128),w
  3209  068B  1283               	bcf	3,5	;RP0=0, select bank0
  3210  068C  1303               	bcf	3,6	;RP1=0, select bank0
  3211  068D  00A8               	movwf	___flmul@a
  3212  068E  1683               	bsf	3,5	;RP0=1, select bank1
  3213  068F  1303               	bcf	3,6	;RP1=0, select bank1
  3214  0690  0841               	movf	(sprintf@fval+3)^(0+128),w
  3215  0691  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0692  1303               	bcf	3,6	;RP1=0, select bank0
  3217  0693  00A7               	movwf	___flmul@b+3
  3218  0694  1683               	bsf	3,5	;RP0=1, select bank1
  3219  0695  1303               	bcf	3,6	;RP1=0, select bank1
  3220  0696  0840               	movf	(sprintf@fval+2)^(0+128),w
  3221  0697  1283               	bcf	3,5	;RP0=0, select bank0
  3222  0698  1303               	bcf	3,6	;RP1=0, select bank0
  3223  0699  00A6               	movwf	___flmul@b+2
  3224  069A  1683               	bsf	3,5	;RP0=1, select bank1
  3225  069B  1303               	bcf	3,6	;RP1=0, select bank1
  3226  069C  083F               	movf	(sprintf@fval+1)^(0+128),w
  3227  069D  1283               	bcf	3,5	;RP0=0, select bank0
  3228  069E  1303               	bcf	3,6	;RP1=0, select bank0
  3229  069F  00A5               	movwf	___flmul@b+1
  3230  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  3231  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  3232  06A2  083E               	movf	sprintf@fval^(0+128),w
  3233  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  3234  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  3235  06A5  00A4               	movwf	___flmul@b
  3236  06A6  120A  158A  249F  120A  118A  	fcall	___flmul
  3237  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  3238  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  3239  06AD  0827               	movf	?___flmul+3,w
  3240  06AE  00D4               	movwf	___fltol@f1+3
  3241  06AF  0826               	movf	?___flmul+2,w
  3242  06B0  00D3               	movwf	___fltol@f1+2
  3243  06B1  0825               	movf	?___flmul+1,w
  3244  06B2  00D2               	movwf	___fltol@f1+1
  3245  06B3  0824               	movf	?___flmul,w
  3246  06B4  00D1               	movwf	___fltol@f1
  3247  06B5  120A  158A  2006  120A  118A  	fcall	___fltol
  3248  06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3249  06BB  1303               	bcf	3,6	;RP1=0, select bank0
  3250  06BC  0854               	movf	?___fltol+3,w
  3251  06BD  1683               	bsf	3,5	;RP0=1, select bank1
  3252  06BE  1303               	bcf	3,6	;RP1=0, select bank1
  3253  06BF  00B4               	movwf	(sprintf@val+3)^(0+128)
  3254  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  3255  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  3256  06C2  0853               	movf	?___fltol+2,w
  3257  06C3  1683               	bsf	3,5	;RP0=1, select bank1
  3258  06C4  1303               	bcf	3,6	;RP1=0, select bank1
  3259  06C5  00B3               	movwf	(sprintf@val+2)^(0+128)
  3260  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  3261  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  3262  06C8  0852               	movf	?___fltol+1,w
  3263  06C9  1683               	bsf	3,5	;RP0=1, select bank1
  3264  06CA  1303               	bcf	3,6	;RP1=0, select bank1
  3265  06CB  00B2               	movwf	(sprintf@val+1)^(0+128)
  3266  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  3267  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  3268  06CE  0851               	movf	?___fltol,w
  3269  06CF  1683               	bsf	3,5	;RP0=1, select bank1
  3270  06D0  1303               	bcf	3,6	;RP1=0, select bank1
  3271  06D1  00B1               	movwf	sprintf@val^(0+128)
  3272                           
  3273                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3274  06D2  2F74               	goto	l3320
  3275  06D3                     l3312:
  3276                           
  3277                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3278  06D3  0842               	movf	sprintf@c^(0+128),w
  3279  06D4  00A5               	movwf	??_sprintf^(0+128)
  3280  06D5  3001               	movlw	1
  3281  06D6                     u5525:
  3282  06D6  1003               	clrc
  3283  06D7  0DA5               	rlf	??_sprintf^(0+128),f
  3284  06D8  3EFF               	addlw	-1
  3285  06D9  1D03               	skipz
  3286  06DA  2ED6               	goto	u5525
  3287  06DB  1003               	clrc
  3288  06DC  0D25               	rlf	??_sprintf^(0+128),w
  3289  06DD  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3290  06DE  0084               	movwf	4
  3291  06DF  160A  118A  200A  120A  118A  	fcall	stringdir
  3292  06E4  00F0               	movwf	___lldiv@divisor
  3293  06E5  160A  118A  200A  120A  118A  	fcall	stringdir
  3294  06EA  00F1               	movwf	___lldiv@divisor+1
  3295  06EB  160A  118A  200A  120A  118A  	fcall	stringdir
  3296  06F0  00F2               	movwf	___lldiv@divisor+2
  3297  06F1  160A  118A  200A  120A  118A  	fcall	stringdir
  3298  06F6  00F3               	movwf	___lldiv@divisor+3
  3299  06F7  0834               	movf	(sprintf@val+3)^(0+128),w
  3300  06F8  00F7               	movwf	___lldiv@dividend+3
  3301  06F9  0833               	movf	(sprintf@val+2)^(0+128),w
  3302  06FA  00F6               	movwf	___lldiv@dividend+2
  3303  06FB  0832               	movf	(sprintf@val+1)^(0+128),w
  3304  06FC  00F5               	movwf	___lldiv@dividend+1
  3305  06FD  0831               	movf	sprintf@val^(0+128),w
  3306  06FE  00F4               	movwf	___lldiv@dividend
  3307  06FF  160A  118A  20EE  120A  118A  	fcall	___lldiv
  3308  0704  0873               	movf	?___lldiv+3,w
  3309  0705  1683               	bsf	3,5	;RP0=1, select bank1
  3310  0706  1303               	bcf	3,6	;RP1=0, select bank1
  3311  0707  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3312  0708  0872               	movf	?___lldiv+2,w
  3313  0709  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3314  070A  0871               	movf	?___lldiv+1,w
  3315  070B  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3316  070C  0870               	movf	?___lldiv,w
  3317  070D  00B7               	movwf	sprintf@tmpval^(0+128)
  3318  070E                     l3314:
  3319                           
  3320                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3321  070E  3000               	movlw	0
  3322  070F  00F3               	movwf	___llmod@divisor+3
  3323  0710  3000               	movlw	0
  3324  0711  00F2               	movwf	___llmod@divisor+2
  3325  0712  3000               	movlw	0
  3326  0713  00F1               	movwf	___llmod@divisor+1
  3327  0714  300A               	movlw	10
  3328  0715  00F0               	movwf	___llmod@divisor
  3329  0716  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3330  0717  00F7               	movwf	___llmod@dividend+3
  3331  0718  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3332  0719  00F6               	movwf	___llmod@dividend+2
  3333  071A  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3334  071B  00F5               	movwf	___llmod@dividend+1
  3335  071C  0837               	movf	sprintf@tmpval^(0+128),w
  3336  071D  00F4               	movwf	___llmod@dividend
  3337  071E  160A  158A  26F7  120A  118A  	fcall	___llmod
  3338  0723  0873               	movf	?___llmod+3,w
  3339  0724  1683               	bsf	3,5	;RP0=1, select bank1
  3340  0725  1303               	bcf	3,6	;RP1=0, select bank1
  3341  0726  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3342  0727  0872               	movf	?___llmod+2,w
  3343  0728  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3344  0729  0871               	movf	?___llmod+1,w
  3345  072A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3346  072B  0870               	movf	?___llmod,w
  3347  072C  00B7               	movwf	sprintf@tmpval^(0+128)
  3348  072D                     l3316:
  3349                           
  3350                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3351  072D  0837               	movf	sprintf@tmpval^(0+128),w
  3352  072E  3E30               	addlw	48
  3353  072F  00A5               	movwf	??_sprintf^(0+128)
  3354  0730  083B               	movf	sprintf@sp^(0+128),w
  3355  0731  0084               	movwf	4
  3356  0732  0825               	movf	??_sprintf^(0+128),w
  3357  0733  1383               	bcf	3,7	;select IRP bank0
  3358  0734  0080               	movwf	0
  3359  0735  3001               	movlw	1
  3360  0736  00A5               	movwf	??_sprintf^(0+128)
  3361  0737  0825               	movf	??_sprintf^(0+128),w
  3362  0738  07BB               	addwf	sprintf@sp^(0+128),f
  3363  0739                     l3318:
  3364                           
  3365                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3366  0739  0842               	movf	sprintf@c^(0+128),w
  3367  073A  00A5               	movwf	??_sprintf^(0+128)
  3368  073B  3001               	movlw	1
  3369  073C                     u5535:
  3370  073C  1003               	clrc
  3371  073D  0DA5               	rlf	??_sprintf^(0+128),f
  3372  073E  3EFF               	addlw	-1
  3373  073F  1D03               	skipz
  3374  0740  2F3C               	goto	u5535
  3375  0741  1003               	clrc
  3376  0742  0D25               	rlf	??_sprintf^(0+128),w
  3377  0743  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3378  0744  0084               	movwf	4
  3379  0745  160A  118A  200A  120A  118A  	fcall	stringdir
  3380  074A  00F0               	movwf	___llmod@divisor
  3381  074B  160A  118A  200A  120A  118A  	fcall	stringdir
  3382  0750  00F1               	movwf	___llmod@divisor+1
  3383  0751  160A  118A  200A  120A  118A  	fcall	stringdir
  3384  0756  00F2               	movwf	___llmod@divisor+2
  3385  0757  160A  118A  200A  120A  118A  	fcall	stringdir
  3386  075C  00F3               	movwf	___llmod@divisor+3
  3387  075D  0834               	movf	(sprintf@val+3)^(0+128),w
  3388  075E  00F7               	movwf	___llmod@dividend+3
  3389  075F  0833               	movf	(sprintf@val+2)^(0+128),w
  3390  0760  00F6               	movwf	___llmod@dividend+2
  3391  0761  0832               	movf	(sprintf@val+1)^(0+128),w
  3392  0762  00F5               	movwf	___llmod@dividend+1
  3393  0763  0831               	movf	sprintf@val^(0+128),w
  3394  0764  00F4               	movwf	___llmod@dividend
  3395  0765  160A  158A  26F7  120A  118A  	fcall	___llmod
  3396  076A  0873               	movf	?___llmod+3,w
  3397  076B  1683               	bsf	3,5	;RP0=1, select bank1
  3398  076C  1303               	bcf	3,6	;RP1=0, select bank1
  3399  076D  00B4               	movwf	(sprintf@val+3)^(0+128)
  3400  076E  0872               	movf	?___llmod+2,w
  3401  076F  00B3               	movwf	(sprintf@val+2)^(0+128)
  3402  0770  0871               	movf	?___llmod+1,w
  3403  0771  00B2               	movwf	(sprintf@val+1)^(0+128)
  3404  0772  0870               	movf	?___llmod,w
  3405  0773  00B1               	movwf	sprintf@val^(0+128)
  3406  0774                     l3320:
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3409  0774  3001               	movlw	1
  3410  0775  02C2               	subwf	sprintf@c^(0+128),f
  3411  0776  0A42               	incf	sprintf@c^(0+128),w
  3412  0777  1D03               	btfss	3,2
  3413  0778  2F7A               	goto	u5541
  3414  0779  2F7B               	goto	u5540
  3415  077A                     u5541:
  3416  077A  2ED3               	goto	l3312
  3417  077B                     u5540:
  3418  077B  2F8D               	goto	l3328
  3419  077C                     l3322:
  3420                           
  3421                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3422  077C  3030               	movlw	48
  3423  077D  00A5               	movwf	??_sprintf^(0+128)
  3424  077E  083B               	movf	sprintf@sp^(0+128),w
  3425  077F  0084               	movwf	4
  3426  0780  0825               	movf	??_sprintf^(0+128),w
  3427  0781  1383               	bcf	3,7	;select IRP bank0
  3428  0782  0080               	movwf	0
  3429  0783                     l3324:
  3430  0783  3001               	movlw	1
  3431  0784  00A5               	movwf	??_sprintf^(0+128)
  3432  0785  0825               	movf	??_sprintf^(0+128),w
  3433  0786  07BB               	addwf	sprintf@sp^(0+128),f
  3434  0787                     l3326:
  3435                           
  3436                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3437  0787  30FF               	movlw	255
  3438  0788  07BC               	addwf	sprintf@prec^(0+128),f
  3439  0789  1803               	skipnc
  3440  078A  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3441  078B  30FF               	movlw	255
  3442  078C  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3443  078D                     l3328:
  3444                           
  3445                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3446  078D  083C               	movf	sprintf@prec^(0+128),w
  3447  078E  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3448  078F  1D03               	btfss	3,2
  3449  0790  2F92               	goto	u5551
  3450  0791  2F93               	goto	u5550
  3451  0792                     u5551:
  3452  0792  2F7C               	goto	l3322
  3453  0793                     u5550:
  3454  0793  2FD9               	goto	l3348
  3455  0794                     l3330:
  3456                           
  3457                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3458  0794  083C               	movf	sprintf@prec^(0+128),w
  3459  0795  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  3460  0796  1D03               	btfss	3,2
  3461  0797  2F99               	goto	u5561
  3462  0798  2F9A               	goto	u5560
  3463  0799                     u5561:
  3464  0799  2FA8               	goto	l343
  3465  079A                     u5560:
  3466  079A                     l3332:
  3467  079A  0834               	movf	(sprintf@val+3)^(0+128),w
  3468  079B  0433               	iorwf	(sprintf@val+2)^(0+128),w
  3469  079C  0432               	iorwf	(sprintf@val+1)^(0+128),w
  3470  079D  0431               	iorwf	sprintf@val^(0+128),w
  3471  079E  1D03               	skipz
  3472  079F  2FA1               	goto	u5571
  3473  07A0  2FA2               	goto	u5570
  3474  07A1                     u5571:
  3475  07A1  2FA8               	goto	l343
  3476  07A2                     u5570:
  3477  07A2                     l3334:
  3478                           
  3479                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3480  07A2  3001               	movlw	1
  3481  07A3  07BC               	addwf	sprintf@prec^(0+128),f
  3482  07A4  1803               	skipnc
  3483  07A5  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3484  07A6  3000               	movlw	0
  3485  07A7  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3486  07A8                     l343:
  3487                           
  3488                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3489  07A8  083D               	movf	(sprintf@prec+1)^(0+128),w
  3490  07A9  3A80               	xorlw	128
  3491  07AA  3C80               	sublw	128
  3492  07AB  1D03               	skipz
  3493  07AC  2FAF               	goto	u5585
  3494  07AD  083C               	movf	sprintf@prec^(0+128),w
  3495  07AE  0242               	subwf	sprintf@c^(0+128),w
  3496  07AF                     u5585:
  3497  07AF  1803               	skipnc
  3498  07B0  2FB2               	goto	u5581
  3499  07B1  2FB3               	goto	u5580
  3500  07B2                     u5581:
  3501  07B2  2FB4               	goto	l3338
  3502  07B3                     u5580:
  3503  07B3                     l3336:
  3504  07B3  2FC3               	goto	l3342
  3505  07B4                     l3338:
  3506  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  3507  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  3508  07B6  083D               	movf	(sprintf@prec+1)^(0+128),w
  3509  07B7  3A80               	xorlw	128
  3510  07B8  00A5               	movwf	??_sprintf^(0+128)
  3511  07B9  3080               	movlw	128
  3512  07BA  0225               	subwf	??_sprintf^(0+128),w
  3513  07BB  1D03               	skipz
  3514  07BC  2FBF               	goto	u5595
  3515  07BD  0842               	movf	sprintf@c^(0+128),w
  3516  07BE  023C               	subwf	sprintf@prec^(0+128),w
  3517  07BF                     u5595:
  3518  07BF  1803               	skipnc
  3519  07C0  2FC2               	goto	u5591
  3520  07C1  2FC3               	goto	u5590
  3521  07C2                     u5591:
  3522  07C2  2FC3               	goto	l3342
  3523  07C3                     u5590:
  3524  07C3                     l3340:
  3525  07C3                     l3342:
  3526                           
  3527                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3528  07C3  3003               	movlw	3
  3529  07C4  1683               	bsf	3,5	;RP0=1, select bank1
  3530  07C5  1303               	bcf	3,6	;RP1=0, select bank1
  3531  07C6  052F               	andwf	sprintf@flag^(0+128),w
  3532  07C7  00A5               	movwf	??_sprintf^(0+128)
  3533  07C8  3000               	movlw	0
  3534  07C9  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3535  07CA  00A6               	movwf	(??_sprintf+1)^(0+128)
  3536  07CB  0825               	movf	??_sprintf^(0+128),w
  3537  07CC  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3538  07CD  1903               	btfsc	3,2
  3539  07CE  2FD0               	goto	u5601
  3540  07CF  2FD1               	goto	u5600
  3541  07D0                     u5601:
  3542  07D0  2FD9               	goto	l3348
  3543  07D1                     u5600:
  3544  07D1                     l3344:
  3545                           
  3546                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3547  07D1  302D               	movlw	45
  3548  07D2  00A5               	movwf	??_sprintf^(0+128)
  3549  07D3  083B               	movf	sprintf@sp^(0+128),w
  3550  07D4  0084               	movwf	4
  3551  07D5  0825               	movf	??_sprintf^(0+128),w
  3552  07D6  1383               	bcf	3,7	;select IRP bank0
  3553  07D7  0080               	movwf	0
  3554  07D8  29AD               	goto	l3160
  3555  07D9                     l3348:
  3556                           
  3557                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3558  07D9  3001               	movlw	1
  3559  07DA  07A0               	addwf	sprintf@f^(0+128),f
  3560  07DB  30FF               	movlw	-1
  3561  07DC  0720               	addwf	sprintf@f^(0+128),w
  3562  07DD  0084               	movwf	4
  3563  07DE  160A  118A  200A  120A  118A  	fcall	stringdir
  3564  07E3  00A5               	movwf	??_sprintf^(0+128)
  3565  07E4  0825               	movf	??_sprintf^(0+128),w
  3566  07E5  00C2               	movwf	sprintf@c^(0+128)
  3567  07E6  0842               	movf	sprintf@c^(0+128),w
  3568  07E7  1D03               	btfss	3,2
  3569  07E8  2FEA               	goto	u5611
  3570  07E9  2FEB               	goto	u5610
  3571  07EA                     u5611:
  3572  07EA  29A0               	goto	l3156
  3573  07EB                     u5610:
  3574  07EB                     l3350:
  3575                           
  3576                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3577  07EB  083B               	movf	sprintf@sp^(0+128),w
  3578  07EC  0084               	movwf	4
  3579  07ED  1383               	bcf	3,7	;select IRP bank0
  3580  07EE  0180               	clrf	0
  3581  07EF                     l349:
  3582  07EF  0008               	return
  3583  07F0                     __end_of_sprintf:
  3584                           
  3585                           	psect	text2
  3586  0940                     __ptext2:	
  3587 ;; *************** function _scale *****************
  3588 ;; Defined at:
  3589 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  scl             1    wreg     char 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  scl             1   48[BANK0 ] char 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  4   30[BANK0 ] char 
  3596 ;; Registers used:
  3597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3603 ;;      Params:         0       4       0       0       0
  3604 ;;      Locals:         0       5       0       0       0
  3605 ;;      Temps:          0      10       0       0       0
  3606 ;;      Totals:         0      19       0       0       0
  3607 ;;Total ram usage:       19 bytes
  3608 ;; Hardware stack levels used: 1
  3609 ;; Hardware stack levels required when called: 2
  3610 ;; This function calls:
  3611 ;;		___awdiv
  3612 ;;		___awmod
  3613 ;;		___flmul
  3614 ;; This function is called by:
  3615 ;;		_sprintf
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619  0940                     _scale:	
  3620                           ;psect for function _scale
  3621                           
  3622                           
  3623                           ;incstack = 0
  3624                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3625                           ;scale@scl stored from wreg
  3626  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3627  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3628  0942  00D0               	movwf	scale@scl
  3629  0943                     l2764:
  3630                           
  3631                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3632  0943  1FD0               	btfss	scale@scl,7
  3633  0944  2946               	goto	u4251
  3634  0945  2947               	goto	u4250
  3635  0946                     u4251:
  3636  0946  2AF4               	goto	l2786
  3637  0947                     u4250:
  3638  0947                     l2766:
  3639                           
  3640                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3641  0947  09D0               	comf	scale@scl,f
  3642  0948  0AD0               	incf	scale@scl,f
  3643  0949                     l2768:
  3644                           
  3645                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3646  0949  0850               	movf	scale@scl,w
  3647  094A  3A80               	xorlw	128
  3648  094B  3E12               	addlw	-238
  3649  094C  1C03               	skipc
  3650  094D  294F               	goto	u4261
  3651  094E  2950               	goto	u4260
  3652  094F                     u4261:
  3653  094F  2A38               	goto	l2776
  3654  0950                     u4260:
  3655  0950                     l2770:
  3656                           
  3657                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3658  0950  300A               	movlw	10
  3659  0951  00F7               	movwf	___awdiv@divisor
  3660  0952  3000               	movlw	0
  3661  0953  00F8               	movwf	___awdiv@divisor+1
  3662  0954  0850               	movf	scale@scl,w
  3663  0955  00F2               	movwf	___awmod@dividend
  3664  0956  01F3               	clrf	___awmod@dividend+1
  3665  0957  1BF2               	btfsc	___awmod@dividend,7
  3666  0958  03F3               	decf	___awmod@dividend+1,f
  3667  0959  3064               	movlw	100
  3668  095A  00F0               	movwf	___awmod@divisor
  3669  095B  3000               	movlw	0
  3670  095C  00F1               	movwf	___awmod@divisor+1
  3671  095D  160A  158A  274B  120A  158A  	fcall	___awmod
  3672  0962  0871               	movf	?___awmod+1,w
  3673  0963  00FA               	movwf	___awdiv@dividend+1
  3674  0964  0870               	movf	?___awmod,w
  3675  0965  00F9               	movwf	___awdiv@dividend
  3676  0966  120A  118A  200C  120A  158A  	fcall	___awdiv
  3677  096B  0877               	movf	?___awdiv,w
  3678  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3679  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3680  096E  00C2               	movwf	??_scale
  3681  096F  3001               	movlw	1
  3682  0970                     u4275:
  3683  0970  1003               	clrc
  3684  0971  0DC2               	rlf	??_scale,f
  3685  0972  3EFF               	addlw	-1
  3686  0973  1D03               	skipz
  3687  0974  2970               	goto	u4275
  3688  0975  1003               	clrc
  3689  0976  0D42               	rlf	??_scale,w
  3690  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3691  0978  0084               	movwf	4
  3692  0979  160A  118A  200A  120A  158A  	fcall	stringdir
  3693  097E  00C3               	movwf	??_scale+1
  3694  097F  160A  118A  200A  120A  158A  	fcall	stringdir
  3695  0984  00C4               	movwf	??_scale+2
  3696  0985  160A  118A  200A  120A  158A  	fcall	stringdir
  3697  098A  00C5               	movwf	??_scale+3
  3698  098B  160A  118A  200A  120A  158A  	fcall	stringdir
  3699  0990  00C6               	movwf	??_scale+4
  3700  0991  0846               	movf	??_scale+4,w
  3701  0992  00A7               	movwf	___flmul@b+3
  3702  0993  0845               	movf	??_scale+3,w
  3703  0994  00A6               	movwf	___flmul@b+2
  3704  0995  0844               	movf	??_scale+2,w
  3705  0996  00A5               	movwf	___flmul@b+1
  3706  0997  0843               	movf	??_scale+1,w
  3707  0998  00A4               	movwf	___flmul@b
  3708  0999  3064               	movlw	100
  3709  099A  00F7               	movwf	___awdiv@divisor
  3710  099B  3000               	movlw	0
  3711  099C  00F8               	movwf	___awdiv@divisor+1
  3712  099D  0850               	movf	scale@scl,w
  3713  099E  00F9               	movwf	___awdiv@dividend
  3714  099F  01FA               	clrf	___awdiv@dividend+1
  3715  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3716  09A1  03FA               	decf	___awdiv@dividend+1,f
  3717  09A2  120A  118A  200C  120A  158A  	fcall	___awdiv
  3718  09A7  0877               	movf	?___awdiv,w
  3719  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3720  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3721  09AA  00C7               	movwf	??_scale+5
  3722  09AB  3001               	movlw	1
  3723  09AC                     u4285:
  3724  09AC  1003               	clrc
  3725  09AD  0DC7               	rlf	??_scale+5,f
  3726  09AE  3EFF               	addlw	-1
  3727  09AF  1D03               	skipz
  3728  09B0  29AC               	goto	u4285
  3729  09B1  1003               	clrc
  3730  09B2  0D47               	rlf	??_scale+5,w
  3731  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3732  09B4  0084               	movwf	4
  3733  09B5  160A  118A  200A  120A  158A  	fcall	stringdir
  3734  09BA  00C8               	movwf	??_scale+6
  3735  09BB  160A  118A  200A  120A  158A  	fcall	stringdir
  3736  09C0  00C9               	movwf	??_scale+7
  3737  09C1  160A  118A  200A  120A  158A  	fcall	stringdir
  3738  09C6  00CA               	movwf	??_scale+8
  3739  09C7  160A  118A  200A  120A  158A  	fcall	stringdir
  3740  09CC  00CB               	movwf	??_scale+9
  3741  09CD  084B               	movf	??_scale+9,w
  3742  09CE  00AB               	movwf	___flmul@a+3
  3743  09CF  084A               	movf	??_scale+8,w
  3744  09D0  00AA               	movwf	___flmul@a+2
  3745  09D1  0849               	movf	??_scale+7,w
  3746  09D2  00A9               	movwf	___flmul@a+1
  3747  09D3  0848               	movf	??_scale+6,w
  3748  09D4  00A8               	movwf	___flmul@a
  3749  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  3750  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3751  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3752  09DC  0827               	movf	?___flmul+3,w
  3753  09DD  00CF               	movwf	_scale$1031+3
  3754  09DE  0826               	movf	?___flmul+2,w
  3755  09DF  00CE               	movwf	_scale$1031+2
  3756  09E0  0825               	movf	?___flmul+1,w
  3757  09E1  00CD               	movwf	_scale$1031+1
  3758  09E2  0824               	movf	?___flmul,w
  3759  09E3  00CC               	movwf	_scale$1031
  3760                           
  3761                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3762  09E4  300A               	movlw	10
  3763  09E5  00F0               	movwf	___awmod@divisor
  3764  09E6  3000               	movlw	0
  3765  09E7  00F1               	movwf	___awmod@divisor+1
  3766  09E8  0850               	movf	scale@scl,w
  3767  09E9  00F2               	movwf	___awmod@dividend
  3768  09EA  01F3               	clrf	___awmod@dividend+1
  3769  09EB  1BF2               	btfsc	___awmod@dividend,7
  3770  09EC  03F3               	decf	___awmod@dividend+1,f
  3771  09ED  160A  158A  274B  120A  158A  	fcall	___awmod
  3772  09F2  0870               	movf	?___awmod,w
  3773  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3774  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3775  09F5  00C2               	movwf	??_scale
  3776  09F6  3001               	movlw	1
  3777  09F7                     u4295:
  3778  09F7  1003               	clrc
  3779  09F8  0DC2               	rlf	??_scale,f
  3780  09F9  3EFF               	addlw	-1
  3781  09FA  1D03               	skipz
  3782  09FB  29F7               	goto	u4295
  3783  09FC  1003               	clrc
  3784  09FD  0D42               	rlf	??_scale,w
  3785  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3786  09FF  0084               	movwf	4
  3787  0A00  160A  118A  200A  120A  158A  	fcall	stringdir
  3788  0A05  00C3               	movwf	??_scale+1
  3789  0A06  160A  118A  200A  120A  158A  	fcall	stringdir
  3790  0A0B  00C4               	movwf	??_scale+2
  3791  0A0C  160A  118A  200A  120A  158A  	fcall	stringdir
  3792  0A11  00C5               	movwf	??_scale+3
  3793  0A12  160A  118A  200A  120A  158A  	fcall	stringdir
  3794  0A17  00C6               	movwf	??_scale+4
  3795  0A18  0846               	movf	??_scale+4,w
  3796  0A19  00A7               	movwf	___flmul@b+3
  3797  0A1A  0845               	movf	??_scale+3,w
  3798  0A1B  00A6               	movwf	___flmul@b+2
  3799  0A1C  0844               	movf	??_scale+2,w
  3800  0A1D  00A5               	movwf	___flmul@b+1
  3801  0A1E  0843               	movf	??_scale+1,w
  3802  0A1F  00A4               	movwf	___flmul@b
  3803  0A20  084F               	movf	_scale$1031+3,w
  3804  0A21  00AB               	movwf	___flmul@a+3
  3805  0A22  084E               	movf	_scale$1031+2,w
  3806  0A23  00AA               	movwf	___flmul@a+2
  3807  0A24  084D               	movf	_scale$1031+1,w
  3808  0A25  00A9               	movwf	___flmul@a+1
  3809  0A26  084C               	movf	_scale$1031,w
  3810  0A27  00A8               	movwf	___flmul@a
  3811  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3812  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3813  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3814  0A2F  0827               	movf	?___flmul+3,w
  3815  0A30  00C1               	movwf	?_scale+3
  3816  0A31  0826               	movf	?___flmul+2,w
  3817  0A32  00C0               	movwf	?_scale+2
  3818  0A33  0825               	movf	?___flmul+1,w
  3819  0A34  00BF               	movwf	?_scale+1
  3820  0A35  0824               	movf	?___flmul,w
  3821  0A36  00BE               	movwf	?_scale
  3822  0A37  2C9E               	goto	l283
  3823  0A38                     l2776:
  3824  0A38  0850               	movf	scale@scl,w
  3825  0A39  3A80               	xorlw	128
  3826  0A3A  3E75               	addlw	-139
  3827  0A3B  1C03               	skipc
  3828  0A3C  2A3E               	goto	u4301
  3829  0A3D  2A3F               	goto	u4300
  3830  0A3E                     u4301:
  3831  0A3E  2AC7               	goto	l2782
  3832  0A3F                     u4300:
  3833  0A3F                     l2778:
  3834                           
  3835                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3836  0A3F  300A               	movlw	10
  3837  0A40  00F0               	movwf	___awmod@divisor
  3838  0A41  3000               	movlw	0
  3839  0A42  00F1               	movwf	___awmod@divisor+1
  3840  0A43  0850               	movf	scale@scl,w
  3841  0A44  00F2               	movwf	___awmod@dividend
  3842  0A45  01F3               	clrf	___awmod@dividend+1
  3843  0A46  1BF2               	btfsc	___awmod@dividend,7
  3844  0A47  03F3               	decf	___awmod@dividend+1,f
  3845  0A48  160A  158A  274B  120A  158A  	fcall	___awmod
  3846  0A4D  0870               	movf	?___awmod,w
  3847  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3848  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3849  0A50  00C2               	movwf	??_scale
  3850  0A51  3001               	movlw	1
  3851  0A52                     u4315:
  3852  0A52  1003               	clrc
  3853  0A53  0DC2               	rlf	??_scale,f
  3854  0A54  3EFF               	addlw	-1
  3855  0A55  1D03               	skipz
  3856  0A56  2A52               	goto	u4315
  3857  0A57  1003               	clrc
  3858  0A58  0D42               	rlf	??_scale,w
  3859  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3860  0A5A  0084               	movwf	4
  3861  0A5B  160A  118A  200A  120A  158A  	fcall	stringdir
  3862  0A60  00C3               	movwf	??_scale+1
  3863  0A61  160A  118A  200A  120A  158A  	fcall	stringdir
  3864  0A66  00C4               	movwf	??_scale+2
  3865  0A67  160A  118A  200A  120A  158A  	fcall	stringdir
  3866  0A6C  00C5               	movwf	??_scale+3
  3867  0A6D  160A  118A  200A  120A  158A  	fcall	stringdir
  3868  0A72  00C6               	movwf	??_scale+4
  3869  0A73  0846               	movf	??_scale+4,w
  3870  0A74  00A7               	movwf	___flmul@b+3
  3871  0A75  0845               	movf	??_scale+3,w
  3872  0A76  00A6               	movwf	___flmul@b+2
  3873  0A77  0844               	movf	??_scale+2,w
  3874  0A78  00A5               	movwf	___flmul@b+1
  3875  0A79  0843               	movf	??_scale+1,w
  3876  0A7A  00A4               	movwf	___flmul@b
  3877  0A7B  300A               	movlw	10
  3878  0A7C  00F7               	movwf	___awdiv@divisor
  3879  0A7D  3000               	movlw	0
  3880  0A7E  00F8               	movwf	___awdiv@divisor+1
  3881  0A7F  0850               	movf	scale@scl,w
  3882  0A80  00F9               	movwf	___awdiv@dividend
  3883  0A81  01FA               	clrf	___awdiv@dividend+1
  3884  0A82  1BF9               	btfsc	___awdiv@dividend,7
  3885  0A83  03FA               	decf	___awdiv@dividend+1,f
  3886  0A84  120A  118A  200C  120A  158A  	fcall	___awdiv
  3887  0A89  0877               	movf	?___awdiv,w
  3888  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  3889  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  3890  0A8C  00C7               	movwf	??_scale+5
  3891  0A8D  3001               	movlw	1
  3892  0A8E                     u4325:
  3893  0A8E  1003               	clrc
  3894  0A8F  0DC7               	rlf	??_scale+5,f
  3895  0A90  3EFF               	addlw	-1
  3896  0A91  1D03               	skipz
  3897  0A92  2A8E               	goto	u4325
  3898  0A93  1003               	clrc
  3899  0A94  0D47               	rlf	??_scale+5,w
  3900  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3901  0A96  0084               	movwf	4
  3902  0A97  160A  118A  200A  120A  158A  	fcall	stringdir
  3903  0A9C  00C8               	movwf	??_scale+6
  3904  0A9D  160A  118A  200A  120A  158A  	fcall	stringdir
  3905  0AA2  00C9               	movwf	??_scale+7
  3906  0AA3  160A  118A  200A  120A  158A  	fcall	stringdir
  3907  0AA8  00CA               	movwf	??_scale+8
  3908  0AA9  160A  118A  200A  120A  158A  	fcall	stringdir
  3909  0AAE  00CB               	movwf	??_scale+9
  3910  0AAF  084B               	movf	??_scale+9,w
  3911  0AB0  00AB               	movwf	___flmul@a+3
  3912  0AB1  084A               	movf	??_scale+8,w
  3913  0AB2  00AA               	movwf	___flmul@a+2
  3914  0AB3  0849               	movf	??_scale+7,w
  3915  0AB4  00A9               	movwf	___flmul@a+1
  3916  0AB5  0848               	movf	??_scale+6,w
  3917  0AB6  00A8               	movwf	___flmul@a
  3918  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3919  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3920  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3921  0ABE  0827               	movf	?___flmul+3,w
  3922  0ABF  00C1               	movwf	?_scale+3
  3923  0AC0  0826               	movf	?___flmul+2,w
  3924  0AC1  00C0               	movwf	?_scale+2
  3925  0AC2  0825               	movf	?___flmul+1,w
  3926  0AC3  00BF               	movwf	?_scale+1
  3927  0AC4  0824               	movf	?___flmul,w
  3928  0AC5  00BE               	movwf	?_scale
  3929  0AC6  2C9E               	goto	l283
  3930  0AC7                     l2782:
  3931                           
  3932                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3933  0AC7  0850               	movf	scale@scl,w
  3934  0AC8  00C2               	movwf	??_scale
  3935  0AC9  3001               	movlw	1
  3936  0ACA                     u4335:
  3937  0ACA  1003               	clrc
  3938  0ACB  0DC2               	rlf	??_scale,f
  3939  0ACC  3EFF               	addlw	-1
  3940  0ACD  1D03               	skipz
  3941  0ACE  2ACA               	goto	u4335
  3942  0ACF  1003               	clrc
  3943  0AD0  0D42               	rlf	??_scale,w
  3944  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3945  0AD2  0084               	movwf	4
  3946  0AD3  160A  118A  200A  120A  158A  	fcall	stringdir
  3947  0AD8  00C3               	movwf	??_scale+1
  3948  0AD9  160A  118A  200A  120A  158A  	fcall	stringdir
  3949  0ADE  00C4               	movwf	??_scale+2
  3950  0ADF  160A  118A  200A  120A  158A  	fcall	stringdir
  3951  0AE4  00C5               	movwf	??_scale+3
  3952  0AE5  160A  118A  200A  120A  158A  	fcall	stringdir
  3953  0AEA  00C6               	movwf	??_scale+4
  3954  0AEB  0846               	movf	??_scale+4,w
  3955  0AEC  00C1               	movwf	?_scale+3
  3956  0AED  0845               	movf	??_scale+3,w
  3957  0AEE  00C0               	movwf	?_scale+2
  3958  0AEF  0844               	movf	??_scale+2,w
  3959  0AF0  00BF               	movwf	?_scale+1
  3960  0AF1  0843               	movf	??_scale+1,w
  3961  0AF2  00BE               	movwf	?_scale
  3962  0AF3  2C9E               	goto	l283
  3963  0AF4                     l2786:
  3964                           
  3965                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3966  0AF4  0850               	movf	scale@scl,w
  3967  0AF5  3A80               	xorlw	128
  3968  0AF6  3E12               	addlw	-238
  3969  0AF7  1C03               	skipc
  3970  0AF8  2AFA               	goto	u4341
  3971  0AF9  2AFB               	goto	u4340
  3972  0AFA                     u4341:
  3973  0AFA  2BE3               	goto	l2794
  3974  0AFB                     u4340:
  3975  0AFB                     l2788:
  3976                           
  3977                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3978  0AFB  300A               	movlw	10
  3979  0AFC  00F7               	movwf	___awdiv@divisor
  3980  0AFD  3000               	movlw	0
  3981  0AFE  00F8               	movwf	___awdiv@divisor+1
  3982  0AFF  0850               	movf	scale@scl,w
  3983  0B00  00F2               	movwf	___awmod@dividend
  3984  0B01  01F3               	clrf	___awmod@dividend+1
  3985  0B02  1BF2               	btfsc	___awmod@dividend,7
  3986  0B03  03F3               	decf	___awmod@dividend+1,f
  3987  0B04  3064               	movlw	100
  3988  0B05  00F0               	movwf	___awmod@divisor
  3989  0B06  3000               	movlw	0
  3990  0B07  00F1               	movwf	___awmod@divisor+1
  3991  0B08  160A  158A  274B  120A  158A  	fcall	___awmod
  3992  0B0D  0871               	movf	?___awmod+1,w
  3993  0B0E  00FA               	movwf	___awdiv@dividend+1
  3994  0B0F  0870               	movf	?___awmod,w
  3995  0B10  00F9               	movwf	___awdiv@dividend
  3996  0B11  120A  118A  200C  120A  158A  	fcall	___awdiv
  3997  0B16  0877               	movf	?___awdiv,w
  3998  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3999  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4000  0B19  00C2               	movwf	??_scale
  4001  0B1A  3001               	movlw	1
  4002  0B1B                     u4355:
  4003  0B1B  1003               	clrc
  4004  0B1C  0DC2               	rlf	??_scale,f
  4005  0B1D  3EFF               	addlw	-1
  4006  0B1E  1D03               	skipz
  4007  0B1F  2B1B               	goto	u4355
  4008  0B20  1003               	clrc
  4009  0B21  0D42               	rlf	??_scale,w
  4010  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4011  0B23  0084               	movwf	4
  4012  0B24  160A  118A  200A  120A  158A  	fcall	stringdir
  4013  0B29  00C3               	movwf	??_scale+1
  4014  0B2A  160A  118A  200A  120A  158A  	fcall	stringdir
  4015  0B2F  00C4               	movwf	??_scale+2
  4016  0B30  160A  118A  200A  120A  158A  	fcall	stringdir
  4017  0B35  00C5               	movwf	??_scale+3
  4018  0B36  160A  118A  200A  120A  158A  	fcall	stringdir
  4019  0B3B  00C6               	movwf	??_scale+4
  4020  0B3C  0846               	movf	??_scale+4,w
  4021  0B3D  00A7               	movwf	___flmul@b+3
  4022  0B3E  0845               	movf	??_scale+3,w
  4023  0B3F  00A6               	movwf	___flmul@b+2
  4024  0B40  0844               	movf	??_scale+2,w
  4025  0B41  00A5               	movwf	___flmul@b+1
  4026  0B42  0843               	movf	??_scale+1,w
  4027  0B43  00A4               	movwf	___flmul@b
  4028  0B44  3064               	movlw	100
  4029  0B45  00F7               	movwf	___awdiv@divisor
  4030  0B46  3000               	movlw	0
  4031  0B47  00F8               	movwf	___awdiv@divisor+1
  4032  0B48  0850               	movf	scale@scl,w
  4033  0B49  00F9               	movwf	___awdiv@dividend
  4034  0B4A  01FA               	clrf	___awdiv@dividend+1
  4035  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4036  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4037  0B4D  120A  118A  200C  120A  158A  	fcall	___awdiv
  4038  0B52  0877               	movf	?___awdiv,w
  4039  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4040  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4041  0B55  00C7               	movwf	??_scale+5
  4042  0B56  3001               	movlw	1
  4043  0B57                     u4365:
  4044  0B57  1003               	clrc
  4045  0B58  0DC7               	rlf	??_scale+5,f
  4046  0B59  3EFF               	addlw	-1
  4047  0B5A  1D03               	skipz
  4048  0B5B  2B57               	goto	u4365
  4049  0B5C  1003               	clrc
  4050  0B5D  0D47               	rlf	??_scale+5,w
  4051  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4052  0B5F  0084               	movwf	4
  4053  0B60  160A  118A  200A  120A  158A  	fcall	stringdir
  4054  0B65  00C8               	movwf	??_scale+6
  4055  0B66  160A  118A  200A  120A  158A  	fcall	stringdir
  4056  0B6B  00C9               	movwf	??_scale+7
  4057  0B6C  160A  118A  200A  120A  158A  	fcall	stringdir
  4058  0B71  00CA               	movwf	??_scale+8
  4059  0B72  160A  118A  200A  120A  158A  	fcall	stringdir
  4060  0B77  00CB               	movwf	??_scale+9
  4061  0B78  084B               	movf	??_scale+9,w
  4062  0B79  00AB               	movwf	___flmul@a+3
  4063  0B7A  084A               	movf	??_scale+8,w
  4064  0B7B  00AA               	movwf	___flmul@a+2
  4065  0B7C  0849               	movf	??_scale+7,w
  4066  0B7D  00A9               	movwf	___flmul@a+1
  4067  0B7E  0848               	movf	??_scale+6,w
  4068  0B7F  00A8               	movwf	___flmul@a
  4069  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4070  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4071  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4072  0B87  0827               	movf	?___flmul+3,w
  4073  0B88  00CF               	movwf	_scale$1031+3
  4074  0B89  0826               	movf	?___flmul+2,w
  4075  0B8A  00CE               	movwf	_scale$1031+2
  4076  0B8B  0825               	movf	?___flmul+1,w
  4077  0B8C  00CD               	movwf	_scale$1031+1
  4078  0B8D  0824               	movf	?___flmul,w
  4079  0B8E  00CC               	movwf	_scale$1031
  4080                           
  4081                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4082  0B8F  300A               	movlw	10
  4083  0B90  00F0               	movwf	___awmod@divisor
  4084  0B91  3000               	movlw	0
  4085  0B92  00F1               	movwf	___awmod@divisor+1
  4086  0B93  0850               	movf	scale@scl,w
  4087  0B94  00F2               	movwf	___awmod@dividend
  4088  0B95  01F3               	clrf	___awmod@dividend+1
  4089  0B96  1BF2               	btfsc	___awmod@dividend,7
  4090  0B97  03F3               	decf	___awmod@dividend+1,f
  4091  0B98  160A  158A  274B  120A  158A  	fcall	___awmod
  4092  0B9D  0870               	movf	?___awmod,w
  4093  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4094  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4095  0BA0  00C2               	movwf	??_scale
  4096  0BA1  3001               	movlw	1
  4097  0BA2                     u4375:
  4098  0BA2  1003               	clrc
  4099  0BA3  0DC2               	rlf	??_scale,f
  4100  0BA4  3EFF               	addlw	-1
  4101  0BA5  1D03               	skipz
  4102  0BA6  2BA2               	goto	u4375
  4103  0BA7  1003               	clrc
  4104  0BA8  0D42               	rlf	??_scale,w
  4105  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4106  0BAA  0084               	movwf	4
  4107  0BAB  160A  118A  200A  120A  158A  	fcall	stringdir
  4108  0BB0  00C3               	movwf	??_scale+1
  4109  0BB1  160A  118A  200A  120A  158A  	fcall	stringdir
  4110  0BB6  00C4               	movwf	??_scale+2
  4111  0BB7  160A  118A  200A  120A  158A  	fcall	stringdir
  4112  0BBC  00C5               	movwf	??_scale+3
  4113  0BBD  160A  118A  200A  120A  158A  	fcall	stringdir
  4114  0BC2  00C6               	movwf	??_scale+4
  4115  0BC3  0846               	movf	??_scale+4,w
  4116  0BC4  00A7               	movwf	___flmul@b+3
  4117  0BC5  0845               	movf	??_scale+3,w
  4118  0BC6  00A6               	movwf	___flmul@b+2
  4119  0BC7  0844               	movf	??_scale+2,w
  4120  0BC8  00A5               	movwf	___flmul@b+1
  4121  0BC9  0843               	movf	??_scale+1,w
  4122  0BCA  00A4               	movwf	___flmul@b
  4123  0BCB  084F               	movf	_scale$1031+3,w
  4124  0BCC  00AB               	movwf	___flmul@a+3
  4125  0BCD  084E               	movf	_scale$1031+2,w
  4126  0BCE  00AA               	movwf	___flmul@a+2
  4127  0BCF  084D               	movf	_scale$1031+1,w
  4128  0BD0  00A9               	movwf	___flmul@a+1
  4129  0BD1  084C               	movf	_scale$1031,w
  4130  0BD2  00A8               	movwf	___flmul@a
  4131  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4132  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4133  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4134  0BDA  0827               	movf	?___flmul+3,w
  4135  0BDB  00C1               	movwf	?_scale+3
  4136  0BDC  0826               	movf	?___flmul+2,w
  4137  0BDD  00C0               	movwf	?_scale+2
  4138  0BDE  0825               	movf	?___flmul+1,w
  4139  0BDF  00BF               	movwf	?_scale+1
  4140  0BE0  0824               	movf	?___flmul,w
  4141  0BE1  00BE               	movwf	?_scale
  4142  0BE2  2C9E               	goto	l283
  4143  0BE3                     l2794:
  4144  0BE3  0850               	movf	scale@scl,w
  4145  0BE4  3A80               	xorlw	128
  4146  0BE5  3E75               	addlw	-139
  4147  0BE6  1C03               	skipc
  4148  0BE7  2BE9               	goto	u4381
  4149  0BE8  2BEA               	goto	u4380
  4150  0BE9                     u4381:
  4151  0BE9  2C72               	goto	l2800
  4152  0BEA                     u4380:
  4153  0BEA                     l2796:
  4154                           
  4155                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4156  0BEA  300A               	movlw	10
  4157  0BEB  00F0               	movwf	___awmod@divisor
  4158  0BEC  3000               	movlw	0
  4159  0BED  00F1               	movwf	___awmod@divisor+1
  4160  0BEE  0850               	movf	scale@scl,w
  4161  0BEF  00F2               	movwf	___awmod@dividend
  4162  0BF0  01F3               	clrf	___awmod@dividend+1
  4163  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4164  0BF2  03F3               	decf	___awmod@dividend+1,f
  4165  0BF3  160A  158A  274B  120A  158A  	fcall	___awmod
  4166  0BF8  0870               	movf	?___awmod,w
  4167  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4168  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4169  0BFB  00C2               	movwf	??_scale
  4170  0BFC  3001               	movlw	1
  4171  0BFD                     u4395:
  4172  0BFD  1003               	clrc
  4173  0BFE  0DC2               	rlf	??_scale,f
  4174  0BFF  3EFF               	addlw	-1
  4175  0C00  1D03               	skipz
  4176  0C01  2BFD               	goto	u4395
  4177  0C02  1003               	clrc
  4178  0C03  0D42               	rlf	??_scale,w
  4179  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4180  0C05  0084               	movwf	4
  4181  0C06  160A  118A  200A  120A  158A  	fcall	stringdir
  4182  0C0B  00C3               	movwf	??_scale+1
  4183  0C0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4184  0C11  00C4               	movwf	??_scale+2
  4185  0C12  160A  118A  200A  120A  158A  	fcall	stringdir
  4186  0C17  00C5               	movwf	??_scale+3
  4187  0C18  160A  118A  200A  120A  158A  	fcall	stringdir
  4188  0C1D  00C6               	movwf	??_scale+4
  4189  0C1E  0846               	movf	??_scale+4,w
  4190  0C1F  00A7               	movwf	___flmul@b+3
  4191  0C20  0845               	movf	??_scale+3,w
  4192  0C21  00A6               	movwf	___flmul@b+2
  4193  0C22  0844               	movf	??_scale+2,w
  4194  0C23  00A5               	movwf	___flmul@b+1
  4195  0C24  0843               	movf	??_scale+1,w
  4196  0C25  00A4               	movwf	___flmul@b
  4197  0C26  300A               	movlw	10
  4198  0C27  00F7               	movwf	___awdiv@divisor
  4199  0C28  3000               	movlw	0
  4200  0C29  00F8               	movwf	___awdiv@divisor+1
  4201  0C2A  0850               	movf	scale@scl,w
  4202  0C2B  00F9               	movwf	___awdiv@dividend
  4203  0C2C  01FA               	clrf	___awdiv@dividend+1
  4204  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4205  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4206  0C2F  120A  118A  200C  120A  158A  	fcall	___awdiv
  4207  0C34  0877               	movf	?___awdiv,w
  4208  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4209  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4210  0C37  00C7               	movwf	??_scale+5
  4211  0C38  3001               	movlw	1
  4212  0C39                     u4405:
  4213  0C39  1003               	clrc
  4214  0C3A  0DC7               	rlf	??_scale+5,f
  4215  0C3B  3EFF               	addlw	-1
  4216  0C3C  1D03               	skipz
  4217  0C3D  2C39               	goto	u4405
  4218  0C3E  1003               	clrc
  4219  0C3F  0D47               	rlf	??_scale+5,w
  4220  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4221  0C41  0084               	movwf	4
  4222  0C42  160A  118A  200A  120A  158A  	fcall	stringdir
  4223  0C47  00C8               	movwf	??_scale+6
  4224  0C48  160A  118A  200A  120A  158A  	fcall	stringdir
  4225  0C4D  00C9               	movwf	??_scale+7
  4226  0C4E  160A  118A  200A  120A  158A  	fcall	stringdir
  4227  0C53  00CA               	movwf	??_scale+8
  4228  0C54  160A  118A  200A  120A  158A  	fcall	stringdir
  4229  0C59  00CB               	movwf	??_scale+9
  4230  0C5A  084B               	movf	??_scale+9,w
  4231  0C5B  00AB               	movwf	___flmul@a+3
  4232  0C5C  084A               	movf	??_scale+8,w
  4233  0C5D  00AA               	movwf	___flmul@a+2
  4234  0C5E  0849               	movf	??_scale+7,w
  4235  0C5F  00A9               	movwf	___flmul@a+1
  4236  0C60  0848               	movf	??_scale+6,w
  4237  0C61  00A8               	movwf	___flmul@a
  4238  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4239  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4240  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4241  0C69  0827               	movf	?___flmul+3,w
  4242  0C6A  00C1               	movwf	?_scale+3
  4243  0C6B  0826               	movf	?___flmul+2,w
  4244  0C6C  00C0               	movwf	?_scale+2
  4245  0C6D  0825               	movf	?___flmul+1,w
  4246  0C6E  00BF               	movwf	?_scale+1
  4247  0C6F  0824               	movf	?___flmul,w
  4248  0C70  00BE               	movwf	?_scale
  4249  0C71  2C9E               	goto	l283
  4250  0C72                     l2800:
  4251                           
  4252                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4253  0C72  0850               	movf	scale@scl,w
  4254  0C73  00C2               	movwf	??_scale
  4255  0C74  3001               	movlw	1
  4256  0C75                     u4415:
  4257  0C75  1003               	clrc
  4258  0C76  0DC2               	rlf	??_scale,f
  4259  0C77  3EFF               	addlw	-1
  4260  0C78  1D03               	skipz
  4261  0C79  2C75               	goto	u4415
  4262  0C7A  1003               	clrc
  4263  0C7B  0D42               	rlf	??_scale,w
  4264  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4265  0C7D  0084               	movwf	4
  4266  0C7E  160A  118A  200A  120A  158A  	fcall	stringdir
  4267  0C83  00C3               	movwf	??_scale+1
  4268  0C84  160A  118A  200A  120A  158A  	fcall	stringdir
  4269  0C89  00C4               	movwf	??_scale+2
  4270  0C8A  160A  118A  200A  120A  158A  	fcall	stringdir
  4271  0C8F  00C5               	movwf	??_scale+3
  4272  0C90  160A  118A  200A  120A  158A  	fcall	stringdir
  4273  0C95  00C6               	movwf	??_scale+4
  4274  0C96  0846               	movf	??_scale+4,w
  4275  0C97  00C1               	movwf	?_scale+3
  4276  0C98  0845               	movf	??_scale+3,w
  4277  0C99  00C0               	movwf	?_scale+2
  4278  0C9A  0844               	movf	??_scale+2,w
  4279  0C9B  00BF               	movwf	?_scale+1
  4280  0C9C  0843               	movf	??_scale+1,w
  4281  0C9D  00BE               	movwf	?_scale
  4282  0C9E                     l283:
  4283  0C9E  0008               	return
  4284  0C9F                     __end_of_scale:
  4285                           
  4286                           	psect	text3
  4287  1F4B                     __ptext3:	
  4288 ;; *************** function ___awmod *****************
  4289 ;; Defined at:
  4290 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;  divisor         2    0[COMMON] int 
  4293 ;;  dividend        2    2[COMMON] int 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  sign            1    6[COMMON] unsigned char 
  4296 ;;  counter         1    5[COMMON] unsigned char 
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  2    0[COMMON] int 
  4299 ;; Registers used:
  4300 ;;		wreg, status,2, status,0
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4306 ;;      Params:         4       0       0       0       0
  4307 ;;      Locals:         2       0       0       0       0
  4308 ;;      Temps:          1       0       0       0       0
  4309 ;;      Totals:         7       0       0       0       0
  4310 ;;Total ram usage:        7 bytes
  4311 ;; Hardware stack levels used: 1
  4312 ;; This function calls:
  4313 ;;		Nothing
  4314 ;; This function is called by:
  4315 ;;		_scale
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319  1F4B                     ___awmod:	
  4320                           ;psect for function ___awmod
  4321                           
  4322  1F4B                     l2276:	
  4323                           ;incstack = 0
  4324                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4325                           
  4326  1F4B  01F6               	clrf	___awmod@sign
  4327  1F4C                     l2278:
  4328  1F4C  1FF3               	btfss	___awmod@dividend+1,7
  4329  1F4D  2F4F               	goto	u3031
  4330  1F4E  2F50               	goto	u3030
  4331  1F4F                     u3031:
  4332  1F4F  2F57               	goto	l2284
  4333  1F50                     u3030:
  4334  1F50                     l2280:
  4335  1F50  09F2               	comf	___awmod@dividend,f
  4336  1F51  09F3               	comf	___awmod@dividend+1,f
  4337  1F52  0AF2               	incf	___awmod@dividend,f
  4338  1F53  1903               	skipnz
  4339  1F54  0AF3               	incf	___awmod@dividend+1,f
  4340  1F55                     l2282:
  4341  1F55  01F6               	clrf	___awmod@sign
  4342  1F56  0AF6               	incf	___awmod@sign,f
  4343  1F57                     l2284:
  4344  1F57  1FF1               	btfss	___awmod@divisor+1,7
  4345  1F58  2F5A               	goto	u3041
  4346  1F59  2F5B               	goto	u3040
  4347  1F5A                     u3041:
  4348  1F5A  2F60               	goto	l2288
  4349  1F5B                     u3040:
  4350  1F5B                     l2286:
  4351  1F5B  09F0               	comf	___awmod@divisor,f
  4352  1F5C  09F1               	comf	___awmod@divisor+1,f
  4353  1F5D  0AF0               	incf	___awmod@divisor,f
  4354  1F5E  1903               	skipnz
  4355  1F5F  0AF1               	incf	___awmod@divisor+1,f
  4356  1F60                     l2288:
  4357  1F60  0870               	movf	___awmod@divisor,w
  4358  1F61  0471               	iorwf	___awmod@divisor+1,w
  4359  1F62  1903               	btfsc	3,2
  4360  1F63  2F65               	goto	u3051
  4361  1F64  2F66               	goto	u3050
  4362  1F65                     u3051:
  4363  1F65  2F95               	goto	l2306
  4364  1F66                     u3050:
  4365  1F66                     l2290:
  4366  1F66  01F5               	clrf	___awmod@counter
  4367  1F67  0AF5               	incf	___awmod@counter,f
  4368  1F68  2F74               	goto	l2296
  4369  1F69                     l2292:
  4370  1F69  3001               	movlw	1
  4371  1F6A                     u3065:
  4372  1F6A  1003               	clrc
  4373  1F6B  0DF0               	rlf	___awmod@divisor,f
  4374  1F6C  0DF1               	rlf	___awmod@divisor+1,f
  4375  1F6D  3EFF               	addlw	-1
  4376  1F6E  1D03               	skipz
  4377  1F6F  2F6A               	goto	u3065
  4378  1F70                     l2294:
  4379  1F70  3001               	movlw	1
  4380  1F71  00F4               	movwf	??___awmod
  4381  1F72  0874               	movf	??___awmod,w
  4382  1F73  07F5               	addwf	___awmod@counter,f
  4383  1F74                     l2296:
  4384  1F74  1FF1               	btfss	___awmod@divisor+1,7
  4385  1F75  2F77               	goto	u3071
  4386  1F76  2F78               	goto	u3070
  4387  1F77                     u3071:
  4388  1F77  2F69               	goto	l2292
  4389  1F78                     u3070:
  4390  1F78                     l2298:
  4391  1F78  0871               	movf	___awmod@divisor+1,w
  4392  1F79  0273               	subwf	___awmod@dividend+1,w
  4393  1F7A  1D03               	skipz
  4394  1F7B  2F7E               	goto	u3085
  4395  1F7C  0870               	movf	___awmod@divisor,w
  4396  1F7D  0272               	subwf	___awmod@dividend,w
  4397  1F7E                     u3085:
  4398  1F7E  1C03               	skipc
  4399  1F7F  2F81               	goto	u3081
  4400  1F80  2F82               	goto	u3080
  4401  1F81                     u3081:
  4402  1F81  2F88               	goto	l2302
  4403  1F82                     u3080:
  4404  1F82                     l2300:
  4405  1F82  0870               	movf	___awmod@divisor,w
  4406  1F83  02F2               	subwf	___awmod@dividend,f
  4407  1F84  0871               	movf	___awmod@divisor+1,w
  4408  1F85  1C03               	skipc
  4409  1F86  03F3               	decf	___awmod@dividend+1,f
  4410  1F87  02F3               	subwf	___awmod@dividend+1,f
  4411  1F88                     l2302:
  4412  1F88  3001               	movlw	1
  4413  1F89                     u3095:
  4414  1F89  1003               	clrc
  4415  1F8A  0CF1               	rrf	___awmod@divisor+1,f
  4416  1F8B  0CF0               	rrf	___awmod@divisor,f
  4417  1F8C  3EFF               	addlw	-1
  4418  1F8D  1D03               	skipz
  4419  1F8E  2F89               	goto	u3095
  4420  1F8F                     l2304:
  4421  1F8F  3001               	movlw	1
  4422  1F90  02F5               	subwf	___awmod@counter,f
  4423  1F91  1D03               	btfss	3,2
  4424  1F92  2F94               	goto	u3101
  4425  1F93  2F95               	goto	u3100
  4426  1F94                     u3101:
  4427  1F94  2F78               	goto	l2298
  4428  1F95                     u3100:
  4429  1F95                     l2306:
  4430  1F95  0876               	movf	___awmod@sign,w
  4431  1F96  1903               	btfsc	3,2
  4432  1F97  2F99               	goto	u3111
  4433  1F98  2F9A               	goto	u3110
  4434  1F99                     u3111:
  4435  1F99  2F9F               	goto	l2310
  4436  1F9A                     u3110:
  4437  1F9A                     l2308:
  4438  1F9A  09F2               	comf	___awmod@dividend,f
  4439  1F9B  09F3               	comf	___awmod@dividend+1,f
  4440  1F9C  0AF2               	incf	___awmod@dividend,f
  4441  1F9D  1903               	skipnz
  4442  1F9E  0AF3               	incf	___awmod@dividend+1,f
  4443  1F9F                     l2310:
  4444  1F9F  0873               	movf	___awmod@dividend+1,w
  4445  1FA0  00F1               	movwf	?___awmod+1
  4446  1FA1  0872               	movf	___awmod@dividend,w
  4447  1FA2  00F0               	movwf	?___awmod
  4448  1FA3                     l519:
  4449  1FA3  0008               	return
  4450  1FA4                     __end_of___awmod:
  4451                           
  4452                           	psect	text4
  4453  000C                     __ptext4:	
  4454 ;; *************** function ___awdiv *****************
  4455 ;; Defined at:
  4456 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  divisor         2    7[COMMON] int 
  4459 ;;  dividend        2    9[COMMON] int 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  quotient        2    2[BANK0 ] int 
  4462 ;;  sign            1    1[BANK0 ] unsigned char 
  4463 ;;  counter         1    0[BANK0 ] unsigned char 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  2    7[COMMON] int 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2, status,0
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4473 ;;      Params:         4       0       0       0       0
  4474 ;;      Locals:         0       4       0       0       0
  4475 ;;      Temps:          1       0       0       0       0
  4476 ;;      Totals:         5       4       0       0       0
  4477 ;;Total ram usage:        9 bytes
  4478 ;; Hardware stack levels used: 1
  4479 ;; This function calls:
  4480 ;;		Nothing
  4481 ;; This function is called by:
  4482 ;;		_scale
  4483 ;;		_sprintf
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487  000C                     ___awdiv:	
  4488                           ;psect for function ___awdiv
  4489                           
  4490  000C                     l2232:	
  4491                           ;incstack = 0
  4492                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4493                           
  4494  000C  1283               	bcf	3,5	;RP0=0, select bank0
  4495  000D  1303               	bcf	3,6	;RP1=0, select bank0
  4496  000E  01A1               	clrf	___awdiv@sign
  4497  000F                     l2234:
  4498  000F  1FF8               	btfss	___awdiv@divisor+1,7
  4499  0010  2812               	goto	u2931
  4500  0011  2813               	goto	u2930
  4501  0012                     u2931:
  4502  0012  281A               	goto	l2240
  4503  0013                     u2930:
  4504  0013                     l2236:
  4505  0013  09F7               	comf	___awdiv@divisor,f
  4506  0014  09F8               	comf	___awdiv@divisor+1,f
  4507  0015  0AF7               	incf	___awdiv@divisor,f
  4508  0016  1903               	skipnz
  4509  0017  0AF8               	incf	___awdiv@divisor+1,f
  4510  0018                     l2238:
  4511  0018  01A1               	clrf	___awdiv@sign
  4512  0019  0AA1               	incf	___awdiv@sign,f
  4513  001A                     l2240:
  4514  001A  1FFA               	btfss	___awdiv@dividend+1,7
  4515  001B  281D               	goto	u2941
  4516  001C  281E               	goto	u2940
  4517  001D                     u2941:
  4518  001D  2827               	goto	l2246
  4519  001E                     u2940:
  4520  001E                     l2242:
  4521  001E  09F9               	comf	___awdiv@dividend,f
  4522  001F  09FA               	comf	___awdiv@dividend+1,f
  4523  0020  0AF9               	incf	___awdiv@dividend,f
  4524  0021  1903               	skipnz
  4525  0022  0AFA               	incf	___awdiv@dividend+1,f
  4526  0023                     l2244:
  4527  0023  3001               	movlw	1
  4528  0024  00FB               	movwf	??___awdiv
  4529  0025  087B               	movf	??___awdiv,w
  4530  0026  06A1               	xorwf	___awdiv@sign,f
  4531  0027                     l2246:
  4532  0027  01A2               	clrf	___awdiv@quotient
  4533  0028  01A3               	clrf	___awdiv@quotient+1
  4534  0029                     l2248:
  4535  0029  0877               	movf	___awdiv@divisor,w
  4536  002A  0478               	iorwf	___awdiv@divisor+1,w
  4537  002B  1903               	btfsc	3,2
  4538  002C  282E               	goto	u2951
  4539  002D  282F               	goto	u2950
  4540  002E                     u2951:
  4541  002E  2866               	goto	l2268
  4542  002F                     u2950:
  4543  002F                     l2250:
  4544  002F  01A0               	clrf	___awdiv@counter
  4545  0030  0AA0               	incf	___awdiv@counter,f
  4546  0031  283D               	goto	l2256
  4547  0032                     l2252:
  4548  0032  3001               	movlw	1
  4549  0033                     u2965:
  4550  0033  1003               	clrc
  4551  0034  0DF7               	rlf	___awdiv@divisor,f
  4552  0035  0DF8               	rlf	___awdiv@divisor+1,f
  4553  0036  3EFF               	addlw	-1
  4554  0037  1D03               	skipz
  4555  0038  2833               	goto	u2965
  4556  0039                     l2254:
  4557  0039  3001               	movlw	1
  4558  003A  00FB               	movwf	??___awdiv
  4559  003B  087B               	movf	??___awdiv,w
  4560  003C  07A0               	addwf	___awdiv@counter,f
  4561  003D                     l2256:
  4562  003D  1FF8               	btfss	___awdiv@divisor+1,7
  4563  003E  2840               	goto	u2971
  4564  003F  2841               	goto	u2970
  4565  0040                     u2971:
  4566  0040  2832               	goto	l2252
  4567  0041                     u2970:
  4568  0041                     l2258:
  4569  0041  3001               	movlw	1
  4570  0042                     u2985:
  4571  0042  1003               	clrc
  4572  0043  0DA2               	rlf	___awdiv@quotient,f
  4573  0044  0DA3               	rlf	___awdiv@quotient+1,f
  4574  0045  3EFF               	addlw	-1
  4575  0046  1D03               	skipz
  4576  0047  2842               	goto	u2985
  4577  0048  0878               	movf	___awdiv@divisor+1,w
  4578  0049  027A               	subwf	___awdiv@dividend+1,w
  4579  004A  1D03               	skipz
  4580  004B  284E               	goto	u2995
  4581  004C  0877               	movf	___awdiv@divisor,w
  4582  004D  0279               	subwf	___awdiv@dividend,w
  4583  004E                     u2995:
  4584  004E  1C03               	skipc
  4585  004F  2851               	goto	u2991
  4586  0050  2852               	goto	u2990
  4587  0051                     u2991:
  4588  0051  2859               	goto	l2264
  4589  0052                     u2990:
  4590  0052                     l2260:
  4591  0052  0877               	movf	___awdiv@divisor,w
  4592  0053  02F9               	subwf	___awdiv@dividend,f
  4593  0054  0878               	movf	___awdiv@divisor+1,w
  4594  0055  1C03               	skipc
  4595  0056  03FA               	decf	___awdiv@dividend+1,f
  4596  0057  02FA               	subwf	___awdiv@dividend+1,f
  4597  0058                     l2262:
  4598  0058  1422               	bsf	___awdiv@quotient,0
  4599  0059                     l2264:
  4600  0059  3001               	movlw	1
  4601  005A                     u3005:
  4602  005A  1003               	clrc
  4603  005B  0CF8               	rrf	___awdiv@divisor+1,f
  4604  005C  0CF7               	rrf	___awdiv@divisor,f
  4605  005D  3EFF               	addlw	-1
  4606  005E  1D03               	skipz
  4607  005F  285A               	goto	u3005
  4608  0060                     l2266:
  4609  0060  3001               	movlw	1
  4610  0061  02A0               	subwf	___awdiv@counter,f
  4611  0062  1D03               	btfss	3,2
  4612  0063  2865               	goto	u3011
  4613  0064  2866               	goto	u3010
  4614  0065                     u3011:
  4615  0065  2841               	goto	l2258
  4616  0066                     u3010:
  4617  0066                     l2268:
  4618  0066  0821               	movf	___awdiv@sign,w
  4619  0067  1903               	btfsc	3,2
  4620  0068  286A               	goto	u3021
  4621  0069  286B               	goto	u3020
  4622  006A                     u3021:
  4623  006A  2870               	goto	l2272
  4624  006B                     u3020:
  4625  006B                     l2270:
  4626  006B  09A2               	comf	___awdiv@quotient,f
  4627  006C  09A3               	comf	___awdiv@quotient+1,f
  4628  006D  0AA2               	incf	___awdiv@quotient,f
  4629  006E  1903               	skipnz
  4630  006F  0AA3               	incf	___awdiv@quotient+1,f
  4631  0070                     l2272:
  4632  0070  0823               	movf	___awdiv@quotient+1,w
  4633  0071  00F8               	movwf	?___awdiv+1
  4634  0072  0822               	movf	___awdiv@quotient,w
  4635  0073  00F7               	movwf	?___awdiv
  4636  0074                     l506:
  4637  0074  0008               	return
  4638  0075                     __end_of___awdiv:
  4639                           
  4640                           	psect	text5
  4641  1C80                     __ptext5:	
  4642 ;; *************** function _isdigit *****************
  4643 ;; Defined at:
  4644 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;  c               1    wreg     unsigned char 
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;  c               1    1[COMMON] unsigned char 
  4649 ;; Return value:  Size  Location     Type
  4650 ;;		None               void
  4651 ;; Registers used:
  4652 ;;		wreg, status,2, status,0
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4658 ;;      Params:         0       0       0       0       0
  4659 ;;      Locals:         2       0       0       0       0
  4660 ;;      Temps:          0       0       0       0       0
  4661 ;;      Totals:         2       0       0       0       0
  4662 ;;Total ram usage:        2 bytes
  4663 ;; Hardware stack levels used: 1
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		_sprintf
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671  1C80                     _isdigit:	
  4672                           ;psect for function _isdigit
  4673                           
  4674                           
  4675                           ;incstack = 0
  4676                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4677                           ;isdigit@c stored from wreg
  4678  1C80  00F1               	movwf	isdigit@c
  4679  1C81                     l2804:
  4680  1C81  01F0               	clrf	_isdigit$846
  4681  1C82                     l2806:
  4682  1C82  303A               	movlw	58
  4683  1C83  0271               	subwf	isdigit@c,w
  4684  1C84  1803               	skipnc
  4685  1C85  2C87               	goto	u4421
  4686  1C86  2C88               	goto	u4420
  4687  1C87                     u4421:
  4688  1C87  2C90               	goto	l2812
  4689  1C88                     u4420:
  4690  1C88                     l2808:
  4691  1C88  3030               	movlw	48
  4692  1C89  0271               	subwf	isdigit@c,w
  4693  1C8A  1C03               	skipc
  4694  1C8B  2C8D               	goto	u4431
  4695  1C8C  2C8E               	goto	u4430
  4696  1C8D                     u4431:
  4697  1C8D  2C90               	goto	l2812
  4698  1C8E                     u4430:
  4699  1C8E                     l2810:
  4700  1C8E  01F0               	clrf	_isdigit$846
  4701  1C8F  0AF0               	incf	_isdigit$846,f
  4702  1C90                     l2812:
  4703  1C90  0C70               	rrf	_isdigit$846,w
  4704  1C91                     l840:
  4705  1C91  0008               	return
  4706  1C92                     __end_of_isdigit:
  4707                           
  4708                           	psect	text6
  4709  136D                     __ptext6:	
  4710 ;; *************** function _fround *****************
  4711 ;; Defined at:
  4712 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  prec            1    wreg     unsigned char 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  prec            1   49[BANK0 ] unsigned char 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  4   30[BANK0 ] unsigned char 
  4719 ;; Registers used:
  4720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4726 ;;      Params:         0       4       0       0       0
  4727 ;;      Locals:         0       9       0       0       0
  4728 ;;      Temps:          0       7       0       0       0
  4729 ;;      Totals:         0      20       0       0       0
  4730 ;;Total ram usage:       20 bytes
  4731 ;; Hardware stack levels used: 1
  4732 ;; Hardware stack levels required when called: 2
  4733 ;; This function calls:
  4734 ;;		___flmul
  4735 ;;		___lwdiv
  4736 ;;		___lwmod
  4737 ;; This function is called by:
  4738 ;;		_sprintf
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           
  4742  136D                     _fround:	
  4743                           ;psect for function _fround
  4744                           
  4745                           
  4746                           ;incstack = 0
  4747                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4748                           ;fround@prec stored from wreg
  4749  136D  1283               	bcf	3,5	;RP0=0, select bank0
  4750  136E  1303               	bcf	3,6	;RP1=0, select bank0
  4751  136F  00D1               	movwf	fround@prec
  4752  1370                     l2746:
  4753                           
  4754                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4755  1370  306E               	movlw	110
  4756  1371  0251               	subwf	fround@prec,w
  4757  1372  1C03               	skipc
  4758  1373  2B75               	goto	u4171
  4759  1374  2B76               	goto	u4170
  4760  1375                     u4171:
  4761  1375  2C83               	goto	l2754
  4762  1376                     u4170:
  4763  1376                     l2748:
  4764                           
  4765                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4766  1376  303F               	movlw	63
  4767  1377  00A7               	movwf	___flmul@b+3
  4768  1378  3000               	movlw	0
  4769  1379  00A6               	movwf	___flmul@b+2
  4770  137A  3000               	movlw	0
  4771  137B  00A5               	movwf	___flmul@b+1
  4772  137C  3000               	movlw	0
  4773  137D  00A4               	movwf	___flmul@b
  4774  137E  3064               	movlw	100
  4775  137F  00F6               	movwf	___lwdiv@divisor
  4776  1380  3000               	movlw	0
  4777  1381  00F7               	movwf	___lwdiv@divisor+1
  4778  1382  0851               	movf	fround@prec,w
  4779  1383  00C2               	movwf	??_fround
  4780  1384  01C3               	clrf	??_fround+1
  4781  1385  0842               	movf	??_fround,w
  4782  1386  00F8               	movwf	___lwdiv@dividend
  4783  1387  0843               	movf	??_fround+1,w
  4784  1388  00F9               	movwf	___lwdiv@dividend+1
  4785  1389  160A  158A  2614  160A  118A  	fcall	___lwdiv
  4786  138E  0876               	movf	?___lwdiv,w
  4787  138F  1283               	bcf	3,5	;RP0=0, select bank0
  4788  1390  1303               	bcf	3,6	;RP1=0, select bank0
  4789  1391  00C4               	movwf	??_fround+2
  4790  1392  3001               	movlw	1
  4791  1393                     u4185:
  4792  1393  1003               	clrc
  4793  1394  0DC4               	rlf	??_fround+2,f
  4794  1395  3EFF               	addlw	-1
  4795  1396  1D03               	skipz
  4796  1397  2B93               	goto	u4185
  4797  1398  1003               	clrc
  4798  1399  0D44               	rlf	??_fround+2,w
  4799  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4800  139B  0084               	movwf	4
  4801  139C  160A  118A  200A  160A  118A  	fcall	stringdir
  4802  13A1  00C5               	movwf	??_fround+3
  4803  13A2  160A  118A  200A  160A  118A  	fcall	stringdir
  4804  13A7  00C6               	movwf	??_fround+4
  4805  13A8  160A  118A  200A  160A  118A  	fcall	stringdir
  4806  13AD  00C7               	movwf	??_fround+5
  4807  13AE  160A  118A  200A  160A  118A  	fcall	stringdir
  4808  13B3  00C8               	movwf	??_fround+6
  4809  13B4  0848               	movf	??_fround+6,w
  4810  13B5  00AB               	movwf	___flmul@a+3
  4811  13B6  0847               	movf	??_fround+5,w
  4812  13B7  00AA               	movwf	___flmul@a+2
  4813  13B8  0846               	movf	??_fround+4,w
  4814  13B9  00A9               	movwf	___flmul@a+1
  4815  13BA  0845               	movf	??_fround+3,w
  4816  13BB  00A8               	movwf	___flmul@a
  4817  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  4818  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  4819  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  4820  13C3  0827               	movf	?___flmul+3,w
  4821  13C4  00D0               	movwf	_fround$1029+3
  4822  13C5  0826               	movf	?___flmul+2,w
  4823  13C6  00CF               	movwf	_fround$1029+2
  4824  13C7  0825               	movf	?___flmul+1,w
  4825  13C8  00CE               	movwf	_fround$1029+1
  4826  13C9  0824               	movf	?___flmul,w
  4827  13CA  00CD               	movwf	_fround$1029
  4828                           
  4829                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4830  13CB  300A               	movlw	10
  4831  13CC  00F6               	movwf	___lwdiv@divisor
  4832  13CD  3000               	movlw	0
  4833  13CE  00F7               	movwf	___lwdiv@divisor+1
  4834  13CF  0851               	movf	fround@prec,w
  4835  13D0  00C2               	movwf	??_fround
  4836  13D1  01C3               	clrf	??_fround+1
  4837  13D2  0842               	movf	??_fround,w
  4838  13D3  00F2               	movwf	___lwmod@dividend
  4839  13D4  0843               	movf	??_fround+1,w
  4840  13D5  00F3               	movwf	___lwmod@dividend+1
  4841  13D6  3064               	movlw	100
  4842  13D7  00F0               	movwf	___lwmod@divisor
  4843  13D8  3000               	movlw	0
  4844  13D9  00F1               	movwf	___lwmod@divisor+1
  4845  13DA  160A  118A  20B4  160A  118A  	fcall	___lwmod
  4846  13DF  0871               	movf	?___lwmod+1,w
  4847  13E0  00F9               	movwf	___lwdiv@dividend+1
  4848  13E1  0870               	movf	?___lwmod,w
  4849  13E2  00F8               	movwf	___lwdiv@dividend
  4850  13E3  160A  158A  2614  160A  118A  	fcall	___lwdiv
  4851  13E8  0876               	movf	?___lwdiv,w
  4852  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  4853  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  4854  13EB  00C4               	movwf	??_fround+2
  4855  13EC  3001               	movlw	1
  4856  13ED                     u4195:
  4857  13ED  1003               	clrc
  4858  13EE  0DC4               	rlf	??_fround+2,f
  4859  13EF  3EFF               	addlw	-1
  4860  13F0  1D03               	skipz
  4861  13F1  2BED               	goto	u4195
  4862  13F2  1003               	clrc
  4863  13F3  0D44               	rlf	??_fround+2,w
  4864  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4865  13F5  0084               	movwf	4
  4866  13F6  160A  118A  200A  160A  118A  	fcall	stringdir
  4867  13FB  00C5               	movwf	??_fround+3
  4868  13FC  160A  118A  200A  160A  118A  	fcall	stringdir
  4869  1401  00C6               	movwf	??_fround+4
  4870  1402  160A  118A  200A  160A  118A  	fcall	stringdir
  4871  1407  00C7               	movwf	??_fround+5
  4872  1408  160A  118A  200A  160A  118A  	fcall	stringdir
  4873  140D  00C8               	movwf	??_fround+6
  4874  140E  0848               	movf	??_fround+6,w
  4875  140F  00A7               	movwf	___flmul@b+3
  4876  1410  0847               	movf	??_fround+5,w
  4877  1411  00A6               	movwf	___flmul@b+2
  4878  1412  0846               	movf	??_fround+4,w
  4879  1413  00A5               	movwf	___flmul@b+1
  4880  1414  0845               	movf	??_fround+3,w
  4881  1415  00A4               	movwf	___flmul@b
  4882  1416  0850               	movf	_fround$1029+3,w
  4883  1417  00AB               	movwf	___flmul@a+3
  4884  1418  084F               	movf	_fround$1029+2,w
  4885  1419  00AA               	movwf	___flmul@a+2
  4886  141A  084E               	movf	_fround$1029+1,w
  4887  141B  00A9               	movwf	___flmul@a+1
  4888  141C  084D               	movf	_fround$1029,w
  4889  141D  00A8               	movwf	___flmul@a
  4890  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  4891  1423  1283               	bcf	3,5	;RP0=0, select bank0
  4892  1424  1303               	bcf	3,6	;RP1=0, select bank0
  4893  1425  0827               	movf	?___flmul+3,w
  4894  1426  00CC               	movwf	_fround$1030+3
  4895  1427  0826               	movf	?___flmul+2,w
  4896  1428  00CB               	movwf	_fround$1030+2
  4897  1429  0825               	movf	?___flmul+1,w
  4898  142A  00CA               	movwf	_fround$1030+1
  4899  142B  0824               	movf	?___flmul,w
  4900  142C  00C9               	movwf	_fround$1030
  4901                           
  4902                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4903  142D  300A               	movlw	10
  4904  142E  00F0               	movwf	___lwmod@divisor
  4905  142F  3000               	movlw	0
  4906  1430  00F1               	movwf	___lwmod@divisor+1
  4907  1431  0851               	movf	fround@prec,w
  4908  1432  00C2               	movwf	??_fround
  4909  1433  01C3               	clrf	??_fround+1
  4910  1434  0842               	movf	??_fround,w
  4911  1435  00F2               	movwf	___lwmod@dividend
  4912  1436  0843               	movf	??_fround+1,w
  4913  1437  00F3               	movwf	___lwmod@dividend+1
  4914  1438  160A  118A  20B4  160A  118A  	fcall	___lwmod
  4915  143D  0870               	movf	?___lwmod,w
  4916  143E  1283               	bcf	3,5	;RP0=0, select bank0
  4917  143F  1303               	bcf	3,6	;RP1=0, select bank0
  4918  1440  00C4               	movwf	??_fround+2
  4919  1441  3001               	movlw	1
  4920  1442                     u4205:
  4921  1442  1003               	clrc
  4922  1443  0DC4               	rlf	??_fround+2,f
  4923  1444  3EFF               	addlw	-1
  4924  1445  1D03               	skipz
  4925  1446  2C42               	goto	u4205
  4926  1447  1003               	clrc
  4927  1448  0D44               	rlf	??_fround+2,w
  4928  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4929  144A  0084               	movwf	4
  4930  144B  160A  118A  200A  160A  118A  	fcall	stringdir
  4931  1450  00C5               	movwf	??_fround+3
  4932  1451  160A  118A  200A  160A  118A  	fcall	stringdir
  4933  1456  00C6               	movwf	??_fround+4
  4934  1457  160A  118A  200A  160A  118A  	fcall	stringdir
  4935  145C  00C7               	movwf	??_fround+5
  4936  145D  160A  118A  200A  160A  118A  	fcall	stringdir
  4937  1462  00C8               	movwf	??_fround+6
  4938  1463  0848               	movf	??_fround+6,w
  4939  1464  00A7               	movwf	___flmul@b+3
  4940  1465  0847               	movf	??_fround+5,w
  4941  1466  00A6               	movwf	___flmul@b+2
  4942  1467  0846               	movf	??_fround+4,w
  4943  1468  00A5               	movwf	___flmul@b+1
  4944  1469  0845               	movf	??_fround+3,w
  4945  146A  00A4               	movwf	___flmul@b
  4946  146B  084C               	movf	_fround$1030+3,w
  4947  146C  00AB               	movwf	___flmul@a+3
  4948  146D  084B               	movf	_fround$1030+2,w
  4949  146E  00AA               	movwf	___flmul@a+2
  4950  146F  084A               	movf	_fround$1030+1,w
  4951  1470  00A9               	movwf	___flmul@a+1
  4952  1471  0849               	movf	_fround$1030,w
  4953  1472  00A8               	movwf	___flmul@a
  4954  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  4955  1478  1283               	bcf	3,5	;RP0=0, select bank0
  4956  1479  1303               	bcf	3,6	;RP1=0, select bank0
  4957  147A  0827               	movf	?___flmul+3,w
  4958  147B  00C1               	movwf	?_fround+3
  4959  147C  0826               	movf	?___flmul+2,w
  4960  147D  00C0               	movwf	?_fround+2
  4961  147E  0825               	movf	?___flmul+1,w
  4962  147F  00BF               	movwf	?_fround+1
  4963  1480  0824               	movf	?___flmul,w
  4964  1481  00BE               	movwf	?_fround
  4965  1482  2D77               	goto	l276
  4966  1483                     l2754:
  4967  1483  300B               	movlw	11
  4968  1484  0251               	subwf	fround@prec,w
  4969  1485  1C03               	skipc
  4970  1486  2C88               	goto	u4211
  4971  1487  2C89               	goto	u4210
  4972  1488                     u4211:
  4973  1488  2D34               	goto	l2760
  4974  1489                     u4210:
  4975  1489                     l2756:
  4976                           
  4977                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4978  1489  303F               	movlw	63
  4979  148A  00A7               	movwf	___flmul@b+3
  4980  148B  3000               	movlw	0
  4981  148C  00A6               	movwf	___flmul@b+2
  4982  148D  3000               	movlw	0
  4983  148E  00A5               	movwf	___flmul@b+1
  4984  148F  3000               	movlw	0
  4985  1490  00A4               	movwf	___flmul@b
  4986  1491  300A               	movlw	10
  4987  1492  00F6               	movwf	___lwdiv@divisor
  4988  1493  3000               	movlw	0
  4989  1494  00F7               	movwf	___lwdiv@divisor+1
  4990  1495  0851               	movf	fround@prec,w
  4991  1496  00C2               	movwf	??_fround
  4992  1497  01C3               	clrf	??_fround+1
  4993  1498  0842               	movf	??_fround,w
  4994  1499  00F8               	movwf	___lwdiv@dividend
  4995  149A  0843               	movf	??_fround+1,w
  4996  149B  00F9               	movwf	___lwdiv@dividend+1
  4997  149C  160A  158A  2614  160A  118A  	fcall	___lwdiv
  4998  14A1  0876               	movf	?___lwdiv,w
  4999  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5000  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5001  14A4  00C4               	movwf	??_fround+2
  5002  14A5  3001               	movlw	1
  5003  14A6                     u4225:
  5004  14A6  1003               	clrc
  5005  14A7  0DC4               	rlf	??_fround+2,f
  5006  14A8  3EFF               	addlw	-1
  5007  14A9  1D03               	skipz
  5008  14AA  2CA6               	goto	u4225
  5009  14AB  1003               	clrc
  5010  14AC  0D44               	rlf	??_fround+2,w
  5011  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5012  14AE  0084               	movwf	4
  5013  14AF  160A  118A  200A  160A  118A  	fcall	stringdir
  5014  14B4  00C5               	movwf	??_fround+3
  5015  14B5  160A  118A  200A  160A  118A  	fcall	stringdir
  5016  14BA  00C6               	movwf	??_fround+4
  5017  14BB  160A  118A  200A  160A  118A  	fcall	stringdir
  5018  14C0  00C7               	movwf	??_fround+5
  5019  14C1  160A  118A  200A  160A  118A  	fcall	stringdir
  5020  14C6  00C8               	movwf	??_fround+6
  5021  14C7  0848               	movf	??_fround+6,w
  5022  14C8  00AB               	movwf	___flmul@a+3
  5023  14C9  0847               	movf	??_fround+5,w
  5024  14CA  00AA               	movwf	___flmul@a+2
  5025  14CB  0846               	movf	??_fround+4,w
  5026  14CC  00A9               	movwf	___flmul@a+1
  5027  14CD  0845               	movf	??_fround+3,w
  5028  14CE  00A8               	movwf	___flmul@a
  5029  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5030  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5031  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5032  14D6  0827               	movf	?___flmul+3,w
  5033  14D7  00D0               	movwf	_fround$1029+3
  5034  14D8  0826               	movf	?___flmul+2,w
  5035  14D9  00CF               	movwf	_fround$1029+2
  5036  14DA  0825               	movf	?___flmul+1,w
  5037  14DB  00CE               	movwf	_fround$1029+1
  5038  14DC  0824               	movf	?___flmul,w
  5039  14DD  00CD               	movwf	_fround$1029
  5040                           
  5041                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5042  14DE  300A               	movlw	10
  5043  14DF  00F0               	movwf	___lwmod@divisor
  5044  14E0  3000               	movlw	0
  5045  14E1  00F1               	movwf	___lwmod@divisor+1
  5046  14E2  0851               	movf	fround@prec,w
  5047  14E3  00C2               	movwf	??_fround
  5048  14E4  01C3               	clrf	??_fround+1
  5049  14E5  0842               	movf	??_fround,w
  5050  14E6  00F2               	movwf	___lwmod@dividend
  5051  14E7  0843               	movf	??_fround+1,w
  5052  14E8  00F3               	movwf	___lwmod@dividend+1
  5053  14E9  160A  118A  20B4  160A  118A  	fcall	___lwmod
  5054  14EE  0870               	movf	?___lwmod,w
  5055  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5056  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5057  14F1  00C4               	movwf	??_fround+2
  5058  14F2  3001               	movlw	1
  5059  14F3                     u4235:
  5060  14F3  1003               	clrc
  5061  14F4  0DC4               	rlf	??_fround+2,f
  5062  14F5  3EFF               	addlw	-1
  5063  14F6  1D03               	skipz
  5064  14F7  2CF3               	goto	u4235
  5065  14F8  1003               	clrc
  5066  14F9  0D44               	rlf	??_fround+2,w
  5067  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5068  14FB  0084               	movwf	4
  5069  14FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5070  1501  00C5               	movwf	??_fround+3
  5071  1502  160A  118A  200A  160A  118A  	fcall	stringdir
  5072  1507  00C6               	movwf	??_fround+4
  5073  1508  160A  118A  200A  160A  118A  	fcall	stringdir
  5074  150D  00C7               	movwf	??_fround+5
  5075  150E  160A  118A  200A  160A  118A  	fcall	stringdir
  5076  1513  00C8               	movwf	??_fround+6
  5077  1514  0848               	movf	??_fround+6,w
  5078  1515  00A7               	movwf	___flmul@b+3
  5079  1516  0847               	movf	??_fround+5,w
  5080  1517  00A6               	movwf	___flmul@b+2
  5081  1518  0846               	movf	??_fround+4,w
  5082  1519  00A5               	movwf	___flmul@b+1
  5083  151A  0845               	movf	??_fround+3,w
  5084  151B  00A4               	movwf	___flmul@b
  5085  151C  0850               	movf	_fround$1029+3,w
  5086  151D  00AB               	movwf	___flmul@a+3
  5087  151E  084F               	movf	_fround$1029+2,w
  5088  151F  00AA               	movwf	___flmul@a+2
  5089  1520  084E               	movf	_fround$1029+1,w
  5090  1521  00A9               	movwf	___flmul@a+1
  5091  1522  084D               	movf	_fround$1029,w
  5092  1523  00A8               	movwf	___flmul@a
  5093  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5094  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5095  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5096  152B  0827               	movf	?___flmul+3,w
  5097  152C  00C1               	movwf	?_fround+3
  5098  152D  0826               	movf	?___flmul+2,w
  5099  152E  00C0               	movwf	?_fround+2
  5100  152F  0825               	movf	?___flmul+1,w
  5101  1530  00BF               	movwf	?_fround+1
  5102  1531  0824               	movf	?___flmul,w
  5103  1532  00BE               	movwf	?_fround
  5104  1533  2D77               	goto	l276
  5105  1534                     l2760:
  5106                           
  5107                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5108  1534  303F               	movlw	63
  5109  1535  00A7               	movwf	___flmul@b+3
  5110  1536  3000               	movlw	0
  5111  1537  00A6               	movwf	___flmul@b+2
  5112  1538  3000               	movlw	0
  5113  1539  00A5               	movwf	___flmul@b+1
  5114  153A  3000               	movlw	0
  5115  153B  00A4               	movwf	___flmul@b
  5116  153C  0851               	movf	fround@prec,w
  5117  153D  00C2               	movwf	??_fround
  5118  153E  3001               	movlw	1
  5119  153F                     u4245:
  5120  153F  1003               	clrc
  5121  1540  0DC2               	rlf	??_fround,f
  5122  1541  3EFF               	addlw	-1
  5123  1542  1D03               	skipz
  5124  1543  2D3F               	goto	u4245
  5125  1544  1003               	clrc
  5126  1545  0D42               	rlf	??_fround,w
  5127  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5128  1547  0084               	movwf	4
  5129  1548  160A  118A  200A  160A  118A  	fcall	stringdir
  5130  154D  00C3               	movwf	??_fround+1
  5131  154E  160A  118A  200A  160A  118A  	fcall	stringdir
  5132  1553  00C4               	movwf	??_fround+2
  5133  1554  160A  118A  200A  160A  118A  	fcall	stringdir
  5134  1559  00C5               	movwf	??_fround+3
  5135  155A  160A  118A  200A  160A  118A  	fcall	stringdir
  5136  155F  00C6               	movwf	??_fround+4
  5137  1560  0846               	movf	??_fround+4,w
  5138  1561  00AB               	movwf	___flmul@a+3
  5139  1562  0845               	movf	??_fround+3,w
  5140  1563  00AA               	movwf	___flmul@a+2
  5141  1564  0844               	movf	??_fround+2,w
  5142  1565  00A9               	movwf	___flmul@a+1
  5143  1566  0843               	movf	??_fround+1,w
  5144  1567  00A8               	movwf	___flmul@a
  5145  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5146  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5147  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5148  156F  0827               	movf	?___flmul+3,w
  5149  1570  00C1               	movwf	?_fround+3
  5150  1571  0826               	movf	?___flmul+2,w
  5151  1572  00C0               	movwf	?_fround+2
  5152  1573  0825               	movf	?___flmul+1,w
  5153  1574  00BF               	movwf	?_fround+1
  5154  1575  0824               	movf	?___flmul,w
  5155  1576  00BE               	movwf	?_fround
  5156  1577                     l276:
  5157  1577  0008               	return
  5158  1578                     __end_of_fround:
  5159                           
  5160                           	psect	text7
  5161  10B4                     __ptext7:	
  5162 ;; *************** function ___lwmod *****************
  5163 ;; Defined at:
  5164 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  divisor         2    0[COMMON] unsigned int 
  5167 ;;  dividend        2    2[COMMON] unsigned int 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;  counter         1    5[COMMON] unsigned char 
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  2    0[COMMON] unsigned int 
  5172 ;; Registers used:
  5173 ;;		wreg, status,2, status,0
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5179 ;;      Params:         4       0       0       0       0
  5180 ;;      Locals:         1       0       0       0       0
  5181 ;;      Temps:          1       0       0       0       0
  5182 ;;      Totals:         6       0       0       0       0
  5183 ;;Total ram usage:        6 bytes
  5184 ;; Hardware stack levels used: 1
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_fround
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192  10B4                     ___lwmod:	
  5193                           ;psect for function ___lwmod
  5194                           
  5195  10B4                     l2340:	
  5196                           ;incstack = 0
  5197                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5198                           
  5199  10B4  0870               	movf	___lwmod@divisor,w
  5200  10B5  0471               	iorwf	___lwmod@divisor+1,w
  5201  10B6  1903               	btfsc	3,2
  5202  10B7  28B9               	goto	u3191
  5203  10B8  28BA               	goto	u3190
  5204  10B9                     u3191:
  5205  10B9  28E9               	goto	l2358
  5206  10BA                     u3190:
  5207  10BA                     l2342:
  5208  10BA  01F5               	clrf	___lwmod@counter
  5209  10BB  0AF5               	incf	___lwmod@counter,f
  5210  10BC  28C8               	goto	l2348
  5211  10BD                     l2344:
  5212  10BD  3001               	movlw	1
  5213  10BE                     u3205:
  5214  10BE  1003               	clrc
  5215  10BF  0DF0               	rlf	___lwmod@divisor,f
  5216  10C0  0DF1               	rlf	___lwmod@divisor+1,f
  5217  10C1  3EFF               	addlw	-1
  5218  10C2  1D03               	skipz
  5219  10C3  28BE               	goto	u3205
  5220  10C4                     l2346:
  5221  10C4  3001               	movlw	1
  5222  10C5  00F4               	movwf	??___lwmod
  5223  10C6  0874               	movf	??___lwmod,w
  5224  10C7  07F5               	addwf	___lwmod@counter,f
  5225  10C8                     l2348:
  5226  10C8  1FF1               	btfss	___lwmod@divisor+1,7
  5227  10C9  28CB               	goto	u3211
  5228  10CA  28CC               	goto	u3210
  5229  10CB                     u3211:
  5230  10CB  28BD               	goto	l2344
  5231  10CC                     u3210:
  5232  10CC                     l2350:
  5233  10CC  0871               	movf	___lwmod@divisor+1,w
  5234  10CD  0273               	subwf	___lwmod@dividend+1,w
  5235  10CE  1D03               	skipz
  5236  10CF  28D2               	goto	u3225
  5237  10D0  0870               	movf	___lwmod@divisor,w
  5238  10D1  0272               	subwf	___lwmod@dividend,w
  5239  10D2                     u3225:
  5240  10D2  1C03               	skipc
  5241  10D3  28D5               	goto	u3221
  5242  10D4  28D6               	goto	u3220
  5243  10D5                     u3221:
  5244  10D5  28DC               	goto	l2354
  5245  10D6                     u3220:
  5246  10D6                     l2352:
  5247  10D6  0870               	movf	___lwmod@divisor,w
  5248  10D7  02F2               	subwf	___lwmod@dividend,f
  5249  10D8  0871               	movf	___lwmod@divisor+1,w
  5250  10D9  1C03               	skipc
  5251  10DA  03F3               	decf	___lwmod@dividend+1,f
  5252  10DB  02F3               	subwf	___lwmod@dividend+1,f
  5253  10DC                     l2354:
  5254  10DC  3001               	movlw	1
  5255  10DD                     u3235:
  5256  10DD  1003               	clrc
  5257  10DE  0CF1               	rrf	___lwmod@divisor+1,f
  5258  10DF  0CF0               	rrf	___lwmod@divisor,f
  5259  10E0  3EFF               	addlw	-1
  5260  10E1  1D03               	skipz
  5261  10E2  28DD               	goto	u3235
  5262  10E3                     l2356:
  5263  10E3  3001               	movlw	1
  5264  10E4  02F5               	subwf	___lwmod@counter,f
  5265  10E5  1D03               	btfss	3,2
  5266  10E6  28E8               	goto	u3241
  5267  10E7  28E9               	goto	u3240
  5268  10E8                     u3241:
  5269  10E8  28CC               	goto	l2350
  5270  10E9                     u3240:
  5271  10E9                     l2358:
  5272  10E9  0873               	movf	___lwmod@dividend+1,w
  5273  10EA  00F1               	movwf	?___lwmod+1
  5274  10EB  0872               	movf	___lwmod@dividend,w
  5275  10EC  00F0               	movwf	?___lwmod
  5276  10ED                     l669:
  5277  10ED  0008               	return
  5278  10EE                     __end_of___lwmod:
  5279                           
  5280                           	psect	text8
  5281  1E14                     __ptext8:	
  5282 ;; *************** function ___lwdiv *****************
  5283 ;; Defined at:
  5284 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;  divisor         2    6[COMMON] unsigned int 
  5287 ;;  dividend        2    8[COMMON] unsigned int 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;  quotient        2   11[COMMON] unsigned int 
  5290 ;;  counter         1   13[COMMON] unsigned char 
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  2    6[COMMON] unsigned int 
  5293 ;; Registers used:
  5294 ;;		wreg, status,2, status,0
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5300 ;;      Params:         4       0       0       0       0
  5301 ;;      Locals:         3       0       0       0       0
  5302 ;;      Temps:          1       0       0       0       0
  5303 ;;      Totals:         8       0       0       0       0
  5304 ;;Total ram usage:        8 bytes
  5305 ;; Hardware stack levels used: 1
  5306 ;; This function calls:
  5307 ;;		Nothing
  5308 ;; This function is called by:
  5309 ;;		_fround
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313  1E14                     ___lwdiv:	
  5314                           ;psect for function ___lwdiv
  5315                           
  5316  1E14                     l2314:	
  5317                           ;incstack = 0
  5318                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5319                           
  5320  1E14  01FB               	clrf	___lwdiv@quotient
  5321  1E15  01FC               	clrf	___lwdiv@quotient+1
  5322  1E16                     l2316:
  5323  1E16  0876               	movf	___lwdiv@divisor,w
  5324  1E17  0477               	iorwf	___lwdiv@divisor+1,w
  5325  1E18  1903               	btfsc	3,2
  5326  1E19  2E1B               	goto	u3121
  5327  1E1A  2E1C               	goto	u3120
  5328  1E1B                     u3121:
  5329  1E1B  2E53               	goto	l2336
  5330  1E1C                     u3120:
  5331  1E1C                     l2318:
  5332  1E1C  01FD               	clrf	___lwdiv@counter
  5333  1E1D  0AFD               	incf	___lwdiv@counter,f
  5334  1E1E  2E2A               	goto	l2324
  5335  1E1F                     l2320:
  5336  1E1F  3001               	movlw	1
  5337  1E20                     u3135:
  5338  1E20  1003               	clrc
  5339  1E21  0DF6               	rlf	___lwdiv@divisor,f
  5340  1E22  0DF7               	rlf	___lwdiv@divisor+1,f
  5341  1E23  3EFF               	addlw	-1
  5342  1E24  1D03               	skipz
  5343  1E25  2E20               	goto	u3135
  5344  1E26                     l2322:
  5345  1E26  3001               	movlw	1
  5346  1E27  00FA               	movwf	??___lwdiv
  5347  1E28  087A               	movf	??___lwdiv,w
  5348  1E29  07FD               	addwf	___lwdiv@counter,f
  5349  1E2A                     l2324:
  5350  1E2A  1FF7               	btfss	___lwdiv@divisor+1,7
  5351  1E2B  2E2D               	goto	u3141
  5352  1E2C  2E2E               	goto	u3140
  5353  1E2D                     u3141:
  5354  1E2D  2E1F               	goto	l2320
  5355  1E2E                     u3140:
  5356  1E2E                     l2326:
  5357  1E2E  3001               	movlw	1
  5358  1E2F                     u3155:
  5359  1E2F  1003               	clrc
  5360  1E30  0DFB               	rlf	___lwdiv@quotient,f
  5361  1E31  0DFC               	rlf	___lwdiv@quotient+1,f
  5362  1E32  3EFF               	addlw	-1
  5363  1E33  1D03               	skipz
  5364  1E34  2E2F               	goto	u3155
  5365  1E35  0877               	movf	___lwdiv@divisor+1,w
  5366  1E36  0279               	subwf	___lwdiv@dividend+1,w
  5367  1E37  1D03               	skipz
  5368  1E38  2E3B               	goto	u3165
  5369  1E39  0876               	movf	___lwdiv@divisor,w
  5370  1E3A  0278               	subwf	___lwdiv@dividend,w
  5371  1E3B                     u3165:
  5372  1E3B  1C03               	skipc
  5373  1E3C  2E3E               	goto	u3161
  5374  1E3D  2E3F               	goto	u3160
  5375  1E3E                     u3161:
  5376  1E3E  2E46               	goto	l2332
  5377  1E3F                     u3160:
  5378  1E3F                     l2328:
  5379  1E3F  0876               	movf	___lwdiv@divisor,w
  5380  1E40  02F8               	subwf	___lwdiv@dividend,f
  5381  1E41  0877               	movf	___lwdiv@divisor+1,w
  5382  1E42  1C03               	skipc
  5383  1E43  03F9               	decf	___lwdiv@dividend+1,f
  5384  1E44  02F9               	subwf	___lwdiv@dividend+1,f
  5385  1E45                     l2330:
  5386  1E45  147B               	bsf	___lwdiv@quotient,0
  5387  1E46                     l2332:
  5388  1E46  3001               	movlw	1
  5389  1E47                     u3175:
  5390  1E47  1003               	clrc
  5391  1E48  0CF7               	rrf	___lwdiv@divisor+1,f
  5392  1E49  0CF6               	rrf	___lwdiv@divisor,f
  5393  1E4A  3EFF               	addlw	-1
  5394  1E4B  1D03               	skipz
  5395  1E4C  2E47               	goto	u3175
  5396  1E4D                     l2334:
  5397  1E4D  3001               	movlw	1
  5398  1E4E  02FD               	subwf	___lwdiv@counter,f
  5399  1E4F  1D03               	btfss	3,2
  5400  1E50  2E52               	goto	u3181
  5401  1E51  2E53               	goto	u3180
  5402  1E52                     u3181:
  5403  1E52  2E2E               	goto	l2326
  5404  1E53                     u3180:
  5405  1E53                     l2336:
  5406  1E53  087C               	movf	___lwdiv@quotient+1,w
  5407  1E54  00F7               	movwf	?___lwdiv+1
  5408  1E55  087B               	movf	___lwdiv@quotient,w
  5409  1E56  00F6               	movwf	?___lwdiv
  5410  1E57                     l659:
  5411  1E57  0008               	return
  5412  1E58                     __end_of___lwdiv:
  5413                           
  5414                           	psect	text9
  5415  0C9F                     __ptext9:	
  5416 ;; *************** function ___flmul *****************
  5417 ;; Defined at:
  5418 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  b               4    4[BANK0 ] unsigned int 
  5421 ;;  a               4    8[BANK0 ] unsigned int 
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;  prod            4   24[BANK0 ] struct .
  5424 ;;  grs             4   18[BANK0 ] unsigned long 
  5425 ;;  temp            2   28[BANK0 ] struct .
  5426 ;;  bexp            1   23[BANK0 ] unsigned char 
  5427 ;;  aexp            1   22[BANK0 ] unsigned char 
  5428 ;;  sign            1   17[BANK0 ] unsigned char 
  5429 ;; Return value:  Size  Location     Type
  5430 ;;                  4    4[BANK0 ] unsigned char 
  5431 ;; Registers used:
  5432 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5438 ;;      Params:         0       8       0       0       0
  5439 ;;      Locals:         0      13       0       0       0
  5440 ;;      Temps:          0       5       0       0       0
  5441 ;;      Totals:         0      26       0       0       0
  5442 ;;Total ram usage:       26 bytes
  5443 ;; Hardware stack levels used: 1
  5444 ;; Hardware stack levels required when called: 1
  5445 ;; This function calls:
  5446 ;;		__Umul8_16
  5447 ;; This function is called by:
  5448 ;;		_fround
  5449 ;;		_scale
  5450 ;;		_sprintf
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           
  5454  0C9F                     ___flmul:	
  5455                           ;psect for function ___flmul
  5456                           
  5457  0C9F                     l2556:	
  5458                           ;incstack = 0
  5459                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5460                           
  5461  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5462  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5463  0CA1  0827               	movf	___flmul@b+3,w
  5464  0CA2  3980               	andlw	128
  5465  0CA3  00AC               	movwf	??___flmul
  5466  0CA4  082C               	movf	??___flmul,w
  5467  0CA5  00B1               	movwf	___flmul@sign
  5468  0CA6                     l2558:
  5469  0CA6  0827               	movf	___flmul@b+3,w
  5470  0CA7  00AC               	movwf	??___flmul
  5471  0CA8  072C               	addwf	??___flmul,w
  5472  0CA9  00AD               	movwf	??___flmul+1
  5473  0CAA  082D               	movf	??___flmul+1,w
  5474  0CAB  00B7               	movwf	___flmul@bexp
  5475  0CAC                     l2560:
  5476  0CAC  1FA6               	btfss	___flmul@b+2,7
  5477  0CAD  2CAF               	goto	u3711
  5478  0CAE  2CB0               	goto	u3710
  5479  0CAF                     u3711:
  5480  0CAF  2CB1               	goto	l2564
  5481  0CB0                     u3710:
  5482  0CB0                     l2562:
  5483  0CB0  1437               	bsf	___flmul@bexp,0
  5484  0CB1                     l2564:
  5485  0CB1  0837               	movf	___flmul@bexp,w
  5486  0CB2  1903               	btfsc	3,2
  5487  0CB3  2CB5               	goto	u3721
  5488  0CB4  2CB6               	goto	u3720
  5489  0CB5                     u3721:
  5490  0CB5  2CC5               	goto	l2572
  5491  0CB6                     u3720:
  5492  0CB6                     l2566:
  5493  0CB6  0A37               	incf	___flmul@bexp,w
  5494  0CB7  1D03               	btfss	3,2
  5495  0CB8  2CBA               	goto	u3731
  5496  0CB9  2CBB               	goto	u3730
  5497  0CBA                     u3731:
  5498  0CBA  2CC3               	goto	l2570
  5499  0CBB                     u3730:
  5500  0CBB                     l2568:
  5501  0CBB  3000               	movlw	0
  5502  0CBC  00A7               	movwf	___flmul@b+3
  5503  0CBD  3000               	movlw	0
  5504  0CBE  00A6               	movwf	___flmul@b+2
  5505  0CBF  3000               	movlw	0
  5506  0CC0  00A5               	movwf	___flmul@b+1
  5507  0CC1  3000               	movlw	0
  5508  0CC2  00A4               	movwf	___flmul@b
  5509  0CC3                     l2570:
  5510  0CC3  17A6               	bsf	___flmul@b+2,7
  5511  0CC4  2CCD               	goto	l2574
  5512  0CC5                     l2572:
  5513  0CC5  3000               	movlw	0
  5514  0CC6  00A7               	movwf	___flmul@b+3
  5515  0CC7  3000               	movlw	0
  5516  0CC8  00A6               	movwf	___flmul@b+2
  5517  0CC9  3000               	movlw	0
  5518  0CCA  00A5               	movwf	___flmul@b+1
  5519  0CCB  3000               	movlw	0
  5520  0CCC  00A4               	movwf	___flmul@b
  5521  0CCD                     l2574:
  5522  0CCD  082B               	movf	___flmul@a+3,w
  5523  0CCE  3980               	andlw	128
  5524  0CCF  00AC               	movwf	??___flmul
  5525  0CD0  082C               	movf	??___flmul,w
  5526  0CD1  06B1               	xorwf	___flmul@sign,f
  5527  0CD2                     l2576:
  5528  0CD2  082B               	movf	___flmul@a+3,w
  5529  0CD3  00AC               	movwf	??___flmul
  5530  0CD4  072C               	addwf	??___flmul,w
  5531  0CD5  00AD               	movwf	??___flmul+1
  5532  0CD6  082D               	movf	??___flmul+1,w
  5533  0CD7  00B6               	movwf	___flmul@aexp
  5534  0CD8                     l2578:
  5535  0CD8  1FAA               	btfss	___flmul@a+2,7
  5536  0CD9  2CDB               	goto	u3741
  5537  0CDA  2CDC               	goto	u3740
  5538  0CDB                     u3741:
  5539  0CDB  2CDD               	goto	l2582
  5540  0CDC                     u3740:
  5541  0CDC                     l2580:
  5542  0CDC  1436               	bsf	___flmul@aexp,0
  5543  0CDD                     l2582:
  5544  0CDD  0836               	movf	___flmul@aexp,w
  5545  0CDE  1903               	btfsc	3,2
  5546  0CDF  2CE1               	goto	u3751
  5547  0CE0  2CE2               	goto	u3750
  5548  0CE1                     u3751:
  5549  0CE1  2CF1               	goto	l2590
  5550  0CE2                     u3750:
  5551  0CE2                     l2584:
  5552  0CE2  0A36               	incf	___flmul@aexp,w
  5553  0CE3  1D03               	btfss	3,2
  5554  0CE4  2CE6               	goto	u3761
  5555  0CE5  2CE7               	goto	u3760
  5556  0CE6                     u3761:
  5557  0CE6  2CEF               	goto	l2588
  5558  0CE7                     u3760:
  5559  0CE7                     l2586:
  5560  0CE7  3000               	movlw	0
  5561  0CE8  00AB               	movwf	___flmul@a+3
  5562  0CE9  3000               	movlw	0
  5563  0CEA  00AA               	movwf	___flmul@a+2
  5564  0CEB  3000               	movlw	0
  5565  0CEC  00A9               	movwf	___flmul@a+1
  5566  0CED  3000               	movlw	0
  5567  0CEE  00A8               	movwf	___flmul@a
  5568  0CEF                     l2588:
  5569  0CEF  17AA               	bsf	___flmul@a+2,7
  5570  0CF0  2CF9               	goto	l2592
  5571  0CF1                     l2590:
  5572  0CF1  3000               	movlw	0
  5573  0CF2  00AB               	movwf	___flmul@a+3
  5574  0CF3  3000               	movlw	0
  5575  0CF4  00AA               	movwf	___flmul@a+2
  5576  0CF5  3000               	movlw	0
  5577  0CF6  00A9               	movwf	___flmul@a+1
  5578  0CF7  3000               	movlw	0
  5579  0CF8  00A8               	movwf	___flmul@a
  5580  0CF9                     l2592:
  5581  0CF9  0836               	movf	___flmul@aexp,w
  5582  0CFA  1903               	btfsc	3,2
  5583  0CFB  2CFD               	goto	u3771
  5584  0CFC  2CFE               	goto	u3770
  5585  0CFD                     u3771:
  5586  0CFD  2D03               	goto	l2596
  5587  0CFE                     u3770:
  5588  0CFE                     l2594:
  5589  0CFE  0837               	movf	___flmul@bexp,w
  5590  0CFF  1D03               	btfss	3,2
  5591  0D00  2D02               	goto	u3781
  5592  0D01  2D03               	goto	u3780
  5593  0D02                     u3781:
  5594  0D02  2D0C               	goto	l2600
  5595  0D03                     u3780:
  5596  0D03                     l2596:
  5597  0D03  3000               	movlw	0
  5598  0D04  00A7               	movwf	?___flmul+3
  5599  0D05  3000               	movlw	0
  5600  0D06  00A6               	movwf	?___flmul+2
  5601  0D07  3000               	movlw	0
  5602  0D08  00A5               	movwf	?___flmul+1
  5603  0D09  3000               	movlw	0
  5604  0D0A  00A4               	movwf	?___flmul
  5605  0D0B  2FFF               	goto	l776
  5606  0D0C                     l2600:
  5607  0D0C  0824               	movf	___flmul@b,w
  5608  0D0D  00AC               	movwf	??___flmul
  5609  0D0E  082C               	movf	??___flmul,w
  5610  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  5611  0D10  082A               	movf	___flmul@a+2,w
  5612  0D11  160A  158A  2545  120A  158A  	fcall	__Umul8_16
  5613  0D16  0871               	movf	?__Umul8_16+1,w
  5614  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  5615  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  5616  0D19  00BD               	movwf	___flmul@temp+1
  5617  0D1A  0870               	movf	?__Umul8_16,w
  5618  0D1B  00BC               	movwf	___flmul@temp
  5619  0D1C                     l2602:
  5620  0D1C  083C               	movf	___flmul@temp,w
  5621  0D1D  00AC               	movwf	??___flmul
  5622  0D1E  01AD               	clrf	??___flmul+1
  5623  0D1F  01AE               	clrf	??___flmul+2
  5624  0D20  01AF               	clrf	??___flmul+3
  5625  0D21  082F               	movf	??___flmul+3,w
  5626  0D22  00B5               	movwf	___flmul@grs+3
  5627  0D23  082E               	movf	??___flmul+2,w
  5628  0D24  00B4               	movwf	___flmul@grs+2
  5629  0D25  082D               	movf	??___flmul+1,w
  5630  0D26  00B3               	movwf	___flmul@grs+1
  5631  0D27  082C               	movf	??___flmul,w
  5632  0D28  00B2               	movwf	___flmul@grs
  5633  0D29                     l2604:
  5634  0D29  083D               	movf	___flmul@temp+1,w
  5635  0D2A  00AC               	movwf	??___flmul
  5636  0D2B  01AD               	clrf	??___flmul+1
  5637  0D2C  01AE               	clrf	??___flmul+2
  5638  0D2D  01AF               	clrf	??___flmul+3
  5639  0D2E  082F               	movf	??___flmul+3,w
  5640  0D2F  00BB               	movwf	___flmul@prod+3
  5641  0D30  082E               	movf	??___flmul+2,w
  5642  0D31  00BA               	movwf	___flmul@prod+2
  5643  0D32  082D               	movf	??___flmul+1,w
  5644  0D33  00B9               	movwf	___flmul@prod+1
  5645  0D34  082C               	movf	??___flmul,w
  5646  0D35  00B8               	movwf	___flmul@prod
  5647  0D36  0825               	movf	___flmul@b+1,w
  5648  0D37  00AC               	movwf	??___flmul
  5649  0D38  082C               	movf	??___flmul,w
  5650  0D39  00F0               	movwf	__Umul8_16@multiplicand
  5651  0D3A  0829               	movf	___flmul@a+1,w
  5652  0D3B  160A  158A  2545  120A  158A  	fcall	__Umul8_16
  5653  0D40  0871               	movf	?__Umul8_16+1,w
  5654  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5655  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5656  0D43  00BD               	movwf	___flmul@temp+1
  5657  0D44  0870               	movf	?__Umul8_16,w
  5658  0D45  00BC               	movwf	___flmul@temp
  5659  0D46                     l2606:
  5660  0D46  083C               	movf	___flmul@temp,w
  5661  0D47  00AC               	movwf	??___flmul
  5662  0D48  01AD               	clrf	??___flmul+1
  5663  0D49  01AE               	clrf	??___flmul+2
  5664  0D4A  01AF               	clrf	??___flmul+3
  5665  0D4B  082C               	movf	??___flmul,w
  5666  0D4C  07B2               	addwf	___flmul@grs,f
  5667  0D4D  082D               	movf	??___flmul+1,w
  5668  0D4E  1103               	clrz
  5669  0D4F  1803               	skipnc
  5670  0D50  3E01               	addlw	1
  5671  0D51  1903               	skipnz
  5672  0D52  2D54               	goto	u3791
  5673  0D53  07B3               	addwf	___flmul@grs+1,f
  5674  0D54                     u3791:
  5675  0D54  082E               	movf	??___flmul+2,w
  5676  0D55  1103               	clrz
  5677  0D56  1803               	skipnc
  5678  0D57  3E01               	addlw	1
  5679  0D58  1903               	skipnz
  5680  0D59  2D5B               	goto	u3792
  5681  0D5A  07B4               	addwf	___flmul@grs+2,f
  5682  0D5B                     u3792:
  5683  0D5B  082F               	movf	??___flmul+3,w
  5684  0D5C  1103               	clrz
  5685  0D5D  1803               	skipnc
  5686  0D5E  3E01               	addlw	1
  5687  0D5F  1903               	skipnz
  5688  0D60  2D62               	goto	u3793
  5689  0D61  07B5               	addwf	___flmul@grs+3,f
  5690  0D62                     u3793:
  5691  0D62                     l2608:
  5692  0D62  083D               	movf	___flmul@temp+1,w
  5693  0D63  00AC               	movwf	??___flmul
  5694  0D64  01AD               	clrf	??___flmul+1
  5695  0D65  01AE               	clrf	??___flmul+2
  5696  0D66  01AF               	clrf	??___flmul+3
  5697  0D67  082C               	movf	??___flmul,w
  5698  0D68  07B8               	addwf	___flmul@prod,f
  5699  0D69  082D               	movf	??___flmul+1,w
  5700  0D6A  1103               	clrz
  5701  0D6B  1803               	skipnc
  5702  0D6C  3E01               	addlw	1
  5703  0D6D  1903               	skipnz
  5704  0D6E  2D70               	goto	u3801
  5705  0D6F  07B9               	addwf	___flmul@prod+1,f
  5706  0D70                     u3801:
  5707  0D70  082E               	movf	??___flmul+2,w
  5708  0D71  1103               	clrz
  5709  0D72  1803               	skipnc
  5710  0D73  3E01               	addlw	1
  5711  0D74  1903               	skipnz
  5712  0D75  2D77               	goto	u3802
  5713  0D76  07BA               	addwf	___flmul@prod+2,f
  5714  0D77                     u3802:
  5715  0D77  082F               	movf	??___flmul+3,w
  5716  0D78  1103               	clrz
  5717  0D79  1803               	skipnc
  5718  0D7A  3E01               	addlw	1
  5719  0D7B  1903               	skipnz
  5720  0D7C  2D7E               	goto	u3803
  5721  0D7D  07BB               	addwf	___flmul@prod+3,f
  5722  0D7E                     u3803:
  5723  0D7E  0826               	movf	___flmul@b+2,w
  5724  0D7F  00AC               	movwf	??___flmul
  5725  0D80  082C               	movf	??___flmul,w
  5726  0D81  00F0               	movwf	__Umul8_16@multiplicand
  5727  0D82  0828               	movf	___flmul@a,w
  5728  0D83  160A  158A  2545  120A  158A  	fcall	__Umul8_16
  5729  0D88  0871               	movf	?__Umul8_16+1,w
  5730  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  5731  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  5732  0D8B  00BD               	movwf	___flmul@temp+1
  5733  0D8C  0870               	movf	?__Umul8_16,w
  5734  0D8D  00BC               	movwf	___flmul@temp
  5735  0D8E                     l2610:
  5736  0D8E  083C               	movf	___flmul@temp,w
  5737  0D8F  00AC               	movwf	??___flmul
  5738  0D90  01AD               	clrf	??___flmul+1
  5739  0D91  01AE               	clrf	??___flmul+2
  5740  0D92  01AF               	clrf	??___flmul+3
  5741  0D93  082C               	movf	??___flmul,w
  5742  0D94  07B2               	addwf	___flmul@grs,f
  5743  0D95  082D               	movf	??___flmul+1,w
  5744  0D96  1103               	clrz
  5745  0D97  1803               	skipnc
  5746  0D98  3E01               	addlw	1
  5747  0D99  1903               	skipnz
  5748  0D9A  2D9C               	goto	u3811
  5749  0D9B  07B3               	addwf	___flmul@grs+1,f
  5750  0D9C                     u3811:
  5751  0D9C  082E               	movf	??___flmul+2,w
  5752  0D9D  1103               	clrz
  5753  0D9E  1803               	skipnc
  5754  0D9F  3E01               	addlw	1
  5755  0DA0  1903               	skipnz
  5756  0DA1  2DA3               	goto	u3812
  5757  0DA2  07B4               	addwf	___flmul@grs+2,f
  5758  0DA3                     u3812:
  5759  0DA3  082F               	movf	??___flmul+3,w
  5760  0DA4  1103               	clrz
  5761  0DA5  1803               	skipnc
  5762  0DA6  3E01               	addlw	1
  5763  0DA7  1903               	skipnz
  5764  0DA8  2DAA               	goto	u3813
  5765  0DA9  07B5               	addwf	___flmul@grs+3,f
  5766  0DAA                     u3813:
  5767  0DAA                     l2612:
  5768  0DAA  083D               	movf	___flmul@temp+1,w
  5769  0DAB  00AC               	movwf	??___flmul
  5770  0DAC  01AD               	clrf	??___flmul+1
  5771  0DAD  01AE               	clrf	??___flmul+2
  5772  0DAE  01AF               	clrf	??___flmul+3
  5773  0DAF  082C               	movf	??___flmul,w
  5774  0DB0  07B8               	addwf	___flmul@prod,f
  5775  0DB1  082D               	movf	??___flmul+1,w
  5776  0DB2  1103               	clrz
  5777  0DB3  1803               	skipnc
  5778  0DB4  3E01               	addlw	1
  5779  0DB5  1903               	skipnz
  5780  0DB6  2DB8               	goto	u3821
  5781  0DB7  07B9               	addwf	___flmul@prod+1,f
  5782  0DB8                     u3821:
  5783  0DB8  082E               	movf	??___flmul+2,w
  5784  0DB9  1103               	clrz
  5785  0DBA  1803               	skipnc
  5786  0DBB  3E01               	addlw	1
  5787  0DBC  1903               	skipnz
  5788  0DBD  2DBF               	goto	u3822
  5789  0DBE  07BA               	addwf	___flmul@prod+2,f
  5790  0DBF                     u3822:
  5791  0DBF  082F               	movf	??___flmul+3,w
  5792  0DC0  1103               	clrz
  5793  0DC1  1803               	skipnc
  5794  0DC2  3E01               	addlw	1
  5795  0DC3  1903               	skipnz
  5796  0DC4  2DC6               	goto	u3823
  5797  0DC5  07BB               	addwf	___flmul@prod+3,f
  5798  0DC6                     u3823:
  5799  0DC6                     l2614:
  5800  0DC6  3008               	movlw	8
  5801  0DC7  00AC               	movwf	??___flmul
  5802  0DC8                     u3835:
  5803  0DC8  1003               	clrc
  5804  0DC9  0DB2               	rlf	___flmul@grs,f
  5805  0DCA  0DB3               	rlf	___flmul@grs+1,f
  5806  0DCB  0DB4               	rlf	___flmul@grs+2,f
  5807  0DCC  0DB5               	rlf	___flmul@grs+3,f
  5808  0DCD  0BAC               	decfsz	??___flmul,f
  5809  0DCE  2DC8               	goto	u3835
  5810  0DCF                     l2616:
  5811  0DCF  0825               	movf	___flmul@b+1,w
  5812  0DD0  00AC               	movwf	??___flmul
  5813  0DD1  082C               	movf	??___flmul,w
  5814  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  5815  0DD3  0828               	movf	___flmul@a,w
  5816  0DD4  160A  158A  2545  120A  158A  	fcall	__Umul8_16
  5817  0DD9  0871               	movf	?__Umul8_16+1,w
  5818  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5819  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5820  0DDC  00BD               	movwf	___flmul@temp+1
  5821  0DDD  0870               	movf	?__Umul8_16,w
  5822  0DDE  00BC               	movwf	___flmul@temp
  5823  0DDF                     l2618:
  5824  0DDF  083C               	movf	___flmul@temp,w
  5825  0DE0  00AC               	movwf	??___flmul
  5826  0DE1  083D               	movf	___flmul@temp+1,w
  5827  0DE2  00AD               	movwf	??___flmul+1
  5828  0DE3  01AE               	clrf	??___flmul+2
  5829  0DE4  01AF               	clrf	??___flmul+3
  5830  0DE5  082C               	movf	??___flmul,w
  5831  0DE6  07B2               	addwf	___flmul@grs,f
  5832  0DE7  082D               	movf	??___flmul+1,w
  5833  0DE8  1103               	clrz
  5834  0DE9  1803               	skipnc
  5835  0DEA  3E01               	addlw	1
  5836  0DEB  1903               	skipnz
  5837  0DEC  2DEE               	goto	u3841
  5838  0DED  07B3               	addwf	___flmul@grs+1,f
  5839  0DEE                     u3841:
  5840  0DEE  082E               	movf	??___flmul+2,w
  5841  0DEF  1103               	clrz
  5842  0DF0  1803               	skipnc
  5843  0DF1  3E01               	addlw	1
  5844  0DF2  1903               	skipnz
  5845  0DF3  2DF5               	goto	u3842
  5846  0DF4  07B4               	addwf	___flmul@grs+2,f
  5847  0DF5                     u3842:
  5848  0DF5  082F               	movf	??___flmul+3,w
  5849  0DF6  1103               	clrz
  5850  0DF7  1803               	skipnc
  5851  0DF8  3E01               	addlw	1
  5852  0DF9  1903               	skipnz
  5853  0DFA  2DFC               	goto	u3843
  5854  0DFB  07B5               	addwf	___flmul@grs+3,f
  5855  0DFC                     u3843:
  5856  0DFC                     l2620:
  5857  0DFC  0824               	movf	___flmul@b,w
  5858  0DFD  00AC               	movwf	??___flmul
  5859  0DFE  082C               	movf	??___flmul,w
  5860  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  5861  0E00  0829               	movf	___flmul@a+1,w
  5862  0E01  160A  158A  2545  120A  158A  	fcall	__Umul8_16
  5863  0E06  0871               	movf	?__Umul8_16+1,w
  5864  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  5865  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  5866  0E09  00BD               	movwf	___flmul@temp+1
  5867  0E0A  0870               	movf	?__Umul8_16,w
  5868  0E0B  00BC               	movwf	___flmul@temp
  5869  0E0C                     l2622:
  5870  0E0C  083C               	movf	___flmul@temp,w
  5871  0E0D  00AC               	movwf	??___flmul
  5872  0E0E  083D               	movf	___flmul@temp+1,w
  5873  0E0F  00AD               	movwf	??___flmul+1
  5874  0E10  01AE               	clrf	??___flmul+2
  5875  0E11  01AF               	clrf	??___flmul+3
  5876  0E12  082C               	movf	??___flmul,w
  5877  0E13  07B2               	addwf	___flmul@grs,f
  5878  0E14  082D               	movf	??___flmul+1,w
  5879  0E15  1103               	clrz
  5880  0E16  1803               	skipnc
  5881  0E17  3E01               	addlw	1
  5882  0E18  1903               	skipnz
  5883  0E19  2E1B               	goto	u3851
  5884  0E1A  07B3               	addwf	___flmul@grs+1,f
  5885  0E1B                     u3851:
  5886  0E1B  082E               	movf	??___flmul+2,w
  5887  0E1C  1103               	clrz
  5888  0E1D  1803               	skipnc
  5889  0E1E  3E01               	addlw	1
  5890  0E1F  1903               	skipnz
  5891  0E20  2E22               	goto	u3852
  5892  0E21  07B4               	addwf	___flmul@grs+2,f
  5893  0E22                     u3852:
  5894  0E22  082F               	movf	??___flmul+3,w
  5895  0E23  1103               	clrz
  5896  0E24  1803               	skipnc
  5897  0E25  3E01               	addlw	1
  5898  0E26  1903               	skipnz
  5899  0E27  2E29               	goto	u3853
  5900  0E28  07B5               	addwf	___flmul@grs+3,f
  5901  0E29                     u3853:
  5902  0E29                     l2624:
  5903  0E29  3008               	movlw	8
  5904  0E2A  00AC               	movwf	??___flmul
  5905  0E2B                     u3865:
  5906  0E2B  1003               	clrc
  5907  0E2C  0DB2               	rlf	___flmul@grs,f
  5908  0E2D  0DB3               	rlf	___flmul@grs+1,f
  5909  0E2E  0DB4               	rlf	___flmul@grs+2,f
  5910  0E2F  0DB5               	rlf	___flmul@grs+3,f
  5911  0E30  0BAC               	decfsz	??___flmul,f
  5912  0E31  2E2B               	goto	u3865
  5913  0E32  0824               	movf	___flmul@b,w
  5914  0E33  00AC               	movwf	??___flmul
  5915  0E34  082C               	movf	??___flmul,w
  5916  0E35  00F0               	movwf	__Umul8_16@multiplicand
  5917  0E36  0828               	movf	___flmul@a,w
  5918  0E37  160A  158A  2545  120A  158A  	fcall	__Umul8_16
  5919  0E3C  0871               	movf	?__Umul8_16+1,w
  5920  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5921  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5922  0E3F  00BD               	movwf	___flmul@temp+1
  5923  0E40  0870               	movf	?__Umul8_16,w
  5924  0E41  00BC               	movwf	___flmul@temp
  5925  0E42                     l2626:
  5926  0E42  083C               	movf	___flmul@temp,w
  5927  0E43  00AC               	movwf	??___flmul
  5928  0E44  083D               	movf	___flmul@temp+1,w
  5929  0E45  00AD               	movwf	??___flmul+1
  5930  0E46  01AE               	clrf	??___flmul+2
  5931  0E47  01AF               	clrf	??___flmul+3
  5932  0E48  082C               	movf	??___flmul,w
  5933  0E49  07B2               	addwf	___flmul@grs,f
  5934  0E4A  082D               	movf	??___flmul+1,w
  5935  0E4B  1103               	clrz
  5936  0E4C  1803               	skipnc
  5937  0E4D  3E01               	addlw	1
  5938  0E4E  1903               	skipnz
  5939  0E4F  2E51               	goto	u3871
  5940  0E50  07B3               	addwf	___flmul@grs+1,f
  5941  0E51                     u3871:
  5942  0E51  082E               	movf	??___flmul+2,w
  5943  0E52  1103               	clrz
  5944  0E53  1803               	skipnc
  5945  0E54  3E01               	addlw	1
  5946  0E55  1903               	skipnz
  5947  0E56  2E58               	goto	u3872
  5948  0E57  07B4               	addwf	___flmul@grs+2,f
  5949  0E58                     u3872:
  5950  0E58  082F               	movf	??___flmul+3,w
  5951  0E59  1103               	clrz
  5952  0E5A  1803               	skipnc
  5953  0E5B  3E01               	addlw	1
  5954  0E5C  1903               	skipnz
  5955  0E5D  2E5F               	goto	u3873
  5956  0E5E  07B5               	addwf	___flmul@grs+3,f
  5957  0E5F                     u3873:
  5958  0E5F                     l2628:
  5959  0E5F  0825               	movf	___flmul@b+1,w
  5960  0E60  00AC               	movwf	??___flmul
  5961  0E61  082C               	movf	??___flmul,w
  5962  0E62  00F0               	movwf	__Umul8_16@multiplicand
  5963  0E63  082A               	movf	___flmul@a+2,w
  5964  0E64  160A  158A  2545  120A  158A  	fcall	__Umul8_16
  5965  0E69  0871               	movf	?__Umul8_16+1,w
  5966  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5967  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5968  0E6C  00BD               	movwf	___flmul@temp+1
  5969  0E6D  0870               	movf	?__Umul8_16,w
  5970  0E6E  00BC               	movwf	___flmul@temp
  5971  0E6F  083C               	movf	___flmul@temp,w
  5972  0E70  00AC               	movwf	??___flmul
  5973  0E71  083D               	movf	___flmul@temp+1,w
  5974  0E72  00AD               	movwf	??___flmul+1
  5975  0E73  01AE               	clrf	??___flmul+2
  5976  0E74  01AF               	clrf	??___flmul+3
  5977  0E75  082C               	movf	??___flmul,w
  5978  0E76  07B8               	addwf	___flmul@prod,f
  5979  0E77  082D               	movf	??___flmul+1,w
  5980  0E78  1103               	clrz
  5981  0E79  1803               	skipnc
  5982  0E7A  3E01               	addlw	1
  5983  0E7B  1903               	skipnz
  5984  0E7C  2E7E               	goto	u3881
  5985  0E7D  07B9               	addwf	___flmul@prod+1,f
  5986  0E7E                     u3881:
  5987  0E7E  082E               	movf	??___flmul+2,w
  5988  0E7F  1103               	clrz
  5989  0E80  1803               	skipnc
  5990  0E81  3E01               	addlw	1
  5991  0E82  1903               	skipnz
  5992  0E83  2E85               	goto	u3882
  5993  0E84  07BA               	addwf	___flmul@prod+2,f
  5994  0E85                     u3882:
  5995  0E85  082F               	movf	??___flmul+3,w
  5996  0E86  1103               	clrz
  5997  0E87  1803               	skipnc
  5998  0E88  3E01               	addlw	1
  5999  0E89  1903               	skipnz
  6000  0E8A  2E8C               	goto	u3883
  6001  0E8B  07BB               	addwf	___flmul@prod+3,f
  6002  0E8C                     u3883:
  6003  0E8C                     l2630:
  6004  0E8C  0826               	movf	___flmul@b+2,w
  6005  0E8D  00AC               	movwf	??___flmul
  6006  0E8E  082C               	movf	??___flmul,w
  6007  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  6008  0E90  0829               	movf	___flmul@a+1,w
  6009  0E91  160A  158A  2545  120A  158A  	fcall	__Umul8_16
  6010  0E96  0871               	movf	?__Umul8_16+1,w
  6011  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  6012  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  6013  0E99  00BD               	movwf	___flmul@temp+1
  6014  0E9A  0870               	movf	?__Umul8_16,w
  6015  0E9B  00BC               	movwf	___flmul@temp
  6016  0E9C                     l2632:
  6017  0E9C  083C               	movf	___flmul@temp,w
  6018  0E9D  00AC               	movwf	??___flmul
  6019  0E9E  083D               	movf	___flmul@temp+1,w
  6020  0E9F  00AD               	movwf	??___flmul+1
  6021  0EA0  01AE               	clrf	??___flmul+2
  6022  0EA1  01AF               	clrf	??___flmul+3
  6023  0EA2  082C               	movf	??___flmul,w
  6024  0EA3  07B8               	addwf	___flmul@prod,f
  6025  0EA4  082D               	movf	??___flmul+1,w
  6026  0EA5  1103               	clrz
  6027  0EA6  1803               	skipnc
  6028  0EA7  3E01               	addlw	1
  6029  0EA8  1903               	skipnz
  6030  0EA9  2EAB               	goto	u3891
  6031  0EAA  07B9               	addwf	___flmul@prod+1,f
  6032  0EAB                     u3891:
  6033  0EAB  082E               	movf	??___flmul+2,w
  6034  0EAC  1103               	clrz
  6035  0EAD  1803               	skipnc
  6036  0EAE  3E01               	addlw	1
  6037  0EAF  1903               	skipnz
  6038  0EB0  2EB2               	goto	u3892
  6039  0EB1  07BA               	addwf	___flmul@prod+2,f
  6040  0EB2                     u3892:
  6041  0EB2  082F               	movf	??___flmul+3,w
  6042  0EB3  1103               	clrz
  6043  0EB4  1803               	skipnc
  6044  0EB5  3E01               	addlw	1
  6045  0EB6  1903               	skipnz
  6046  0EB7  2EB9               	goto	u3893
  6047  0EB8  07BB               	addwf	___flmul@prod+3,f
  6048  0EB9                     u3893:
  6049  0EB9  0826               	movf	___flmul@b+2,w
  6050  0EBA  00AC               	movwf	??___flmul
  6051  0EBB  082C               	movf	??___flmul,w
  6052  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  6053  0EBD  082A               	movf	___flmul@a+2,w
  6054  0EBE  160A  158A  2545  120A  158A  	fcall	__Umul8_16
  6055  0EC3  0871               	movf	?__Umul8_16+1,w
  6056  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  6057  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  6058  0EC6  00BD               	movwf	___flmul@temp+1
  6059  0EC7  0870               	movf	?__Umul8_16,w
  6060  0EC8  00BC               	movwf	___flmul@temp
  6061  0EC9                     l2634:
  6062  0EC9  083C               	movf	___flmul@temp,w
  6063  0ECA  00AC               	movwf	??___flmul
  6064  0ECB  083D               	movf	___flmul@temp+1,w
  6065  0ECC  00AD               	movwf	??___flmul+1
  6066  0ECD  01AE               	clrf	??___flmul+2
  6067  0ECE  01AF               	clrf	??___flmul+3
  6068  0ECF  3008               	movlw	8
  6069  0ED0                     u3905:
  6070  0ED0  1003               	clrc
  6071  0ED1  0DAC               	rlf	??___flmul,f
  6072  0ED2  0DAD               	rlf	??___flmul+1,f
  6073  0ED3  0DAE               	rlf	??___flmul+2,f
  6074  0ED4  0DAF               	rlf	??___flmul+3,f
  6075  0ED5                     u3900:
  6076  0ED5  3EFF               	addlw	-1
  6077  0ED6  1D03               	skipz
  6078  0ED7  2ED0               	goto	u3905
  6079  0ED8  082C               	movf	??___flmul,w
  6080  0ED9  07B8               	addwf	___flmul@prod,f
  6081  0EDA  082D               	movf	??___flmul+1,w
  6082  0EDB  1103               	clrz
  6083  0EDC  1803               	skipnc
  6084  0EDD  3E01               	addlw	1
  6085  0EDE  1903               	skipnz
  6086  0EDF  2EE1               	goto	u3911
  6087  0EE0  07B9               	addwf	___flmul@prod+1,f
  6088  0EE1                     u3911:
  6089  0EE1  082E               	movf	??___flmul+2,w
  6090  0EE2  1103               	clrz
  6091  0EE3  1803               	skipnc
  6092  0EE4  3E01               	addlw	1
  6093  0EE5  1903               	skipnz
  6094  0EE6  2EE8               	goto	u3912
  6095  0EE7  07BA               	addwf	___flmul@prod+2,f
  6096  0EE8                     u3912:
  6097  0EE8  082F               	movf	??___flmul+3,w
  6098  0EE9  1103               	clrz
  6099  0EEA  1803               	skipnc
  6100  0EEB  3E01               	addlw	1
  6101  0EEC  1903               	skipnz
  6102  0EED  2EEF               	goto	u3913
  6103  0EEE  07BB               	addwf	___flmul@prod+3,f
  6104  0EEF                     u3913:
  6105  0EEF                     l2636:
  6106  0EEF  0832               	movf	___flmul@grs,w
  6107  0EF0  00AC               	movwf	??___flmul
  6108  0EF1  0833               	movf	___flmul@grs+1,w
  6109  0EF2  00AD               	movwf	??___flmul+1
  6110  0EF3  0834               	movf	___flmul@grs+2,w
  6111  0EF4  00AE               	movwf	??___flmul+2
  6112  0EF5  0835               	movf	___flmul@grs+3,w
  6113  0EF6  00AF               	movwf	??___flmul+3
  6114  0EF7  3018               	movlw	24
  6115  0EF8                     u3925:
  6116  0EF8  1003               	clrc
  6117  0EF9  0CAF               	rrf	??___flmul+3,f
  6118  0EFA  0CAE               	rrf	??___flmul+2,f
  6119  0EFB  0CAD               	rrf	??___flmul+1,f
  6120  0EFC  0CAC               	rrf	??___flmul,f
  6121  0EFD                     u3920:
  6122  0EFD  3EFF               	addlw	-1
  6123  0EFE  1D03               	skipz
  6124  0EFF  2EF8               	goto	u3925
  6125  0F00  082C               	movf	??___flmul,w
  6126  0F01  07B8               	addwf	___flmul@prod,f
  6127  0F02  082D               	movf	??___flmul+1,w
  6128  0F03  1103               	clrz
  6129  0F04  1803               	skipnc
  6130  0F05  3E01               	addlw	1
  6131  0F06  1903               	skipnz
  6132  0F07  2F09               	goto	u3931
  6133  0F08  07B9               	addwf	___flmul@prod+1,f
  6134  0F09                     u3931:
  6135  0F09  082E               	movf	??___flmul+2,w
  6136  0F0A  1103               	clrz
  6137  0F0B  1803               	skipnc
  6138  0F0C  3E01               	addlw	1
  6139  0F0D  1903               	skipnz
  6140  0F0E  2F10               	goto	u3932
  6141  0F0F  07BA               	addwf	___flmul@prod+2,f
  6142  0F10                     u3932:
  6143  0F10  082F               	movf	??___flmul+3,w
  6144  0F11  1103               	clrz
  6145  0F12  1803               	skipnc
  6146  0F13  3E01               	addlw	1
  6147  0F14  1903               	skipnz
  6148  0F15  2F17               	goto	u3933
  6149  0F16  07BB               	addwf	___flmul@prod+3,f
  6150  0F17                     u3933:
  6151  0F17                     l2638:
  6152  0F17  3008               	movlw	8
  6153  0F18  00AC               	movwf	??___flmul
  6154  0F19                     u3945:
  6155  0F19  1003               	clrc
  6156  0F1A  0DB2               	rlf	___flmul@grs,f
  6157  0F1B  0DB3               	rlf	___flmul@grs+1,f
  6158  0F1C  0DB4               	rlf	___flmul@grs+2,f
  6159  0F1D  0DB5               	rlf	___flmul@grs+3,f
  6160  0F1E  0BAC               	decfsz	??___flmul,f
  6161  0F1F  2F19               	goto	u3945
  6162  0F20                     l2640:
  6163  0F20  0837               	movf	___flmul@bexp,w
  6164  0F21  0736               	addwf	___flmul@aexp,w
  6165  0F22  00AC               	movwf	??___flmul
  6166  0F23  01AD               	clrf	??___flmul+1
  6167  0F24  0DAD               	rlf	??___flmul+1,f
  6168  0F25  082C               	movf	??___flmul,w
  6169  0F26  3E82               	addlw	130
  6170  0F27  00BC               	movwf	___flmul@temp
  6171  0F28  082D               	movf	??___flmul+1,w
  6172  0F29  1803               	skipnc
  6173  0F2A  3E01               	addlw	1
  6174  0F2B  3EFF               	addlw	255
  6175  0F2C  00BD               	movwf	___flmul@temp+1
  6176  0F2D  2F4B               	goto	l2652
  6177  0F2E                     l2642:
  6178  0F2E  3001               	movlw	1
  6179  0F2F  00AC               	movwf	??___flmul
  6180  0F30                     u3955:
  6181  0F30  1003               	clrc
  6182  0F31  0DB8               	rlf	___flmul@prod,f
  6183  0F32  0DB9               	rlf	___flmul@prod+1,f
  6184  0F33  0DBA               	rlf	___flmul@prod+2,f
  6185  0F34  0DBB               	rlf	___flmul@prod+3,f
  6186  0F35  0BAC               	decfsz	??___flmul,f
  6187  0F36  2F30               	goto	u3955
  6188  0F37                     l2644:
  6189  0F37  1FB5               	btfss	___flmul@grs+3,7
  6190  0F38  2F3A               	goto	u3961
  6191  0F39  2F3B               	goto	u3960
  6192  0F3A                     u3961:
  6193  0F3A  2F3C               	goto	l2648
  6194  0F3B                     u3960:
  6195  0F3B                     l2646:
  6196  0F3B  1438               	bsf	___flmul@prod,0
  6197  0F3C                     l2648:
  6198  0F3C  3001               	movlw	1
  6199  0F3D  00AC               	movwf	??___flmul
  6200  0F3E                     u3975:
  6201  0F3E  1003               	clrc
  6202  0F3F  0DB2               	rlf	___flmul@grs,f
  6203  0F40  0DB3               	rlf	___flmul@grs+1,f
  6204  0F41  0DB4               	rlf	___flmul@grs+2,f
  6205  0F42  0DB5               	rlf	___flmul@grs+3,f
  6206  0F43  0BAC               	decfsz	??___flmul,f
  6207  0F44  2F3E               	goto	u3975
  6208  0F45                     l2650:
  6209  0F45  30FF               	movlw	255
  6210  0F46  07BC               	addwf	___flmul@temp,f
  6211  0F47  1803               	skipnc
  6212  0F48  0ABD               	incf	___flmul@temp+1,f
  6213  0F49  30FF               	movlw	255
  6214  0F4A  07BD               	addwf	___flmul@temp+1,f
  6215  0F4B                     l2652:
  6216  0F4B  1FBA               	btfss	___flmul@prod+2,7
  6217  0F4C  2F4E               	goto	u3981
  6218  0F4D  2F4F               	goto	u3980
  6219  0F4E                     u3981:
  6220  0F4E  2F2E               	goto	l2642
  6221  0F4F                     u3980:
  6222  0F4F                     l2654:
  6223  0F4F  01B6               	clrf	___flmul@aexp
  6224  0F50                     l2656:
  6225  0F50  1FB5               	btfss	___flmul@grs+3,7
  6226  0F51  2F53               	goto	u3991
  6227  0F52  2F54               	goto	u3990
  6228  0F53                     u3991:
  6229  0F53  2F70               	goto	l2664
  6230  0F54                     u3990:
  6231  0F54                     l2658:
  6232  0F54  30FF               	movlw	255
  6233  0F55  0532               	andwf	___flmul@grs,w
  6234  0F56  00AC               	movwf	??___flmul
  6235  0F57  30FF               	movlw	255
  6236  0F58  0533               	andwf	___flmul@grs+1,w
  6237  0F59  00AD               	movwf	??___flmul+1
  6238  0F5A  30FF               	movlw	255
  6239  0F5B  0534               	andwf	___flmul@grs+2,w
  6240  0F5C  00AE               	movwf	??___flmul+2
  6241  0F5D  307F               	movlw	127
  6242  0F5E  0535               	andwf	___flmul@grs+3,w
  6243  0F5F  00AF               	movwf	??___flmul+3
  6244  0F60  082F               	movf	??___flmul+3,w
  6245  0F61  042E               	iorwf	??___flmul+2,w
  6246  0F62  042D               	iorwf	??___flmul+1,w
  6247  0F63  042C               	iorwf	??___flmul,w
  6248  0F64  1903               	skipnz
  6249  0F65  2F67               	goto	u4001
  6250  0F66  2F68               	goto	u4000
  6251  0F67                     u4001:
  6252  0F67  2F6B               	goto	l782
  6253  0F68                     u4000:
  6254  0F68                     l2660:
  6255  0F68  01B6               	clrf	___flmul@aexp
  6256  0F69  0AB6               	incf	___flmul@aexp,f
  6257  0F6A  2F70               	goto	l2664
  6258  0F6B                     l782:
  6259  0F6B  1C38               	btfss	___flmul@prod,0
  6260  0F6C  2F6E               	goto	u4011
  6261  0F6D  2F6F               	goto	u4010
  6262  0F6E                     u4011:
  6263  0F6E  2F70               	goto	l2664
  6264  0F6F                     u4010:
  6265  0F6F  2F68               	goto	l2660
  6266  0F70                     l2664:
  6267  0F70  0836               	movf	___flmul@aexp,w
  6268  0F71  1903               	btfsc	3,2
  6269  0F72  2F74               	goto	u4021
  6270  0F73  2F75               	goto	u4020
  6271  0F74                     u4021:
  6272  0F74  2FA6               	goto	l2674
  6273  0F75                     u4020:
  6274  0F75                     l2666:
  6275  0F75  3001               	movlw	1
  6276  0F76  07B8               	addwf	___flmul@prod,f
  6277  0F77  3000               	movlw	0
  6278  0F78  1803               	skipnc
  6279  0F79  3001               	movlw	1
  6280  0F7A  07B9               	addwf	___flmul@prod+1,f
  6281  0F7B  3000               	movlw	0
  6282  0F7C  1803               	skipnc
  6283  0F7D  3001               	movlw	1
  6284  0F7E  07BA               	addwf	___flmul@prod+2,f
  6285  0F7F  3000               	movlw	0
  6286  0F80  1803               	skipnc
  6287  0F81  3001               	movlw	1
  6288  0F82  07BB               	addwf	___flmul@prod+3,f
  6289  0F83                     l2668:
  6290  0F83  1C3B               	btfss	___flmul@prod+3,0
  6291  0F84  2F86               	goto	u4031
  6292  0F85  2F87               	goto	u4030
  6293  0F86                     u4031:
  6294  0F86  2FA6               	goto	l2674
  6295  0F87                     u4030:
  6296  0F87                     l2670:
  6297  0F87  0838               	movf	___flmul@prod,w
  6298  0F88  00AC               	movwf	??___flmul
  6299  0F89  0839               	movf	___flmul@prod+1,w
  6300  0F8A  00AD               	movwf	??___flmul+1
  6301  0F8B  083A               	movf	___flmul@prod+2,w
  6302  0F8C  00AE               	movwf	??___flmul+2
  6303  0F8D  083B               	movf	___flmul@prod+3,w
  6304  0F8E  00AF               	movwf	??___flmul+3
  6305  0F8F  3001               	movlw	1
  6306  0F90  00B0               	movwf	??___flmul+4
  6307  0F91                     u4045:
  6308  0F91  0D2F               	rlf	??___flmul+3,w
  6309  0F92  0CAF               	rrf	??___flmul+3,f
  6310  0F93  0CAE               	rrf	??___flmul+2,f
  6311  0F94  0CAD               	rrf	??___flmul+1,f
  6312  0F95  0CAC               	rrf	??___flmul,f
  6313  0F96                     u4040:
  6314  0F96  0BB0               	decfsz	??___flmul+4,f
  6315  0F97  2F91               	goto	u4045
  6316  0F98  082F               	movf	??___flmul+3,w
  6317  0F99  00BB               	movwf	___flmul@prod+3
  6318  0F9A  082E               	movf	??___flmul+2,w
  6319  0F9B  00BA               	movwf	___flmul@prod+2
  6320  0F9C  082D               	movf	??___flmul+1,w
  6321  0F9D  00B9               	movwf	___flmul@prod+1
  6322  0F9E  082C               	movf	??___flmul,w
  6323  0F9F  00B8               	movwf	___flmul@prod
  6324  0FA0                     l2672:
  6325  0FA0  3001               	movlw	1
  6326  0FA1  07BC               	addwf	___flmul@temp,f
  6327  0FA2  1803               	skipnc
  6328  0FA3  0ABD               	incf	___flmul@temp+1,f
  6329  0FA4  3000               	movlw	0
  6330  0FA5  07BD               	addwf	___flmul@temp+1,f
  6331  0FA6                     l2674:
  6332  0FA6  083D               	movf	___flmul@temp+1,w
  6333  0FA7  3A80               	xorlw	128
  6334  0FA8  00FF               	movwf	btemp+1
  6335  0FA9  3080               	movlw	128
  6336  0FAA  027F               	subwf	btemp+1,w
  6337  0FAB  1D03               	skipz
  6338  0FAC  2FAF               	goto	u4055
  6339  0FAD  30FF               	movlw	255
  6340  0FAE  023C               	subwf	___flmul@temp,w
  6341  0FAF                     u4055:
  6342  0FAF  1C03               	skipc
  6343  0FB0  2FB2               	goto	u4051
  6344  0FB1  2FB3               	goto	u4050
  6345  0FB2                     u4051:
  6346  0FB2  2FBE               	goto	l2678
  6347  0FB3                     u4050:
  6348  0FB3                     l2676:
  6349  0FB3  307F               	movlw	127
  6350  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  6351  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  6352  0FB6  00BB               	movwf	___flmul@prod+3
  6353  0FB7  3080               	movlw	128
  6354  0FB8  00BA               	movwf	___flmul@prod+2
  6355  0FB9  3000               	movlw	0
  6356  0FBA  00B9               	movwf	___flmul@prod+1
  6357  0FBB  3000               	movlw	0
  6358  0FBC  00B8               	movwf	___flmul@prod
  6359  0FBD  2FF3               	goto	l788
  6360  0FBE                     l2678:
  6361  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6362  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6363  0FC0  083D               	movf	___flmul@temp+1,w
  6364  0FC1  3A80               	xorlw	128
  6365  0FC2  00FF               	movwf	btemp+1
  6366  0FC3  3080               	movlw	128
  6367  0FC4  027F               	subwf	btemp+1,w
  6368  0FC5  1D03               	skipz
  6369  0FC6  2FC9               	goto	u4065
  6370  0FC7  3001               	movlw	1
  6371  0FC8  023C               	subwf	___flmul@temp,w
  6372  0FC9                     u4065:
  6373  0FC9  1803               	skipnc
  6374  0FCA  2FCC               	goto	u4061
  6375  0FCB  2FCD               	goto	u4060
  6376  0FCC                     u4061:
  6377  0FCC  2FD9               	goto	l2684
  6378  0FCD                     u4060:
  6379  0FCD                     l2680:
  6380  0FCD  3000               	movlw	0
  6381  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6382  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6383  0FD0  00BB               	movwf	___flmul@prod+3
  6384  0FD1  3000               	movlw	0
  6385  0FD2  00BA               	movwf	___flmul@prod+2
  6386  0FD3  3000               	movlw	0
  6387  0FD4  00B9               	movwf	___flmul@prod+1
  6388  0FD5  3000               	movlw	0
  6389  0FD6  00B8               	movwf	___flmul@prod
  6390  0FD7                     l2682:
  6391  0FD7  01B1               	clrf	___flmul@sign
  6392  0FD8  2FF3               	goto	l788
  6393  0FD9                     l2684:
  6394  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6395  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6396  0FDB  083C               	movf	___flmul@temp,w
  6397  0FDC  00AC               	movwf	??___flmul
  6398  0FDD  082C               	movf	??___flmul,w
  6399  0FDE  00B7               	movwf	___flmul@bexp
  6400  0FDF  30FF               	movlw	255
  6401  0FE0  05B8               	andwf	___flmul@prod,f
  6402  0FE1  30FF               	movlw	255
  6403  0FE2  05B9               	andwf	___flmul@prod+1,f
  6404  0FE3  307F               	movlw	127
  6405  0FE4  05BA               	andwf	___flmul@prod+2,f
  6406  0FE5  3000               	movlw	0
  6407  0FE6  05BB               	andwf	___flmul@prod+3,f
  6408  0FE7                     l2686:
  6409  0FE7  1C37               	btfss	___flmul@bexp,0
  6410  0FE8  2FEA               	goto	u4071
  6411  0FE9  2FEB               	goto	u4070
  6412  0FEA                     u4071:
  6413  0FEA  2FEC               	goto	l2690
  6414  0FEB                     u4070:
  6415  0FEB                     l2688:
  6416  0FEB  17BA               	bsf	___flmul@prod+2,7
  6417  0FEC                     l2690:
  6418  0FEC  0837               	movf	___flmul@bexp,w
  6419  0FED  00AC               	movwf	??___flmul
  6420  0FEE  1003               	clrc
  6421  0FEF  0C2C               	rrf	??___flmul,w
  6422  0FF0  00AD               	movwf	??___flmul+1
  6423  0FF1  082D               	movf	??___flmul+1,w
  6424  0FF2  00BB               	movwf	___flmul@prod+3
  6425  0FF3                     l788:
  6426  0FF3  0831               	movf	___flmul@sign,w
  6427  0FF4  00AC               	movwf	??___flmul
  6428  0FF5  082C               	movf	??___flmul,w
  6429  0FF6  04BB               	iorwf	___flmul@prod+3,f
  6430  0FF7                     l2692:
  6431  0FF7  083B               	movf	___flmul@prod+3,w
  6432  0FF8  00A7               	movwf	?___flmul+3
  6433  0FF9  083A               	movf	___flmul@prod+2,w
  6434  0FFA  00A6               	movwf	?___flmul+2
  6435  0FFB  0839               	movf	___flmul@prod+1,w
  6436  0FFC  00A5               	movwf	?___flmul+1
  6437  0FFD  0838               	movf	___flmul@prod,w
  6438  0FFE  00A4               	movwf	?___flmul
  6439  0FFF                     l776:
  6440  0FFF  0008               	return
  6441  1000                     __end_of___flmul:
  6442                           
  6443                           	psect	text10
  6444  1D45                     __ptext10:	
  6445 ;; *************** function __Umul8_16 *****************
  6446 ;; Defined at:
  6447 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul8_16.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  multiplier      1    wreg     unsigned char 
  6450 ;;  multiplicand    1    0[COMMON] unsigned char 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;  multiplier      1    8[COMMON] unsigned char 
  6453 ;;  word_mpld       2    6[COMMON] unsigned int 
  6454 ;;  product         2    4[COMMON] unsigned int 
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  2    0[COMMON] unsigned int 
  6457 ;; Registers used:
  6458 ;;		wreg, status,2, status,0
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6464 ;;      Params:         2       0       0       0       0
  6465 ;;      Locals:         5       0       0       0       0
  6466 ;;      Temps:          2       0       0       0       0
  6467 ;;      Totals:         9       0       0       0       0
  6468 ;;Total ram usage:        9 bytes
  6469 ;; Hardware stack levels used: 1
  6470 ;; This function calls:
  6471 ;;		Nothing
  6472 ;; This function is called by:
  6473 ;;		___flmul
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477  1D45                     __Umul8_16:	
  6478                           ;psect for function __Umul8_16
  6479                           
  6480                           
  6481                           ;incstack = 0
  6482                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6483                           ;__Umul8_16@multiplier stored from wreg
  6484  1D45  00F8               	movwf	__Umul8_16@multiplier
  6485  1D46                     l2208:
  6486  1D46  01F4               	clrf	__Umul8_16@product
  6487  1D47  01F5               	clrf	__Umul8_16@product+1
  6488  1D48                     l2210:
  6489  1D48  0870               	movf	__Umul8_16@multiplicand,w
  6490  1D49  00F2               	movwf	??__Umul8_16
  6491  1D4A  01F3               	clrf	??__Umul8_16+1
  6492  1D4B  0872               	movf	??__Umul8_16,w
  6493  1D4C  00F6               	movwf	__Umul8_16@word_mpld
  6494  1D4D  0873               	movf	??__Umul8_16+1,w
  6495  1D4E  00F7               	movwf	__Umul8_16@word_mpld+1
  6496  1D4F                     l2212:
  6497  1D4F  1C78               	btfss	__Umul8_16@multiplier,0
  6498  1D50  2D52               	goto	u2901
  6499  1D51  2D53               	goto	u2900
  6500  1D52                     u2901:
  6501  1D52  2D59               	goto	l795
  6502  1D53                     u2900:
  6503  1D53                     l2214:
  6504  1D53  0876               	movf	__Umul8_16@word_mpld,w
  6505  1D54  07F4               	addwf	__Umul8_16@product,f
  6506  1D55  1803               	skipnc
  6507  1D56  0AF5               	incf	__Umul8_16@product+1,f
  6508  1D57  0877               	movf	__Umul8_16@word_mpld+1,w
  6509  1D58  07F5               	addwf	__Umul8_16@product+1,f
  6510  1D59                     l795:
  6511  1D59  3001               	movlw	1
  6512  1D5A                     u2915:
  6513  1D5A  1003               	clrc
  6514  1D5B  0DF6               	rlf	__Umul8_16@word_mpld,f
  6515  1D5C  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6516  1D5D  3EFF               	addlw	-1
  6517  1D5E  1D03               	skipz
  6518  1D5F  2D5A               	goto	u2915
  6519  1D60  1003               	clrc
  6520  1D61  0CF8               	rrf	__Umul8_16@multiplier,f
  6521  1D62                     l2216:
  6522  1D62  0878               	movf	__Umul8_16@multiplier,w
  6523  1D63  1D03               	btfss	3,2
  6524  1D64  2D66               	goto	u2921
  6525  1D65  2D67               	goto	u2920
  6526  1D66                     u2921:
  6527  1D66  2D4F               	goto	l2212
  6528  1D67                     u2920:
  6529  1D67                     l2218:
  6530  1D67  0875               	movf	__Umul8_16@product+1,w
  6531  1D68  00F1               	movwf	?__Umul8_16+1
  6532  1D69  0874               	movf	__Umul8_16@product,w
  6533  1D6A  00F0               	movwf	?__Umul8_16
  6534  1D6B                     l797:
  6535  1D6B  0008               	return
  6536  1D6C                     __end_of__Umul8_16:
  6537                           
  6538                           	psect	text11
  6539  12B0                     __ptext11:	
  6540 ;; *************** function __tdiv_to_l_ *****************
  6541 ;; Defined at:
  6542 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdivl.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;  f1              4    0[COMMON] float 
  6545 ;;  f2              4    4[COMMON] float 
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;  quot            4    0[BANK0 ] unsigned long 
  6548 ;;  exp1            1    5[BANK0 ] unsigned char 
  6549 ;;  cntr            1    4[BANK0 ] unsigned char 
  6550 ;; Return value:  Size  Location     Type
  6551 ;;                  4    0[COMMON] unsigned long 
  6552 ;; Registers used:
  6553 ;;		wreg, status,2, status,0
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/0
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6559 ;;      Params:         8       0       0       0       0
  6560 ;;      Locals:         0       6       0       0       0
  6561 ;;      Temps:          4       0       0       0       0
  6562 ;;      Totals:        12       6       0       0       0
  6563 ;;Total ram usage:       18 bytes
  6564 ;; Hardware stack levels used: 1
  6565 ;; This function calls:
  6566 ;;		Nothing
  6567 ;; This function is called by:
  6568 ;;		_sprintf
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572  12B0                     __tdiv_to_l_:	
  6573                           ;psect for function __tdiv_to_l_
  6574                           
  6575  12B0                     l2816:	
  6576                           ;incstack = 0
  6577                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6578                           
  6579  12B0  0870               	movf	__tdiv_to_l_@f1,w
  6580  12B1  00F8               	movwf	??__tdiv_to_l_
  6581  12B2  0871               	movf	__tdiv_to_l_@f1+1,w
  6582  12B3  00F9               	movwf	??__tdiv_to_l_+1
  6583  12B4  0872               	movf	__tdiv_to_l_@f1+2,w
  6584  12B5  00FA               	movwf	??__tdiv_to_l_+2
  6585  12B6  1003               	clrc
  6586  12B7  0D79               	rlf	??__tdiv_to_l_+1,w
  6587  12B8  0D7A               	rlf	??__tdiv_to_l_+2,w
  6588  12B9  00FB               	movwf	??__tdiv_to_l_+3
  6589  12BA  087B               	movf	??__tdiv_to_l_+3,w
  6590  12BB  1283               	bcf	3,5	;RP0=0, select bank0
  6591  12BC  1303               	bcf	3,6	;RP1=0, select bank0
  6592  12BD  00A5               	movwf	__tdiv_to_l_@exp1
  6593  12BE  0825               	movf	__tdiv_to_l_@exp1,w
  6594  12BF  1D03               	btfss	3,2
  6595  12C0  2AC2               	goto	u4441
  6596  12C1  2AC3               	goto	u4440
  6597  12C2                     u4441:
  6598  12C2  2ACC               	goto	l2822
  6599  12C3                     u4440:
  6600  12C3                     l2818:
  6601  12C3  3000               	movlw	0
  6602  12C4  00F3               	movwf	?__tdiv_to_l_+3
  6603  12C5  3000               	movlw	0
  6604  12C6  00F2               	movwf	?__tdiv_to_l_+2
  6605  12C7  3000               	movlw	0
  6606  12C8  00F1               	movwf	?__tdiv_to_l_+1
  6607  12C9  3000               	movlw	0
  6608  12CA  00F0               	movwf	?__tdiv_to_l_
  6609  12CB  2B6C               	goto	l570
  6610  12CC                     l2822:
  6611  12CC  0874               	movf	__tdiv_to_l_@f2,w
  6612  12CD  00F8               	movwf	??__tdiv_to_l_
  6613  12CE  0875               	movf	__tdiv_to_l_@f2+1,w
  6614  12CF  00F9               	movwf	??__tdiv_to_l_+1
  6615  12D0  0876               	movf	__tdiv_to_l_@f2+2,w
  6616  12D1  00FA               	movwf	??__tdiv_to_l_+2
  6617  12D2  1003               	clrc
  6618  12D3  0D79               	rlf	??__tdiv_to_l_+1,w
  6619  12D4  0D7A               	rlf	??__tdiv_to_l_+2,w
  6620  12D5  00FB               	movwf	??__tdiv_to_l_+3
  6621  12D6  087B               	movf	??__tdiv_to_l_+3,w
  6622  12D7  00A4               	movwf	__tdiv_to_l_@cntr
  6623  12D8  0824               	movf	__tdiv_to_l_@cntr,w
  6624  12D9  1D03               	btfss	3,2
  6625  12DA  2ADC               	goto	u4451
  6626  12DB  2ADD               	goto	u4450
  6627  12DC                     u4451:
  6628  12DC  2ADE               	goto	l571
  6629  12DD                     u4450:
  6630  12DD  2AC3               	goto	l2818
  6631  12DE                     l571:
  6632  12DE  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6633  12DF                     l2828:
  6634  12DF  30FF               	movlw	255
  6635  12E0  05F0               	andwf	__tdiv_to_l_@f1,f
  6636  12E1  30FF               	movlw	255
  6637  12E2  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6638  12E3  3000               	movlw	0
  6639  12E4  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6640  12E5                     l2830:
  6641  12E5  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6642  12E6  30FF               	movlw	255
  6643  12E7  05F4               	andwf	__tdiv_to_l_@f2,f
  6644  12E8  30FF               	movlw	255
  6645  12E9  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6646  12EA  3000               	movlw	0
  6647  12EB  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6648  12EC  3000               	movlw	0
  6649  12ED  00A3               	movwf	__tdiv_to_l_@quot+3
  6650  12EE  3000               	movlw	0
  6651  12EF  00A2               	movwf	__tdiv_to_l_@quot+2
  6652  12F0  3000               	movlw	0
  6653  12F1  00A1               	movwf	__tdiv_to_l_@quot+1
  6654  12F2  3000               	movlw	0
  6655  12F3  00A0               	movwf	__tdiv_to_l_@quot
  6656  12F4                     l2832:
  6657  12F4  307F               	movlw	127
  6658  12F5  02A5               	subwf	__tdiv_to_l_@exp1,f
  6659  12F6                     l2834:
  6660  12F6  3098               	movlw	152
  6661  12F7  0724               	addwf	__tdiv_to_l_@cntr,w
  6662  12F8  00F8               	movwf	??__tdiv_to_l_
  6663  12F9  0878               	movf	??__tdiv_to_l_,w
  6664  12FA  02A5               	subwf	__tdiv_to_l_@exp1,f
  6665  12FB  3018               	movlw	24
  6666  12FC  00F8               	movwf	??__tdiv_to_l_
  6667  12FD  0878               	movf	??__tdiv_to_l_,w
  6668  12FE  00A4               	movwf	__tdiv_to_l_@cntr
  6669  12FF                     l2836:
  6670  12FF  3001               	movlw	1
  6671  1300  00F8               	movwf	??__tdiv_to_l_
  6672  1301                     u4465:
  6673  1301  1003               	clrc
  6674  1302  0DA0               	rlf	__tdiv_to_l_@quot,f
  6675  1303  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6676  1304  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6677  1305  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6678  1306  0BF8               	decfsz	??__tdiv_to_l_,f
  6679  1307  2B01               	goto	u4465
  6680  1308                     l2838:
  6681  1308  0876               	movf	__tdiv_to_l_@f2+2,w
  6682  1309  0272               	subwf	__tdiv_to_l_@f1+2,w
  6683  130A  1D03               	skipz
  6684  130B  2B12               	goto	u4475
  6685  130C  0875               	movf	__tdiv_to_l_@f2+1,w
  6686  130D  0271               	subwf	__tdiv_to_l_@f1+1,w
  6687  130E  1D03               	skipz
  6688  130F  2B12               	goto	u4475
  6689  1310  0874               	movf	__tdiv_to_l_@f2,w
  6690  1311  0270               	subwf	__tdiv_to_l_@f1,w
  6691  1312                     u4475:
  6692  1312  1C03               	skipc
  6693  1313  2B15               	goto	u4471
  6694  1314  2B16               	goto	u4470
  6695  1315                     u4471:
  6696  1315  2B21               	goto	l2844
  6697  1316                     u4470:
  6698  1316                     l2840:
  6699  1316  0874               	movf	__tdiv_to_l_@f2,w
  6700  1317  02F0               	subwf	__tdiv_to_l_@f1,f
  6701  1318  0875               	movf	__tdiv_to_l_@f2+1,w
  6702  1319  1C03               	skipc
  6703  131A  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6704  131B  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6705  131C  0876               	movf	__tdiv_to_l_@f2+2,w
  6706  131D  1C03               	skipc
  6707  131E  0A76               	incf	__tdiv_to_l_@f2+2,w
  6708  131F  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6709  1320                     l2842:
  6710  1320  1420               	bsf	__tdiv_to_l_@quot,0
  6711  1321                     l2844:
  6712  1321  3001               	movlw	1
  6713  1322                     u4485:
  6714  1322  1003               	clrc
  6715  1323  0DF0               	rlf	__tdiv_to_l_@f1,f
  6716  1324  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6717  1325  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6718  1326  3EFF               	addlw	-1
  6719  1327  1D03               	skipz
  6720  1328  2B22               	goto	u4485
  6721  1329                     l2846:
  6722  1329  3001               	movlw	1
  6723  132A  02A4               	subwf	__tdiv_to_l_@cntr,f
  6724  132B  1D03               	btfss	3,2
  6725  132C  2B2E               	goto	u4491
  6726  132D  2B2F               	goto	u4490
  6727  132E                     u4491:
  6728  132E  2AFF               	goto	l2836
  6729  132F                     u4490:
  6730  132F                     l574:
  6731  132F  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6732  1330  2B32               	goto	u4501
  6733  1331  2B33               	goto	u4500
  6734  1332                     u4501:
  6735  1332  2B4D               	goto	l2856
  6736  1333                     u4500:
  6737  1333                     l2848:
  6738  1333  0825               	movf	__tdiv_to_l_@exp1,w
  6739  1334  3A80               	xorlw	128
  6740  1335  3E97               	addlw	151
  6741  1336  1803               	skipnc
  6742  1337  2B39               	goto	u4511
  6743  1338  2B3A               	goto	u4510
  6744  1339                     u4511:
  6745  1339  2B3B               	goto	l2854
  6746  133A                     u4510:
  6747  133A  2AC3               	goto	l2818
  6748  133B                     l2854:
  6749  133B  3001               	movlw	1
  6750  133C                     u4525:
  6751  133C  1003               	clrc
  6752  133D  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6753  133E  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6754  133F  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6755  1340  0CA0               	rrf	__tdiv_to_l_@quot,f
  6756  1341  3EFF               	addlw	-1
  6757  1342  1D03               	skipz
  6758  1343  2B3C               	goto	u4525
  6759  1344  3001               	movlw	1
  6760  1345  00F8               	movwf	??__tdiv_to_l_
  6761  1346  0878               	movf	??__tdiv_to_l_,w
  6762  1347  07A5               	addwf	__tdiv_to_l_@exp1,f
  6763  1348  1D03               	btfss	3,2
  6764  1349  2B4B               	goto	u4531
  6765  134A  2B4C               	goto	u4530
  6766  134B                     u4531:
  6767  134B  2B3B               	goto	l2854
  6768  134C                     u4530:
  6769  134C  2B64               	goto	l2864
  6770  134D                     l2856:
  6771  134D  3018               	movlw	24
  6772  134E  0225               	subwf	__tdiv_to_l_@exp1,w
  6773  134F  1C03               	skipc
  6774  1350  2B52               	goto	u4541
  6775  1351  2B53               	goto	u4540
  6776  1352                     u4541:
  6777  1352  2B5F               	goto	l581
  6778  1353                     u4540:
  6779  1353  2AC3               	goto	l2818
  6780  1354                     l2862:
  6781  1354  3001               	movlw	1
  6782  1355  00F8               	movwf	??__tdiv_to_l_
  6783  1356                     u4555:
  6784  1356  1003               	clrc
  6785  1357  0DA0               	rlf	__tdiv_to_l_@quot,f
  6786  1358  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6787  1359  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6788  135A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6789  135B  0BF8               	decfsz	??__tdiv_to_l_,f
  6790  135C  2B56               	goto	u4555
  6791  135D  3001               	movlw	1
  6792  135E  02A5               	subwf	__tdiv_to_l_@exp1,f
  6793  135F                     l581:
  6794  135F  0825               	movf	__tdiv_to_l_@exp1,w
  6795  1360  1D03               	btfss	3,2
  6796  1361  2B63               	goto	u4561
  6797  1362  2B64               	goto	u4560
  6798  1363                     u4561:
  6799  1363  2B54               	goto	l2862
  6800  1364                     u4560:
  6801  1364                     l2864:
  6802  1364  0823               	movf	__tdiv_to_l_@quot+3,w
  6803  1365  00F3               	movwf	?__tdiv_to_l_+3
  6804  1366  0822               	movf	__tdiv_to_l_@quot+2,w
  6805  1367  00F2               	movwf	?__tdiv_to_l_+2
  6806  1368  0821               	movf	__tdiv_to_l_@quot+1,w
  6807  1369  00F1               	movwf	?__tdiv_to_l_+1
  6808  136A  0820               	movf	__tdiv_to_l_@quot,w
  6809  136B  00F0               	movwf	?__tdiv_to_l_
  6810  136C                     l570:
  6811  136C  0008               	return
  6812  136D                     __end_of__tdiv_to_l_:
  6813                           
  6814                           	psect	text12
  6815  0882                     __ptext12:	
  6816 ;; *************** function __div_to_l_ *****************
  6817 ;; Defined at:
  6818 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fldivl.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;  f1              4    0[COMMON] unsigned long 
  6821 ;;  f2              4    4[COMMON] unsigned long 
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;  quot            4    0[BANK0 ] unsigned long 
  6824 ;;  exp1            1    5[BANK0 ] unsigned char 
  6825 ;;  cntr            1    4[BANK0 ] unsigned char 
  6826 ;; Return value:  Size  Location     Type
  6827 ;;                  4    0[COMMON] unsigned long 
  6828 ;; Registers used:
  6829 ;;		wreg, status,2, status,0
  6830 ;; Tracked objects:
  6831 ;;		On entry : 0/0
  6832 ;;		On exit  : 0/0
  6833 ;;		Unchanged: 0/0
  6834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6835 ;;      Params:         8       0       0       0       0
  6836 ;;      Locals:         0       6       0       0       0
  6837 ;;      Temps:          1       0       0       0       0
  6838 ;;      Totals:         9       6       0       0       0
  6839 ;;Total ram usage:       15 bytes
  6840 ;; Hardware stack levels used: 1
  6841 ;; This function calls:
  6842 ;;		Nothing
  6843 ;; This function is called by:
  6844 ;;		_sprintf
  6845 ;; This function uses a non-reentrant model
  6846 ;;
  6847                           
  6848  0882                     __div_to_l_:	
  6849                           ;psect for function __div_to_l_
  6850                           
  6851  0882                     l2868:	
  6852                           ;incstack = 0
  6853                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6854                           
  6855  0882  1003               	clrc
  6856  0883  0D72               	rlf	__div_to_l_@f1+2,w
  6857  0884  0D73               	rlf	__div_to_l_@f1+3,w
  6858  0885  00F8               	movwf	??__div_to_l_
  6859  0886  0878               	movf	??__div_to_l_,w
  6860  0887  1283               	bcf	3,5	;RP0=0, select bank0
  6861  0888  1303               	bcf	3,6	;RP1=0, select bank0
  6862  0889  00A5               	movwf	__div_to_l_@exp1
  6863  088A  0825               	movf	__div_to_l_@exp1,w
  6864  088B  1D03               	btfss	3,2
  6865  088C  288E               	goto	u4571
  6866  088D  288F               	goto	u4570
  6867  088E                     u4571:
  6868  088E  2898               	goto	l2874
  6869  088F                     u4570:
  6870  088F                     l2870:
  6871  088F  3000               	movlw	0
  6872  0890  00F3               	movwf	?__div_to_l_+3
  6873  0891  3000               	movlw	0
  6874  0892  00F2               	movwf	?__div_to_l_+2
  6875  0893  3000               	movlw	0
  6876  0894  00F1               	movwf	?__div_to_l_+1
  6877  0895  3000               	movlw	0
  6878  0896  00F0               	movwf	?__div_to_l_
  6879  0897  293F               	goto	l523
  6880  0898                     l2874:
  6881  0898  1003               	clrc
  6882  0899  0D76               	rlf	__div_to_l_@f2+2,w
  6883  089A  0D77               	rlf	__div_to_l_@f2+3,w
  6884  089B  00F8               	movwf	??__div_to_l_
  6885  089C  0878               	movf	??__div_to_l_,w
  6886  089D  00A4               	movwf	__div_to_l_@cntr
  6887  089E  0824               	movf	__div_to_l_@cntr,w
  6888  089F  1D03               	btfss	3,2
  6889  08A0  28A2               	goto	u4581
  6890  08A1  28A3               	goto	u4580
  6891  08A2                     u4581:
  6892  08A2  28A4               	goto	l524
  6893  08A3                     u4580:
  6894  08A3  288F               	goto	l2870
  6895  08A4                     l524:
  6896  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  6897  08A5                     l2880:
  6898  08A5  30FF               	movlw	255
  6899  08A6  05F0               	andwf	__div_to_l_@f1,f
  6900  08A7  30FF               	movlw	255
  6901  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  6902  08A9  30FF               	movlw	255
  6903  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  6904  08AB  3000               	movlw	0
  6905  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  6906  08AD                     l2882:
  6907  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  6908  08AE  30FF               	movlw	255
  6909  08AF  05F4               	andwf	__div_to_l_@f2,f
  6910  08B0  30FF               	movlw	255
  6911  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  6912  08B2  30FF               	movlw	255
  6913  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  6914  08B4  3000               	movlw	0
  6915  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  6916  08B6  3000               	movlw	0
  6917  08B7  00A3               	movwf	__div_to_l_@quot+3
  6918  08B8  3000               	movlw	0
  6919  08B9  00A2               	movwf	__div_to_l_@quot+2
  6920  08BA  3000               	movlw	0
  6921  08BB  00A1               	movwf	__div_to_l_@quot+1
  6922  08BC  3000               	movlw	0
  6923  08BD  00A0               	movwf	__div_to_l_@quot
  6924  08BE                     l2884:
  6925  08BE  307F               	movlw	127
  6926  08BF  02A5               	subwf	__div_to_l_@exp1,f
  6927  08C0                     l2886:
  6928  08C0  30A0               	movlw	160
  6929  08C1  0724               	addwf	__div_to_l_@cntr,w
  6930  08C2  00F8               	movwf	??__div_to_l_
  6931  08C3  0878               	movf	??__div_to_l_,w
  6932  08C4  02A5               	subwf	__div_to_l_@exp1,f
  6933  08C5  3020               	movlw	32
  6934  08C6  00F8               	movwf	??__div_to_l_
  6935  08C7  0878               	movf	??__div_to_l_,w
  6936  08C8  00A4               	movwf	__div_to_l_@cntr
  6937  08C9                     l2888:
  6938  08C9  3001               	movlw	1
  6939  08CA  00F8               	movwf	??__div_to_l_
  6940  08CB                     u4595:
  6941  08CB  1003               	clrc
  6942  08CC  0DA0               	rlf	__div_to_l_@quot,f
  6943  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  6944  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  6945  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  6946  08D0  0BF8               	decfsz	??__div_to_l_,f
  6947  08D1  28CB               	goto	u4595
  6948  08D2                     l2890:
  6949  08D2  0877               	movf	__div_to_l_@f2+3,w
  6950  08D3  0273               	subwf	__div_to_l_@f1+3,w
  6951  08D4  1D03               	skipz
  6952  08D5  28E0               	goto	u4605
  6953  08D6  0876               	movf	__div_to_l_@f2+2,w
  6954  08D7  0272               	subwf	__div_to_l_@f1+2,w
  6955  08D8  1D03               	skipz
  6956  08D9  28E0               	goto	u4605
  6957  08DA  0875               	movf	__div_to_l_@f2+1,w
  6958  08DB  0271               	subwf	__div_to_l_@f1+1,w
  6959  08DC  1D03               	skipz
  6960  08DD  28E0               	goto	u4605
  6961  08DE  0874               	movf	__div_to_l_@f2,w
  6962  08DF  0270               	subwf	__div_to_l_@f1,w
  6963  08E0                     u4605:
  6964  08E0  1C03               	skipc
  6965  08E1  28E3               	goto	u4601
  6966  08E2  28E4               	goto	u4600
  6967  08E3                     u4601:
  6968  08E3  28F3               	goto	l2896
  6969  08E4                     u4600:
  6970  08E4                     l2892:
  6971  08E4  0874               	movf	__div_to_l_@f2,w
  6972  08E5  02F0               	subwf	__div_to_l_@f1,f
  6973  08E6  0875               	movf	__div_to_l_@f2+1,w
  6974  08E7  1C03               	skipc
  6975  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  6976  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  6977  08EA  0876               	movf	__div_to_l_@f2+2,w
  6978  08EB  1C03               	skipc
  6979  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  6980  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  6981  08EE  0877               	movf	__div_to_l_@f2+3,w
  6982  08EF  1C03               	skipc
  6983  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  6984  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  6985  08F2                     l2894:
  6986  08F2  1420               	bsf	__div_to_l_@quot,0
  6987  08F3                     l2896:
  6988  08F3  3001               	movlw	1
  6989  08F4  00F8               	movwf	??__div_to_l_
  6990  08F5                     u4615:
  6991  08F5  1003               	clrc
  6992  08F6  0DF0               	rlf	__div_to_l_@f1,f
  6993  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  6994  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  6995  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  6996  08FA  0BF8               	decfsz	??__div_to_l_,f
  6997  08FB  28F5               	goto	u4615
  6998  08FC                     l2898:
  6999  08FC  3001               	movlw	1
  7000  08FD  02A4               	subwf	__div_to_l_@cntr,f
  7001  08FE  1D03               	btfss	3,2
  7002  08FF  2901               	goto	u4621
  7003  0900  2902               	goto	u4620
  7004  0901                     u4621:
  7005  0901  28C9               	goto	l2888
  7006  0902                     u4620:
  7007  0902                     l527:
  7008  0902  1FA5               	btfss	__div_to_l_@exp1,7
  7009  0903  2905               	goto	u4631
  7010  0904  2906               	goto	u4630
  7011  0905                     u4631:
  7012  0905  2920               	goto	l2908
  7013  0906                     u4630:
  7014  0906                     l2900:
  7015  0906  0825               	movf	__div_to_l_@exp1,w
  7016  0907  3A80               	xorlw	128
  7017  0908  3E9F               	addlw	159
  7018  0909  1803               	skipnc
  7019  090A  290C               	goto	u4641
  7020  090B  290D               	goto	u4640
  7021  090C                     u4641:
  7022  090C  290E               	goto	l2906
  7023  090D                     u4640:
  7024  090D  288F               	goto	l2870
  7025  090E                     l2906:
  7026  090E  3001               	movlw	1
  7027  090F                     u4655:
  7028  090F  1003               	clrc
  7029  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  7030  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  7031  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  7032  0913  0CA0               	rrf	__div_to_l_@quot,f
  7033  0914  3EFF               	addlw	-1
  7034  0915  1D03               	skipz
  7035  0916  290F               	goto	u4655
  7036  0917  3001               	movlw	1
  7037  0918  00F8               	movwf	??__div_to_l_
  7038  0919  0878               	movf	??__div_to_l_,w
  7039  091A  07A5               	addwf	__div_to_l_@exp1,f
  7040  091B  1D03               	btfss	3,2
  7041  091C  291E               	goto	u4661
  7042  091D  291F               	goto	u4660
  7043  091E                     u4661:
  7044  091E  290E               	goto	l2906
  7045  091F                     u4660:
  7046  091F  2937               	goto	l2916
  7047  0920                     l2908:
  7048  0920  3020               	movlw	32
  7049  0921  0225               	subwf	__div_to_l_@exp1,w
  7050  0922  1C03               	skipc
  7051  0923  2925               	goto	u4671
  7052  0924  2926               	goto	u4670
  7053  0925                     u4671:
  7054  0925  2932               	goto	l534
  7055  0926                     u4670:
  7056  0926  288F               	goto	l2870
  7057  0927                     l2914:
  7058  0927  3001               	movlw	1
  7059  0928  00F8               	movwf	??__div_to_l_
  7060  0929                     u4685:
  7061  0929  1003               	clrc
  7062  092A  0DA0               	rlf	__div_to_l_@quot,f
  7063  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  7064  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  7065  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  7066  092E  0BF8               	decfsz	??__div_to_l_,f
  7067  092F  2929               	goto	u4685
  7068  0930  3001               	movlw	1
  7069  0931  02A5               	subwf	__div_to_l_@exp1,f
  7070  0932                     l534:
  7071  0932  0825               	movf	__div_to_l_@exp1,w
  7072  0933  1D03               	btfss	3,2
  7073  0934  2936               	goto	u4691
  7074  0935  2937               	goto	u4690
  7075  0936                     u4691:
  7076  0936  2927               	goto	l2914
  7077  0937                     u4690:
  7078  0937                     l2916:
  7079  0937  0823               	movf	__div_to_l_@quot+3,w
  7080  0938  00F3               	movwf	?__div_to_l_+3
  7081  0939  0822               	movf	__div_to_l_@quot+2,w
  7082  093A  00F2               	movwf	?__div_to_l_+2
  7083  093B  0821               	movf	__div_to_l_@quot+1,w
  7084  093C  00F1               	movwf	?__div_to_l_+1
  7085  093D  0820               	movf	__div_to_l_@quot,w
  7086  093E  00F0               	movwf	?__div_to_l_
  7087  093F                     l523:
  7088  093F  0008               	return
  7089  0940                     __end_of__div_to_l_:
  7090                           
  7091                           	psect	text13
  7092  11F6                     __ptext13:	
  7093 ;; *************** function ___xxtofl *****************
  7094 ;; Defined at:
  7095 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  sign            1    wreg     unsigned char 
  7098 ;;  val             4    0[COMMON] long 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;  sign            1    8[COMMON] unsigned char 
  7101 ;;  arg             4   10[COMMON] unsigned long 
  7102 ;;  exp             1    9[COMMON] unsigned char 
  7103 ;; Return value:  Size  Location     Type
  7104 ;;                  4    0[COMMON] unsigned char 
  7105 ;; Registers used:
  7106 ;;		wreg, status,2, status,0
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7112 ;;      Params:         4       0       0       0       0
  7113 ;;      Locals:         6       0       0       0       0
  7114 ;;      Temps:          4       0       0       0       0
  7115 ;;      Totals:        14       0       0       0       0
  7116 ;;Total ram usage:       14 bytes
  7117 ;; Hardware stack levels used: 1
  7118 ;; This function calls:
  7119 ;;		Nothing
  7120 ;; This function is called by:
  7121 ;;		_main
  7122 ;;		_sprintf
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126  11F6                     ___xxtofl:	
  7127                           ;psect for function ___xxtofl
  7128                           
  7129                           
  7130                           ;incstack = 0
  7131                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7132                           ;___xxtofl@sign stored from wreg
  7133  11F6  00F8               	movwf	___xxtofl@sign
  7134  11F7                     l3060:
  7135  11F7  0878               	movf	___xxtofl@sign,w
  7136  11F8  1903               	btfsc	3,2
  7137  11F9  29FB               	goto	u5081
  7138  11FA  29FC               	goto	u5080
  7139  11FB                     u5081:
  7140  11FB  2A10               	goto	l3066
  7141  11FC                     u5080:
  7142  11FC                     l3062:
  7143  11FC  1FF3               	btfss	___xxtofl@val+3,7
  7144  11FD  29FF               	goto	u5091
  7145  11FE  2A00               	goto	u5090
  7146  11FF                     u5091:
  7147  11FF  2A10               	goto	l3066
  7148  1200                     u5090:
  7149  1200                     l3064:
  7150  1200  0970               	comf	___xxtofl@val,w
  7151  1201  00FA               	movwf	___xxtofl@arg
  7152  1202  0971               	comf	___xxtofl@val+1,w
  7153  1203  00FB               	movwf	___xxtofl@arg+1
  7154  1204  0972               	comf	___xxtofl@val+2,w
  7155  1205  00FC               	movwf	___xxtofl@arg+2
  7156  1206  0973               	comf	___xxtofl@val+3,w
  7157  1207  00FD               	movwf	___xxtofl@arg+3
  7158  1208  0AFA               	incf	___xxtofl@arg,f
  7159  1209  1903               	skipnz
  7160  120A  0AFB               	incf	___xxtofl@arg+1,f
  7161  120B  1903               	skipnz
  7162  120C  0AFC               	incf	___xxtofl@arg+2,f
  7163  120D  1903               	skipnz
  7164  120E  0AFD               	incf	___xxtofl@arg+3,f
  7165  120F  2A18               	goto	l820
  7166  1210                     l3066:
  7167  1210  0873               	movf	___xxtofl@val+3,w
  7168  1211  00FD               	movwf	___xxtofl@arg+3
  7169  1212  0872               	movf	___xxtofl@val+2,w
  7170  1213  00FC               	movwf	___xxtofl@arg+2
  7171  1214  0871               	movf	___xxtofl@val+1,w
  7172  1215  00FB               	movwf	___xxtofl@arg+1
  7173  1216  0870               	movf	___xxtofl@val,w
  7174  1217  00FA               	movwf	___xxtofl@arg
  7175  1218                     l820:
  7176  1218  0873               	movf	___xxtofl@val+3,w
  7177  1219  0472               	iorwf	___xxtofl@val+2,w
  7178  121A  0471               	iorwf	___xxtofl@val+1,w
  7179  121B  0470               	iorwf	___xxtofl@val,w
  7180  121C  1D03               	skipz
  7181  121D  2A1F               	goto	u5101
  7182  121E  2A20               	goto	u5100
  7183  121F                     u5101:
  7184  121F  2A29               	goto	l3072
  7185  1220                     u5100:
  7186  1220                     l3068:
  7187  1220  3000               	movlw	0
  7188  1221  00F3               	movwf	?___xxtofl+3
  7189  1222  3000               	movlw	0
  7190  1223  00F2               	movwf	?___xxtofl+2
  7191  1224  3000               	movlw	0
  7192  1225  00F1               	movwf	?___xxtofl+1
  7193  1226  3000               	movlw	0
  7194  1227  00F0               	movwf	?___xxtofl
  7195  1228  2AAF               	goto	l822
  7196  1229                     l3072:
  7197  1229  3096               	movlw	150
  7198  122A  00F4               	movwf	??___xxtofl
  7199  122B  0874               	movf	??___xxtofl,w
  7200  122C  00F9               	movwf	___xxtofl@exp
  7201  122D  2A3B               	goto	l3076
  7202  122E                     l3074:
  7203  122E  3001               	movlw	1
  7204  122F  00F4               	movwf	??___xxtofl
  7205  1230  0874               	movf	??___xxtofl,w
  7206  1231  07F9               	addwf	___xxtofl@exp,f
  7207  1232  3001               	movlw	1
  7208  1233                     u5115:
  7209  1233  1003               	clrc
  7210  1234  0CFD               	rrf	___xxtofl@arg+3,f
  7211  1235  0CFC               	rrf	___xxtofl@arg+2,f
  7212  1236  0CFB               	rrf	___xxtofl@arg+1,f
  7213  1237  0CFA               	rrf	___xxtofl@arg,f
  7214  1238  3EFF               	addlw	-1
  7215  1239  1D03               	skipz
  7216  123A  2A33               	goto	u5115
  7217  123B                     l3076:
  7218  123B  30FE               	movlw	254
  7219  123C  057D               	andwf	___xxtofl@arg+3,w
  7220  123D  1D03               	btfss	3,2
  7221  123E  2A40               	goto	u5121
  7222  123F  2A41               	goto	u5120
  7223  1240                     u5121:
  7224  1240  2A2E               	goto	l3074
  7225  1241                     u5120:
  7226  1241  2A5D               	goto	l826
  7227  1242                     l3078:
  7228  1242  3001               	movlw	1
  7229  1243  00F4               	movwf	??___xxtofl
  7230  1244  0874               	movf	??___xxtofl,w
  7231  1245  07F9               	addwf	___xxtofl@exp,f
  7232  1246                     l3080:
  7233  1246  3001               	movlw	1
  7234  1247  07FA               	addwf	___xxtofl@arg,f
  7235  1248  3000               	movlw	0
  7236  1249  1803               	skipnc
  7237  124A  3001               	movlw	1
  7238  124B  07FB               	addwf	___xxtofl@arg+1,f
  7239  124C  3000               	movlw	0
  7240  124D  1803               	skipnc
  7241  124E  3001               	movlw	1
  7242  124F  07FC               	addwf	___xxtofl@arg+2,f
  7243  1250  3000               	movlw	0
  7244  1251  1803               	skipnc
  7245  1252  3001               	movlw	1
  7246  1253  07FD               	addwf	___xxtofl@arg+3,f
  7247  1254                     l3082:
  7248  1254  3001               	movlw	1
  7249  1255                     u5135:
  7250  1255  1003               	clrc
  7251  1256  0CFD               	rrf	___xxtofl@arg+3,f
  7252  1257  0CFC               	rrf	___xxtofl@arg+2,f
  7253  1258  0CFB               	rrf	___xxtofl@arg+1,f
  7254  1259  0CFA               	rrf	___xxtofl@arg,f
  7255  125A  3EFF               	addlw	-1
  7256  125B  1D03               	skipz
  7257  125C  2A55               	goto	u5135
  7258  125D                     l826:
  7259  125D  30FF               	movlw	255
  7260  125E  057D               	andwf	___xxtofl@arg+3,w
  7261  125F  1D03               	btfss	3,2
  7262  1260  2A62               	goto	u5141
  7263  1261  2A63               	goto	u5140
  7264  1262                     u5141:
  7265  1262  2A42               	goto	l3078
  7266  1263                     u5140:
  7267  1263  2A6F               	goto	l3086
  7268  1264                     l3084:
  7269  1264  3001               	movlw	1
  7270  1265  02F9               	subwf	___xxtofl@exp,f
  7271  1266  3001               	movlw	1
  7272  1267  00F4               	movwf	??___xxtofl
  7273  1268                     u5155:
  7274  1268  1003               	clrc
  7275  1269  0DFA               	rlf	___xxtofl@arg,f
  7276  126A  0DFB               	rlf	___xxtofl@arg+1,f
  7277  126B  0DFC               	rlf	___xxtofl@arg+2,f
  7278  126C  0DFD               	rlf	___xxtofl@arg+3,f
  7279  126D  0BF4               	decfsz	??___xxtofl,f
  7280  126E  2A68               	goto	u5155
  7281  126F                     l3086:
  7282  126F  1BFC               	btfsc	___xxtofl@arg+2,7
  7283  1270  2A72               	goto	u5161
  7284  1271  2A73               	goto	u5160
  7285  1272                     u5161:
  7286  1272  2A79               	goto	l833
  7287  1273                     u5160:
  7288  1273                     l3088:
  7289  1273  3002               	movlw	2
  7290  1274  0279               	subwf	___xxtofl@exp,w
  7291  1275  1803               	skipnc
  7292  1276  2A78               	goto	u5171
  7293  1277  2A79               	goto	u5170
  7294  1278                     u5171:
  7295  1278  2A64               	goto	l3084
  7296  1279                     u5170:
  7297  1279                     l833:
  7298  1279  1879               	btfsc	___xxtofl@exp,0
  7299  127A  2A7C               	goto	u5181
  7300  127B  2A7D               	goto	u5180
  7301  127C                     u5181:
  7302  127C  2A85               	goto	l834
  7303  127D                     u5180:
  7304  127D                     l3090:
  7305  127D  30FF               	movlw	255
  7306  127E  05FA               	andwf	___xxtofl@arg,f
  7307  127F  30FF               	movlw	255
  7308  1280  05FB               	andwf	___xxtofl@arg+1,f
  7309  1281  307F               	movlw	127
  7310  1282  05FC               	andwf	___xxtofl@arg+2,f
  7311  1283  30FF               	movlw	255
  7312  1284  05FD               	andwf	___xxtofl@arg+3,f
  7313  1285                     l834:
  7314  1285  1003               	clrc
  7315  1286  0CF9               	rrf	___xxtofl@exp,f
  7316  1287                     l3092:
  7317  1287  0879               	movf	___xxtofl@exp,w
  7318  1288  00F4               	movwf	??___xxtofl
  7319  1289  01F5               	clrf	??___xxtofl+1
  7320  128A  01F6               	clrf	??___xxtofl+2
  7321  128B  01F7               	clrf	??___xxtofl+3
  7322  128C  3018               	movlw	24
  7323  128D                     u5195:
  7324  128D  1003               	clrc
  7325  128E  0DF4               	rlf	??___xxtofl,f
  7326  128F  0DF5               	rlf	??___xxtofl+1,f
  7327  1290  0DF6               	rlf	??___xxtofl+2,f
  7328  1291  0DF7               	rlf	??___xxtofl+3,f
  7329  1292                     u5190:
  7330  1292  3EFF               	addlw	-1
  7331  1293  1D03               	skipz
  7332  1294  2A8D               	goto	u5195
  7333  1295  0874               	movf	??___xxtofl,w
  7334  1296  04FA               	iorwf	___xxtofl@arg,f
  7335  1297  0875               	movf	??___xxtofl+1,w
  7336  1298  04FB               	iorwf	___xxtofl@arg+1,f
  7337  1299  0876               	movf	??___xxtofl+2,w
  7338  129A  04FC               	iorwf	___xxtofl@arg+2,f
  7339  129B  0877               	movf	??___xxtofl+3,w
  7340  129C  04FD               	iorwf	___xxtofl@arg+3,f
  7341  129D                     l3094:
  7342  129D  0878               	movf	___xxtofl@sign,w
  7343  129E  1903               	btfsc	3,2
  7344  129F  2AA1               	goto	u5201
  7345  12A0  2AA2               	goto	u5200
  7346  12A1                     u5201:
  7347  12A1  2AA7               	goto	l3100
  7348  12A2                     u5200:
  7349  12A2                     l3096:
  7350  12A2  1FF3               	btfss	___xxtofl@val+3,7
  7351  12A3  2AA5               	goto	u5211
  7352  12A4  2AA6               	goto	u5210
  7353  12A5                     u5211:
  7354  12A5  2AA7               	goto	l3100
  7355  12A6                     u5210:
  7356  12A6                     l3098:
  7357  12A6  17FD               	bsf	___xxtofl@arg+3,7
  7358  12A7                     l3100:
  7359  12A7  087D               	movf	___xxtofl@arg+3,w
  7360  12A8  00F3               	movwf	?___xxtofl+3
  7361  12A9  087C               	movf	___xxtofl@arg+2,w
  7362  12AA  00F2               	movwf	?___xxtofl+2
  7363  12AB  087B               	movf	___xxtofl@arg+1,w
  7364  12AC  00F1               	movwf	?___xxtofl+1
  7365  12AD  087A               	movf	___xxtofl@arg,w
  7366  12AE  00F0               	movwf	?___xxtofl
  7367  12AF                     l822:
  7368  12AF  0008               	return
  7369  12B0                     __end_of___xxtofl:
  7370                           
  7371                           	psect	text14
  7372  1D20                     __ptext14:	
  7373 ;; *************** function ___wmul *****************
  7374 ;; Defined at:
  7375 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;  multiplier      2    0[COMMON] unsigned int 
  7378 ;;  multiplicand    2    2[COMMON] unsigned int 
  7379 ;; Auto vars:     Size  Location     Type
  7380 ;;  product         2    4[COMMON] unsigned int 
  7381 ;; Return value:  Size  Location     Type
  7382 ;;                  2    0[COMMON] unsigned int 
  7383 ;; Registers used:
  7384 ;;		wreg, status,2, status,0
  7385 ;; Tracked objects:
  7386 ;;		On entry : 0/0
  7387 ;;		On exit  : 0/0
  7388 ;;		Unchanged: 0/0
  7389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7390 ;;      Params:         4       0       0       0       0
  7391 ;;      Locals:         2       0       0       0       0
  7392 ;;      Temps:          0       0       0       0       0
  7393 ;;      Totals:         6       0       0       0       0
  7394 ;;Total ram usage:        6 bytes
  7395 ;; Hardware stack levels used: 1
  7396 ;; This function calls:
  7397 ;;		Nothing
  7398 ;; This function is called by:
  7399 ;;		_sprintf
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403  1D20                     ___wmul:	
  7404                           ;psect for function ___wmul
  7405                           
  7406  1D20                     l2920:	
  7407                           ;incstack = 0
  7408                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7409                           
  7410  1D20  01F4               	clrf	___wmul@product
  7411  1D21  01F5               	clrf	___wmul@product+1
  7412  1D22                     l2922:
  7413  1D22  1C70               	btfss	___wmul@multiplier,0
  7414  1D23  2D25               	goto	u4701
  7415  1D24  2D26               	goto	u4700
  7416  1D25                     u4701:
  7417  1D25  2D2C               	goto	l353
  7418  1D26                     u4700:
  7419  1D26                     l2924:
  7420  1D26  0872               	movf	___wmul@multiplicand,w
  7421  1D27  07F4               	addwf	___wmul@product,f
  7422  1D28  1803               	skipnc
  7423  1D29  0AF5               	incf	___wmul@product+1,f
  7424  1D2A  0873               	movf	___wmul@multiplicand+1,w
  7425  1D2B  07F5               	addwf	___wmul@product+1,f
  7426  1D2C                     l353:
  7427  1D2C  3001               	movlw	1
  7428  1D2D                     u4715:
  7429  1D2D  1003               	clrc
  7430  1D2E  0DF2               	rlf	___wmul@multiplicand,f
  7431  1D2F  0DF3               	rlf	___wmul@multiplicand+1,f
  7432  1D30  3EFF               	addlw	-1
  7433  1D31  1D03               	skipz
  7434  1D32  2D2D               	goto	u4715
  7435  1D33                     l2926:
  7436  1D33  3001               	movlw	1
  7437  1D34                     u4725:
  7438  1D34  1003               	clrc
  7439  1D35  0CF1               	rrf	___wmul@multiplier+1,f
  7440  1D36  0CF0               	rrf	___wmul@multiplier,f
  7441  1D37  3EFF               	addlw	-1
  7442  1D38  1D03               	skipz
  7443  1D39  2D34               	goto	u4725
  7444  1D3A                     l2928:
  7445  1D3A  0870               	movf	___wmul@multiplier,w
  7446  1D3B  0471               	iorwf	___wmul@multiplier+1,w
  7447  1D3C  1D03               	btfss	3,2
  7448  1D3D  2D3F               	goto	u4731
  7449  1D3E  2D40               	goto	u4730
  7450  1D3F                     u4731:
  7451  1D3F  2D22               	goto	l2922
  7452  1D40                     u4730:
  7453  1D40                     l2930:
  7454  1D40  0875               	movf	___wmul@product+1,w
  7455  1D41  00F1               	movwf	?___wmul+1
  7456  1D42  0874               	movf	___wmul@product,w
  7457  1D43  00F0               	movwf	?___wmul
  7458  1D44                     l355:
  7459  1D44  0008               	return
  7460  1D45                     __end_of___wmul:
  7461                           
  7462                           	psect	text15
  7463  1EF7                     __ptext15:	
  7464 ;; *************** function ___llmod *****************
  7465 ;; Defined at:
  7466 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;  divisor         4    0[COMMON] unsigned long 
  7469 ;;  dividend        4    4[COMMON] unsigned long 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  counter         1    9[COMMON] unsigned char 
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  4    0[COMMON] unsigned long 
  7474 ;; Registers used:
  7475 ;;		wreg, status,2, status,0
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7481 ;;      Params:         8       0       0       0       0
  7482 ;;      Locals:         1       0       0       0       0
  7483 ;;      Temps:          1       0       0       0       0
  7484 ;;      Totals:        10       0       0       0       0
  7485 ;;Total ram usage:       10 bytes
  7486 ;; Hardware stack levels used: 1
  7487 ;; This function calls:
  7488 ;;		Nothing
  7489 ;; This function is called by:
  7490 ;;		_sprintf
  7491 ;; This function uses a non-reentrant model
  7492 ;;
  7493                           
  7494  1EF7                     ___llmod:	
  7495                           ;psect for function ___llmod
  7496                           
  7497  1EF7                     l3034:	
  7498                           ;incstack = 0
  7499                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7500                           
  7501  1EF7  0873               	movf	___llmod@divisor+3,w
  7502  1EF8  0472               	iorwf	___llmod@divisor+2,w
  7503  1EF9  0471               	iorwf	___llmod@divisor+1,w
  7504  1EFA  0470               	iorwf	___llmod@divisor,w
  7505  1EFB  1903               	skipnz
  7506  1EFC  2EFE               	goto	u5021
  7507  1EFD  2EFF               	goto	u5020
  7508  1EFE                     u5021:
  7509  1EFE  2F42               	goto	l3050
  7510  1EFF                     u5020:
  7511  1EFF                     l3036:
  7512  1EFF  01F9               	clrf	___llmod@counter
  7513  1F00  0AF9               	incf	___llmod@counter,f
  7514  1F01  2F0F               	goto	l3040
  7515  1F02                     l3038:
  7516  1F02  3001               	movlw	1
  7517  1F03  00F8               	movwf	??___llmod
  7518  1F04                     u5035:
  7519  1F04  1003               	clrc
  7520  1F05  0DF0               	rlf	___llmod@divisor,f
  7521  1F06  0DF1               	rlf	___llmod@divisor+1,f
  7522  1F07  0DF2               	rlf	___llmod@divisor+2,f
  7523  1F08  0DF3               	rlf	___llmod@divisor+3,f
  7524  1F09  0BF8               	decfsz	??___llmod,f
  7525  1F0A  2F04               	goto	u5035
  7526  1F0B  3001               	movlw	1
  7527  1F0C  00F8               	movwf	??___llmod
  7528  1F0D  0878               	movf	??___llmod,w
  7529  1F0E  07F9               	addwf	___llmod@counter,f
  7530  1F0F                     l3040:
  7531  1F0F  1FF3               	btfss	___llmod@divisor+3,7
  7532  1F10  2F12               	goto	u5041
  7533  1F11  2F13               	goto	u5040
  7534  1F12                     u5041:
  7535  1F12  2F02               	goto	l3038
  7536  1F13                     u5040:
  7537  1F13                     l3042:
  7538  1F13  0873               	movf	___llmod@divisor+3,w
  7539  1F14  0277               	subwf	___llmod@dividend+3,w
  7540  1F15  1D03               	skipz
  7541  1F16  2F21               	goto	u5055
  7542  1F17  0872               	movf	___llmod@divisor+2,w
  7543  1F18  0276               	subwf	___llmod@dividend+2,w
  7544  1F19  1D03               	skipz
  7545  1F1A  2F21               	goto	u5055
  7546  1F1B  0871               	movf	___llmod@divisor+1,w
  7547  1F1C  0275               	subwf	___llmod@dividend+1,w
  7548  1F1D  1D03               	skipz
  7549  1F1E  2F21               	goto	u5055
  7550  1F1F  0870               	movf	___llmod@divisor,w
  7551  1F20  0274               	subwf	___llmod@dividend,w
  7552  1F21                     u5055:
  7553  1F21  1C03               	skipc
  7554  1F22  2F24               	goto	u5051
  7555  1F23  2F25               	goto	u5050
  7556  1F24                     u5051:
  7557  1F24  2F33               	goto	l3046
  7558  1F25                     u5050:
  7559  1F25                     l3044:
  7560  1F25  0870               	movf	___llmod@divisor,w
  7561  1F26  02F4               	subwf	___llmod@dividend,f
  7562  1F27  0871               	movf	___llmod@divisor+1,w
  7563  1F28  1C03               	skipc
  7564  1F29  0F71               	incfsz	___llmod@divisor+1,w
  7565  1F2A  02F5               	subwf	___llmod@dividend+1,f
  7566  1F2B  0872               	movf	___llmod@divisor+2,w
  7567  1F2C  1C03               	skipc
  7568  1F2D  0F72               	incfsz	___llmod@divisor+2,w
  7569  1F2E  02F6               	subwf	___llmod@dividend+2,f
  7570  1F2F  0873               	movf	___llmod@divisor+3,w
  7571  1F30  1C03               	skipc
  7572  1F31  0F73               	incfsz	___llmod@divisor+3,w
  7573  1F32  02F7               	subwf	___llmod@dividend+3,f
  7574  1F33                     l3046:
  7575  1F33  3001               	movlw	1
  7576  1F34                     u5065:
  7577  1F34  1003               	clrc
  7578  1F35  0CF3               	rrf	___llmod@divisor+3,f
  7579  1F36  0CF2               	rrf	___llmod@divisor+2,f
  7580  1F37  0CF1               	rrf	___llmod@divisor+1,f
  7581  1F38  0CF0               	rrf	___llmod@divisor,f
  7582  1F39  3EFF               	addlw	-1
  7583  1F3A  1D03               	skipz
  7584  1F3B  2F34               	goto	u5065
  7585  1F3C                     l3048:
  7586  1F3C  3001               	movlw	1
  7587  1F3D  02F9               	subwf	___llmod@counter,f
  7588  1F3E  1D03               	btfss	3,2
  7589  1F3F  2F41               	goto	u5071
  7590  1F40  2F42               	goto	u5070
  7591  1F41                     u5071:
  7592  1F41  2F13               	goto	l3042
  7593  1F42                     u5070:
  7594  1F42                     l3050:
  7595  1F42  0877               	movf	___llmod@dividend+3,w
  7596  1F43  00F3               	movwf	?___llmod+3
  7597  1F44  0876               	movf	___llmod@dividend+2,w
  7598  1F45  00F2               	movwf	?___llmod+2
  7599  1F46  0875               	movf	___llmod@dividend+1,w
  7600  1F47  00F1               	movwf	?___llmod+1
  7601  1F48  0874               	movf	___llmod@dividend,w
  7602  1F49  00F0               	movwf	?___llmod
  7603  1F4A                     l609:
  7604  1F4A  0008               	return
  7605  1F4B                     __end_of___llmod:
  7606                           
  7607                           	psect	text16
  7608  10EE                     __ptext16:	
  7609 ;; *************** function ___lldiv *****************
  7610 ;; Defined at:
  7611 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;  divisor         4    0[COMMON] unsigned long 
  7614 ;;  dividend        4    4[COMMON] unsigned long 
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;  quotient        4    9[COMMON] unsigned long 
  7617 ;;  counter         1   13[COMMON] unsigned char 
  7618 ;; Return value:  Size  Location     Type
  7619 ;;                  4    0[COMMON] unsigned long 
  7620 ;; Registers used:
  7621 ;;		wreg, status,2, status,0
  7622 ;; Tracked objects:
  7623 ;;		On entry : 0/0
  7624 ;;		On exit  : 0/0
  7625 ;;		Unchanged: 0/0
  7626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7627 ;;      Params:         8       0       0       0       0
  7628 ;;      Locals:         5       0       0       0       0
  7629 ;;      Temps:          1       0       0       0       0
  7630 ;;      Totals:        14       0       0       0       0
  7631 ;;Total ram usage:       14 bytes
  7632 ;; Hardware stack levels used: 1
  7633 ;; This function calls:
  7634 ;;		Nothing
  7635 ;; This function is called by:
  7636 ;;		_sprintf
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640  10EE                     ___lldiv:	
  7641                           ;psect for function ___lldiv
  7642                           
  7643  10EE                     l2934:	
  7644                           ;incstack = 0
  7645                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7646                           
  7647  10EE  3000               	movlw	0
  7648  10EF  00FC               	movwf	___lldiv@quotient+3
  7649  10F0  3000               	movlw	0
  7650  10F1  00FB               	movwf	___lldiv@quotient+2
  7651  10F2  3000               	movlw	0
  7652  10F3  00FA               	movwf	___lldiv@quotient+1
  7653  10F4  3000               	movlw	0
  7654  10F5  00F9               	movwf	___lldiv@quotient
  7655  10F6  0873               	movf	___lldiv@divisor+3,w
  7656  10F7  0472               	iorwf	___lldiv@divisor+2,w
  7657  10F8  0471               	iorwf	___lldiv@divisor+1,w
  7658  10F9  0470               	iorwf	___lldiv@divisor,w
  7659  10FA  1903               	skipnz
  7660  10FB  28FD               	goto	u4741
  7661  10FC  28FE               	goto	u4740
  7662  10FD                     u4741:
  7663  10FD  294B               	goto	l2954
  7664  10FE                     u4740:
  7665  10FE                     l2936:
  7666  10FE  01FD               	clrf	___lldiv@counter
  7667  10FF  0AFD               	incf	___lldiv@counter,f
  7668  1100  290E               	goto	l2940
  7669  1101                     l2938:
  7670  1101  3001               	movlw	1
  7671  1102  00F8               	movwf	??___lldiv
  7672  1103                     u4755:
  7673  1103  1003               	clrc
  7674  1104  0DF0               	rlf	___lldiv@divisor,f
  7675  1105  0DF1               	rlf	___lldiv@divisor+1,f
  7676  1106  0DF2               	rlf	___lldiv@divisor+2,f
  7677  1107  0DF3               	rlf	___lldiv@divisor+3,f
  7678  1108  0BF8               	decfsz	??___lldiv,f
  7679  1109  2903               	goto	u4755
  7680  110A  3001               	movlw	1
  7681  110B  00F8               	movwf	??___lldiv
  7682  110C  0878               	movf	??___lldiv,w
  7683  110D  07FD               	addwf	___lldiv@counter,f
  7684  110E                     l2940:
  7685  110E  1FF3               	btfss	___lldiv@divisor+3,7
  7686  110F  2911               	goto	u4761
  7687  1110  2912               	goto	u4760
  7688  1111                     u4761:
  7689  1111  2901               	goto	l2938
  7690  1112                     u4760:
  7691  1112                     l2942:
  7692  1112  3001               	movlw	1
  7693  1113  00F8               	movwf	??___lldiv
  7694  1114                     u4775:
  7695  1114  1003               	clrc
  7696  1115  0DF9               	rlf	___lldiv@quotient,f
  7697  1116  0DFA               	rlf	___lldiv@quotient+1,f
  7698  1117  0DFB               	rlf	___lldiv@quotient+2,f
  7699  1118  0DFC               	rlf	___lldiv@quotient+3,f
  7700  1119  0BF8               	decfsz	??___lldiv,f
  7701  111A  2914               	goto	u4775
  7702  111B                     l2944:
  7703  111B  0873               	movf	___lldiv@divisor+3,w
  7704  111C  0277               	subwf	___lldiv@dividend+3,w
  7705  111D  1D03               	skipz
  7706  111E  2929               	goto	u4785
  7707  111F  0872               	movf	___lldiv@divisor+2,w
  7708  1120  0276               	subwf	___lldiv@dividend+2,w
  7709  1121  1D03               	skipz
  7710  1122  2929               	goto	u4785
  7711  1123  0871               	movf	___lldiv@divisor+1,w
  7712  1124  0275               	subwf	___lldiv@dividend+1,w
  7713  1125  1D03               	skipz
  7714  1126  2929               	goto	u4785
  7715  1127  0870               	movf	___lldiv@divisor,w
  7716  1128  0274               	subwf	___lldiv@dividend,w
  7717  1129                     u4785:
  7718  1129  1C03               	skipc
  7719  112A  292C               	goto	u4781
  7720  112B  292D               	goto	u4780
  7721  112C                     u4781:
  7722  112C  293C               	goto	l2950
  7723  112D                     u4780:
  7724  112D                     l2946:
  7725  112D  0870               	movf	___lldiv@divisor,w
  7726  112E  02F4               	subwf	___lldiv@dividend,f
  7727  112F  0871               	movf	___lldiv@divisor+1,w
  7728  1130  1C03               	skipc
  7729  1131  0F71               	incfsz	___lldiv@divisor+1,w
  7730  1132  02F5               	subwf	___lldiv@dividend+1,f
  7731  1133  0872               	movf	___lldiv@divisor+2,w
  7732  1134  1C03               	skipc
  7733  1135  0F72               	incfsz	___lldiv@divisor+2,w
  7734  1136  02F6               	subwf	___lldiv@dividend+2,f
  7735  1137  0873               	movf	___lldiv@divisor+3,w
  7736  1138  1C03               	skipc
  7737  1139  0F73               	incfsz	___lldiv@divisor+3,w
  7738  113A  02F7               	subwf	___lldiv@dividend+3,f
  7739  113B                     l2948:
  7740  113B  1479               	bsf	___lldiv@quotient,0
  7741  113C                     l2950:
  7742  113C  3001               	movlw	1
  7743  113D                     u4795:
  7744  113D  1003               	clrc
  7745  113E  0CF3               	rrf	___lldiv@divisor+3,f
  7746  113F  0CF2               	rrf	___lldiv@divisor+2,f
  7747  1140  0CF1               	rrf	___lldiv@divisor+1,f
  7748  1141  0CF0               	rrf	___lldiv@divisor,f
  7749  1142  3EFF               	addlw	-1
  7750  1143  1D03               	skipz
  7751  1144  293D               	goto	u4795
  7752  1145                     l2952:
  7753  1145  3001               	movlw	1
  7754  1146  02FD               	subwf	___lldiv@counter,f
  7755  1147  1D03               	btfss	3,2
  7756  1148  294A               	goto	u4801
  7757  1149  294B               	goto	u4800
  7758  114A                     u4801:
  7759  114A  2912               	goto	l2942
  7760  114B                     u4800:
  7761  114B                     l2954:
  7762  114B  087C               	movf	___lldiv@quotient+3,w
  7763  114C  00F3               	movwf	?___lldiv+3
  7764  114D  087B               	movf	___lldiv@quotient+2,w
  7765  114E  00F2               	movwf	?___lldiv+2
  7766  114F  087A               	movf	___lldiv@quotient+1,w
  7767  1150  00F1               	movwf	?___lldiv+1
  7768  1151  0879               	movf	___lldiv@quotient,w
  7769  1152  00F0               	movwf	?___lldiv
  7770  1153                     l389:
  7771  1153  0008               	return
  7772  1154                     __end_of___lldiv:
  7773                           
  7774                           	psect	text17
  7775  0806                     __ptext17:	
  7776 ;; *************** function ___fltol *****************
  7777 ;; Defined at:
  7778 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
  7779 ;; Parameters:    Size  Location     Type
  7780 ;;  f1              4   49[BANK0 ] unsigned long 
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;  exp1            1   59[BANK0 ] unsigned char 
  7783 ;;  sign1           1   58[BANK0 ] unsigned char 
  7784 ;; Return value:  Size  Location     Type
  7785 ;;                  4   49[BANK0 ] long 
  7786 ;; Registers used:
  7787 ;;		wreg, status,2, status,0
  7788 ;; Tracked objects:
  7789 ;;		On entry : 0/0
  7790 ;;		On exit  : 0/0
  7791 ;;		Unchanged: 0/0
  7792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7793 ;;      Params:         0       4       0       0       0
  7794 ;;      Locals:         0       2       0       0       0
  7795 ;;      Temps:          0       5       0       0       0
  7796 ;;      Totals:         0      11       0       0       0
  7797 ;;Total ram usage:       11 bytes
  7798 ;; Hardware stack levels used: 1
  7799 ;; This function calls:
  7800 ;;		Nothing
  7801 ;; This function is called by:
  7802 ;;		_sprintf
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806  0806                     ___fltol:	
  7807                           ;psect for function ___fltol
  7808                           
  7809  0806                     l2998:	
  7810                           ;incstack = 0
  7811                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7812                           
  7813  0806  1003               	clrc
  7814  0807  1283               	bcf	3,5	;RP0=0, select bank0
  7815  0808  1303               	bcf	3,6	;RP1=0, select bank0
  7816  0809  0D53               	rlf	___fltol@f1+2,w
  7817  080A  0D54               	rlf	___fltol@f1+3,w
  7818  080B  00D5               	movwf	??___fltol
  7819  080C  0855               	movf	??___fltol,w
  7820  080D  00DB               	movwf	___fltol@exp1
  7821  080E  085B               	movf	___fltol@exp1,w
  7822  080F  1D03               	btfss	3,2
  7823  0810  2812               	goto	u4921
  7824  0811  2813               	goto	u4920
  7825  0812                     u4921:
  7826  0812  281C               	goto	l3004
  7827  0813                     u4920:
  7828  0813                     l3000:
  7829  0813  3000               	movlw	0
  7830  0814  00D4               	movwf	?___fltol+3
  7831  0815  3000               	movlw	0
  7832  0816  00D3               	movwf	?___fltol+2
  7833  0817  3000               	movlw	0
  7834  0818  00D2               	movwf	?___fltol+1
  7835  0819  3000               	movlw	0
  7836  081A  00D1               	movwf	?___fltol
  7837  081B  2881               	goto	l556
  7838  081C                     l3004:
  7839  081C  0851               	movf	___fltol@f1,w
  7840  081D  00D5               	movwf	??___fltol
  7841  081E  0852               	movf	___fltol@f1+1,w
  7842  081F  00D6               	movwf	??___fltol+1
  7843  0820  0853               	movf	___fltol@f1+2,w
  7844  0821  00D7               	movwf	??___fltol+2
  7845  0822  0854               	movf	___fltol@f1+3,w
  7846  0823  00D8               	movwf	??___fltol+3
  7847  0824  301F               	movlw	31
  7848  0825                     u4935:
  7849  0825  1003               	clrc
  7850  0826  0CD8               	rrf	??___fltol+3,f
  7851  0827  0CD7               	rrf	??___fltol+2,f
  7852  0828  0CD6               	rrf	??___fltol+1,f
  7853  0829  0CD5               	rrf	??___fltol,f
  7854  082A                     u4930:
  7855  082A  3EFF               	addlw	-1
  7856  082B  1D03               	skipz
  7857  082C  2825               	goto	u4935
  7858  082D  0855               	movf	??___fltol,w
  7859  082E  00D9               	movwf	??___fltol+4
  7860  082F  0859               	movf	??___fltol+4,w
  7861  0830  00DA               	movwf	___fltol@sign1
  7862  0831                     l3006:
  7863  0831  17D3               	bsf	___fltol@f1+2,7
  7864  0832                     l3008:
  7865  0832  30FF               	movlw	255
  7866  0833  05D1               	andwf	___fltol@f1,f
  7867  0834  30FF               	movlw	255
  7868  0835  05D2               	andwf	___fltol@f1+1,f
  7869  0836  30FF               	movlw	255
  7870  0837  05D3               	andwf	___fltol@f1+2,f
  7871  0838  3000               	movlw	0
  7872  0839  05D4               	andwf	___fltol@f1+3,f
  7873  083A                     l3010:
  7874  083A  3096               	movlw	150
  7875  083B  02DB               	subwf	___fltol@exp1,f
  7876  083C                     l3012:
  7877  083C  1FDB               	btfss	___fltol@exp1,7
  7878  083D  283F               	goto	u4941
  7879  083E  2840               	goto	u4940
  7880  083F                     u4941:
  7881  083F  285A               	goto	l3022
  7882  0840                     u4940:
  7883  0840                     l3014:
  7884  0840  085B               	movf	___fltol@exp1,w
  7885  0841  3A80               	xorlw	128
  7886  0842  3E97               	addlw	151
  7887  0843  1803               	skipnc
  7888  0844  2846               	goto	u4951
  7889  0845  2847               	goto	u4950
  7890  0846                     u4951:
  7891  0846  2848               	goto	l3020
  7892  0847                     u4950:
  7893  0847  2813               	goto	l3000
  7894  0848                     l3020:
  7895  0848  3001               	movlw	1
  7896  0849                     u4965:
  7897  0849  1003               	clrc
  7898  084A  0CD4               	rrf	___fltol@f1+3,f
  7899  084B  0CD3               	rrf	___fltol@f1+2,f
  7900  084C  0CD2               	rrf	___fltol@f1+1,f
  7901  084D  0CD1               	rrf	___fltol@f1,f
  7902  084E  3EFF               	addlw	-1
  7903  084F  1D03               	skipz
  7904  0850  2849               	goto	u4965
  7905  0851  3001               	movlw	1
  7906  0852  00D5               	movwf	??___fltol
  7907  0853  0855               	movf	??___fltol,w
  7908  0854  07DB               	addwf	___fltol@exp1,f
  7909  0855  1D03               	btfss	3,2
  7910  0856  2858               	goto	u4971
  7911  0857  2859               	goto	u4970
  7912  0858                     u4971:
  7913  0858  2848               	goto	l3020
  7914  0859                     u4970:
  7915  0859  2871               	goto	l3030
  7916  085A                     l3022:
  7917  085A  3020               	movlw	32
  7918  085B  025B               	subwf	___fltol@exp1,w
  7919  085C  1C03               	skipc
  7920  085D  285F               	goto	u4981
  7921  085E  2860               	goto	u4980
  7922  085F                     u4981:
  7923  085F  286C               	goto	l563
  7924  0860                     u4980:
  7925  0860  2813               	goto	l3000
  7926  0861                     l3028:
  7927  0861  3001               	movlw	1
  7928  0862  00D5               	movwf	??___fltol
  7929  0863                     u4995:
  7930  0863  1003               	clrc
  7931  0864  0DD1               	rlf	___fltol@f1,f
  7932  0865  0DD2               	rlf	___fltol@f1+1,f
  7933  0866  0DD3               	rlf	___fltol@f1+2,f
  7934  0867  0DD4               	rlf	___fltol@f1+3,f
  7935  0868  0BD5               	decfsz	??___fltol,f
  7936  0869  2863               	goto	u4995
  7937  086A  3001               	movlw	1
  7938  086B  02DB               	subwf	___fltol@exp1,f
  7939  086C                     l563:
  7940  086C  085B               	movf	___fltol@exp1,w
  7941  086D  1D03               	btfss	3,2
  7942  086E  2870               	goto	u5001
  7943  086F  2871               	goto	u5000
  7944  0870                     u5001:
  7945  0870  2861               	goto	l3028
  7946  0871                     u5000:
  7947  0871                     l3030:
  7948  0871  085A               	movf	___fltol@sign1,w
  7949  0872  1903               	btfsc	3,2
  7950  0873  2875               	goto	u5011
  7951  0874  2876               	goto	u5010
  7952  0875                     u5011:
  7953  0875  2881               	goto	l566
  7954  0876                     u5010:
  7955  0876                     l3032:
  7956  0876  09D1               	comf	___fltol@f1,f
  7957  0877  09D2               	comf	___fltol@f1+1,f
  7958  0878  09D3               	comf	___fltol@f1+2,f
  7959  0879  09D4               	comf	___fltol@f1+3,f
  7960  087A  0AD1               	incf	___fltol@f1,f
  7961  087B  1903               	skipnz
  7962  087C  0AD2               	incf	___fltol@f1+1,f
  7963  087D  1903               	skipnz
  7964  087E  0AD3               	incf	___fltol@f1+2,f
  7965  087F  1903               	skipnz
  7966  0880  0AD4               	incf	___fltol@f1+3,f
  7967  0881                     l566:
  7968  0881                     l556:
  7969  0881  0008               	return
  7970  0882                     __end_of___fltol:
  7971                           
  7972                           	psect	text18
  7973  1CFC                     __ptext18:	
  7974 ;; *************** function ___flsub *****************
  7975 ;; Defined at:
  7976 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;  a               4   70[BANK0 ] long 
  7979 ;;  b               4   74[BANK0 ] long 
  7980 ;; Auto vars:     Size  Location     Type
  7981 ;;		None
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  4   70[BANK0 ] long 
  7984 ;; Registers used:
  7985 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7991 ;;      Params:         0       8       0       0       0
  7992 ;;      Locals:         0       0       0       0       0
  7993 ;;      Temps:          0       0       0       0       0
  7994 ;;      Totals:         0       8       0       0       0
  7995 ;;Total ram usage:        8 bytes
  7996 ;; Hardware stack levels used: 1
  7997 ;; Hardware stack levels required when called: 1
  7998 ;; This function calls:
  7999 ;;		___fladd
  8000 ;; This function is called by:
  8001 ;;		_sprintf
  8002 ;; This function uses a non-reentrant model
  8003 ;;
  8004                           
  8005  1CFC                     ___flsub:	
  8006                           ;psect for function ___flsub
  8007                           
  8008  1CFC                     l3054:	
  8009                           ;incstack = 0
  8010                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8011                           
  8012  1CFC  3080               	movlw	128
  8013  1CFD  1283               	bcf	3,5	;RP0=0, select bank0
  8014  1CFE  1303               	bcf	3,6	;RP1=0, select bank0
  8015  1CFF  06E9               	xorwf	___flsub@a+3,f
  8016  1D00                     l3056:
  8017  1D00  086D               	movf	___flsub@b+3,w
  8018  1D01  00D5               	movwf	___fladd@b+3
  8019  1D02  086C               	movf	___flsub@b+2,w
  8020  1D03  00D4               	movwf	___fladd@b+2
  8021  1D04  086B               	movf	___flsub@b+1,w
  8022  1D05  00D3               	movwf	___fladd@b+1
  8023  1D06  086A               	movf	___flsub@b,w
  8024  1D07  00D2               	movwf	___fladd@b
  8025  1D08  0869               	movf	___flsub@a+3,w
  8026  1D09  00D9               	movwf	___fladd@a+3
  8027  1D0A  0868               	movf	___flsub@a+2,w
  8028  1D0B  00D8               	movwf	___fladd@a+2
  8029  1D0C  0867               	movf	___flsub@a+1,w
  8030  1D0D  00D7               	movwf	___fladd@a+1
  8031  1D0E  0866               	movf	___flsub@a,w
  8032  1D0F  00D6               	movwf	___fladd@a
  8033  1D10  160A  118A  2578  160A  158A  	fcall	___fladd
  8034  1D15  1283               	bcf	3,5	;RP0=0, select bank0
  8035  1D16  1303               	bcf	3,6	;RP1=0, select bank0
  8036  1D17  0855               	movf	?___fladd+3,w
  8037  1D18  00E9               	movwf	?___flsub+3
  8038  1D19  0854               	movf	?___fladd+2,w
  8039  1D1A  00E8               	movwf	?___flsub+2
  8040  1D1B  0853               	movf	?___fladd+1,w
  8041  1D1C  00E7               	movwf	?___flsub+1
  8042  1D1D  0852               	movf	?___fladd,w
  8043  1D1E  00E6               	movwf	?___flsub
  8044  1D1F                     l726:
  8045  1D1F  0008               	return
  8046  1D20                     __end_of___flsub:
  8047                           
  8048                           	psect	text19
  8049  1578                     __ptext19:	
  8050 ;; *************** function ___fladd *****************
  8051 ;; Defined at:
  8052 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
  8053 ;; Parameters:    Size  Location     Type
  8054 ;;  b               4   50[BANK0 ] long 
  8055 ;;  a               4   54[BANK0 ] long 
  8056 ;; Auto vars:     Size  Location     Type
  8057 ;;  grs             1   69[BANK0 ] unsigned char 
  8058 ;;  bexp            1   68[BANK0 ] unsigned char 
  8059 ;;  aexp            1   67[BANK0 ] unsigned char 
  8060 ;;  signs           1   66[BANK0 ] unsigned char 
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  4   50[BANK0 ] unsigned char 
  8063 ;; Registers used:
  8064 ;;		wreg, status,2, status,0, btemp+1
  8065 ;; Tracked objects:
  8066 ;;		On entry : 0/0
  8067 ;;		On exit  : 0/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8070 ;;      Params:         0       8       0       0       0
  8071 ;;      Locals:         0       4       0       0       0
  8072 ;;      Temps:          0       8       0       0       0
  8073 ;;      Totals:         0      20       0       0       0
  8074 ;;Total ram usage:       20 bytes
  8075 ;; Hardware stack levels used: 1
  8076 ;; This function calls:
  8077 ;;		Nothing
  8078 ;; This function is called by:
  8079 ;;		_sprintf
  8080 ;;		___flsub
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084  1578                     ___fladd:	
  8085                           ;psect for function ___fladd
  8086                           
  8087  1578                     l2362:	
  8088                           ;incstack = 0
  8089                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8090                           
  8091  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8092  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8093  157A  0855               	movf	___fladd@b+3,w
  8094  157B  3980               	andlw	128
  8095  157C  00DA               	movwf	??___fladd
  8096  157D  085A               	movf	??___fladd,w
  8097  157E  00E2               	movwf	___fladd@signs
  8098  157F                     l2364:
  8099  157F  0855               	movf	___fladd@b+3,w
  8100  1580  00DA               	movwf	??___fladd
  8101  1581  075A               	addwf	??___fladd,w
  8102  1582  00DB               	movwf	??___fladd+1
  8103  1583  085B               	movf	??___fladd+1,w
  8104  1584  00E4               	movwf	___fladd@bexp
  8105  1585                     l2366:
  8106  1585  1FD4               	btfss	___fladd@b+2,7
  8107  1586  2D88               	goto	u3251
  8108  1587  2D89               	goto	u3250
  8109  1588                     u3251:
  8110  1588  2D8A               	goto	l2370
  8111  1589                     u3250:
  8112  1589                     l2368:
  8113  1589  1464               	bsf	___fladd@bexp,0
  8114  158A                     l2370:
  8115  158A  0864               	movf	___fladd@bexp,w
  8116  158B  1903               	btfsc	3,2
  8117  158C  2D8E               	goto	u3261
  8118  158D  2D8F               	goto	u3260
  8119  158E                     u3261:
  8120  158E  2D9F               	goto	l2380
  8121  158F                     u3260:
  8122  158F                     l2372:
  8123  158F  0A64               	incf	___fladd@bexp,w
  8124  1590  1D03               	btfss	3,2
  8125  1591  2D93               	goto	u3271
  8126  1592  2D94               	goto	u3270
  8127  1593                     u3271:
  8128  1593  2D9C               	goto	l2376
  8129  1594                     u3270:
  8130  1594                     l2374:
  8131  1594  3000               	movlw	0
  8132  1595  00D5               	movwf	___fladd@b+3
  8133  1596  3000               	movlw	0
  8134  1597  00D4               	movwf	___fladd@b+2
  8135  1598  3000               	movlw	0
  8136  1599  00D3               	movwf	___fladd@b+1
  8137  159A  3000               	movlw	0
  8138  159B  00D2               	movwf	___fladd@b
  8139  159C                     l2376:
  8140  159C  17D4               	bsf	___fladd@b+2,7
  8141  159D                     l2378:
  8142  159D  01D5               	clrf	___fladd@b+3
  8143  159E  2DA7               	goto	l2382
  8144  159F                     l2380:
  8145  159F  3000               	movlw	0
  8146  15A0  00D5               	movwf	___fladd@b+3
  8147  15A1  3000               	movlw	0
  8148  15A2  00D4               	movwf	___fladd@b+2
  8149  15A3  3000               	movlw	0
  8150  15A4  00D3               	movwf	___fladd@b+1
  8151  15A5  3000               	movlw	0
  8152  15A6  00D2               	movwf	___fladd@b
  8153  15A7                     l2382:
  8154  15A7  0859               	movf	___fladd@a+3,w
  8155  15A8  3980               	andlw	128
  8156  15A9  00DA               	movwf	??___fladd
  8157  15AA  085A               	movf	??___fladd,w
  8158  15AB  00E3               	movwf	___fladd@aexp
  8159  15AC                     l2384:
  8160  15AC  0863               	movf	___fladd@aexp,w
  8161  15AD  0662               	xorwf	___fladd@signs,w
  8162  15AE  1903               	skipnz
  8163  15AF  2DB1               	goto	u3281
  8164  15B0  2DB2               	goto	u3280
  8165  15B1                     u3281:
  8166  15B1  2DB3               	goto	l2388
  8167  15B2                     u3280:
  8168  15B2                     l2386:
  8169  15B2  1762               	bsf	___fladd@signs,6
  8170  15B3                     l2388:
  8171  15B3  0859               	movf	___fladd@a+3,w
  8172  15B4  00DA               	movwf	??___fladd
  8173  15B5  075A               	addwf	??___fladd,w
  8174  15B6  00DB               	movwf	??___fladd+1
  8175  15B7  085B               	movf	??___fladd+1,w
  8176  15B8  00E3               	movwf	___fladd@aexp
  8177  15B9                     l2390:
  8178  15B9  1FD8               	btfss	___fladd@a+2,7
  8179  15BA  2DBC               	goto	u3291
  8180  15BB  2DBD               	goto	u3290
  8181  15BC                     u3291:
  8182  15BC  2DBE               	goto	l2394
  8183  15BD                     u3290:
  8184  15BD                     l2392:
  8185  15BD  1463               	bsf	___fladd@aexp,0
  8186  15BE                     l2394:
  8187  15BE  0863               	movf	___fladd@aexp,w
  8188  15BF  1903               	btfsc	3,2
  8189  15C0  2DC2               	goto	u3301
  8190  15C1  2DC3               	goto	u3300
  8191  15C2                     u3301:
  8192  15C2  2DD3               	goto	l2404
  8193  15C3                     u3300:
  8194  15C3                     l2396:
  8195  15C3  0A63               	incf	___fladd@aexp,w
  8196  15C4  1D03               	btfss	3,2
  8197  15C5  2DC7               	goto	u3311
  8198  15C6  2DC8               	goto	u3310
  8199  15C7                     u3311:
  8200  15C7  2DD0               	goto	l2400
  8201  15C8                     u3310:
  8202  15C8                     l2398:
  8203  15C8  3000               	movlw	0
  8204  15C9  00D9               	movwf	___fladd@a+3
  8205  15CA  3000               	movlw	0
  8206  15CB  00D8               	movwf	___fladd@a+2
  8207  15CC  3000               	movlw	0
  8208  15CD  00D7               	movwf	___fladd@a+1
  8209  15CE  3000               	movlw	0
  8210  15CF  00D6               	movwf	___fladd@a
  8211  15D0                     l2400:
  8212  15D0  17D8               	bsf	___fladd@a+2,7
  8213  15D1                     l2402:
  8214  15D1  01D9               	clrf	___fladd@a+3
  8215  15D2  2DDB               	goto	l680
  8216  15D3                     l2404:
  8217  15D3  3000               	movlw	0
  8218  15D4  00D9               	movwf	___fladd@a+3
  8219  15D5  3000               	movlw	0
  8220  15D6  00D8               	movwf	___fladd@a+2
  8221  15D7  3000               	movlw	0
  8222  15D8  00D7               	movwf	___fladd@a+1
  8223  15D9  3000               	movlw	0
  8224  15DA  00D6               	movwf	___fladd@a
  8225  15DB                     l680:
  8226  15DB  0864               	movf	___fladd@bexp,w
  8227  15DC  0263               	subwf	___fladd@aexp,w
  8228  15DD  1803               	skipnc
  8229  15DE  2DE0               	goto	u3321
  8230  15DF  2DE1               	goto	u3320
  8231  15E0                     u3321:
  8232  15E0  2E25               	goto	l2440
  8233  15E1                     u3320:
  8234  15E1                     l2406:
  8235  15E1  1F62               	btfss	___fladd@signs,6
  8236  15E2  2DE4               	goto	u3331
  8237  15E3  2DE5               	goto	u3330
  8238  15E4                     u3331:
  8239  15E4  2DE9               	goto	l2410
  8240  15E5                     u3330:
  8241  15E5                     l2408:
  8242  15E5  3080               	movlw	128
  8243  15E6  00DA               	movwf	??___fladd
  8244  15E7  085A               	movf	??___fladd,w
  8245  15E8  06E2               	xorwf	___fladd@signs,f
  8246  15E9                     l2410:
  8247  15E9  0864               	movf	___fladd@bexp,w
  8248  15EA  00DA               	movwf	??___fladd
  8249  15EB  085A               	movf	??___fladd,w
  8250  15EC  00E5               	movwf	___fladd@grs
  8251  15ED                     l2412:
  8252  15ED  0863               	movf	___fladd@aexp,w
  8253  15EE  00DA               	movwf	??___fladd
  8254  15EF  085A               	movf	??___fladd,w
  8255  15F0  00E4               	movwf	___fladd@bexp
  8256  15F1                     l2414:
  8257  15F1  0865               	movf	___fladd@grs,w
  8258  15F2  00DA               	movwf	??___fladd
  8259  15F3  085A               	movf	??___fladd,w
  8260  15F4  00E3               	movwf	___fladd@aexp
  8261  15F5                     l2416:
  8262  15F5  0852               	movf	___fladd@b,w
  8263  15F6  00DA               	movwf	??___fladd
  8264  15F7  085A               	movf	??___fladd,w
  8265  15F8  00E5               	movwf	___fladd@grs
  8266  15F9                     l2418:
  8267  15F9  0856               	movf	___fladd@a,w
  8268  15FA  00DA               	movwf	??___fladd
  8269  15FB  085A               	movf	??___fladd,w
  8270  15FC  00D2               	movwf	___fladd@b
  8271  15FD                     l2420:
  8272  15FD  0865               	movf	___fladd@grs,w
  8273  15FE  00DA               	movwf	??___fladd
  8274  15FF  085A               	movf	??___fladd,w
  8275  1600  00D6               	movwf	___fladd@a
  8276  1601                     l2422:
  8277  1601  0853               	movf	___fladd@b+1,w
  8278  1602  00DA               	movwf	??___fladd
  8279  1603  085A               	movf	??___fladd,w
  8280  1604  00E5               	movwf	___fladd@grs
  8281  1605                     l2424:
  8282  1605  0857               	movf	___fladd@a+1,w
  8283  1606  00DA               	movwf	??___fladd
  8284  1607  085A               	movf	??___fladd,w
  8285  1608  00D3               	movwf	___fladd@b+1
  8286  1609                     l2426:
  8287  1609  0865               	movf	___fladd@grs,w
  8288  160A  00DA               	movwf	??___fladd
  8289  160B  085A               	movf	??___fladd,w
  8290  160C  00D7               	movwf	___fladd@a+1
  8291  160D                     l2428:
  8292  160D  0854               	movf	___fladd@b+2,w
  8293  160E  00DA               	movwf	??___fladd
  8294  160F  085A               	movf	??___fladd,w
  8295  1610  00E5               	movwf	___fladd@grs
  8296  1611                     l2430:
  8297  1611  0858               	movf	___fladd@a+2,w
  8298  1612  00DA               	movwf	??___fladd
  8299  1613  085A               	movf	??___fladd,w
  8300  1614  00D4               	movwf	___fladd@b+2
  8301  1615                     l2432:
  8302  1615  0865               	movf	___fladd@grs,w
  8303  1616  00DA               	movwf	??___fladd
  8304  1617  085A               	movf	??___fladd,w
  8305  1618  00D8               	movwf	___fladd@a+2
  8306  1619                     l2434:
  8307  1619  0855               	movf	___fladd@b+3,w
  8308  161A  00DA               	movwf	??___fladd
  8309  161B  085A               	movf	??___fladd,w
  8310  161C  00E5               	movwf	___fladd@grs
  8311  161D                     l2436:
  8312  161D  0859               	movf	___fladd@a+3,w
  8313  161E  00DA               	movwf	??___fladd
  8314  161F  085A               	movf	??___fladd,w
  8315  1620  00D5               	movwf	___fladd@b+3
  8316  1621                     l2438:
  8317  1621  0865               	movf	___fladd@grs,w
  8318  1622  00DA               	movwf	??___fladd
  8319  1623  085A               	movf	??___fladd,w
  8320  1624  00D9               	movwf	___fladd@a+3
  8321  1625                     l2440:
  8322  1625  01E5               	clrf	___fladd@grs
  8323  1626                     l2442:
  8324  1626  0863               	movf	___fladd@aexp,w
  8325  1627  00DA               	movwf	??___fladd
  8326  1628  01DB               	clrf	??___fladd+1
  8327  1629  085B               	movf	??___fladd+1,w
  8328  162A  00DD               	movwf	??___fladd+3
  8329  162B  0864               	movf	___fladd@bexp,w
  8330  162C  025A               	subwf	??___fladd,w
  8331  162D  00DC               	movwf	??___fladd+2
  8332  162E  1C03               	skipc
  8333  162F  03DD               	decf	??___fladd+3,f
  8334  1630  085D               	movf	??___fladd+3,w
  8335  1631  3A80               	xorlw	128
  8336  1632  00FF               	movwf	btemp+1
  8337  1633  3080               	movlw	128
  8338  1634  027F               	subwf	btemp+1,w
  8339  1635  1D03               	skipz
  8340  1636  2E39               	goto	u3345
  8341  1637  301A               	movlw	26
  8342  1638  025C               	subwf	??___fladd+2,w
  8343  1639                     u3345:
  8344  1639  1C03               	skipc
  8345  163A  2E3C               	goto	u3341
  8346  163B  2E3D               	goto	u3340
  8347  163C                     u3341:
  8348  163C  2E7A               	goto	l2458
  8349  163D                     u3340:
  8350  163D                     l2444:
  8351  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8352  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8353  163F  0855               	movf	___fladd@b+3,w
  8354  1640  0454               	iorwf	___fladd@b+2,w
  8355  1641  0453               	iorwf	___fladd@b+1,w
  8356  1642  0452               	iorwf	___fladd@b,w
  8357  1643  1D03               	skipz
  8358  1644  2E46               	goto	u3351
  8359  1645  2E48               	goto	u3350
  8360  1646                     u3351:
  8361  1646  3001               	movlw	1
  8362  1647  2E49               	goto	u3360
  8363  1648                     u3350:
  8364  1648  3000               	movlw	0
  8365  1649                     u3360:
  8366  1649  00DA               	movwf	??___fladd
  8367  164A  085A               	movf	??___fladd,w
  8368  164B  00E5               	movwf	___fladd@grs
  8369  164C  3000               	movlw	0
  8370  164D  00D5               	movwf	___fladd@b+3
  8371  164E  3000               	movlw	0
  8372  164F  00D4               	movwf	___fladd@b+2
  8373  1650  3000               	movlw	0
  8374  1651  00D3               	movwf	___fladd@b+1
  8375  1652  3000               	movlw	0
  8376  1653  00D2               	movwf	___fladd@b
  8377  1654  0863               	movf	___fladd@aexp,w
  8378  1655  00DA               	movwf	??___fladd
  8379  1656  085A               	movf	??___fladd,w
  8380  1657  00E4               	movwf	___fladd@bexp
  8381  1658  2E82               	goto	l684
  8382  1659                     l686:
  8383  1659  1C65               	btfss	___fladd@grs,0
  8384  165A  2E5C               	goto	u3371
  8385  165B  2E5D               	goto	u3370
  8386  165C                     u3371:
  8387  165C  2E66               	goto	l2448
  8388  165D                     u3370:
  8389  165D                     l2446:
  8390  165D  0865               	movf	___fladd@grs,w
  8391  165E  00DA               	movwf	??___fladd
  8392  165F  1003               	clrc
  8393  1660  0C5A               	rrf	??___fladd,w
  8394  1661  3801               	iorlw	1
  8395  1662  00DB               	movwf	??___fladd+1
  8396  1663  085B               	movf	??___fladd+1,w
  8397  1664  00E5               	movwf	___fladd@grs
  8398  1665  2E68               	goto	l2450
  8399  1666                     l2448:
  8400  1666  1003               	clrc
  8401  1667  0CE5               	rrf	___fladd@grs,f
  8402  1668                     l2450:
  8403  1668  1C52               	btfss	___fladd@b,0
  8404  1669  2E6B               	goto	u3381
  8405  166A  2E6C               	goto	u3380
  8406  166B                     u3381:
  8407  166B  2E6D               	goto	l2454
  8408  166C                     u3380:
  8409  166C                     l2452:
  8410  166C  17E5               	bsf	___fladd@grs,7
  8411  166D                     l2454:
  8412  166D  3001               	movlw	1
  8413  166E  00DA               	movwf	??___fladd
  8414  166F                     u3395:
  8415  166F  0D55               	rlf	___fladd@b+3,w
  8416  1670  0CD5               	rrf	___fladd@b+3,f
  8417  1671  0CD4               	rrf	___fladd@b+2,f
  8418  1672  0CD3               	rrf	___fladd@b+1,f
  8419  1673  0CD2               	rrf	___fladd@b,f
  8420  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8421  1675  2E6F               	goto	u3395
  8422  1676                     l2456:
  8423  1676  3001               	movlw	1
  8424  1677  00DA               	movwf	??___fladd
  8425  1678  085A               	movf	??___fladd,w
  8426  1679  07E4               	addwf	___fladd@bexp,f
  8427  167A                     l2458:
  8428  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8429  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8430  167C  0863               	movf	___fladd@aexp,w
  8431  167D  0264               	subwf	___fladd@bexp,w
  8432  167E  1C03               	skipc
  8433  167F  2E81               	goto	u3401
  8434  1680  2E82               	goto	u3400
  8435  1681                     u3401:
  8436  1681  2E59               	goto	l686
  8437  1682                     u3400:
  8438  1682                     l684:
  8439  1682  1B62               	btfsc	___fladd@signs,6
  8440  1683  2E85               	goto	u3411
  8441  1684  2E86               	goto	u3410
  8442  1685                     u3411:
  8443  1685  2ED1               	goto	l2484
  8444  1686                     u3410:
  8445  1686                     l2460:
  8446  1686  0864               	movf	___fladd@bexp,w
  8447  1687  1D03               	btfss	3,2
  8448  1688  2E8A               	goto	u3421
  8449  1689  2E8B               	goto	u3420
  8450  168A                     u3421:
  8451  168A  2E94               	goto	l2466
  8452  168B                     u3420:
  8453  168B                     l2462:
  8454  168B  3000               	movlw	0
  8455  168C  00D5               	movwf	?___fladd+3
  8456  168D  3000               	movlw	0
  8457  168E  00D4               	movwf	?___fladd+2
  8458  168F  3000               	movlw	0
  8459  1690  00D3               	movwf	?___fladd+1
  8460  1691  3000               	movlw	0
  8461  1692  00D2               	movwf	?___fladd
  8462  1693  2FFF               	goto	l693
  8463  1694                     l2466:
  8464  1694  0856               	movf	___fladd@a,w
  8465  1695  07D2               	addwf	___fladd@b,f
  8466  1696  0857               	movf	___fladd@a+1,w
  8467  1697  1103               	clrz
  8468  1698  1803               	skipnc
  8469  1699  3E01               	addlw	1
  8470  169A  1903               	skipnz
  8471  169B  2E9D               	goto	u3431
  8472  169C  07D3               	addwf	___fladd@b+1,f
  8473  169D                     u3431:
  8474  169D  0858               	movf	___fladd@a+2,w
  8475  169E  1103               	clrz
  8476  169F  1803               	skipnc
  8477  16A0  3E01               	addlw	1
  8478  16A1  1903               	skipnz
  8479  16A2  2EA4               	goto	u3432
  8480  16A3  07D4               	addwf	___fladd@b+2,f
  8481  16A4                     u3432:
  8482  16A4  0859               	movf	___fladd@a+3,w
  8483  16A5  1103               	clrz
  8484  16A6  1803               	skipnc
  8485  16A7  3E01               	addlw	1
  8486  16A8  1903               	skipnz
  8487  16A9  2EAB               	goto	u3433
  8488  16AA  07D5               	addwf	___fladd@b+3,f
  8489  16AB                     u3433:
  8490  16AB                     l2468:
  8491  16AB  1C55               	btfss	___fladd@b+3,0
  8492  16AC  2EAE               	goto	u3441
  8493  16AD  2EAF               	goto	u3440
  8494  16AE                     u3441:
  8495  16AE  2F85               	goto	l2518
  8496  16AF                     u3440:
  8497  16AF                     l2470:
  8498  16AF  1C65               	btfss	___fladd@grs,0
  8499  16B0  2EB2               	goto	u3451
  8500  16B1  2EB3               	goto	u3450
  8501  16B2                     u3451:
  8502  16B2  2EBC               	goto	l2474
  8503  16B3                     u3450:
  8504  16B3                     l2472:
  8505  16B3  0865               	movf	___fladd@grs,w
  8506  16B4  00DA               	movwf	??___fladd
  8507  16B5  1003               	clrc
  8508  16B6  0C5A               	rrf	??___fladd,w
  8509  16B7  3801               	iorlw	1
  8510  16B8  00DB               	movwf	??___fladd+1
  8511  16B9  085B               	movf	??___fladd+1,w
  8512  16BA  00E5               	movwf	___fladd@grs
  8513  16BB  2EBE               	goto	l2476
  8514  16BC                     l2474:
  8515  16BC  1003               	clrc
  8516  16BD  0CE5               	rrf	___fladd@grs,f
  8517  16BE                     l2476:
  8518  16BE  1C52               	btfss	___fladd@b,0
  8519  16BF  2EC1               	goto	u3461
  8520  16C0  2EC2               	goto	u3460
  8521  16C1                     u3461:
  8522  16C1  2EC3               	goto	l2480
  8523  16C2                     u3460:
  8524  16C2                     l2478:
  8525  16C2  17E5               	bsf	___fladd@grs,7
  8526  16C3                     l2480:
  8527  16C3  3001               	movlw	1
  8528  16C4  00DA               	movwf	??___fladd
  8529  16C5                     u3475:
  8530  16C5  0D55               	rlf	___fladd@b+3,w
  8531  16C6  0CD5               	rrf	___fladd@b+3,f
  8532  16C7  0CD4               	rrf	___fladd@b+2,f
  8533  16C8  0CD3               	rrf	___fladd@b+1,f
  8534  16C9  0CD2               	rrf	___fladd@b,f
  8535  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  8536  16CB  2EC5               	goto	u3475
  8537  16CC                     l2482:
  8538  16CC  3001               	movlw	1
  8539  16CD  00DA               	movwf	??___fladd
  8540  16CE  085A               	movf	??___fladd,w
  8541  16CF  07E4               	addwf	___fladd@bexp,f
  8542  16D0  2F85               	goto	l2518
  8543  16D1                     l2484:
  8544  16D1  0855               	movf	___fladd@b+3,w
  8545  16D2  3A80               	xorlw	128
  8546  16D3  00FF               	movwf	btemp+1
  8547  16D4  0859               	movf	___fladd@a+3,w
  8548  16D5  3A80               	xorlw	128
  8549  16D6  027F               	subwf	btemp+1,w
  8550  16D7  1D03               	skipz
  8551  16D8  2EE3               	goto	u3483
  8552  16D9  0858               	movf	___fladd@a+2,w
  8553  16DA  0254               	subwf	___fladd@b+2,w
  8554  16DB  1D03               	skipz
  8555  16DC  2EE3               	goto	u3483
  8556  16DD  0857               	movf	___fladd@a+1,w
  8557  16DE  0253               	subwf	___fladd@b+1,w
  8558  16DF  1D03               	skipz
  8559  16E0  2EE3               	goto	u3483
  8560  16E1  0856               	movf	___fladd@a,w
  8561  16E2  0252               	subwf	___fladd@b,w
  8562  16E3                     u3483:
  8563  16E3  1803               	skipnc
  8564  16E4  2EE6               	goto	u3481
  8565  16E5  2EE7               	goto	u3480
  8566  16E6                     u3481:
  8567  16E6  2F3F               	goto	l2494
  8568  16E7                     u3480:
  8569  16E7                     l2486:
  8570  16E7  30FF               	movlw	255
  8571  16E8  00DA               	movwf	??___fladd
  8572  16E9  30FF               	movlw	255
  8573  16EA  00DB               	movwf	??___fladd+1
  8574  16EB  30FF               	movlw	255
  8575  16EC  00DC               	movwf	??___fladd+2
  8576  16ED  30FF               	movlw	255
  8577  16EE  00DD               	movwf	??___fladd+3
  8578  16EF  0856               	movf	___fladd@a,w
  8579  16F0  00DE               	movwf	??___fladd+4
  8580  16F1  0857               	movf	___fladd@a+1,w
  8581  16F2  00DF               	movwf	??___fladd+5
  8582  16F3  0858               	movf	___fladd@a+2,w
  8583  16F4  00E0               	movwf	??___fladd+6
  8584  16F5  0859               	movf	___fladd@a+3,w
  8585  16F6  00E1               	movwf	??___fladd+7
  8586  16F7  0852               	movf	___fladd@b,w
  8587  16F8  02DE               	subwf	??___fladd+4,f
  8588  16F9  0853               	movf	___fladd@b+1,w
  8589  16FA  1C03               	skipc
  8590  16FB  0F53               	incfsz	___fladd@b+1,w
  8591  16FC  2EFE               	goto	u3491
  8592  16FD  2EFF               	goto	u3492
  8593  16FE                     u3491:
  8594  16FE  02DF               	subwf	??___fladd+5,f
  8595  16FF                     u3492:
  8596  16FF  0854               	movf	___fladd@b+2,w
  8597  1700  1C03               	skipc
  8598  1701  0F54               	incfsz	___fladd@b+2,w
  8599  1702  2F04               	goto	u3493
  8600  1703  2F05               	goto	u3494
  8601  1704                     u3493:
  8602  1704  02E0               	subwf	??___fladd+6,f
  8603  1705                     u3494:
  8604  1705  0855               	movf	___fladd@b+3,w
  8605  1706  1C03               	skipc
  8606  1707  0F55               	incfsz	___fladd@b+3,w
  8607  1708  2F0A               	goto	u3495
  8608  1709  2F0B               	goto	u3496
  8609  170A                     u3495:
  8610  170A  02E1               	subwf	??___fladd+7,f
  8611  170B                     u3496:
  8612  170B  085E               	movf	??___fladd+4,w
  8613  170C  07DA               	addwf	??___fladd,f
  8614  170D  085F               	movf	??___fladd+5,w
  8615  170E  1803               	skipnc
  8616  170F  0F5F               	incfsz	??___fladd+5,w
  8617  1710  2F12               	goto	u3500
  8618  1711  2F13               	goto	u3501
  8619  1712                     u3500:
  8620  1712  07DB               	addwf	??___fladd+1,f
  8621  1713                     u3501:
  8622  1713  0860               	movf	??___fladd+6,w
  8623  1714  1803               	skipnc
  8624  1715  0F60               	incfsz	??___fladd+6,w
  8625  1716  2F18               	goto	u3502
  8626  1717  2F19               	goto	u3503
  8627  1718                     u3502:
  8628  1718  07DC               	addwf	??___fladd+2,f
  8629  1719                     u3503:
  8630  1719  0861               	movf	??___fladd+7,w
  8631  171A  1803               	skipnc
  8632  171B  0A61               	incf	??___fladd+7,w
  8633  171C  07DD               	addwf	??___fladd+3,f
  8634  171D  085D               	movf	??___fladd+3,w
  8635  171E  00D5               	movwf	___fladd@b+3
  8636  171F  085C               	movf	??___fladd+2,w
  8637  1720  00D4               	movwf	___fladd@b+2
  8638  1721  085B               	movf	??___fladd+1,w
  8639  1722  00D3               	movwf	___fladd@b+1
  8640  1723  085A               	movf	??___fladd,w
  8641  1724  00D2               	movwf	___fladd@b
  8642  1725                     l2488:
  8643  1725  3080               	movlw	128
  8644  1726  00DA               	movwf	??___fladd
  8645  1727  085A               	movf	??___fladd,w
  8646  1728  06E2               	xorwf	___fladd@signs,f
  8647  1729  09E5               	comf	___fladd@grs,f
  8648  172A  0AE5               	incf	___fladd@grs,f
  8649  172B                     l2490:
  8650  172B  0865               	movf	___fladd@grs,w
  8651  172C  1D03               	btfss	3,2
  8652  172D  2F2F               	goto	u3511
  8653  172E  2F30               	goto	u3510
  8654  172F                     u3511:
  8655  172F  2F4D               	goto	l701
  8656  1730                     u3510:
  8657  1730                     l2492:
  8658  1730  3001               	movlw	1
  8659  1731  07D2               	addwf	___fladd@b,f
  8660  1732  3000               	movlw	0
  8661  1733  1803               	skipnc
  8662  1734  3001               	movlw	1
  8663  1735  07D3               	addwf	___fladd@b+1,f
  8664  1736  3000               	movlw	0
  8665  1737  1803               	skipnc
  8666  1738  3001               	movlw	1
  8667  1739  07D4               	addwf	___fladd@b+2,f
  8668  173A  3000               	movlw	0
  8669  173B  1803               	skipnc
  8670  173C  3001               	movlw	1
  8671  173D  07D5               	addwf	___fladd@b+3,f
  8672  173E  2F4D               	goto	l701
  8673  173F                     l2494:
  8674  173F  0856               	movf	___fladd@a,w
  8675  1740  02D2               	subwf	___fladd@b,f
  8676  1741  0857               	movf	___fladd@a+1,w
  8677  1742  1C03               	skipc
  8678  1743  0F57               	incfsz	___fladd@a+1,w
  8679  1744  02D3               	subwf	___fladd@b+1,f
  8680  1745  0858               	movf	___fladd@a+2,w
  8681  1746  1C03               	skipc
  8682  1747  0F58               	incfsz	___fladd@a+2,w
  8683  1748  02D4               	subwf	___fladd@b+2,f
  8684  1749  0859               	movf	___fladd@a+3,w
  8685  174A  1C03               	skipc
  8686  174B  0F59               	incfsz	___fladd@a+3,w
  8687  174C  02D5               	subwf	___fladd@b+3,f
  8688  174D                     l701:
  8689  174D  0855               	movf	___fladd@b+3,w
  8690  174E  0454               	iorwf	___fladd@b+2,w
  8691  174F  0453               	iorwf	___fladd@b+1,w
  8692  1750  0452               	iorwf	___fladd@b,w
  8693  1751  1D03               	skipz
  8694  1752  2F54               	goto	u3521
  8695  1753  2F55               	goto	u3520
  8696  1754                     u3521:
  8697  1754  2F81               	goto	l2516
  8698  1755                     u3520:
  8699  1755                     l2496:
  8700  1755  0865               	movf	___fladd@grs,w
  8701  1756  1D03               	btfss	3,2
  8702  1757  2F59               	goto	u3531
  8703  1758  2F5A               	goto	u3530
  8704  1759                     u3531:
  8705  1759  2F81               	goto	l2516
  8706  175A                     u3530:
  8707  175A                     l2498:
  8708  175A  3000               	movlw	0
  8709  175B  00D5               	movwf	?___fladd+3
  8710  175C  3000               	movlw	0
  8711  175D  00D4               	movwf	?___fladd+2
  8712  175E  3000               	movlw	0
  8713  175F  00D3               	movwf	?___fladd+1
  8714  1760  3000               	movlw	0
  8715  1761  00D2               	movwf	?___fladd
  8716  1762  2FFF               	goto	l693
  8717  1763                     l2502:
  8718  1763  3001               	movlw	1
  8719  1764  00DA               	movwf	??___fladd
  8720  1765                     u3545:
  8721  1765  1003               	clrc
  8722  1766  0DD2               	rlf	___fladd@b,f
  8723  1767  0DD3               	rlf	___fladd@b+1,f
  8724  1768  0DD4               	rlf	___fladd@b+2,f
  8725  1769  0DD5               	rlf	___fladd@b+3,f
  8726  176A  0BDA               	decfsz	??___fladd,f
  8727  176B  2F65               	goto	u3545
  8728  176C                     l2504:
  8729  176C  1FE5               	btfss	___fladd@grs,7
  8730  176D  2F6F               	goto	u3551
  8731  176E  2F70               	goto	u3550
  8732  176F                     u3551:
  8733  176F  2F71               	goto	l705
  8734  1770                     u3550:
  8735  1770                     l2506:
  8736  1770  1452               	bsf	___fladd@b,0
  8737  1771                     l705:
  8738  1771  1C65               	btfss	___fladd@grs,0
  8739  1772  2F74               	goto	u3561
  8740  1773  2F75               	goto	u3560
  8741  1774                     u3561:
  8742  1774  2F78               	goto	l2510
  8743  1775                     u3560:
  8744  1775                     l2508:
  8745  1775  1403               	setc
  8746  1776  0DE5               	rlf	___fladd@grs,f
  8747  1777  2F7A               	goto	l2512
  8748  1778                     l2510:
  8749  1778  1003               	clrc
  8750  1779  0DE5               	rlf	___fladd@grs,f
  8751  177A                     l2512:
  8752  177A  0864               	movf	___fladd@bexp,w
  8753  177B  1903               	btfsc	3,2
  8754  177C  2F7E               	goto	u3571
  8755  177D  2F7F               	goto	u3570
  8756  177E                     u3571:
  8757  177E  2F81               	goto	l2516
  8758  177F                     u3570:
  8759  177F                     l2514:
  8760  177F  3001               	movlw	1
  8761  1780  02E4               	subwf	___fladd@bexp,f
  8762  1781                     l2516:
  8763  1781  1FD4               	btfss	___fladd@b+2,7
  8764  1782  2F84               	goto	u3581
  8765  1783  2F85               	goto	u3580
  8766  1784                     u3581:
  8767  1784  2F63               	goto	l2502
  8768  1785                     u3580:
  8769  1785                     l2518:
  8770  1785  01E3               	clrf	___fladd@aexp
  8771  1786                     l2520:
  8772  1786  1FE5               	btfss	___fladd@grs,7
  8773  1787  2F89               	goto	u3591
  8774  1788  2F8A               	goto	u3590
  8775  1789                     u3591:
  8776  1789  2F98               	goto	l2528
  8777  178A                     u3590:
  8778  178A                     l2522:
  8779  178A  0865               	movf	___fladd@grs,w
  8780  178B  397F               	andlw	127
  8781  178C  1903               	btfsc	3,2
  8782  178D  2F8F               	goto	u3601
  8783  178E  2F90               	goto	u3600
  8784  178F                     u3601:
  8785  178F  2F93               	goto	l711
  8786  1790                     u3600:
  8787  1790                     l2524:
  8788  1790  01E3               	clrf	___fladd@aexp
  8789  1791  0AE3               	incf	___fladd@aexp,f
  8790  1792  2F98               	goto	l2528
  8791  1793                     l711:
  8792  1793  1C52               	btfss	___fladd@b,0
  8793  1794  2F96               	goto	u3611
  8794  1795  2F97               	goto	u3610
  8795  1796                     u3611:
  8796  1796  2F98               	goto	l2528
  8797  1797                     u3610:
  8798  1797  2F90               	goto	l2524
  8799  1798                     l2528:
  8800  1798  0863               	movf	___fladd@aexp,w
  8801  1799  1903               	btfsc	3,2
  8802  179A  2F9C               	goto	u3621
  8803  179B  2F9D               	goto	u3620
  8804  179C                     u3621:
  8805  179C  2FD1               	goto	l714
  8806  179D                     u3620:
  8807  179D                     l2530:
  8808  179D  3001               	movlw	1
  8809  179E  07D2               	addwf	___fladd@b,f
  8810  179F  3000               	movlw	0
  8811  17A0  1803               	skipnc
  8812  17A1  3001               	movlw	1
  8813  17A2  07D3               	addwf	___fladd@b+1,f
  8814  17A3  3000               	movlw	0
  8815  17A4  1803               	skipnc
  8816  17A5  3001               	movlw	1
  8817  17A6  07D4               	addwf	___fladd@b+2,f
  8818  17A7  3000               	movlw	0
  8819  17A8  1803               	skipnc
  8820  17A9  3001               	movlw	1
  8821  17AA  07D5               	addwf	___fladd@b+3,f
  8822  17AB                     l2532:
  8823  17AB  1C55               	btfss	___fladd@b+3,0
  8824  17AC  2FAE               	goto	u3631
  8825  17AD  2FAF               	goto	u3630
  8826  17AE                     u3631:
  8827  17AE  2FD1               	goto	l714
  8828  17AF                     u3630:
  8829  17AF                     l2534:
  8830  17AF  0852               	movf	___fladd@b,w
  8831  17B0  00DA               	movwf	??___fladd
  8832  17B1  0853               	movf	___fladd@b+1,w
  8833  17B2  00DB               	movwf	??___fladd+1
  8834  17B3  0854               	movf	___fladd@b+2,w
  8835  17B4  00DC               	movwf	??___fladd+2
  8836  17B5  0855               	movf	___fladd@b+3,w
  8837  17B6  00DD               	movwf	??___fladd+3
  8838  17B7  3001               	movlw	1
  8839  17B8  00DE               	movwf	??___fladd+4
  8840  17B9                     u3645:
  8841  17B9  0D5D               	rlf	??___fladd+3,w
  8842  17BA  0CDD               	rrf	??___fladd+3,f
  8843  17BB  0CDC               	rrf	??___fladd+2,f
  8844  17BC  0CDB               	rrf	??___fladd+1,f
  8845  17BD  0CDA               	rrf	??___fladd,f
  8846  17BE                     u3640:
  8847  17BE  0BDE               	decfsz	??___fladd+4,f
  8848  17BF  2FB9               	goto	u3645
  8849  17C0  085D               	movf	??___fladd+3,w
  8850  17C1  00D5               	movwf	___fladd@b+3
  8851  17C2  085C               	movf	??___fladd+2,w
  8852  17C3  00D4               	movwf	___fladd@b+2
  8853  17C4  085B               	movf	??___fladd+1,w
  8854  17C5  00D3               	movwf	___fladd@b+1
  8855  17C6  085A               	movf	??___fladd,w
  8856  17C7  00D2               	movwf	___fladd@b
  8857  17C8  0A64               	incf	___fladd@bexp,w
  8858  17C9  1903               	btfsc	3,2
  8859  17CA  2FCC               	goto	u3651
  8860  17CB  2FCD               	goto	u3650
  8861  17CC                     u3651:
  8862  17CC  2FD1               	goto	l714
  8863  17CD                     u3650:
  8864  17CD                     l2536:
  8865  17CD  3001               	movlw	1
  8866  17CE  00DA               	movwf	??___fladd
  8867  17CF  085A               	movf	??___fladd,w
  8868  17D0  07E4               	addwf	___fladd@bexp,f
  8869  17D1                     l714:
  8870  17D1  0A64               	incf	___fladd@bexp,w
  8871  17D2  1903               	btfsc	3,2
  8872  17D3  2FD5               	goto	u3661
  8873  17D4  2FD6               	goto	u3660
  8874  17D5                     u3661:
  8875  17D5  2FDB               	goto	l2540
  8876  17D6                     u3660:
  8877  17D6                     l2538:
  8878  17D6  0864               	movf	___fladd@bexp,w
  8879  17D7  1D03               	btfss	3,2
  8880  17D8  2FDA               	goto	u3671
  8881  17D9  2FDB               	goto	u3670
  8882  17DA                     u3671:
  8883  17DA  2FE9               	goto	l2546
  8884  17DB                     u3670:
  8885  17DB                     l2540:
  8886  17DB  3000               	movlw	0
  8887  17DC  00D5               	movwf	___fladd@b+3
  8888  17DD  3000               	movlw	0
  8889  17DE  00D4               	movwf	___fladd@b+2
  8890  17DF  3000               	movlw	0
  8891  17E0  00D3               	movwf	___fladd@b+1
  8892  17E1  3000               	movlw	0
  8893  17E2  00D2               	movwf	___fladd@b
  8894  17E3                     l2542:
  8895  17E3  0864               	movf	___fladd@bexp,w
  8896  17E4  1D03               	btfss	3,2
  8897  17E5  2FE7               	goto	u3681
  8898  17E6  2FE8               	goto	u3680
  8899  17E7                     u3681:
  8900  17E7  2FE9               	goto	l2546
  8901  17E8                     u3680:
  8902  17E8                     l2544:
  8903  17E8  01E2               	clrf	___fladd@signs
  8904  17E9                     l2546:
  8905  17E9  1C64               	btfss	___fladd@bexp,0
  8906  17EA  2FEC               	goto	u3691
  8907  17EB  2FED               	goto	u3690
  8908  17EC                     u3691:
  8909  17EC  2FEF               	goto	l2550
  8910  17ED                     u3690:
  8911  17ED                     l2548:
  8912  17ED  17D4               	bsf	___fladd@b+2,7
  8913  17EE  2FF3               	goto	l722
  8914  17EF                     l2550:
  8915  17EF  307F               	movlw	127
  8916  17F0  00DA               	movwf	??___fladd
  8917  17F1  085A               	movf	??___fladd,w
  8918  17F2  05D4               	andwf	___fladd@b+2,f
  8919  17F3                     l722:
  8920  17F3  0864               	movf	___fladd@bexp,w
  8921  17F4  00DA               	movwf	??___fladd
  8922  17F5  1003               	clrc
  8923  17F6  0C5A               	rrf	??___fladd,w
  8924  17F7  00DB               	movwf	??___fladd+1
  8925  17F8  085B               	movf	??___fladd+1,w
  8926  17F9  00D5               	movwf	___fladd@b+3
  8927  17FA                     l2552:
  8928  17FA  1FE2               	btfss	___fladd@signs,7
  8929  17FB  2FFD               	goto	u3701
  8930  17FC  2FFE               	goto	u3700
  8931  17FD                     u3701:
  8932  17FD  2FFF               	goto	l723
  8933  17FE                     u3700:
  8934  17FE                     l2554:
  8935  17FE  17D5               	bsf	___fladd@b+3,7
  8936  17FF                     l723:
  8937  17FF                     l693:
  8938  17FF  0008               	return
  8939  1800                     __end_of___fladd:
  8940                           
  8941                           	psect	text20
  8942  1C68                     __ptext20:	
  8943 ;; *************** function ___flneg *****************
  8944 ;; Defined at:
  8945 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flneg.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;  f1              4    0[COMMON] unsigned char 
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;		None
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  4    0[COMMON] unsigned char 
  8952 ;; Registers used:
  8953 ;;		wreg
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8959 ;;      Params:         4       0       0       0       0
  8960 ;;      Locals:         0       0       0       0       0
  8961 ;;      Temps:          0       0       0       0       0
  8962 ;;      Totals:         4       0       0       0       0
  8963 ;;Total ram usage:        4 bytes
  8964 ;; Hardware stack levels used: 1
  8965 ;; This function calls:
  8966 ;;		Nothing
  8967 ;; This function is called by:
  8968 ;;		_sprintf
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972  1C68                     ___flneg:	
  8973                           ;psect for function ___flneg
  8974                           
  8975  1C68                     l2990:	
  8976                           ;incstack = 0
  8977                           ; Regs used in ___flneg: [wreg]
  8978                           
  8979  1C68  0873               	movf	___flneg@f1+3,w
  8980  1C69  0472               	iorwf	___flneg@f1+2,w
  8981  1C6A  0471               	iorwf	___flneg@f1+1,w
  8982  1C6B  0470               	iorwf	___flneg@f1,w
  8983  1C6C  1903               	skipnz
  8984  1C6D  2C6F               	goto	u4911
  8985  1C6E  2C70               	goto	u4910
  8986  1C6F                     u4911:
  8987  1C6F  2C72               	goto	l2994
  8988  1C70                     u4910:
  8989  1C70                     l2992:
  8990  1C70  3080               	movlw	128
  8991  1C71  06F3               	xorwf	___flneg@f1+3,f
  8992  1C72                     l2994:
  8993  1C72                     l552:
  8994  1C72  0008               	return
  8995  1C73                     __end_of___flneg:
  8996                           
  8997                           	psect	text21
  8998  1154                     __ptext21:	
  8999 ;; *************** function ___flge *****************
  9000 ;; Defined at:
  9001 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flge.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;  ff1             4    0[COMMON] unsigned char 
  9004 ;;  ff2             4    4[COMMON] unsigned char 
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;		None
  9007 ;; Return value:  Size  Location     Type
  9008 ;;		None               void
  9009 ;; Registers used:
  9010 ;;		wreg, status,2, status,0
  9011 ;; Tracked objects:
  9012 ;;		On entry : 0/0
  9013 ;;		On exit  : 0/0
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9016 ;;      Params:         8       0       0       0       0
  9017 ;;      Locals:         0       0       0       0       0
  9018 ;;      Temps:          4       0       0       0       0
  9019 ;;      Totals:        12       0       0       0       0
  9020 ;;Total ram usage:       12 bytes
  9021 ;; Hardware stack levels used: 1
  9022 ;; This function calls:
  9023 ;;		Nothing
  9024 ;; This function is called by:
  9025 ;;		_sprintf
  9026 ;; This function uses a non-reentrant model
  9027 ;;
  9028                           
  9029  1154                     ___flge:	
  9030                           ;psect for function ___flge
  9031                           
  9032  1154                     l2970:	
  9033                           ;incstack = 0
  9034                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9035                           
  9036  1154  3000               	movlw	0
  9037  1155  0570               	andwf	___flge@ff1,w
  9038  1156  00F8               	movwf	??___flge
  9039  1157  3000               	movlw	0
  9040  1158  0571               	andwf	___flge@ff1+1,w
  9041  1159  00F9               	movwf	??___flge+1
  9042  115A  3080               	movlw	128
  9043  115B  0572               	andwf	___flge@ff1+2,w
  9044  115C  00FA               	movwf	??___flge+2
  9045  115D  307F               	movlw	127
  9046  115E  0573               	andwf	___flge@ff1+3,w
  9047  115F  00FB               	movwf	??___flge+3
  9048  1160  087B               	movf	??___flge+3,w
  9049  1161  047A               	iorwf	??___flge+2,w
  9050  1162  0479               	iorwf	??___flge+1,w
  9051  1163  0478               	iorwf	??___flge,w
  9052  1164  1D03               	skipz
  9053  1165  2967               	goto	u4841
  9054  1166  2968               	goto	u4840
  9055  1167                     u4841:
  9056  1167  2970               	goto	l544
  9057  1168                     u4840:
  9058  1168                     l2972:
  9059  1168  3000               	movlw	0
  9060  1169  00F3               	movwf	___flge@ff1+3
  9061  116A  3000               	movlw	0
  9062  116B  00F2               	movwf	___flge@ff1+2
  9063  116C  3000               	movlw	0
  9064  116D  00F1               	movwf	___flge@ff1+1
  9065  116E  3000               	movlw	0
  9066  116F  00F0               	movwf	___flge@ff1
  9067  1170                     l544:
  9068  1170  3000               	movlw	0
  9069  1171  0574               	andwf	___flge@ff2,w
  9070  1172  00F8               	movwf	??___flge
  9071  1173  3000               	movlw	0
  9072  1174  0575               	andwf	___flge@ff2+1,w
  9073  1175  00F9               	movwf	??___flge+1
  9074  1176  3080               	movlw	128
  9075  1177  0576               	andwf	___flge@ff2+2,w
  9076  1178  00FA               	movwf	??___flge+2
  9077  1179  307F               	movlw	127
  9078  117A  0577               	andwf	___flge@ff2+3,w
  9079  117B  00FB               	movwf	??___flge+3
  9080  117C  087B               	movf	??___flge+3,w
  9081  117D  047A               	iorwf	??___flge+2,w
  9082  117E  0479               	iorwf	??___flge+1,w
  9083  117F  0478               	iorwf	??___flge,w
  9084  1180  1D03               	skipz
  9085  1181  2983               	goto	u4851
  9086  1182  2984               	goto	u4850
  9087  1183                     u4851:
  9088  1183  298C               	goto	l2976
  9089  1184                     u4850:
  9090  1184                     l2974:
  9091  1184  3000               	movlw	0
  9092  1185  00F7               	movwf	___flge@ff2+3
  9093  1186  3000               	movlw	0
  9094  1187  00F6               	movwf	___flge@ff2+2
  9095  1188  3000               	movlw	0
  9096  1189  00F5               	movwf	___flge@ff2+1
  9097  118A  3000               	movlw	0
  9098  118B  00F4               	movwf	___flge@ff2
  9099  118C                     l2976:
  9100  118C  1FF3               	btfss	___flge@ff1+3,7
  9101  118D  298F               	goto	u4861
  9102  118E  2990               	goto	u4860
  9103  118F                     u4861:
  9104  118F  29B4               	goto	l2980
  9105  1190                     u4860:
  9106  1190                     l2978:
  9107  1190  3000               	movlw	0
  9108  1191  00F8               	movwf	??___flge
  9109  1192  3000               	movlw	0
  9110  1193  00F9               	movwf	??___flge+1
  9111  1194  3000               	movlw	0
  9112  1195  00FA               	movwf	??___flge+2
  9113  1196  3080               	movlw	128
  9114  1197  00FB               	movwf	??___flge+3
  9115  1198  0870               	movf	___flge@ff1,w
  9116  1199  02F8               	subwf	??___flge,f
  9117  119A  0871               	movf	___flge@ff1+1,w
  9118  119B  1C03               	skipc
  9119  119C  0F71               	incfsz	___flge@ff1+1,w
  9120  119D  299F               	goto	u4871
  9121  119E  29A0               	goto	u4872
  9122  119F                     u4871:
  9123  119F  02F9               	subwf	??___flge+1,f
  9124  11A0                     u4872:
  9125  11A0  0872               	movf	___flge@ff1+2,w
  9126  11A1  1C03               	skipc
  9127  11A2  0F72               	incfsz	___flge@ff1+2,w
  9128  11A3  29A5               	goto	u4873
  9129  11A4  29A6               	goto	u4874
  9130  11A5                     u4873:
  9131  11A5  02FA               	subwf	??___flge+2,f
  9132  11A6                     u4874:
  9133  11A6  0873               	movf	___flge@ff1+3,w
  9134  11A7  1C03               	skipc
  9135  11A8  0F73               	incfsz	___flge@ff1+3,w
  9136  11A9  29AB               	goto	u4875
  9137  11AA  29AC               	goto	u4876
  9138  11AB                     u4875:
  9139  11AB  02FB               	subwf	??___flge+3,f
  9140  11AC                     u4876:
  9141  11AC  087B               	movf	??___flge+3,w
  9142  11AD  00F3               	movwf	___flge@ff1+3
  9143  11AE  087A               	movf	??___flge+2,w
  9144  11AF  00F2               	movwf	___flge@ff1+2
  9145  11B0  0879               	movf	??___flge+1,w
  9146  11B1  00F1               	movwf	___flge@ff1+1
  9147  11B2  0878               	movf	??___flge,w
  9148  11B3  00F0               	movwf	___flge@ff1
  9149  11B4                     l2980:
  9150  11B4  1FF7               	btfss	___flge@ff2+3,7
  9151  11B5  29B7               	goto	u4881
  9152  11B6  29B8               	goto	u4880
  9153  11B7                     u4881:
  9154  11B7  29DC               	goto	l547
  9155  11B8                     u4880:
  9156  11B8                     l2982:
  9157  11B8  3000               	movlw	0
  9158  11B9  00F8               	movwf	??___flge
  9159  11BA  3000               	movlw	0
  9160  11BB  00F9               	movwf	??___flge+1
  9161  11BC  3000               	movlw	0
  9162  11BD  00FA               	movwf	??___flge+2
  9163  11BE  3080               	movlw	128
  9164  11BF  00FB               	movwf	??___flge+3
  9165  11C0  0874               	movf	___flge@ff2,w
  9166  11C1  02F8               	subwf	??___flge,f
  9167  11C2  0875               	movf	___flge@ff2+1,w
  9168  11C3  1C03               	skipc
  9169  11C4  0F75               	incfsz	___flge@ff2+1,w
  9170  11C5  29C7               	goto	u4891
  9171  11C6  29C8               	goto	u4892
  9172  11C7                     u4891:
  9173  11C7  02F9               	subwf	??___flge+1,f
  9174  11C8                     u4892:
  9175  11C8  0876               	movf	___flge@ff2+2,w
  9176  11C9  1C03               	skipc
  9177  11CA  0F76               	incfsz	___flge@ff2+2,w
  9178  11CB  29CD               	goto	u4893
  9179  11CC  29CE               	goto	u4894
  9180  11CD                     u4893:
  9181  11CD  02FA               	subwf	??___flge+2,f
  9182  11CE                     u4894:
  9183  11CE  0877               	movf	___flge@ff2+3,w
  9184  11CF  1C03               	skipc
  9185  11D0  0F77               	incfsz	___flge@ff2+3,w
  9186  11D1  29D3               	goto	u4895
  9187  11D2  29D4               	goto	u4896
  9188  11D3                     u4895:
  9189  11D3  02FB               	subwf	??___flge+3,f
  9190  11D4                     u4896:
  9191  11D4  087B               	movf	??___flge+3,w
  9192  11D5  00F7               	movwf	___flge@ff2+3
  9193  11D6  087A               	movf	??___flge+2,w
  9194  11D7  00F6               	movwf	___flge@ff2+2
  9195  11D8  0879               	movf	??___flge+1,w
  9196  11D9  00F5               	movwf	___flge@ff2+1
  9197  11DA  0878               	movf	??___flge,w
  9198  11DB  00F4               	movwf	___flge@ff2
  9199  11DC                     l547:
  9200  11DC  3080               	movlw	128
  9201  11DD  06F3               	xorwf	___flge@ff1+3,f
  9202  11DE  3080               	movlw	128
  9203  11DF  06F7               	xorwf	___flge@ff2+3,f
  9204  11E0  0877               	movf	___flge@ff2+3,w
  9205  11E1  0273               	subwf	___flge@ff1+3,w
  9206  11E2  1D03               	skipz
  9207  11E3  29EE               	goto	u4905
  9208  11E4  0876               	movf	___flge@ff2+2,w
  9209  11E5  0272               	subwf	___flge@ff1+2,w
  9210  11E6  1D03               	skipz
  9211  11E7  29EE               	goto	u4905
  9212  11E8  0875               	movf	___flge@ff2+1,w
  9213  11E9  0271               	subwf	___flge@ff1+1,w
  9214  11EA  1D03               	skipz
  9215  11EB  29EE               	goto	u4905
  9216  11EC  0874               	movf	___flge@ff2,w
  9217  11ED  0270               	subwf	___flge@ff1,w
  9218  11EE                     u4905:
  9219  11EE  1803               	skipnc
  9220  11EF  29F1               	goto	u4901
  9221  11F0  29F2               	goto	u4900
  9222  11F1                     u4901:
  9223  11F1  29F4               	goto	l2986
  9224  11F2                     u4900:
  9225  11F2                     l2984:
  9226  11F2  1003               	clrc
  9227  11F3  29F5               	goto	l548
  9228  11F4                     l2986:
  9229  11F4  1403               	setc
  9230  11F5                     l548:
  9231  11F5  0008               	return
  9232  11F6                     __end_of___flge:
  9233                           
  9234                           	psect	text22
  9235  1E58                     __ptext22:	
  9236 ;; *************** function ___fleq *****************
  9237 ;; Defined at:
  9238 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fleq.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;  ff1             4    0[COMMON] unsigned char 
  9241 ;;  ff2             4    4[COMMON] unsigned char 
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;		None
  9244 ;; Return value:  Size  Location     Type
  9245 ;;		None               void
  9246 ;; Registers used:
  9247 ;;		wreg, status,2, status,0
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9253 ;;      Params:         8       0       0       0       0
  9254 ;;      Locals:         0       0       0       0       0
  9255 ;;      Temps:          4       0       0       0       0
  9256 ;;      Totals:        12       0       0       0       0
  9257 ;;Total ram usage:       12 bytes
  9258 ;; Hardware stack levels used: 1
  9259 ;; This function calls:
  9260 ;;		Nothing
  9261 ;; This function is called by:
  9262 ;;		_sprintf
  9263 ;; This function uses a non-reentrant model
  9264 ;;
  9265                           
  9266  1E58                     ___fleq:	
  9267                           ;psect for function ___fleq
  9268                           
  9269  1E58                     l2958:	
  9270                           ;incstack = 0
  9271                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9272                           
  9273  1E58  3000               	movlw	0
  9274  1E59  0570               	andwf	___fleq@ff1,w
  9275  1E5A  00F8               	movwf	??___fleq
  9276  1E5B  3000               	movlw	0
  9277  1E5C  0571               	andwf	___fleq@ff1+1,w
  9278  1E5D  00F9               	movwf	??___fleq+1
  9279  1E5E  3080               	movlw	128
  9280  1E5F  0572               	andwf	___fleq@ff1+2,w
  9281  1E60  00FA               	movwf	??___fleq+2
  9282  1E61  307F               	movlw	127
  9283  1E62  0573               	andwf	___fleq@ff1+3,w
  9284  1E63  00FB               	movwf	??___fleq+3
  9285  1E64  087B               	movf	??___fleq+3,w
  9286  1E65  047A               	iorwf	??___fleq+2,w
  9287  1E66  0479               	iorwf	??___fleq+1,w
  9288  1E67  0478               	iorwf	??___fleq,w
  9289  1E68  1D03               	skipz
  9290  1E69  2E6B               	goto	u4811
  9291  1E6A  2E6C               	goto	u4810
  9292  1E6B                     u4811:
  9293  1E6B  2E74               	goto	l539
  9294  1E6C                     u4810:
  9295  1E6C                     l2960:
  9296  1E6C  3000               	movlw	0
  9297  1E6D  00F3               	movwf	___fleq@ff1+3
  9298  1E6E  3000               	movlw	0
  9299  1E6F  00F2               	movwf	___fleq@ff1+2
  9300  1E70  3000               	movlw	0
  9301  1E71  00F1               	movwf	___fleq@ff1+1
  9302  1E72  3000               	movlw	0
  9303  1E73  00F0               	movwf	___fleq@ff1
  9304  1E74                     l539:
  9305  1E74  3000               	movlw	0
  9306  1E75  0574               	andwf	___fleq@ff2,w
  9307  1E76  00F8               	movwf	??___fleq
  9308  1E77  3000               	movlw	0
  9309  1E78  0575               	andwf	___fleq@ff2+1,w
  9310  1E79  00F9               	movwf	??___fleq+1
  9311  1E7A  3080               	movlw	128
  9312  1E7B  0576               	andwf	___fleq@ff2+2,w
  9313  1E7C  00FA               	movwf	??___fleq+2
  9314  1E7D  307F               	movlw	127
  9315  1E7E  0577               	andwf	___fleq@ff2+3,w
  9316  1E7F  00FB               	movwf	??___fleq+3
  9317  1E80  087B               	movf	??___fleq+3,w
  9318  1E81  047A               	iorwf	??___fleq+2,w
  9319  1E82  0479               	iorwf	??___fleq+1,w
  9320  1E83  0478               	iorwf	??___fleq,w
  9321  1E84  1D03               	skipz
  9322  1E85  2E87               	goto	u4821
  9323  1E86  2E88               	goto	u4820
  9324  1E87                     u4821:
  9325  1E87  2E90               	goto	l540
  9326  1E88                     u4820:
  9327  1E88                     l2962:
  9328  1E88  3000               	movlw	0
  9329  1E89  00F7               	movwf	___fleq@ff2+3
  9330  1E8A  3000               	movlw	0
  9331  1E8B  00F6               	movwf	___fleq@ff2+2
  9332  1E8C  3000               	movlw	0
  9333  1E8D  00F5               	movwf	___fleq@ff2+1
  9334  1E8E  3000               	movlw	0
  9335  1E8F  00F4               	movwf	___fleq@ff2
  9336  1E90                     l540:
  9337  1E90  0877               	movf	___fleq@ff2+3,w
  9338  1E91  0673               	xorwf	___fleq@ff1+3,w
  9339  1E92  1D03               	skipz
  9340  1E93  2E9E               	goto	u4835
  9341  1E94  0876               	movf	___fleq@ff2+2,w
  9342  1E95  0672               	xorwf	___fleq@ff1+2,w
  9343  1E96  1D03               	skipz
  9344  1E97  2E9E               	goto	u4835
  9345  1E98  0875               	movf	___fleq@ff2+1,w
  9346  1E99  0671               	xorwf	___fleq@ff1+1,w
  9347  1E9A  1D03               	skipz
  9348  1E9B  2E9E               	goto	u4835
  9349  1E9C  0874               	movf	___fleq@ff2,w
  9350  1E9D  0670               	xorwf	___fleq@ff1,w
  9351  1E9E                     u4835:
  9352  1E9E  1903               	skipnz
  9353  1E9F  2EA1               	goto	u4831
  9354  1EA0  2EA2               	goto	u4830
  9355  1EA1                     u4831:
  9356  1EA1  2EA4               	goto	l2966
  9357  1EA2                     u4830:
  9358  1EA2                     l2964:
  9359  1EA2  1003               	clrc
  9360  1EA3  2EA5               	goto	l541
  9361  1EA4                     l2966:
  9362  1EA4  1403               	setc
  9363  1EA5                     l541:
  9364  1EA5  0008               	return
  9365  1EA6                     __end_of___fleq:
  9366                           
  9367                           	psect	text23
  9368  0800                     __ptext23:	
  9369 ;; *************** function _spiWrite *****************
  9370 ;; Defined at:
  9371 ;;		line 34 in file "SPI_1.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;  dat             1    wreg     unsigned char 
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;  dat             1    0[COMMON] unsigned char 
  9376 ;; Return value:  Size  Location     Type
  9377 ;;                  1    wreg      void 
  9378 ;; Registers used:
  9379 ;;		wreg
  9380 ;; Tracked objects:
  9381 ;;		On entry : 0/0
  9382 ;;		On exit  : 0/0
  9383 ;;		Unchanged: 0/0
  9384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9385 ;;      Params:         0       0       0       0       0
  9386 ;;      Locals:         1       0       0       0       0
  9387 ;;      Temps:          0       0       0       0       0
  9388 ;;      Totals:         1       0       0       0       0
  9389 ;;Total ram usage:        1 bytes
  9390 ;; Hardware stack levels used: 1
  9391 ;; This function calls:
  9392 ;;		Nothing
  9393 ;; This function is called by:
  9394 ;;		_main
  9395 ;; This function uses a non-reentrant model
  9396 ;;
  9397                           
  9398  0800                     _spiWrite:	
  9399                           ;psect for function _spiWrite
  9400                           
  9401                           
  9402                           ;incstack = 0
  9403                           ; Regs used in _spiWrite: [wreg]
  9404                           ;spiWrite@dat stored from wreg
  9405  0800  00F0               	movwf	spiWrite@dat
  9406  0801                     l3124:
  9407                           
  9408                           ;SPI_1.c: 34: void spiWrite(char dat);SPI_1.c: 35: {;SPI_1.c: 36:     SSPBUF = dat;
  9409  0801  0870               	movf	spiWrite@dat,w
  9410  0802  1283               	bcf	3,5	;RP0=0, select bank0
  9411  0803  1303               	bcf	3,6	;RP1=0, select bank0
  9412  0804  0093               	movwf	19	;volatile
  9413  0805                     l166:
  9414  0805  0008               	return
  9415  0806                     __end_of_spiWrite:
  9416                           
  9417                           	psect	text24
  9418  0003                     __ptext24:	
  9419 ;; *************** function _spiRead *****************
  9420 ;; Defined at:
  9421 ;;		line 47 in file "SPI_1.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;		None
  9424 ;; Auto vars:     Size  Location     Type
  9425 ;;		None
  9426 ;; Return value:  Size  Location     Type
  9427 ;;                  1    wreg      unsigned char 
  9428 ;; Registers used:
  9429 ;;		wreg, status,2, status,0, pclath, cstack
  9430 ;; Tracked objects:
  9431 ;;		On entry : 0/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9435 ;;      Params:         0       0       0       0       0
  9436 ;;      Locals:         0       0       0       0       0
  9437 ;;      Temps:          0       0       0       0       0
  9438 ;;      Totals:         0       0       0       0       0
  9439 ;;Total ram usage:        0 bytes
  9440 ;; Hardware stack levels used: 1
  9441 ;; Hardware stack levels required when called: 1
  9442 ;; This function calls:
  9443 ;;		_spiReceiveWait
  9444 ;; This function is called by:
  9445 ;;		_main
  9446 ;; This function uses a non-reentrant model
  9447 ;;
  9448                           
  9449  0003                     _spiRead:	
  9450                           ;psect for function _spiRead
  9451                           
  9452  0003                     l3126:	
  9453                           ;incstack = 0
  9454                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  9455                           
  9456                           
  9457                           ;SPI_1.c: 49:     spiReceiveWait();
  9458  0003  160A  158A  2459  120A  118A  	fcall	_spiReceiveWait
  9459  0008                     l3128:
  9460                           
  9461                           ;SPI_1.c: 50:     return(SSPBUF);
  9462  0008  1283               	bcf	3,5	;RP0=0, select bank0
  9463  0009  1303               	bcf	3,6	;RP1=0, select bank0
  9464  000A  0813               	movf	19,w	;volatile
  9465  000B                     l174:
  9466  000B  0008               	return
  9467  000C                     __end_of_spiRead:
  9468                           
  9469                           	psect	text25
  9470  1C59                     __ptext25:	
  9471 ;; *************** function _spiReceiveWait *****************
  9472 ;; Defined at:
  9473 ;;		line 29 in file "SPI_1.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;		None
  9476 ;; Auto vars:     Size  Location     Type
  9477 ;;		None
  9478 ;; Return value:  Size  Location     Type
  9479 ;;                  1    wreg      void 
  9480 ;; Registers used:
  9481 ;;		None
  9482 ;; Tracked objects:
  9483 ;;		On entry : 0/0
  9484 ;;		On exit  : 0/0
  9485 ;;		Unchanged: 0/0
  9486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9487 ;;      Params:         0       0       0       0       0
  9488 ;;      Locals:         0       0       0       0       0
  9489 ;;      Temps:          0       0       0       0       0
  9490 ;;      Totals:         0       0       0       0       0
  9491 ;;Total ram usage:        0 bytes
  9492 ;; Hardware stack levels used: 1
  9493 ;; This function calls:
  9494 ;;		Nothing
  9495 ;; This function is called by:
  9496 ;;		_spiRead
  9497 ;; This function uses a non-reentrant model
  9498 ;;
  9499                           
  9500  1C59                     _spiReceiveWait:	
  9501                           ;psect for function _spiReceiveWait
  9502                           
  9503  1C59                     l2744:	
  9504                           ;incstack = 0
  9505                           ; Regs used in _spiReceiveWait: []
  9506                           
  9507  1C59                     l160:	
  9508                           ;SPI_1.c: 31:     while ( !SSPSTATbits.BF );
  9509                           
  9510  1C59  1683               	bsf	3,5	;RP0=1, select bank1
  9511  1C5A  1303               	bcf	3,6	;RP1=0, select bank1
  9512  1C5B  1C14               	btfss	20,0	;volatile
  9513  1C5C  2C5E               	goto	u4161
  9514  1C5D  2C5F               	goto	u4160
  9515  1C5E                     u4161:
  9516  1C5E  2C59               	goto	l160
  9517  1C5F                     u4160:
  9518  1C5F                     l163:
  9519  1C5F  0008               	return
  9520  1C60                     __end_of_spiReceiveWait:
  9521                           
  9522                           	psect	text26
  9523  1D6C                     __ptext26:	
  9524 ;; *************** function _setup *****************
  9525 ;; Defined at:
  9526 ;;		line 129 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c"
  9527 ;; Parameters:    Size  Location     Type
  9528 ;;		None
  9529 ;; Auto vars:     Size  Location     Type
  9530 ;;		None
  9531 ;; Return value:  Size  Location     Type
  9532 ;;                  1    wreg      void 
  9533 ;; Registers used:
  9534 ;;		wreg, status,2, status,0, pclath, cstack
  9535 ;; Tracked objects:
  9536 ;;		On entry : 0/0
  9537 ;;		On exit  : 0/0
  9538 ;;		Unchanged: 0/0
  9539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9540 ;;      Params:         0       0       0       0       0
  9541 ;;      Locals:         0       0       0       0       0
  9542 ;;      Temps:          0       0       0       0       0
  9543 ;;      Totals:         0       0       0       0       0
  9544 ;;Total ram usage:        0 bytes
  9545 ;; Hardware stack levels used: 1
  9546 ;; Hardware stack levels required when called: 3
  9547 ;; This function calls:
  9548 ;;		_Lcd_Init
  9549 ;;		_configOsc
  9550 ;;		_spiInit
  9551 ;; This function is called by:
  9552 ;;		_main
  9553 ;; This function uses a non-reentrant model
  9554 ;;
  9555                           
  9556  1D6C                     _setup:	
  9557                           ;psect for function _setup
  9558                           
  9559  1D6C                     l3104:	
  9560                           ;incstack = 0
  9561                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  9562                           
  9563                           
  9564                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 130:     configOsc(8);
  9565  1D6C  3008               	movlw	8
  9566  1D6D  00F0               	movwf	configOsc@frec
  9567  1D6E  3000               	movlw	0
  9568  1D6F  00F1               	movwf	configOsc@frec+1
  9569  1D70  160A  158A  27A4  160A  158A  	fcall	_configOsc
  9570  1D75                     l3106:
  9571                           
  9572                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 131:     TRISC = 128;
  9573  1D75  3080               	movlw	128
  9574  1D76  1683               	bsf	3,5	;RP0=1, select bank1
  9575  1D77  1303               	bcf	3,6	;RP1=0, select bank1
  9576  1D78  0087               	movwf	7	;volatile
  9577  1D79                     l3108:
  9578                           
  9579                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 132:     TRISC2 = 0;
  9580  1D79  1107               	bcf	7,2	;volatile
  9581  1D7A                     l3110:
  9582                           
  9583                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 133:     TRISB = 0;
  9584  1D7A  0186               	clrf	6	;volatile
  9585  1D7B                     l3112:
  9586                           
  9587                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 134:     PORTB = 0;
  9588  1D7B  1283               	bcf	3,5	;RP0=0, select bank0
  9589  1D7C  1303               	bcf	3,6	;RP1=0, select bank0
  9590  1D7D  0186               	clrf	6	;volatile
  9591  1D7E                     l3114:
  9592                           
  9593                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 135:     TRISD = 0;
  9594  1D7E  1683               	bsf	3,5	;RP0=1, select bank1
  9595  1D7F  1303               	bcf	3,6	;RP1=0, select bank1
  9596  1D80  0188               	clrf	8	;volatile
  9597  1D81                     l3116:
  9598                           
  9599                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 136:     PORTD = 0;
  9600  1D81  1283               	bcf	3,5	;RP0=0, select bank0
  9601  1D82  1303               	bcf	3,6	;RP1=0, select bank0
  9602  1D83  0188               	clrf	8	;volatile
  9603  1D84                     l3118:
  9604                           
  9605                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 137:     PORTCbits.RC2 = 1;
  9606  1D84  1507               	bsf	7,2	;volatile
  9607  1D85                     l3120:
  9608                           
  9609                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 138:     spiInit(SPI_MASTER
      +                          _OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SPI_IDLE_2_ACTIVE);
  9610  1D85  01F0               	clrf	spiInit@sDataSample
  9611  1D86  01F1               	clrf	spiInit@sClockIdle
  9612  1D87  01F2               	clrf	spiInit@sTransmitEdge
  9613  1D88  3020               	movlw	32
  9614  1D89  160A  158A  24A8  160A  158A  	fcall	_spiInit
  9615  1D8E                     l3122:
  9616                           
  9617                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab3/Lab3.X/Lab3.c: 139:     Lcd_Init();
  9618  1D8E  160A  158A  26A6  160A  158A  	fcall	_Lcd_Init
  9619  1D93                     l55:
  9620  1D93  0008               	return
  9621  1D94                     __end_of_setup:
  9622                           
  9623                           	psect	text27
  9624  1CA8                     __ptext27:	
  9625 ;; *************** function _spiInit *****************
  9626 ;; Defined at:
  9627 ;;		line 12 in file "SPI_1.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;  sType           1    wreg     enum E1292
  9630 ;;  sDataSample     1    0[COMMON] enum E1300
  9631 ;;  sClockIdle      1    1[COMMON] enum E1304
  9632 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;  sType           1    3[COMMON] enum E1292
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  1    wreg      void 
  9637 ;; Registers used:
  9638 ;;		wreg, status,2, status,0
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9644 ;;      Params:         3       0       0       0       0
  9645 ;;      Locals:         1       0       0       0       0
  9646 ;;      Temps:          0       0       0       0       0
  9647 ;;      Totals:         4       0       0       0       0
  9648 ;;Total ram usage:        4 bytes
  9649 ;; Hardware stack levels used: 1
  9650 ;; This function calls:
  9651 ;;		Nothing
  9652 ;; This function is called by:
  9653 ;;		_setup
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657  1CA8                     _spiInit:	
  9658                           ;psect for function _spiInit
  9659                           
  9660                           
  9661                           ;incstack = 0
  9662                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  9663                           ;spiInit@sType stored from wreg
  9664  1CA8  00F3               	movwf	spiInit@sType
  9665  1CA9                     l2714:
  9666                           
  9667                           ;SPI_1.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle s
      +                          ClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_1.c: 13: {;SPI_1.c: 14:     TRISC5 = 0;
  9668  1CA9  1683               	bsf	3,5	;RP0=1, select bank1
  9669  1CAA  1303               	bcf	3,6	;RP1=0, select bank1
  9670  1CAB  1287               	bcf	7,5	;volatile
  9671                           
  9672                           ;SPI_1.c: 15:     if(sType & 0b00000100)
  9673  1CAC  1D73               	btfss	spiInit@sType,2
  9674  1CAD  2CAF               	goto	u4151
  9675  1CAE  2CB0               	goto	u4150
  9676  1CAF                     u4151:
  9677  1CAF  2CB4               	goto	l2720
  9678  1CB0                     u4150:
  9679  1CB0                     l2716:
  9680                           
  9681                           ;SPI_1.c: 16:     {;SPI_1.c: 17:         SSPSTAT = sTransmitEdge;
  9682  1CB0  0872               	movf	spiInit@sTransmitEdge,w
  9683  1CB1  0094               	movwf	20	;volatile
  9684  1CB2                     l2718:
  9685                           
  9686                           ;SPI_1.c: 18:         TRISC3 = 1;
  9687  1CB2  1587               	bsf	7,3	;volatile
  9688                           
  9689                           ;SPI_1.c: 19:     }
  9690  1CB3  2CB8               	goto	l156
  9691  1CB4                     l2720:
  9692                           
  9693                           ;SPI_1.c: 21:     {;SPI_1.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  9694  1CB4  0870               	movf	spiInit@sDataSample,w
  9695  1CB5  0472               	iorwf	spiInit@sTransmitEdge,w
  9696  1CB6  0094               	movwf	20	;volatile
  9697  1CB7                     l2722:
  9698                           
  9699                           ;SPI_1.c: 23:         TRISC3 = 0;
  9700  1CB7  1187               	bcf	7,3	;volatile
  9701  1CB8                     l156:	
  9702                           ;SPI_1.c: 24:     }
  9703                           
  9704                           
  9705                           ;SPI_1.c: 26:     SSPCON = sType | sClockIdle;
  9706  1CB8  0873               	movf	spiInit@sType,w
  9707  1CB9  0471               	iorwf	spiInit@sClockIdle,w
  9708  1CBA  1283               	bcf	3,5	;RP0=0, select bank0
  9709  1CBB  1303               	bcf	3,6	;RP1=0, select bank0
  9710  1CBC  0094               	movwf	20	;volatile
  9711  1CBD                     l157:
  9712  1CBD  0008               	return
  9713  1CBE                     __end_of_spiInit:
  9714                           
  9715                           	psect	text28
  9716  1FA4                     __ptext28:	
  9717 ;; *************** function _configOsc *****************
  9718 ;; Defined at:
  9719 ;;		line 4 in file "oscilador.c"
  9720 ;; Parameters:    Size  Location     Type
  9721 ;;  frec            2    0[COMMON] unsigned int 
  9722 ;; Auto vars:     Size  Location     Type
  9723 ;;		None
  9724 ;; Return value:  Size  Location     Type
  9725 ;;                  1    wreg      void 
  9726 ;; Registers used:
  9727 ;;		wreg, status,2, status,0
  9728 ;; Tracked objects:
  9729 ;;		On entry : 0/0
  9730 ;;		On exit  : 0/0
  9731 ;;		Unchanged: 0/0
  9732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9733 ;;      Params:         2       0       0       0       0
  9734 ;;      Locals:         0       0       0       0       0
  9735 ;;      Temps:          0       0       0       0       0
  9736 ;;      Totals:         2       0       0       0       0
  9737 ;;Total ram usage:        2 bytes
  9738 ;; Hardware stack levels used: 1
  9739 ;; This function calls:
  9740 ;;		Nothing
  9741 ;; This function is called by:
  9742 ;;		_setup
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746  1FA4                     _configOsc:	
  9747                           ;psect for function _configOsc
  9748                           
  9749  1FA4                     l2696:	
  9750                           ;incstack = 0
  9751                           ; Regs used in _configOsc: [wreg+status,2+status,0]
  9752                           
  9753                           
  9754                           ;oscilador.c: 5:         if (frec == 8) OSCCONbits.IRCF = 0b111;
  9755  1FA4  3008               	movlw	8
  9756  1FA5  0670               	xorwf	configOsc@frec,w
  9757  1FA6  0471               	iorwf	configOsc@frec+1,w
  9758  1FA7  1D03               	btfss	3,2
  9759  1FA8  2FAA               	goto	u4081
  9760  1FA9  2FAB               	goto	u4080
  9761  1FAA                     u4081:
  9762  1FAA  2FAF               	goto	l133
  9763  1FAB                     u4080:
  9764  1FAB                     l2698:
  9765  1FAB  3070               	movlw	112
  9766  1FAC  1683               	bsf	3,5	;RP0=1, select bank1
  9767  1FAD  1303               	bcf	3,6	;RP1=0, select bank1
  9768  1FAE  048F               	iorwf	15,f	;volatile
  9769  1FAF                     l133:
  9770                           
  9771                           ;oscilador.c: 6:         if (frec == 4) OSCCONbits.IRCF = 0b110;
  9772  1FAF  3004               	movlw	4
  9773  1FB0  0670               	xorwf	configOsc@frec,w
  9774  1FB1  0471               	iorwf	configOsc@frec+1,w
  9775  1FB2  1D03               	btfss	3,2
  9776  1FB3  2FB5               	goto	u4091
  9777  1FB4  2FB6               	goto	u4090
  9778  1FB5                     u4091:
  9779  1FB5  2FBC               	goto	l134
  9780  1FB6                     u4090:
  9781  1FB6                     l2700:
  9782  1FB6  1683               	bsf	3,5	;RP0=1, select bank1
  9783  1FB7  1303               	bcf	3,6	;RP1=0, select bank1
  9784  1FB8  080F               	movf	15,w	;volatile
  9785  1FB9  398F               	andlw	-113
  9786  1FBA  3860               	iorlw	96
  9787  1FBB  008F               	movwf	15	;volatile
  9788  1FBC                     l134:
  9789                           
  9790                           ;oscilador.c: 7:         if (frec == 1) OSCCONbits.IRCF = 0b100;
  9791  1FBC  0370               	decf	configOsc@frec,w
  9792  1FBD  0471               	iorwf	configOsc@frec+1,w
  9793  1FBE  1D03               	btfss	3,2
  9794  1FBF  2FC1               	goto	u4101
  9795  1FC0  2FC2               	goto	u4100
  9796  1FC1                     u4101:
  9797  1FC1  2FC8               	goto	l135
  9798  1FC2                     u4100:
  9799  1FC2                     l2702:
  9800  1FC2  1683               	bsf	3,5	;RP0=1, select bank1
  9801  1FC3  1303               	bcf	3,6	;RP1=0, select bank1
  9802  1FC4  080F               	movf	15,w	;volatile
  9803  1FC5  398F               	andlw	-113
  9804  1FC6  3840               	iorlw	64
  9805  1FC7  008F               	movwf	15	;volatile
  9806  1FC8                     l135:
  9807                           
  9808                           ;oscilador.c: 8:         if (frec == 500) OSCCONbits.IRCF = 0b011;
  9809  1FC8  30F4               	movlw	244
  9810  1FC9  0670               	xorwf	configOsc@frec,w
  9811  1FCA  1D03               	skipz
  9812  1FCB  2FD0               	goto	u4111
  9813  1FCC  0371               	decf	configOsc@frec+1,w
  9814  1FCD  1D03               	btfss	3,2
  9815  1FCE  2FD0               	goto	u4111
  9816  1FCF  2FD1               	goto	u4110
  9817  1FD0                     u4111:
  9818  1FD0  2FD7               	goto	l136
  9819  1FD1                     u4110:
  9820  1FD1                     l2704:
  9821  1FD1  1683               	bsf	3,5	;RP0=1, select bank1
  9822  1FD2  1303               	bcf	3,6	;RP1=0, select bank1
  9823  1FD3  080F               	movf	15,w	;volatile
  9824  1FD4  398F               	andlw	-113
  9825  1FD5  3830               	iorlw	48
  9826  1FD6  008F               	movwf	15	;volatile
  9827  1FD7                     l136:
  9828                           
  9829                           ;oscilador.c: 9:         if (frec == 250) OSCCONbits.IRCF = 0b101;
  9830  1FD7  30FA               	movlw	250
  9831  1FD8  0670               	xorwf	configOsc@frec,w
  9832  1FD9  0471               	iorwf	configOsc@frec+1,w
  9833  1FDA  1D03               	btfss	3,2
  9834  1FDB  2FDD               	goto	u4121
  9835  1FDC  2FDE               	goto	u4120
  9836  1FDD                     u4121:
  9837  1FDD  2FE4               	goto	l137
  9838  1FDE                     u4120:
  9839  1FDE                     l2706:
  9840  1FDE  1683               	bsf	3,5	;RP0=1, select bank1
  9841  1FDF  1303               	bcf	3,6	;RP1=0, select bank1
  9842  1FE0  080F               	movf	15,w	;volatile
  9843  1FE1  398F               	andlw	-113
  9844  1FE2  3850               	iorlw	80
  9845  1FE3  008F               	movwf	15	;volatile
  9846  1FE4                     l137:
  9847                           
  9848                           ;oscilador.c: 10:         if (frec == 125) OSCCONbits.IRCF = 0b001;
  9849  1FE4  307D               	movlw	125
  9850  1FE5  0670               	xorwf	configOsc@frec,w
  9851  1FE6  0471               	iorwf	configOsc@frec+1,w
  9852  1FE7  1D03               	btfss	3,2
  9853  1FE8  2FEA               	goto	u4131
  9854  1FE9  2FEB               	goto	u4130
  9855  1FEA                     u4131:
  9856  1FEA  2FF1               	goto	l138
  9857  1FEB                     u4130:
  9858  1FEB                     l2708:
  9859  1FEB  1683               	bsf	3,5	;RP0=1, select bank1
  9860  1FEC  1303               	bcf	3,6	;RP1=0, select bank1
  9861  1FED  080F               	movf	15,w	;volatile
  9862  1FEE  398F               	andlw	-113
  9863  1FEF  3810               	iorlw	16
  9864  1FF0  008F               	movwf	15	;volatile
  9865  1FF1                     l138:
  9866                           
  9867                           ;oscilador.c: 11:         if (frec == 31) OSCCONbits.IRCF = 0b000;
  9868  1FF1  301F               	movlw	31
  9869  1FF2  0670               	xorwf	configOsc@frec,w
  9870  1FF3  0471               	iorwf	configOsc@frec+1,w
  9871  1FF4  1D03               	btfss	3,2
  9872  1FF5  2FF7               	goto	u4141
  9873  1FF6  2FF8               	goto	u4140
  9874  1FF7                     u4141:
  9875  1FF7  2FFC               	goto	l2712
  9876  1FF8                     u4140:
  9877  1FF8                     l2710:
  9878  1FF8  308F               	movlw	-113
  9879  1FF9  1683               	bsf	3,5	;RP0=1, select bank1
  9880  1FFA  1303               	bcf	3,6	;RP1=0, select bank1
  9881  1FFB  058F               	andwf	15,f	;volatile
  9882  1FFC                     l2712:
  9883                           
  9884                           ;oscilador.c: 12:         OSCCONbits.SCS = 1;
  9885  1FFC  1683               	bsf	3,5	;RP0=1, select bank1
  9886  1FFD  1303               	bcf	3,6	;RP1=0, select bank1
  9887  1FFE  140F               	bsf	15,0	;volatile
  9888  1FFF                     l140:
  9889  1FFF  0008               	return
  9890  2000                     __end_of_configOsc:
  9891                           
  9892                           	psect	text29
  9893  1EA6                     __ptext29:	
  9894 ;; *************** function _Lcd_Init *****************
  9895 ;; Defined at:
  9896 ;;		line 80 in file "lcd.c"
  9897 ;; Parameters:    Size  Location     Type
  9898 ;;		None
  9899 ;; Auto vars:     Size  Location     Type
  9900 ;;		None
  9901 ;; Return value:  Size  Location     Type
  9902 ;;                  1    wreg      void 
  9903 ;; Registers used:
  9904 ;;		wreg, status,2, status,0, pclath, cstack
  9905 ;; Tracked objects:
  9906 ;;		On entry : 0/0
  9907 ;;		On exit  : 0/0
  9908 ;;		Unchanged: 0/0
  9909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9910 ;;      Params:         0       0       0       0       0
  9911 ;;      Locals:         0       0       0       0       0
  9912 ;;      Temps:          2       0       0       0       0
  9913 ;;      Totals:         2       0       0       0       0
  9914 ;;Total ram usage:        2 bytes
  9915 ;; Hardware stack levels used: 1
  9916 ;; Hardware stack levels required when called: 2
  9917 ;; This function calls:
  9918 ;;		_Lcd_Cmd
  9919 ;;		_Lcd_Port
  9920 ;; This function is called by:
  9921 ;;		_setup
  9922 ;; This function uses a non-reentrant model
  9923 ;;
  9924                           
  9925  1EA6                     _Lcd_Init:	
  9926                           ;psect for function _Lcd_Init
  9927                           
  9928  1EA6                     l2724:	
  9929                           ;incstack = 0
  9930                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9931                           
  9932                           
  9933                           ;lcd.c: 81:     Lcd_Port(0);
  9934  1EA6  3000               	movlw	0
  9935  1EA7  160A  158A  2594  160A  158A  	fcall	_Lcd_Port
  9936  1EAC                     l2726:
  9937                           
  9938                           ;lcd.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9939  1EAC  3034               	movlw	52
  9940  1EAD  00F5               	movwf	??_Lcd_Init+1
  9941  1EAE  30F1               	movlw	241
  9942  1EAF  00F4               	movwf	??_Lcd_Init
  9943  1EB0                     u5727:
  9944  1EB0  0BF4               	decfsz	??_Lcd_Init,f
  9945  1EB1  2EB0               	goto	u5727
  9946  1EB2  0BF5               	decfsz	??_Lcd_Init+1,f
  9947  1EB3  2EB0               	goto	u5727
  9948  1EB4  2EB5               	nop2
  9949  1EB5                     l2728:
  9950                           
  9951                           ;lcd.c: 83:     Lcd_Cmd(48);
  9952  1EB5  3030               	movlw	48
  9953  1EB6  160A  158A  24BE  160A  158A  	fcall	_Lcd_Cmd
  9954                           
  9955                           ;lcd.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9956  1EBB  300D               	movlw	13
  9957  1EBC  00F5               	movwf	??_Lcd_Init+1
  9958  1EBD  30FB               	movlw	251
  9959  1EBE  00F4               	movwf	??_Lcd_Init
  9960  1EBF                     u5737:
  9961  1EBF  0BF4               	decfsz	??_Lcd_Init,f
  9962  1EC0  2EBF               	goto	u5737
  9963  1EC1  0BF5               	decfsz	??_Lcd_Init+1,f
  9964  1EC2  2EBF               	goto	u5737
  9965  1EC3  2EC4               	nop2
  9966  1EC4                     l2730:
  9967                           
  9968                           ;lcd.c: 85:     Lcd_Cmd(48);
  9969  1EC4  3030               	movlw	48
  9970  1EC5  160A  158A  24BE  160A  158A  	fcall	_Lcd_Cmd
  9971  1ECA                     l2732:
  9972                           
  9973                           ;lcd.c: 86:     _delay((unsigned long)((11)*(8000000/4000.0)));
  9974  1ECA  301D               	movlw	29
  9975  1ECB  00F5               	movwf	??_Lcd_Init+1
  9976  1ECC  3091               	movlw	145
  9977  1ECD  00F4               	movwf	??_Lcd_Init
  9978  1ECE                     u5747:
  9979  1ECE  0BF4               	decfsz	??_Lcd_Init,f
  9980  1ECF  2ECE               	goto	u5747
  9981  1ED0  0BF5               	decfsz	??_Lcd_Init+1,f
  9982  1ED1  2ECE               	goto	u5747
  9983                           
  9984                           ;lcd.c: 87:     Lcd_Cmd(48);
  9985  1ED2  3030               	movlw	48
  9986  1ED3  160A  158A  24BE  160A  158A  	fcall	_Lcd_Cmd
  9987                           
  9988                           ;lcd.c: 89:     Lcd_Cmd(56);
  9989  1ED8  3038               	movlw	56
  9990  1ED9  160A  158A  24BE  160A  158A  	fcall	_Lcd_Cmd
  9991                           
  9992                           ;lcd.c: 90:     Lcd_Cmd(8);
  9993  1EDE  3008               	movlw	8
  9994  1EDF  160A  158A  24BE  160A  158A  	fcall	_Lcd_Cmd
  9995                           
  9996                           ;lcd.c: 91:     Lcd_Cmd(1);
  9997  1EE4  3001               	movlw	1
  9998  1EE5  160A  158A  24BE  160A  158A  	fcall	_Lcd_Cmd
  9999                           
 10000                           ;lcd.c: 92:     Lcd_Cmd(6);
 10001  1EEA  3006               	movlw	6
 10002  1EEB  160A  158A  24BE  160A  158A  	fcall	_Lcd_Cmd
 10003                           
 10004                           ;lcd.c: 93:     Lcd_Cmd(12);
 10005  1EF0  300C               	movlw	12
 10006  1EF1  160A  158A  24BE  160A  158A  	fcall	_Lcd_Cmd
 10007  1EF6                     l113:
 10008  1EF6  0008               	return
 10009  1EF7                     __end_of_Lcd_Init:
 10010                           
 10011                           	psect	text30
 10012  1DD2                     __ptext30:	
 10013 ;; *************** function _Lcd_Write_String *****************
 10014 ;; Defined at:
 10015 ;;		line 104 in file "lcd.c"
 10016 ;; Parameters:    Size  Location     Type
 10017 ;;  a               2    3[COMMON] PTR unsigned char 
 10018 ;;		 -> volt(16), STR_1(12), 
 10019 ;; Auto vars:     Size  Location     Type
 10020 ;;  i               2    8[COMMON] int 
 10021 ;; Return value:  Size  Location     Type
 10022 ;;                  1    wreg      void 
 10023 ;; Registers used:
 10024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10025 ;; Tracked objects:
 10026 ;;		On entry : 0/0
 10027 ;;		On exit  : 0/0
 10028 ;;		Unchanged: 0/0
 10029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10030 ;;      Params:         2       0       0       0       0
 10031 ;;      Locals:         2       0       0       0       0
 10032 ;;      Temps:          3       0       0       0       0
 10033 ;;      Totals:         7       0       0       0       0
 10034 ;;Total ram usage:        7 bytes
 10035 ;; Hardware stack levels used: 1
 10036 ;; Hardware stack levels required when called: 2
 10037 ;; This function calls:
 10038 ;;		_Lcd_Write_Char
 10039 ;; This function is called by:
 10040 ;;		_main
 10041 ;; This function uses a non-reentrant model
 10042 ;;
 10043                           
 10044  1DD2                     _Lcd_Write_String:	
 10045                           ;psect for function _Lcd_Write_String
 10046                           
 10047  1DD2                     l3146:	
 10048                           ;incstack = 0
 10049                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10050                           
 10051                           
 10052                           ;lcd.c: 105:     int i;;lcd.c: 106:     for (i = 0; a[i] != '\0'; i++)
 10053  1DD2  01F8               	clrf	Lcd_Write_String@i
 10054  1DD3  01F9               	clrf	Lcd_Write_String@i+1
 10055  1DD4  2DF7               	goto	l3152
 10056  1DD5                     l3148:
 10057                           
 10058                           ;lcd.c: 107:         Lcd_Write_Char(a[i]);
 10059  1DD5  0878               	movf	Lcd_Write_String@i,w
 10060  1DD6  0773               	addwf	Lcd_Write_String@a,w
 10061  1DD7  00F6               	movwf	??_Lcd_Write_String+1
 10062  1DD8  0874               	movf	Lcd_Write_String@a+1,w
 10063  1DD9  00F5               	movwf	??_Lcd_Write_String
 10064  1DDA  1803               	skipnc
 10065  1DDB  0AF5               	incf	??_Lcd_Write_String,f
 10066  1DDC  1FF8               	btfss	Lcd_Write_String@i,7
 10067  1DDD  2DDF               	goto	u5240
 10068  1DDE  03F5               	decf	??_Lcd_Write_String,f
 10069  1DDF                     u5240:
 10070  1DDF  0875               	movf	??_Lcd_Write_String,w
 10071  1DE0  00F7               	movwf	??_Lcd_Write_String+2
 10072  1DE1  0877               	movf	??_Lcd_Write_String+2,w
 10073  1DE2  1283               	bcf	3,5	;RP0=0, select bank0
 10074  1DE3  1303               	bcf	3,6	;RP1=0, select bank0
 10075  1DE4  00FF               	movwf	btemp+1
 10076  1DE5  0876               	movf	??_Lcd_Write_String+1,w
 10077  1DE6  0084               	movwf	4
 10078  1DE7  160A  118A  2000  160A  158A  	fcall	stringtab
 10079  1DEC  160A  158A  2492  160A  158A  	fcall	_Lcd_Write_Char
 10080  1DF1                     l3150:
 10081  1DF1  3001               	movlw	1
 10082  1DF2  07F8               	addwf	Lcd_Write_String@i,f
 10083  1DF3  1803               	skipnc
 10084  1DF4  0AF9               	incf	Lcd_Write_String@i+1,f
 10085  1DF5  3000               	movlw	0
 10086  1DF6  07F9               	addwf	Lcd_Write_String@i+1,f
 10087  1DF7                     l3152:
 10088  1DF7  0878               	movf	Lcd_Write_String@i,w
 10089  1DF8  0773               	addwf	Lcd_Write_String@a,w
 10090  1DF9  00F6               	movwf	??_Lcd_Write_String+1
 10091  1DFA  0874               	movf	Lcd_Write_String@a+1,w
 10092  1DFB  00F5               	movwf	??_Lcd_Write_String
 10093  1DFC  1803               	skipnc
 10094  1DFD  0AF5               	incf	??_Lcd_Write_String,f
 10095  1DFE  1FF8               	btfss	Lcd_Write_String@i,7
 10096  1DFF  2E01               	goto	u5250
 10097  1E00  03F5               	decf	??_Lcd_Write_String,f
 10098  1E01                     u5250:
 10099  1E01  0875               	movf	??_Lcd_Write_String,w
 10100  1E02  00F7               	movwf	??_Lcd_Write_String+2
 10101  1E03  0877               	movf	??_Lcd_Write_String+2,w
 10102  1E04  1283               	bcf	3,5	;RP0=0, select bank0
 10103  1E05  1303               	bcf	3,6	;RP1=0, select bank0
 10104  1E06  00FF               	movwf	btemp+1
 10105  1E07  0876               	movf	??_Lcd_Write_String+1,w
 10106  1E08  0084               	movwf	4
 10107  1E09  160A  118A  2000  160A  158A  	fcall	stringtab
 10108  1E0E  3A00               	xorlw	0
 10109  1E0F  1D03               	skipz
 10110  1E10  2E12               	goto	u5261
 10111  1E11  2E13               	goto	u5260
 10112  1E12                     u5261:
 10113  1E12  2DD5               	goto	l3148
 10114  1E13                     u5260:
 10115  1E13                     l122:
 10116  1E13  0008               	return
 10117  1E14                     __end_of_Lcd_Write_String:
 10118                           
 10119                           	psect	text31
 10120  1C92                     __ptext31:	
 10121 ;; *************** function _Lcd_Write_Char *****************
 10122 ;; Defined at:
 10123 ;;		line 96 in file "lcd.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;  a               1    wreg     unsigned char 
 10126 ;; Auto vars:     Size  Location     Type
 10127 ;;  a               1    2[COMMON] unsigned char 
 10128 ;; Return value:  Size  Location     Type
 10129 ;;                  1    wreg      void 
 10130 ;; Registers used:
 10131 ;;		wreg, status,2, status,0, pclath, cstack
 10132 ;; Tracked objects:
 10133 ;;		On entry : 0/0
 10134 ;;		On exit  : 0/0
 10135 ;;		Unchanged: 0/0
 10136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10137 ;;      Params:         0       0       0       0       0
 10138 ;;      Locals:         1       0       0       0       0
 10139 ;;      Temps:          1       0       0       0       0
 10140 ;;      Totals:         2       0       0       0       0
 10141 ;;Total ram usage:        2 bytes
 10142 ;; Hardware stack levels used: 1
 10143 ;; Hardware stack levels required when called: 1
 10144 ;; This function calls:
 10145 ;;		_Lcd_Port
 10146 ;; This function is called by:
 10147 ;;		_Lcd_Write_String
 10148 ;; This function uses a non-reentrant model
 10149 ;;
 10150                           
 10151  1C92                     _Lcd_Write_Char:	
 10152                           ;psect for function _Lcd_Write_Char
 10153                           
 10154                           
 10155                           ;incstack = 0
 10156                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10157                           ;Lcd_Write_Char@a stored from wreg
 10158  1C92  00F2               	movwf	Lcd_Write_Char@a
 10159  1C93                     l2734:
 10160                           
 10161                           ;lcd.c: 97:     RC0 = 1;
 10162  1C93  1283               	bcf	3,5	;RP0=0, select bank0
 10163  1C94  1303               	bcf	3,6	;RP1=0, select bank0
 10164  1C95  1407               	bsf	7,0	;volatile
 10165  1C96                     l2736:
 10166                           
 10167                           ;lcd.c: 98:     Lcd_Port(a);
 10168  1C96  0872               	movf	Lcd_Write_Char@a,w
 10169  1C97  160A  158A  2594  160A  158A  	fcall	_Lcd_Port
 10170  1C9C                     l2738:
 10171                           
 10172                           ;lcd.c: 99:     RC1 = 1;
 10173  1C9C  1283               	bcf	3,5	;RP0=0, select bank0
 10174  1C9D  1303               	bcf	3,6	;RP1=0, select bank0
 10175  1C9E  1487               	bsf	7,1	;volatile
 10176  1C9F                     l2740:
 10177                           
 10178                           ;lcd.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10179  1C9F  301A               	movlw	26
 10180  1CA0  00F1               	movwf	??_Lcd_Write_Char
 10181  1CA1                     u5757:
 10182  1CA1  0BF1               	decfsz	??_Lcd_Write_Char,f
 10183  1CA2  2CA1               	goto	u5757
 10184  1CA3  0000               	nop
 10185  1CA4                     l2742:
 10186                           
 10187                           ;lcd.c: 101:     RC1 = 0;
 10188  1CA4  1283               	bcf	3,5	;RP0=0, select bank0
 10189  1CA5  1303               	bcf	3,6	;RP1=0, select bank0
 10190  1CA6  1087               	bcf	7,1	;volatile
 10191  1CA7                     l116:
 10192  1CA7  0008               	return
 10193  1CA8                     __end_of_Lcd_Write_Char:
 10194                           
 10195                           	psect	text32
 10196  1CD8                     __ptext32:	
 10197 ;; *************** function _Lcd_Set_Cursor *****************
 10198 ;; Defined at:
 10199 ;;		line 68 in file "lcd.c"
 10200 ;; Parameters:    Size  Location     Type
 10201 ;;  a               1    wreg     unsigned char 
 10202 ;;  b               1    4[COMMON] unsigned char 
 10203 ;; Auto vars:     Size  Location     Type
 10204 ;;  a               1    6[COMMON] unsigned char 
 10205 ;;  temp            1    7[COMMON] unsigned char 
 10206 ;; Return value:  Size  Location     Type
 10207 ;;                  1    wreg      void 
 10208 ;; Registers used:
 10209 ;;		wreg, status,2, status,0, pclath, cstack
 10210 ;; Tracked objects:
 10211 ;;		On entry : 0/0
 10212 ;;		On exit  : 0/0
 10213 ;;		Unchanged: 0/0
 10214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10215 ;;      Params:         1       0       0       0       0
 10216 ;;      Locals:         2       0       0       0       0
 10217 ;;      Temps:          1       0       0       0       0
 10218 ;;      Totals:         4       0       0       0       0
 10219 ;;Total ram usage:        4 bytes
 10220 ;; Hardware stack levels used: 1
 10221 ;; Hardware stack levels required when called: 2
 10222 ;; This function calls:
 10223 ;;		_Lcd_Cmd
 10224 ;; This function is called by:
 10225 ;;		_main
 10226 ;; This function uses a non-reentrant model
 10227 ;;
 10228                           
 10229  1CD8                     _Lcd_Set_Cursor:	
 10230                           ;psect for function _Lcd_Set_Cursor
 10231                           
 10232                           
 10233                           ;incstack = 0
 10234                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10235                           ;Lcd_Set_Cursor@a stored from wreg
 10236  1CD8  00F6               	movwf	Lcd_Set_Cursor@a
 10237  1CD9                     l3134:
 10238                           
 10239                           ;lcd.c: 69:     unsigned char temp;;lcd.c: 70:     if (a == 1) {
 10240  1CD9  0376               	decf	Lcd_Set_Cursor@a,w
 10241  1CDA  1D03               	btfss	3,2
 10242  1CDB  2CDD               	goto	u5221
 10243  1CDC  2CDE               	goto	u5220
 10244  1CDD                     u5221:
 10245  1CDD  2CEA               	goto	l3140
 10246  1CDE                     u5220:
 10247  1CDE                     l3136:
 10248                           
 10249                           ;lcd.c: 71:         temp = 0x80 + b - 1;
 10250  1CDE  0874               	movf	Lcd_Set_Cursor@b,w
 10251  1CDF  3E7F               	addlw	127
 10252  1CE0  00F5               	movwf	??_Lcd_Set_Cursor
 10253  1CE1  0875               	movf	??_Lcd_Set_Cursor,w
 10254  1CE2  00F7               	movwf	Lcd_Set_Cursor@temp
 10255  1CE3                     l3138:
 10256                           
 10257                           ;lcd.c: 72:         Lcd_Cmd(temp);
 10258  1CE3  0877               	movf	Lcd_Set_Cursor@temp,w
 10259  1CE4  160A  158A  24BE  160A  158A  	fcall	_Lcd_Cmd
 10260                           
 10261                           ;lcd.c: 74:     } else if (a == 2) {
 10262  1CE9  2CFB               	goto	l110
 10263  1CEA                     l3140:
 10264  1CEA  3002               	movlw	2
 10265  1CEB  0676               	xorwf	Lcd_Set_Cursor@a,w
 10266  1CEC  1D03               	btfss	3,2
 10267  1CED  2CEF               	goto	u5231
 10268  1CEE  2CF0               	goto	u5230
 10269  1CEF                     u5231:
 10270  1CEF  2CFB               	goto	l110
 10271  1CF0                     u5230:
 10272  1CF0                     l3142:
 10273                           
 10274                           ;lcd.c: 75:         temp = 0xC0 + b - 1;
 10275  1CF0  0874               	movf	Lcd_Set_Cursor@b,w
 10276  1CF1  3EBF               	addlw	191
 10277  1CF2  00F5               	movwf	??_Lcd_Set_Cursor
 10278  1CF3  0875               	movf	??_Lcd_Set_Cursor,w
 10279  1CF4  00F7               	movwf	Lcd_Set_Cursor@temp
 10280  1CF5                     l3144:
 10281                           
 10282                           ;lcd.c: 76:         Lcd_Cmd(temp);
 10283  1CF5  0877               	movf	Lcd_Set_Cursor@temp,w
 10284  1CF6  160A  158A  24BE  160A  158A  	fcall	_Lcd_Cmd
 10285  1CFB                     l110:
 10286  1CFB  0008               	return
 10287  1CFC                     __end_of_Lcd_Set_Cursor:
 10288                           
 10289                           	psect	text33
 10290  1C73                     __ptext33:	
 10291 ;; *************** function _Lcd_Clear *****************
 10292 ;; Defined at:
 10293 ;;		line 63 in file "lcd.c"
 10294 ;; Parameters:    Size  Location     Type
 10295 ;;		None
 10296 ;; Auto vars:     Size  Location     Type
 10297 ;;		None
 10298 ;; Return value:  Size  Location     Type
 10299 ;;                  1    wreg      void 
 10300 ;; Registers used:
 10301 ;;		wreg, status,2, status,0, pclath, cstack
 10302 ;; Tracked objects:
 10303 ;;		On entry : 0/0
 10304 ;;		On exit  : 0/0
 10305 ;;		Unchanged: 0/0
 10306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10307 ;;      Params:         0       0       0       0       0
 10308 ;;      Locals:         0       0       0       0       0
 10309 ;;      Temps:          0       0       0       0       0
 10310 ;;      Totals:         0       0       0       0       0
 10311 ;;Total ram usage:        0 bytes
 10312 ;; Hardware stack levels used: 1
 10313 ;; Hardware stack levels required when called: 2
 10314 ;; This function calls:
 10315 ;;		_Lcd_Cmd
 10316 ;; This function is called by:
 10317 ;;		_main
 10318 ;; This function uses a non-reentrant model
 10319 ;;
 10320                           
 10321  1C73                     _Lcd_Clear:	
 10322                           ;psect for function _Lcd_Clear
 10323                           
 10324  1C73                     l3132:	
 10325                           ;incstack = 0
 10326                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10327                           
 10328                           
 10329                           ;lcd.c: 64:     Lcd_Cmd(0);
 10330  1C73  3000               	movlw	0
 10331  1C74  160A  158A  24BE  160A  158A  	fcall	_Lcd_Cmd
 10332                           
 10333                           ;lcd.c: 65:     Lcd_Cmd(1);
 10334  1C79  3001               	movlw	1
 10335  1C7A  160A  158A  24BE  160A  158A  	fcall	_Lcd_Cmd
 10336  1C7F                     l104:
 10337  1C7F  0008               	return
 10338  1C80                     __end_of_Lcd_Clear:
 10339                           
 10340                           	psect	text34
 10341  1CBE                     __ptext34:	
 10342 ;; *************** function _Lcd_Cmd *****************
 10343 ;; Defined at:
 10344 ;;		line 55 in file "lcd.c"
 10345 ;; Parameters:    Size  Location     Type
 10346 ;;  a               1    wreg     unsigned char 
 10347 ;; Auto vars:     Size  Location     Type
 10348 ;;  a               1    3[COMMON] unsigned char 
 10349 ;; Return value:  Size  Location     Type
 10350 ;;                  1    wreg      void 
 10351 ;; Registers used:
 10352 ;;		wreg, status,2, status,0, pclath, cstack
 10353 ;; Tracked objects:
 10354 ;;		On entry : 0/0
 10355 ;;		On exit  : 0/0
 10356 ;;		Unchanged: 0/0
 10357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10358 ;;      Params:         0       0       0       0       0
 10359 ;;      Locals:         1       0       0       0       0
 10360 ;;      Temps:          2       0       0       0       0
 10361 ;;      Totals:         3       0       0       0       0
 10362 ;;Total ram usage:        3 bytes
 10363 ;; Hardware stack levels used: 1
 10364 ;; Hardware stack levels required when called: 1
 10365 ;; This function calls:
 10366 ;;		_Lcd_Port
 10367 ;; This function is called by:
 10368 ;;		_Lcd_Clear
 10369 ;;		_Lcd_Set_Cursor
 10370 ;;		_Lcd_Init
 10371 ;;		_Lcd_Shift_Right
 10372 ;;		_Lcd_Shift_Left
 10373 ;; This function uses a non-reentrant model
 10374 ;;
 10375                           
 10376  1CBE                     _Lcd_Cmd:	
 10377                           ;psect for function _Lcd_Cmd
 10378                           
 10379                           
 10380                           ;incstack = 0
 10381                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10382                           ;Lcd_Cmd@a stored from wreg
 10383  1CBE  00F3               	movwf	Lcd_Cmd@a
 10384  1CBF                     l2222:
 10385                           
 10386                           ;lcd.c: 56:     RC0 = 0;
 10387  1CBF  1283               	bcf	3,5	;RP0=0, select bank0
 10388  1CC0  1303               	bcf	3,6	;RP1=0, select bank0
 10389  1CC1  1007               	bcf	7,0	;volatile
 10390  1CC2                     l2224:
 10391                           
 10392                           ;lcd.c: 57:     Lcd_Port(a);
 10393  1CC2  0873               	movf	Lcd_Cmd@a,w
 10394  1CC3  160A  158A  2594  160A  158A  	fcall	_Lcd_Port
 10395  1CC8                     l2226:
 10396                           
 10397                           ;lcd.c: 58:     RC1 = 1;
 10398  1CC8  1283               	bcf	3,5	;RP0=0, select bank0
 10399  1CC9  1303               	bcf	3,6	;RP1=0, select bank0
 10400  1CCA  1487               	bsf	7,1	;volatile
 10401  1CCB                     l2228:
 10402                           
 10403                           ;lcd.c: 59:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10404  1CCB  300B               	movlw	11
 10405  1CCC  00F2               	movwf	??_Lcd_Cmd+1
 10406  1CCD  3062               	movlw	98
 10407  1CCE  00F1               	movwf	??_Lcd_Cmd
 10408  1CCF                     u5767:
 10409  1CCF  0BF1               	decfsz	??_Lcd_Cmd,f
 10410  1CD0  2CCF               	goto	u5767
 10411  1CD1  0BF2               	decfsz	??_Lcd_Cmd+1,f
 10412  1CD2  2CCF               	goto	u5767
 10413  1CD3  0000               	nop
 10414  1CD4                     l2230:
 10415                           
 10416                           ;lcd.c: 60:     RC1 = 0;
 10417  1CD4  1283               	bcf	3,5	;RP0=0, select bank0
 10418  1CD5  1303               	bcf	3,6	;RP1=0, select bank0
 10419  1CD6  1087               	bcf	7,1	;volatile
 10420  1CD7                     l101:
 10421  1CD7  0008               	return
 10422  1CD8                     __end_of_Lcd_Cmd:
 10423                           
 10424                           	psect	text35
 10425  1D94                     __ptext35:	
 10426 ;; *************** function _Lcd_Port *****************
 10427 ;; Defined at:
 10428 ;;		line 13 in file "lcd.c"
 10429 ;; Parameters:    Size  Location     Type
 10430 ;;  a               1    wreg     unsigned char 
 10431 ;; Auto vars:     Size  Location     Type
 10432 ;;  a               1    0[COMMON] unsigned char 
 10433 ;; Return value:  Size  Location     Type
 10434 ;;                  1    wreg      void 
 10435 ;; Registers used:
 10436 ;;		wreg
 10437 ;; Tracked objects:
 10438 ;;		On entry : 0/0
 10439 ;;		On exit  : 0/0
 10440 ;;		Unchanged: 0/0
 10441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10442 ;;      Params:         0       0       0       0       0
 10443 ;;      Locals:         1       0       0       0       0
 10444 ;;      Temps:          0       0       0       0       0
 10445 ;;      Totals:         1       0       0       0       0
 10446 ;;Total ram usage:        1 bytes
 10447 ;; Hardware stack levels used: 1
 10448 ;; This function calls:
 10449 ;;		Nothing
 10450 ;; This function is called by:
 10451 ;;		_Lcd_Cmd
 10452 ;;		_Lcd_Init
 10453 ;;		_Lcd_Write_Char
 10454 ;; This function uses a non-reentrant model
 10455 ;;
 10456                           
 10457  1D94                     _Lcd_Port:	
 10458                           ;psect for function _Lcd_Port
 10459                           
 10460                           
 10461                           ;incstack = 0
 10462                           ; Regs used in _Lcd_Port: [wreg]
 10463                           ;Lcd_Port@a stored from wreg
 10464  1D94  00F0               	movwf	Lcd_Port@a
 10465  1D95                     l2190:
 10466                           
 10467                           ;lcd.c: 14:     if (a & 1)
 10468  1D95  1C70               	btfss	Lcd_Port@a,0
 10469  1D96  2D98               	goto	u2821
 10470  1D97  2D99               	goto	u2820
 10471  1D98                     u2821:
 10472  1D98  2D9D               	goto	l82
 10473  1D99                     u2820:
 10474  1D99                     l2192:
 10475                           
 10476                           ;lcd.c: 15:         RD0 = 1;
 10477  1D99  1283               	bcf	3,5	;RP0=0, select bank0
 10478  1D9A  1303               	bcf	3,6	;RP1=0, select bank0
 10479  1D9B  1408               	bsf	8,0	;volatile
 10480  1D9C  2DA0               	goto	l83
 10481  1D9D                     l82:	
 10482                           ;lcd.c: 16:     else
 10483                           
 10484                           
 10485                           ;lcd.c: 17:         RD0 = 0;
 10486  1D9D  1283               	bcf	3,5	;RP0=0, select bank0
 10487  1D9E  1303               	bcf	3,6	;RP1=0, select bank0
 10488  1D9F  1008               	bcf	8,0	;volatile
 10489  1DA0                     l83:
 10490                           
 10491                           ;lcd.c: 19:     if (a & 2)
 10492  1DA0  1CF0               	btfss	Lcd_Port@a,1
 10493  1DA1  2DA3               	goto	u2831
 10494  1DA2  2DA4               	goto	u2830
 10495  1DA3                     u2831:
 10496  1DA3  2DA6               	goto	l84
 10497  1DA4                     u2830:
 10498  1DA4                     l2194:
 10499                           
 10500                           ;lcd.c: 20:         RD1 = 1;
 10501  1DA4  1488               	bsf	8,1	;volatile
 10502  1DA5  2DA7               	goto	l85
 10503  1DA6                     l84:	
 10504                           ;lcd.c: 21:     else
 10505                           
 10506                           
 10507                           ;lcd.c: 22:         RD1 = 0;
 10508  1DA6  1088               	bcf	8,1	;volatile
 10509  1DA7                     l85:
 10510                           
 10511                           ;lcd.c: 24:     if (a & 4)
 10512  1DA7  1D70               	btfss	Lcd_Port@a,2
 10513  1DA8  2DAA               	goto	u2841
 10514  1DA9  2DAB               	goto	u2840
 10515  1DAA                     u2841:
 10516  1DAA  2DAD               	goto	l86
 10517  1DAB                     u2840:
 10518  1DAB                     l2196:
 10519                           
 10520                           ;lcd.c: 25:         RD2 = 1;
 10521  1DAB  1508               	bsf	8,2	;volatile
 10522  1DAC  2DAE               	goto	l87
 10523  1DAD                     l86:	
 10524                           ;lcd.c: 26:     else
 10525                           
 10526                           
 10527                           ;lcd.c: 27:         RD2 = 0;
 10528  1DAD  1108               	bcf	8,2	;volatile
 10529  1DAE                     l87:
 10530                           
 10531                           ;lcd.c: 29:     if (a & 8)
 10532  1DAE  1DF0               	btfss	Lcd_Port@a,3
 10533  1DAF  2DB1               	goto	u2851
 10534  1DB0  2DB2               	goto	u2850
 10535  1DB1                     u2851:
 10536  1DB1  2DB4               	goto	l88
 10537  1DB2                     u2850:
 10538  1DB2                     l2198:
 10539                           
 10540                           ;lcd.c: 30:         RD3 = 1;
 10541  1DB2  1588               	bsf	8,3	;volatile
 10542  1DB3  2DB5               	goto	l89
 10543  1DB4                     l88:	
 10544                           ;lcd.c: 31:     else
 10545                           
 10546                           
 10547                           ;lcd.c: 32:         RD3 = 0;
 10548  1DB4  1188               	bcf	8,3	;volatile
 10549  1DB5                     l89:
 10550                           
 10551                           ;lcd.c: 34:     if (a & 16)
 10552  1DB5  1E70               	btfss	Lcd_Port@a,4
 10553  1DB6  2DB8               	goto	u2861
 10554  1DB7  2DB9               	goto	u2860
 10555  1DB8                     u2861:
 10556  1DB8  2DBB               	goto	l90
 10557  1DB9                     u2860:
 10558  1DB9                     l2200:
 10559                           
 10560                           ;lcd.c: 35:         RD4 = 1;
 10561  1DB9  1608               	bsf	8,4	;volatile
 10562  1DBA  2DBC               	goto	l91
 10563  1DBB                     l90:	
 10564                           ;lcd.c: 36:     else
 10565                           
 10566                           
 10567                           ;lcd.c: 37:         RD4 = 0;
 10568  1DBB  1208               	bcf	8,4	;volatile
 10569  1DBC                     l91:
 10570                           
 10571                           ;lcd.c: 39:     if (a & 32)
 10572  1DBC  1EF0               	btfss	Lcd_Port@a,5
 10573  1DBD  2DBF               	goto	u2871
 10574  1DBE  2DC0               	goto	u2870
 10575  1DBF                     u2871:
 10576  1DBF  2DC2               	goto	l92
 10577  1DC0                     u2870:
 10578  1DC0                     l2202:
 10579                           
 10580                           ;lcd.c: 40:         RD5 = 1;
 10581  1DC0  1688               	bsf	8,5	;volatile
 10582  1DC1  2DC3               	goto	l93
 10583  1DC2                     l92:	
 10584                           ;lcd.c: 41:     else
 10585                           
 10586                           
 10587                           ;lcd.c: 42:         RD5 = 0;
 10588  1DC2  1288               	bcf	8,5	;volatile
 10589  1DC3                     l93:
 10590                           
 10591                           ;lcd.c: 44:     if (a & 64)
 10592  1DC3  1F70               	btfss	Lcd_Port@a,6
 10593  1DC4  2DC6               	goto	u2881
 10594  1DC5  2DC7               	goto	u2880
 10595  1DC6                     u2881:
 10596  1DC6  2DC9               	goto	l94
 10597  1DC7                     u2880:
 10598  1DC7                     l2204:
 10599                           
 10600                           ;lcd.c: 45:         RD6 = 1;
 10601  1DC7  1708               	bsf	8,6	;volatile
 10602  1DC8  2DCA               	goto	l95
 10603  1DC9                     l94:	
 10604                           ;lcd.c: 46:     else
 10605                           
 10606                           
 10607                           ;lcd.c: 47:         RD6 = 0;
 10608  1DC9  1308               	bcf	8,6	;volatile
 10609  1DCA                     l95:
 10610                           
 10611                           ;lcd.c: 49:     if (a & 128)
 10612  1DCA  1FF0               	btfss	Lcd_Port@a,7
 10613  1DCB  2DCD               	goto	u2891
 10614  1DCC  2DCE               	goto	u2890
 10615  1DCD                     u2891:
 10616  1DCD  2DD0               	goto	l96
 10617  1DCE                     u2890:
 10618  1DCE                     l2206:
 10619                           
 10620                           ;lcd.c: 50:         RD7 = 1;
 10621  1DCE  1788               	bsf	8,7	;volatile
 10622  1DCF  2DD1               	goto	l98
 10623  1DD0                     l96:	
 10624                           ;lcd.c: 51:     else
 10625                           
 10626                           
 10627                           ;lcd.c: 52:         RD7 = 0;
 10628  1DD0  1388               	bcf	8,7	;volatile
 10629  1DD1                     l98:
 10630  1DD1  0008               	return
 10631  1DD2                     __end_of_Lcd_Port:
 10632  007E                     btemp	set	126	;btemp
 10633  007E                     wtemp0	set	126
 10634                           
 10635                           	psect	idloc
 10636                           
 10637                           ;Config register IDLOC0 @ 0x2000
 10638                           ;	unspecified, using default values
 10639  2000                     	org	8192
 10640  2000  3FFF               	dw	16383
 10641                           
 10642                           ;Config register IDLOC1 @ 0x2001
 10643                           ;	unspecified, using default values
 10644  2001                     	org	8193
 10645  2001  3FFF               	dw	16383
 10646                           
 10647                           ;Config register IDLOC2 @ 0x2002
 10648                           ;	unspecified, using default values
 10649  2002                     	org	8194
 10650  2002  3FFF               	dw	16383
 10651                           
 10652                           ;Config register IDLOC3 @ 0x2003
 10653                           ;	unspecified, using default values
 10654  2003                     	org	8195
 10655  2003  3FFF               	dw	16383
 10656                           
 10657                           	psect	config
 10658                           
 10659                           ;Config register CONFIG1 @ 0x2007
 10660                           ;	Oscillator Selection bits
 10661                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 10662                           ;	Watchdog Timer Enable bit
 10663                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10664                           ;	Power-up Timer Enable bit
 10665                           ;	PWRTE = OFF, PWRT disabled
 10666                           ;	RE3/MCLR pin function select bit
 10667                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10668                           ;	Code Protection bit
 10669                           ;	CP = OFF, Program memory code protection is disabled
 10670                           ;	Data Code Protection bit
 10671                           ;	CPD = OFF, Data memory code protection is disabled
 10672                           ;	Brown Out Reset Selection bits
 10673                           ;	BOREN = OFF, BOR disabled
 10674                           ;	Internal External Switchover bit
 10675                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10676                           ;	Fail-Safe Clock Monitor Enabled bit
 10677                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10678                           ;	Low Voltage Programming Enable bit
 10679                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10680                           ;	In-Circuit Debugger Mode bit
 10681                           ;	DEBUG = 0x1, unprogrammed default
 10682  2007                     	org	8199
 10683  2007  20D4               	dw	8404
 10684                           
 10685                           ;Config register CONFIG2 @ 0x2008
 10686                           ;	Brown-out Reset Selection bit
 10687                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10688                           ;	Flash Program Memory Self Write Enable bits
 10689                           ;	WRT = OFF, Write protection off
 10690  2008                     	org	8200
 10691  2008  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    144
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      79
    BANK1            80     39      60
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> volt(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> volt(BANK1[16]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flsub->___xxtofl
    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   33232
                                             35 BANK1      4     4      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           ___xxtofl
                              _setup
                            _spiRead
                           _spiWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   30574
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
                            _spiRead (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     964
                           _Lcd_Init
                          _configOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _configOsc                                            2     0      2     230
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     440
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     484
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___xxtofl
     _spiRead (ARG)
       _spiReceiveWait
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _configOsc
     _spiInit
   _spiRead
   _spiWrite
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      99       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     27      3C       7       75.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      99      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Aug 02 16:32:31 2023

                       _a 006E                         pc 0002               _SSPSTATbits 0094  
                      l55 1D93                        l48 00E6                        l49 013E  
                      l90 1DBB                        l82 1D9D                        l91 1DBC  
                      l83 1DA0                        l92 1DC2                        l84 1DA6  
                      l93 1DC3                        l85 1DA7                        l94 1DC9  
                      l86 1DAD                        l95 1DCA                        l87 1DAE  
                      l96 1DD0                        l88 1DB4                        l89 1DB5  
                      l98 1DD1              ___awdiv@sign 0021                        _s1 00C7  
                      fsr 0004       ___wmul@multiplicand 0072       __Umul8_16@word_mpld 0076  
                     l101 1CD7                       l110 1CFB                       l104 1C7F  
                     l113 1EF6                       l122 1E13                       l116 1CA7  
                     l140 1FFF                       l133 1FAF                       l134 1FBC  
                     l302 0209                       l135 1FC8                       l136 1FD7  
                     l160 1C59                       l137 1FE4                       l138 1FF1  
                     l163 1C5F                       l156 1CB8                       l157 1CBD  
                     l174 000B                       l166 0805                       l343 07A8  
                     l335 0641                       l328 05FD                       l353 1D2C  
                     l506 0074                       l355 1D44                       l523 093F  
                     l283 0C9E                       l540 1E90                       l524 08A4  
                     l276 1577                       l541 1EA5                       l701 174D  
                     l349 07EF                       l534 0932                       l711 1793  
                     l527 0902                       l519 1FA3                       l544 1170  
                     l552 1C72                       l705 1771                       l609 1F4A  
                     l722 17F3                       l714 17D1                       l570 136C  
                     l539 1E74                       l547 11DC                       l723 17FF  
                     l563 086C                       l571 12DE                       l548 11F5  
                     l556 0881                       l820 1218                       l389 1153  
                     l581 135F                       l726 1D1F                       l566 0881  
                     l822 12AF                       l574 132F                       l680 15DB  
                     l840 1C91                       l833 1279                       l834 1285  
                     l826 125D                       l659 1E57                       l684 1682  
                     l693 17FF                       l669 10ED                       l686 1659  
                     l782 0F6B                       l776 0FFF                       l795 1D59  
                     l788 0FF3                       l797 1D6B                       _RC0 0038  
                     _RC1 0039                       _RD0 0040                       _RD1 0041  
                     _RD2 0042                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     fsr0 0004                       indf 0000              ___awmod@sign 0076  
            ___flmul@aexp 0036              ___flmul@bexp 0037              ___flmul@sign 0031  
            ___flmul@temp 003C              ___flmul@prod 0038              ___fltol@exp1 005B  
                    l2200 1DB9                      l3000 0813                      l2202 1DC0  
                    l3010 083A                      l2210 1D48                      l2204 1DC7  
                    l3020 0848                      l3012 083C                      l3004 081C  
                    l3100 12A7                      l2212 1D4F                      l2300 1F82  
                    l2206 1DCE                      l2230 1CD4                      l2222 1CBF  
                    l3110 1D7A                      l3030 0871                      l3014 0840  
                    l3022 085A                      l3006 0831                      l2214 1D53  
                    l2310 1F9F                      l2302 1F88                      l2224 1CC2  
                    l3120 1D85                      l3112 1D7B                      l3104 1D6C  
                    l2400 15D0                      l3032 0876                      l3008 0832  
                    l3040 1F0F                      l2216 1D62                      l2208 1D46  
                    l2320 1E1F                      l2240 001A                      l2232 000C  
                    l2304 1F8F                      l3200 0266                      l2226 1CC8  
                    l3122 1D8E                      l3114 1D7E                      l3106 1D75  
                    l2410 15E9                      l2402 15D1                      l3042 1F13  
                    l3050 1F42                      l3034 1EF7                      l2218 1D67  
                    l2330 1E45                      l2322 1E26                      l2314 1E14  
                    l2250 002F                      l2242 001E                      l2234 000F  
                    l2306 1F95                      l3210 02AB                      l3202 027F  
                    l2228 1CCB                      l3132 1C73                      l3140 1CEA  
                    l3116 1D81                      l3108 1D79                      l3124 0801  
                    l2420 15FD                      l2412 15ED                      l2404 15D3  
                    l3028 0861                      l3044 1F25                      l3036 1EFF  
                    l3060 11F7                      l2332 1E46                      l2324 1E2A  
                    l2316 1E16                      l2340 10B4                      l2260 0052  
                    l2252 0032                      l2244 0023                      l2236 0013  
                    l2308 1F9A                      l3300 063B                      l3220 02E1  
                    l3212 02B1                      l3204 0283                      l2190 1D95  
                    l3142 1CF0                      l3134 1CD9                      l3150 1DF1  
                    l3118 1D84                      l3126 0003                      l2510 1778  
                    l2502 1763                      l2430 1611                      l2422 1601  
                    l2414 15F1                      l2406 15E1                      l3054 1CFC  
                    l3046 1F33                      l3038 1F02                      l3062 11FC  
                    l2334 1E4D                      l2326 1E2E                      l2318 1E1C  
                    l2350 10CC                      l2342 10BA                      l2270 006B  
                    l2262 0058                      l2254 0039                      l2246 0027  
                    l2238 0018                      l3310 0678                      l3302 064A  
                    l3230 0388                      l3222 0300                      l3214 02C4  
                    l3206 0287                      l2192 1D99                      l3144 1CF5  
                    l3136 1CDE                      l3152 1DF7                      l3128 0008  
                    l2520 1786                      l2512 177A                      l2504 176C  
                    l2432 1615                      l2424 1605                      l2416 15F5  
                    l2408 15E5                      l2440 1625                      l3056 1D00  
                    l3048 1F3C                      l3080 1246                      l3072 1229  
                    l3064 1200                      l2600 0D0C                      l2328 1E3F  
                    l2336 1E53                      l2352 10D6                      l2344 10BD  
                    l2272 0070                      l2264 0059                      l2256 003D  
                    l2248 0029                      l2280 1F50                      l3312 06D3  
                    l3320 0774                      l3304 064F                      l3240 0410  
                    l3224 034B                      l3216 02D7                      l3208 02A0  
                    l3232 0390                      l3160 01AD                      l3400 0169  
                    l2194 1DA4                      l3138 1CE3                      l3146 1DD2  
                    l2530 179D                      l2522 178A                      l2514 177F  
                    l2506 1770                      l2450 1668                      l2442 1626  
                    l2434 1619                      l2426 1609                      l2418 15F9  
                    l2370 158A                      l2362 1578                      l3090 127D  
                    l3082 1254                      l3074 122E                      l3066 1210  
                    l2610 0D8E                      l2602 0D1C                      l2354 10DC  
                    l2346 10C4                      l2266 0060                      l2258 0041  
                    l2290 1F66                      l2282 1F55                      l3322 077C  
                    l3314 070E                      l3306 0656                      l3250 0472  
                    l3242 0437                      l3234 039F                      l3226 0364  
                    l3218 02DB                      l3330 0794                      l3170 01C5  
                    l3162 01B2                      l3154 019B                      l3402 017D  
                    l2196 1DAB                      l3148 1DD5                      l2700 1FB6  
                    l2540 17DB                      l2532 17AB                      l2524 1790  
                    l2508 1775                      l2516 1781                      l2460 1686  
                    l2452 166C                      l2444 163D                      l2436 161D  
                    l2428 160D                      l2372 158F                      l2380 159F  
                    l2364 157F                      l3092 1287                      l3084 1264  
                    l3076 123B                      l3068 1220                      l2620 0DFC  
                    l2612 0DAA                      l2604 0D29                      l2356 10E3  
                    l2348 10C8                      l2268 0066                      l2292 1F69  
                    l2284 1F57                      l2276 1F4B                      l3340 07C3  
                    l3332 079A                      l3324 0783                      l3316 072D  
                    l3308 065A                      l3260 04ED                      l3252 0490  
                    l3244 0446                      l3236 03E6                      l3228 036D  
                    l3172 01C8                      l3180 0205                      l3164 01B4  
                    l3156 01A0                      l3404 0186                      l2198 1DB2  
                    l2710 1FF8                      l2702 1FC2                      l2550 17EF  
                    l2542 17E3                      l2534 17AF                      l2470 16AF  
                    l2518 1785                      l2462 168B                      l2454 166D  
                    l2446 165D                      l2438 1621                      l2390 15B9  
                    l2382 15A7                      l2374 1594                      l2366 1585  
                    l3094 129D                      l3086 126F                      l3078 1242  
                    l2630 0E8C                      l2622 0E0C                      l2614 0DC6  
                    l2606 0D46                      l2358 10E9                      l2294 1F70  
                    l2286 1F5B                      l2278 1F4C                      l3342 07C3  
                    l3334 07A2                      l3326 0787                      l3318 0739  
                    l3270 053E                      l3262 053A                      l3246 0461  
                    l3238 03F5                      l3190 0233                      l3350 07EB  
                    l3182 0207                      l3174 01DD                      l3166 01C0  
                    l3158 01A6                      l2712 1FFC                      l2704 1FD1  
                    l2720 1CB4                      l2552 17FA                      l2544 17E8  
                    l2536 17CD                      l2528 1798                      l2480 16C3  
                    l2472 16B3                      l2456 1676                      l2448 1666  
                    l2392 15BD                      l2384 15AC                      l2376 159C  
                    l2368 1589                      l3096 12A2                      l3088 1273  
                    l2640 0F20                      l2632 0E9C                      l2624 0E29  
                    l2616 0DCF                      l2608 0D62                      l2560 0CAC  
                    l2296 1F74                      l2288 1F60                      l2800 0C72  
                    l3344 07D1                      l3336 07B3                      l3328 078D  
                    l3280 0592                      l3264 053C                      l3256 04AF  
                    l3248 046A                      l3192 0237                      l3440 021F  
                    l3176 01F0                      l3168 01C1                      l3360 0075  
                    l2730 1EC4                      l2706 1FDE                      l2722 1CB7  
                    l2714 1CA9                      l2554 17FE                      l2546 17E9  
                    l2538 17D6                      l2490 172B                      l2482 16CC  
                    l2474 16BC                      l2466 1694                      l2458 167A  
                    l2394 15BE                      l2386 15B2                      l2378 159D  
                    l3098 12A6                      l2650 0F45                      l2642 0F2E  
                    l2634 0EC9                      l2626 0E42                      l2618 0DDF  
                    l2570 0CC3                      l2562 0CB0                      l2810 1C8E  
                    l2298 1F78                      l3338 07B4                      l3290 060E  
                    l3282 0597                      l3274 0575                      l3258 04B8  
                    l3194 023B                      l3186 020B                      l3178 01F4  
                    l3370 0091                      l3362 007A                      l2740 1C9F  
                    l2732 1ECA                      l2724 1EA6                      l2708 1FEB  
                    l2716 1CB0                      l2548 17ED                      l2492 1730  
                    l2476 16BE                      l2468 16AB                      l2484 16D1  
                    l2396 15C3                      l2388 15B3                      l2900 0906  
                    l2660 0F68                      l2644 0F37                      l2652 0F4B  
                    l2636 0EEF                      l2628 0E5F                      l2580 0CDC  
                    l2572 0CC5                      l2564 0CB1                      l2556 0C9F  
                    l2812 1C90                      l2804 1C81                      l3292 0612  
                    l3284 05D2                      l3276 057F                      l3196 0249  
                    l3188 0227                      l3348 07D9                      l3380 00E9  
                    l3372 009B                      l3364 007D                      l2742 1CA4  
                    l2734 1C93                      l2726 1EAC                      l2718 1CB2  
                    l2486 16E7                      l2494 173F                      l2478 16C2  
                    l2398 15C8                      l2830 12E5                      l2822 12CC  
                    l2670 0F87                      l2654 0F4F                      l2646 0F3B  
                    l2638 0F17                      l2590 0CF1                      l2582 0CDD  
                    l2574 0CCD                      l2566 0CB6                      l2558 0CA6  
                    l2806 1C82                      l3294 0618                      l3286 05F1  
                    l3278 058B                      l3198 024D                      l3390 0148  
                    l3382 00F3                      l3374 00A3                      l3366 0087  
                    l2736 1C96                      l2728 1EB5                      l2744 1C59  
                    l2496 1755                      l2488 1725                      l2920 1D20  
                    l2840 1316                      l2832 12F4                      l2816 12B0  
                    l2680 0FCD                      l2672 0FA0                      l2664 0F70  
                    l2656 0F50                      l2648 0F3C                      l2592 0CF9  
                    l2584 0CE2                      l2576 0CD2                      l2568 0CBB  
                    l2760 1534                      l2808 1C88                      l3296 0625  
                    l3288 0605                      l3392 014B                      l3384 00FB  
                    l3376 00D0                      l3368 008E                      l2738 1C9C  
                    l2498 175A                      l2930 1D40                      l2922 1D22  
                    l2914 0927                      l2906 090E                      l2842 1320  
                    l2834 12F6                      l2818 12C3                      l2690 0FEC  
                    l2682 0FD7                      l2666 0F75                      l2674 0FA6  
                    l2658 0F54                      l2594 0CFE                      l2586 0CE7  
                    l2578 0CD8                      l2754 1483                      l2746 1370  
                    l2770 0950                      l3298 0634                      l3394 0150  
                    l3386 0128                      l3378 00E2                      l2940 110E  
                    l2924 1D26                      l2916 0937                      l2908 0920  
                    l2844 1321                      l2836 12FF                      l2828 12DF  
                    l2692 0FF7                      l2684 0FD9                      l2676 0FB3  
                    l2668 0F83                      l2596 0D03                      l2588 0CEF  
                    l2756 1489                      l2748 1376                      l2764 0943  
                    l3396 0158                      l3388 013A                      l2950 113C  
                    l2942 1112                      l2934 10EE                      l2926 1D33  
                    l2870 088F                      l2862 1354                      l2854 133B  
                    l2846 1329                      l2838 1308                      l2686 0FE7  
                    l2678 0FBE                      l2782 0AC7                      l2766 0947  
                    l3398 0161                      l2696 1FA4                      l2960 1E6C  
                    l2952 1145                      l2944 111B                      l2936 10FE  
                    l2928 1D3A                      l2880 08A5                      l2864 1364  
                    l2848 1333                      l2856 134D                      l2688 0FEB  
                    l2776 0A38                      l2768 0949                      l2698 1FAB  
                    l2962 1E88                      l2970 1154                      l2946 112D  
                    l2938 1101                      l2954 114B                      l2890 08D2  
                    l2882 08AD                      l2874 0898                      l2794 0BE3  
                    l2778 0A3F                      l2786 0AF4                      l2964 1EA2  
                    l2980 11B4                      l2972 1168                      l2948 113B  
                    l2892 08E4                      l2884 08BE                      l2868 0882  
                    l2796 0BEA                      l2788 0AFB                      l2966 1EA4  
                    l2958 1E58                      l2982 11B8                      l2974 1184  
                    l2990 1C68                      l2894 08F2                      l2886 08C0  
                    l2984 11F2                      l2976 118C                      l2992 1C70  
                    l2896 08F3                      l2888 08C9                      l2986 11F4  
                    l2978 1190                      l2994 1C72                      l2898 08FC  
                    l2998 0806                      STR_1 10A0                      STR_2 10AC  
                    u3010 0066                      u3011 0065                      u3020 006B  
                    u3100 1F95                      u3021 006A                      u3005 005A  
                    u3101 1F94                      u3110 1F9A                      u3030 1F50  
                    u3111 1F99                      u3031 1F4F                      u4000 0F68  
                    u3120 1E1C                      u3040 1F5B                      u4001 0F67  
                    u3121 1E1B                      u3041 1F5A                      u4010 0F6F  
                    u3210 10CC                      u3050 1F66                      u4011 0F6E  
                    u3211 10CB                      u3051 1F65                      u4100 1FC2  
                    u3300 15C3                      u4020 0F75                      u3140 1E2E  
                    u3220 10D6                      u4101 1FC1                      u3301 15C2  
                    u4021 0F74                      u3141 1E2D                      u3221 10D5  
                    u3205 10BE                      u4110 1FD1                      u3310 15C8  
                    u4030 0F87                      u3070 1F78                      u4111 1FD0  
                    u3311 15C7                      u4031 0F86                      u3135 1E20  
                    u3071 1F77                      u4120 1FDE                      u3400 1682  
                    u3320 15E1                      u5000 0871                      u4040 0F96  
                    u3160 1E3F                      u3240 10E9                      u3080 1F82  
                    u4121 1FDD                      u3401 1681                      u3321 15E0  
                    u5001 0870                      u3161 1E3E                      u3241 10E8  
                    u3225 10D2                      u3081 1F81                      u3065 1F6A  
                    u4130 1FEB                      u3410 1686                      u3330 15E5  
                    u3250 1589                      u5010 0876                      u4050 0FB3  
                    u4210 1489                      u4131 1FEA                      u3411 1685  
                    u3331 15E4                      u3251 1588                      u5011 0875  
                    u4051 0FB2                      u3155 1E2F                      u3235 10DD  
                    u4211 1488                      u4140 1FF8                      u3500 1712  
                    u3420 168B                      u3340 163D                      u3260 158F  
                    u5020 1EFF                      u5100 1220                      u4060 0FCD  
                    u3180 1E53                      u4300 0A3F                      u4141 1FF7  
                    u3501 1713                      u3421 168A                      u3341 163C  
                    u3261 158E                      u5021 1EFE                      u5101 121F  
                    u4061 0FCC                      u4045 0F91                      u3181 1E52  
                    u3165 1E3B                      u4205 1442                      u3085 1F7E  
                    u4301 0A3E                      u4150 1CB0                      u3510 1730  
                    u3502 1718                      u3350 1648                      u3270 1594  
                    u4070 0FEB                      u3190 10BA                      u4151 1CAF  
                    u3511 172F                      u3503 1719                      u3431 169D  
                    u3351 1646                      u3271 1593                      u4071 0FEA  
                    u4055 0FAF                      u3175 1E47                      u3191 10B9  
                    u3095 1F89                      u4080 1FAB                      u4160 1C5F  
                    u3600 1790                      u3520 1755                      u3440 16AF  
                    u3432 16A4                      u3360 1649                      u3280 15B2  
                    u5040 1F13                      u5200 12A2                      u5120 1241  
                    u4081 1FAA                      u4161 1C5E                      u3601 178F  
                    u3521 1754                      u3441 16AE                      u3433 16AB  
                    u3345 1639                      u3281 15B1                      u5041 1F12  
                    u5201 12A1                      u5121 1240                      u4065 0FC9  
                    u4225 14A6                      u4090 1FB6                      u3610 1797  
                    u3530 175A                      u3450 16B3                      u3370 165D  
                    u3290 15BD                      u5050 1F25                      u5210 12A6  
                    u4170 1376                      u4250 0947                      u4091 1FB5  
                    u3611 1796                      u3531 1759                      u3451 16B2  
                    u3371 165C                      u3291 15BC                      u5051 1F24  
                    u5035 1F04                      u5211 12A5                      u5115 1233  
                    u4235 14F3                      u4171 1375                      u4315 0A52  
                    u4251 0946                      u2820 1D99                      u5220 1CDE  
                    u3700 17FE                      u3620 179D                      u3460 16C2  
                    u3380 166C                      u5140 1263                      u4500 1333  
                    u2900 1D53                      u4420 1C88                      u4340 0AFB  
                    u4260 0950                      u5300 0233                      u2821 1D98  
                    u5221 1CDD                      u3701 17FD                      u3621 179C  
                    u3461 16C1                      u3381 166B                      u5141 1262  
                    u4501 1332                      u2901 1D52                      u4245 153F  
                    u4421 1C87                      u4405 0C39                      u4341 0AFA  
                    u4325 0A8E                      u4261 094F                      u5301 0232  
                    u2830 1DA4                      u5230 1CF0                      u3630 17AF  
                    u3550 1770                      u5070 1F42                      u4510 133A  
                    u3710 0CB0                      u4430 1C8E                      u5310 0237  
                    u2831 1DA3                      u5231 1CEF                      u3631 17AE  
                    u3551 176F                      u5071 1F41                      u5055 1F21  
                    u5135 1255                      u4511 1339                      u3711 0CAF  
                    u4431 1C8D                      u4415 0C75                      u4335 0ACA  
                    u5311 0236                      u2840 1DAB                      u5240 1DDF  
                    u3640 17BE                      u3560 1775                      u3480 16E7  
                    u5160 1273                      u5080 11FC                      u4600 08E4  
                    u4440 12C3                      u2920 1D67                      u3720 0CB6  
                    u5400 0437                      u5320 0266                      u2841 1DAA  
                    u3561 1774                      u3545 1765                      u3481 16E6  
                    u5065 1F34                      u5161 1272                      u5081 11FB  
                    u4601 08E3                      u4441 12C2                      u2921 1D66  
                    u3801 0D70                      u3721 0CB5                      u4185 1393  
                    u5401 0436                      u5321 0265                      u2850 1DB2  
                    u5250 1E01                      u3650 17CD                      u3570 177F  
                    u5170 1279                      u5090 1200                      u4530 134C  
                    u4450 12DD                      u3802 0D77                      u3730 0CBB  
                    u2930 0013                      u5410 0446                      u5330 02A0  
                    u2851 1DB1                      u3651 17CC                      u3571 177E  
                    u3491 16FE                      u3483 16E3                      u3475 16C5  
                    u3395 166F                      u5171 1278                      u5155 1268  
                    u5091 11FF                      u4531 134B                      u4451 12DC  
                    u2915 1D5A                      u3811 0D9C                      u3803 0D7E  
                    u3731 0CBA                      u4195 13ED                      u2931 0012  
                    u4355 0B1B                      u4275 0970                      u5411 0445  
                    u5331 029F                      u2860 1DB9                      u5260 1E13  
                    u3660 17D6                      u3580 1785                      u3492 16FF  
                    u4700 1D26                      u5180 127D                      u4620 0902  
                    u4540 1353                      u3900 0ED5                      u3812 0DA3  
                    u3740 0CDC                      u2940 001E                      u4380 0BEA  
                    u5500 0634                      u5420 0461                      u5340 02DB  
                    u2861 1DB8                      u5261 1E12                      u3661 17D5  
                    u3645 17B9                      u3581 1784                      u3493 1704  
                    u4701 1D25                      u5181 127C                      u4621 0901  
                    u4605 08E0                      u4541 1352                      u4525 133C  
                    u3821 0DB8                      u3813 0DAA                      u3741 0CDB  
                    u2941 001D                      u4381 0BE9                      u4365 0B57  
                    u4285 09AC                      u5501 0633                      u5421 0460  
                    u5341 02DA                      u2870 1DC0                      u3670 17DB  
                    u3590 178A                      u3494 1705                      u5190 1292  
                    u4630 0906                      u4470 1316                      u3822 0DBF  
                    u3750 0CE2                      u2950 002F                      u5510 064F  
                    u5350 0364                      u5270 01A6                      u2871 1DBF  
                    u3671 17DA                      u3591 1789                      u3495 170A  
                    u4631 0905                      u4615 08F5                      u4471 1315  
                    u3911 0EE1                      u3823 0DC6                      u3751 0CE1  
                    u2951 002E                      u4375 0BA2                      u4295 09F7  
                    u5511 064E                      u5415 0442                      u5351 0363  
                    u5271 01A5                      u2880 1DC7                      u3680 17E8  
                    u3496 170B                      u4800 114B                      u4640 090D  
                    u4560 1364                      u3920 0EFD                      u3912 0EE8  
                    u3760 0CE7                      u5600 07D1                      u5440 0574  
                    u5360 0388                      u5280 01C0                      u2881 1DC6  
                    u3681 17E7                      u4801 114A                      u4641 090C  
                    u4561 1363                      u4465 1301                      u3913 0EEF  
                    u3905 0ED0                      u3841 0DEE                      u3761 0CE6  
                    u5601 07D0                      u5505 0630                      u5441 0573  
                    u5361 0387                      u5281 01BF                      u2890 1DCE  
                    u4810 1E6C                      u3690 17ED                      u4730 1D40  
                    u4570 088F                      u4490 132F                      u3842 0DF5  
                    u3770 0CFE                      u2970 0041                      u5610 07EB  
                    u5450 057F                      u5370 039F                      u5290 0204  
                    u2891 1DCD                      u4811 1E6B                      u3691 17EC  
                    u4731 1D3F                      u4715 1D2D                      u5195 128D  
                    u4571 088E                      u4555 1356                      u4491 132E  
                    u4475 1312                      u3931 0F09                      u3851 0E1B  
                    u3843 0DFC                      u3835 0DC8                      u3771 0CFD  
                    u2971 0040                      u4395 0BFD                      u5611 07EA  
                    u5451 057E                      u5435 0541                      u5371 039E  
                    u5291 0203                      u4820 1E88                      u4900 11F2  
                    u4740 10FE                      u4660 091F                      u4580 08A3  
                    u3932 0F10                      u3852 0E22                      u3780 0D03  
                    u5540 077B                      u5460 058B                      u5380 03F5  
                    u5620 008E                      u4821 1E87                      u4901 11F1  
                    u4741 10FD                      u4725 1D34                      u4661 091E  
                    u4581 08A2                      u4485 1322                      u3933 0F17  
                    u3925 0EF8                      u3853 0E29                      u3781 0D02  
                    u2965 0033                      u5541 077A                      u5525 06D6  
                    u5461 058A                      u5445 0570                      u5381 03F4  
                    u5621 008D                      u4830 1EA2                      u4910 1C70  
                    u4670 0926                      u2990 0052                      u5550 0793  
                    u5390 0410                      u4831 1EA1                      u4911 1C6F  
                    u4671 0925                      u4655 090F                      u3871 0E51  
                    u3791 0D54                      u2991 0051                      u5551 0792  
                    u5535 073C                      u5391 040F                      u5375 039B  
                    u4840 1168                      u4920 0813                      u4760 1112  
                    u3960 0F3B                      u3872 0E58                      u3792 0D5B  
                    u5560 079A                      u5480 0604                      u4905 11EE  
                    u4841 1167                      u4921 0812                      u4761 1111  
                    u3961 0F3A                      u3945 0F19                      u3881 0E7E  
                    u3873 0E5F                      u3865 0E2B                      u3793 0D62  
                    u2985 0042                      u5561 0799                      u5481 0603  
                    u5385 03F1                      u4850 1184                      u4930 082A  
                    u4690 0937                      u3882 0E85                      u5570 07A2  
                    u5490 0625                      u4835 1E9E                      u4851 1183  
                    u4755 1103                      u4691 0936                      u4595 08CB  
                    u3955 0F30                      u3891 0EAB                      u3883 0E8C  
                    u2995 004E                      u5571 07A1                      u5491 0624  
                    u5475 059A                      u5707 0144                      u4860 1190  
                    u4940 0840                      u4780 112D                      u3980 0F4F  
                    u3892 0EB2                      u5580 07B3                      u4861 118F  
                    u4941 083F                      u4781 112C                      u4685 0929  
                    u3981 0F4E                      u3893 0EB9                      u5581 07B2  
                    u5717 018E                      u5637 0083                      u4950 0847  
                    u3990 0F54                      u5590 07C3                      u5727 1EB0  
                    u4871 119F                      u4951 0846                      u4935 0825  
                    u4775 1114                      u3991 0F53                      u3975 0F3E  
                    u5591 07C2                      u5495 0621                      u5647 0097  
                    u4880 11B8                      u4872 11A0                      u5737 1EBF  
                    u4881 11B7                      u4873 11A5                      u4785 1129  
                    u5585 07AF                      u5657 00CC                      u4874 11A6  
                    u4970 0859                      u5747 1ECE                      u4891 11C7  
                    u4875 11AB                      u4971 0858                      u4795 113D  
                    u5595 07BF                      u5667 00DB                      u4892 11C8  
                    u4876 11AC                      u4980 0860                      u5757 1CA1  
                    u4893 11CD                      u4981 085F                      u4965 0849  
                    u5677 00EF                      u4894 11CE                      u5767 1CCF  
                    u4895 11D3                      u5687 0124                      u4896 11D4  
                    u5697 0133                      u4995 0863         ?_Lcd_Write_String 0073  
                    _main 0075                      btemp 007E                      _volt 00CC  
                    start 0000        ??_Lcd_Write_String 0075              _sprintf$1032 00AA  
         __end_of_Lcd_Cmd 1CD8             configOsc@frec 0070             ___fltol@sign1 005A  
         __end_of___fladd 1800                     ?_main 0070           __end_of___awdiv 0075  
         __end_of___flneg 1C73           __end_of___awmod 1FA4           __end_of___flmul 1000  
         __end_of___flsub 1D20           __end_of___fltol 0882           __end_of___lldiv 1154  
         ___awdiv@divisor 0077           __end_of___llmod 1F4B           __end_of___lwdiv 1E58  
         __end_of___lwmod 10EE           ___awdiv@counter 0020                     _PORTB 0006  
                   _PORTD 0008                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088           __end_of_dpowers 10A0                     _scale 0940  
         __end_of_isdigit 1C92                     _setup 1D6C                     pclath 000A  
         __end_of_spiInit 1CBE           __end_of_spiRead 000C                     status 0003  
                   wtemp0 007E           __end_of_sprintf 07F0          __end_of_Lcd_Init 1EF7  
        __end_of_Lcd_Port 1DD2           __initialization 07F0              __end_of_main 0198  
                  ??_main 00C3          ___llmod@dividend 0074                    ?_scale 003E  
        ___awdiv@dividend 0079                    ?_setup 0070                 ??_Lcd_Cmd 0071  
                  _TRISC2 043A                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013          __end_of___xxtofl 12B0  
        __end_of__powers_ 1044                    ___flge 1154                    ___fleq 1E58  
               ??___fladd 005A                    ___wmul 1D20                 ??___awdiv 007B  
               ??___flneg 0074                 ??___awmod 0074                 ??___flmul 002C  
               ??___flsub 007E                 ??___fltol 0055                 ??___lldiv 0078  
               ??___llmod 0078                 ??___lwdiv 007A                 ??___lwmod 0074  
                  _fround 136D          ___awdiv@quotient 0022           ___awmod@divisor 0070  
         ___awmod@counter 0075                 ??_isdigit 0070          __end_of_spiWrite 0806  
               ??_spiInit 0073                 ??_spiRead 0070                 ??_sprintf 00A5  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074                ___flge@ff1 0070  
              ___flge@ff2 0074              ___xxtofl@arg 007A              ___xxtofl@exp 0079  
            ___xxtofl@val 0070                ___fleq@ff1 0070                ___fleq@ff2 0074  
 __end_of__initialization 07FC                ___flneg@f1 0070         __end_of_Lcd_Clear 1C80  
              ___fltol@f1 0051            __pcstackCOMMON 0070             __end_of_scale 0C9F  
           __end_of_setup 1D94            _Lcd_Set_Cursor 1CD8                __div_to_l_ 0882  
               ?_Lcd_Init 0070                 ?_Lcd_Port 0070           __div_to_l_@exp1 0025  
         __div_to_l_@cntr 0024                   ??_scale 0042           __div_to_l_@quot 0020  
                 ??_setup 0076                __pbssBANK0 006E                __pbssBANK1 00C7  
           __div_to_l_@f1 0070             __div_to_l_@f2 0074         __end_of__Umul8_16 1D6C  
              __pmaintext 0075                   ?___flge 0070                   ?___fleq 0070  
                 ?___wmul 0070                   ?_fround 003E    __end_of_Lcd_Set_Cursor 1CFC  
               ?___xxtofl 0070                ??_Lcd_Init 0074                ??_Lcd_Port 0070  
                 _SSPSTAT 0094                __stringtab 1000            _Lcd_Write_Char 1C92  
                 _Lcd_Cmd 1CBE         __end_of__npowers_ 1078                _scale$1031 004C  
       __end_of_configOsc 2000                 ?_spiWrite 0070                   ___fladd 1578  
                 ___awdiv 000C                   ___flneg 1C68                   ___awmod 1F4B  
                 ___flmul 0C9F                   ___flsub 1CFC                   ___fltol 0806  
                 ___lldiv 10EE                   ___llmod 1EF7                   ___lwdiv 1E14  
                 ___lwmod 10B4           ?_Lcd_Set_Cursor 0074                   __ptext1 0198  
                 __ptext2 0940                   __ptext3 1F4B                   __ptext4 000C  
                 __ptext5 1C80                   __ptext6 136D                   __ptext7 10B4  
                 __ptext8 1E14                   __ptext9 0C9F               ?__div_to_l_ 0070  
                 _dpowers 1078                   _isdigit 1C80                ??___xxtofl 0074  
        ___awmod@dividend 0072                   _spiInit 1CA8                   _spiRead 0003  
                 _sprintf 0198                   clrloop0 1C61    __end_of_Lcd_Write_Char 1CA8  
    end_of_initialization 07FC           ___lldiv@divisor 0070           ___lldiv@counter 007D  
              ??_spiWrite 0070                 Lcd_Port@a 0070            __tdiv_to_l_@f1 0070  
          __tdiv_to_l_@f2 0074             ??__tdiv_to_l_ 0078                 _PORTCbits 0007  
             ___fladd@grs 0065             ___xxtofl@sign 0078               spiWrite@dat 0070  
         ?_Lcd_Write_Char 0070         Lcd_Write_String@a 0073         Lcd_Write_String@i 0078  
             ___flmul@grs 0032                 _Lcd_Clear 1C73            _spiReceiveWait 1C59  
          __end_of___flge 11F6            __end_of___fleq 1EA6            __end_of___wmul 1D45  
        _Lcd_Write_String 1DD2            __end_of_fround 1578       start_initialization 07F0  
     __end_of__tdiv_to_l_ 136D           ___llmod@divisor 0070           ___llmod@counter 0079  
  __end_of_spiReceiveWait 1C60                ?_Lcd_Clear 0070                  ??___flge 0078  
                ??___fleq 0078                  ??___wmul 0074                 __Umul8_16 1D45  
         Lcd_Write_Char@a 0072                  ??_fround 0042             sprintf@tmpval 00B7  
               ___fladd@a 0056                 ___fladd@b 0052                fround@prec 0051  
               ___flmul@a 0028                 ___flmul@b 0024                 ___flsub@a 0066  
               ___flsub@b 006A                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0                  ?_Lcd_Cmd 0070               sprintf@flag 00AF  
             sprintf@eexp 00B5               sprintf@fval 00BE               sprintf@prec 00BC  
        ___lwdiv@dividend 0078           ?_spiReceiveWait 0070          ??_Lcd_Set_Cursor 0075  
                ?___fladd 0052                  ?___awdiv 0077                  ?___flneg 0070  
                ?___awmod 0070                  ?___flmul 0024                  ?___flsub 0066  
                ?___fltol 0051                  ?___lldiv 0070                  ?___llmod 0070  
               __npowers_ 1044                ?__Umul8_16 0070                  ?___lwdiv 0076  
                ?___lwmod 0070                 _configOsc 1FA4                 __pstrings 1000  
             __tdiv_to_l_ 12B0              ??__div_to_l_ 0078                  ?_isdigit 0070  
                ?_spiInit 0070                  ?_spiRead 0070          ___lwdiv@quotient 007B  
               _dummydata 00CB                  ?_sprintf 00A0      spiInit@sTransmitEdge 0072  
          ___wmul@product 0074                 clear_ram0 1C60        spiInit@sDataSample 0070  
                Lcd_Cmd@a 0073        __end_of__div_to_l_ 0940               ??_Lcd_Clear 0074  
              ?_configOsc 0070               __stringbase 100F         ___wmul@multiplier 0070  
        ??_Lcd_Write_Char 0071                  _Lcd_Init 1EA6                  _Lcd_Port 1D94  
__end_of_Lcd_Write_String 1E14               ??__Umul8_16 0072               _fround$1030 0049  
             _fround$1029 004D        __end_of__stringtab 1010               _isdigit$846 0070  
              sprintf@val 00B1                  ___xxtofl 11F6           ___lwdiv@divisor 0076  
         ___lwdiv@counter 007D                  __ptext10 1D45                  __ptext11 12B0  
                __ptext20 1C68                  __ptext12 0882                  __ptext21 1154  
                __ptext13 11F6                  __ptext30 1DD2                  __ptext22 1E58  
                __ptext14 1D20                  __ptext31 1C92                  __ptext23 0800  
                __ptext15 1EF7                  __ptext32 1CD8                  __ptext24 0003  
                __ptext16 10EE                  __ptext33 1C73                  __ptext25 1C59  
                __ptext17 0806                  __ptext34 1CBE                  __ptext26 1D6C  
                __ptext18 1CFC                  __ptext35 1D94                  __ptext27 1CA8  
                __ptext19 1578                  __ptext28 1FA4                  __ptext29 1EA6  
                __powers_ 1010                  _spiWrite 0800              spiInit@sType 0073  
             ??_configOsc 0072         spiInit@sClockIdle 0071                  isdigit@c 0071  
                scale@scl 0050                 sprintf@ap 00AE          __tdiv_to_l_@exp1 0025  
        __tdiv_to_l_@cntr 0024                 sprintf@sp 00BB          __tdiv_to_l_@quot 0020  
        ___lwmod@dividend 0072          ___lldiv@dividend 0074          ??_spiReceiveWait 0070  
               stringcode 100A                _OSCCONbits 008F        Lcd_Set_Cursor@temp 0077  
            ?__tdiv_to_l_ 0070    __Umul8_16@multiplicand 0070                  sprintf@c 00C2  
                sprintf@f 00A0          ___lldiv@quotient 0079           ___lwmod@divisor 0070  
         ___lwmod@counter 0075                  stringdir 100A                  stringtab 1000  
           ___fladd@signs 0062              ___fladd@aexp 0063              ___fladd@bexp 0064  
    __Umul8_16@multiplier 0078         __Umul8_16@product 0074  
