

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Thu Aug 03 14:22:56 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35     0000                     
    36                           ; Version 2.40
    37                           ; Generated 17/11/2021 GMT
    38                           ; 
    39                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F887 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71     0000                     	;# 
    72     0001                     	;# 
    73     0002                     	;# 
    74     0003                     	;# 
    75     0004                     	;# 
    76     0005                     	;# 
    77     0006                     	;# 
    78     0007                     	;# 
    79     0008                     	;# 
    80     0009                     	;# 
    81     000A                     	;# 
    82     000B                     	;# 
    83     000C                     	;# 
    84     000D                     	;# 
    85     000E                     	;# 
    86     000E                     	;# 
    87     000F                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0014                     	;# 
    93     0015                     	;# 
    94     0015                     	;# 
    95     0016                     	;# 
    96     0017                     	;# 
    97     0018                     	;# 
    98     0019                     	;# 
    99     001A                     	;# 
   100     001B                     	;# 
   101     001B                     	;# 
   102     001C                     	;# 
   103     001D                     	;# 
   104     001E                     	;# 
   105     001F                     	;# 
   106     0081                     	;# 
   107     0085                     	;# 
   108     0086                     	;# 
   109     0087                     	;# 
   110     0088                     	;# 
   111     0089                     	;# 
   112     008C                     	;# 
   113     008D                     	;# 
   114     008E                     	;# 
   115     008F                     	;# 
   116     0090                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0095                     	;# 
   124     0096                     	;# 
   125     0097                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     009F                     	;# 
   134     0105                     	;# 
   135     0107                     	;# 
   136     0108                     	;# 
   137     0109                     	;# 
   138     010C                     	;# 
   139     010C                     	;# 
   140     010D                     	;# 
   141     010E                     	;# 
   142     010F                     	;# 
   143     0185                     	;# 
   144     0187                     	;# 
   145     0188                     	;# 
   146     0189                     	;# 
   147     018C                     	;# 
   148     018D                     	;# 
   149     0000                     	;# 
   150     0001                     	;# 
   151     0002                     	;# 
   152     0003                     	;# 
   153     0004                     	;# 
   154     0005                     	;# 
   155     0006                     	;# 
   156     0007                     	;# 
   157     0008                     	;# 
   158     0009                     	;# 
   159     000A                     	;# 
   160     000B                     	;# 
   161     000C                     	;# 
   162     000D                     	;# 
   163     000E                     	;# 
   164     000E                     	;# 
   165     000F                     	;# 
   166     0010                     	;# 
   167     0011                     	;# 
   168     0012                     	;# 
   169     0013                     	;# 
   170     0014                     	;# 
   171     0015                     	;# 
   172     0015                     	;# 
   173     0016                     	;# 
   174     0017                     	;# 
   175     0018                     	;# 
   176     0019                     	;# 
   177     001A                     	;# 
   178     001B                     	;# 
   179     001B                     	;# 
   180     001C                     	;# 
   181     001D                     	;# 
   182     001E                     	;# 
   183     001F                     	;# 
   184     0081                     	;# 
   185     0085                     	;# 
   186     0086                     	;# 
   187     0087                     	;# 
   188     0088                     	;# 
   189     0089                     	;# 
   190     008C                     	;# 
   191     008D                     	;# 
   192     008E                     	;# 
   193     008F                     	;# 
   194     0090                     	;# 
   195     0091                     	;# 
   196     0092                     	;# 
   197     0093                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0094                     	;# 
   201     0095                     	;# 
   202     0096                     	;# 
   203     0097                     	;# 
   204     0098                     	;# 
   205     0099                     	;# 
   206     009A                     	;# 
   207     009B                     	;# 
   208     009C                     	;# 
   209     009D                     	;# 
   210     009E                     	;# 
   211     009F                     	;# 
   212     0105                     	;# 
   213     0107                     	;# 
   214     0108                     	;# 
   215     0109                     	;# 
   216     010C                     	;# 
   217     010C                     	;# 
   218     010D                     	;# 
   219     010E                     	;# 
   220     010F                     	;# 
   221     0185                     	;# 
   222     0187                     	;# 
   223     0188                     	;# 
   224     0189                     	;# 
   225     018C                     	;# 
   226     018D                     	;# 
   227     0000                     	;# 
   228     0001                     	;# 
   229     0002                     	;# 
   230     0003                     	;# 
   231     0004                     	;# 
   232     0005                     	;# 
   233     0006                     	;# 
   234     0007                     	;# 
   235     0008                     	;# 
   236     0009                     	;# 
   237     000A                     	;# 
   238     000B                     	;# 
   239     000C                     	;# 
   240     000D                     	;# 
   241     000E                     	;# 
   242     000E                     	;# 
   243     000F                     	;# 
   244     0010                     	;# 
   245     0011                     	;# 
   246     0012                     	;# 
   247     0013                     	;# 
   248     0014                     	;# 
   249     0015                     	;# 
   250     0015                     	;# 
   251     0016                     	;# 
   252     0017                     	;# 
   253     0018                     	;# 
   254     0019                     	;# 
   255     001A                     	;# 
   256     001B                     	;# 
   257     001B                     	;# 
   258     001C                     	;# 
   259     001D                     	;# 
   260     001E                     	;# 
   261     001F                     	;# 
   262     0081                     	;# 
   263     0085                     	;# 
   264     0086                     	;# 
   265     0087                     	;# 
   266     0088                     	;# 
   267     0089                     	;# 
   268     008C                     	;# 
   269     008D                     	;# 
   270     008E                     	;# 
   271     008F                     	;# 
   272     0090                     	;# 
   273     0091                     	;# 
   274     0092                     	;# 
   275     0093                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0094                     	;# 
   279     0095                     	;# 
   280     0096                     	;# 
   281     0097                     	;# 
   282     0098                     	;# 
   283     0099                     	;# 
   284     009A                     	;# 
   285     009B                     	;# 
   286     009C                     	;# 
   287     009D                     	;# 
   288     009E                     	;# 
   289     009F                     	;# 
   290     0105                     	;# 
   291     0107                     	;# 
   292     0108                     	;# 
   293     0109                     	;# 
   294     010C                     	;# 
   295     010C                     	;# 
   296     010D                     	;# 
   297     010E                     	;# 
   298     010F                     	;# 
   299     0185                     	;# 
   300     0187                     	;# 
   301     0188                     	;# 
   302     0189                     	;# 
   303     018C                     	;# 
   304     018D                     	;# 
   305     0000                     	;# 
   306     0001                     	;# 
   307     0002                     	;# 
   308     0003                     	;# 
   309     0004                     	;# 
   310     0005                     	;# 
   311     0006                     	;# 
   312     0007                     	;# 
   313     0008                     	;# 
   314     0009                     	;# 
   315     000A                     	;# 
   316     000B                     	;# 
   317     000C                     	;# 
   318     000D                     	;# 
   319     000E                     	;# 
   320     000E                     	;# 
   321     000F                     	;# 
   322     0010                     	;# 
   323     0011                     	;# 
   324     0012                     	;# 
   325     0013                     	;# 
   326     0014                     	;# 
   327     0015                     	;# 
   328     0015                     	;# 
   329     0016                     	;# 
   330     0017                     	;# 
   331     0018                     	;# 
   332     0019                     	;# 
   333     001A                     	;# 
   334     001B                     	;# 
   335     001B                     	;# 
   336     001C                     	;# 
   337     001D                     	;# 
   338     001E                     	;# 
   339     001F                     	;# 
   340     0081                     	;# 
   341     0085                     	;# 
   342     0086                     	;# 
   343     0087                     	;# 
   344     0088                     	;# 
   345     0089                     	;# 
   346     008C                     	;# 
   347     008D                     	;# 
   348     008E                     	;# 
   349     008F                     	;# 
   350     0090                     	;# 
   351     0091                     	;# 
   352     0092                     	;# 
   353     0093                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0094                     	;# 
   357     0095                     	;# 
   358     0096                     	;# 
   359     0097                     	;# 
   360     0098                     	;# 
   361     0099                     	;# 
   362     009A                     	;# 
   363     009B                     	;# 
   364     009C                     	;# 
   365     009D                     	;# 
   366     009E                     	;# 
   367     009F                     	;# 
   368     0105                     	;# 
   369     0107                     	;# 
   370     0108                     	;# 
   371     0109                     	;# 
   372     010C                     	;# 
   373     010C                     	;# 
   374     010D                     	;# 
   375     010E                     	;# 
   376     010F                     	;# 
   377     0185                     	;# 
   378     0187                     	;# 
   379     0188                     	;# 
   380     0189                     	;# 
   381     018C                     	;# 
   382     018D                     	;# 
   383     0000                     	;# 
   384     0001                     	;# 
   385     0002                     	;# 
   386     0003                     	;# 
   387     0004                     	;# 
   388     0005                     	;# 
   389     0006                     	;# 
   390     0007                     	;# 
   391     0008                     	;# 
   392     0009                     	;# 
   393     000A                     	;# 
   394     000B                     	;# 
   395     000C                     	;# 
   396     000D                     	;# 
   397     000E                     	;# 
   398     000E                     	;# 
   399     000F                     	;# 
   400     0010                     	;# 
   401     0011                     	;# 
   402     0012                     	;# 
   403     0013                     	;# 
   404     0014                     	;# 
   405     0015                     	;# 
   406     0015                     	;# 
   407     0016                     	;# 
   408     0017                     	;# 
   409     0018                     	;# 
   410     0019                     	;# 
   411     001A                     	;# 
   412     001B                     	;# 
   413     001B                     	;# 
   414     001C                     	;# 
   415     001D                     	;# 
   416     001E                     	;# 
   417     001F                     	;# 
   418     0081                     	;# 
   419     0085                     	;# 
   420     0086                     	;# 
   421     0087                     	;# 
   422     0088                     	;# 
   423     0089                     	;# 
   424     008C                     	;# 
   425     008D                     	;# 
   426     008E                     	;# 
   427     008F                     	;# 
   428     0090                     	;# 
   429     0091                     	;# 
   430     0092                     	;# 
   431     0093                     	;# 
   432     0093                     	;# 
   433     0093                     	;# 
   434     0094                     	;# 
   435     0095                     	;# 
   436     0096                     	;# 
   437     0097                     	;# 
   438     0098                     	;# 
   439     0099                     	;# 
   440     009A                     	;# 
   441     009B                     	;# 
   442     009C                     	;# 
   443     009D                     	;# 
   444     009E                     	;# 
   445     009F                     	;# 
   446     0105                     	;# 
   447     0107                     	;# 
   448     0108                     	;# 
   449     0109                     	;# 
   450     010C                     	;# 
   451     010C                     	;# 
   452     010D                     	;# 
   453     010E                     	;# 
   454     010F                     	;# 
   455     0185                     	;# 
   456     0187                     	;# 
   457     0188                     	;# 
   458     0189                     	;# 
   459     018C                     	;# 
   460     018D                     	;# 
   461                           
   462                           	psect	strings
   463     0003                     __pstrings:
   464     0003                     stringtab:
   465     0003                     __stringtab:
   466     0003                     stringcode:	
   467                           ;	String table - string pointers are 1 byte each
   468                           
   469     0003                     stringdir:
   470     0003  3000               	movlw	high stringdir
   471     0004  008A               	movwf	10
   472     0005  0804               	movf	4,w
   473     0006  0A84               	incf	4,f
   474     0007  0782               	addwf	2,f
   475     0008                     __stringbase:
   476     0008  3400               	retlw	0
   477     0009                     __end_of__stringtab:
   478     0009                     _dpowers:
   479     0009  3401               	retlw	1
   480     000A  3400               	retlw	0
   481     000B  340A               	retlw	10
   482     000C  3400               	retlw	0
   483     000D  3464               	retlw	100
   484     000E  3400               	retlw	0
   485     000F  34E8               	retlw	232
   486     0010  3403               	retlw	3
   487     0011  3410               	retlw	16
   488     0012  3427               	retlw	39
   489     0013                     __end_of_dpowers:
   490     0008                     _PORTD	set	8
   491     0007                     _PORTC	set	7
   492     0006                     _PORTB	set	6
   493     0013                     _SSPBUF	set	19
   494     0014                     _SSPCON	set	20
   495     0063                     _SSPIF	set	99
   496     005E                     _PEIE	set	94
   497     005F                     _GIE	set	95
   498     0039                     _RC1	set	57
   499     0038                     _RC0	set	56
   500     0047                     _RD7	set	71
   501     0046                     _RD6	set	70
   502     0045                     _RD5	set	69
   503     0044                     _RD4	set	68
   504     0043                     _RD3	set	67
   505     0042                     _RD2	set	66
   506     0041                     _RD1	set	65
   507     0040                     _RD0	set	64
   508     0088                     _TRISD	set	136
   509     0087                     _TRISC	set	135
   510     0086                     _TRISB	set	134
   511     0091                     _SSPCON2bits	set	145
   512     0087                     _TRISCbits	set	135
   513     0094                     _SSPSTAT	set	148
   514     0093                     _SSPADD	set	147
   515     0091                     _SSPCON2	set	145
   516     008F                     _OSCCONbits	set	143
   517     0463                     _SSPIE	set	1123
   518     043C                     _TRISC4	set	1084
   519     043B                     _TRISC3	set	1083
   520     0189                     _ANSELH	set	393
   521     0188                     _ANSEL	set	392
   522     0013                     STR_2:
   523     0013  3425               	retlw	37	;'%'
   524     0014  342E               	retlw	46	;'.'
   525     0015  3432               	retlw	50	;'2'
   526     0016  3464               	retlw	100	;'d'
   527     0017  3420               	retlw	32	;' '
   528     0018  3420               	retlw	32	;' '
   529     0019  3420               	retlw	32	;' '
   530     001A  3425               	retlw	37	;'%'
   531     001B  342E               	retlw	46	;'.'
   532     001C  3432               	retlw	50	;'2'
   533     001D  3464               	retlw	100	;'d'
   534     001E  343A               	retlw	58	;':'
   535     001F  3425               	retlw	37	;'%'
   536     0020  342E               	retlw	46	;'.'
   537     0021  3432               	retlw	50	;'2'
   538     0022  3464               	retlw	100	;'d'
   539     0023  343A               	retlw	58	;':'
   540     0024  3425               	retlw	37	;'%'
   541     0025  342E               	retlw	46	;'.'
   542     0026  3432               	retlw	50	;'2'
   543     0027  3464               	retlw	100	;'d'
   544     0028  3400               	retlw	0
   545     0029                     STR_1:
   546     0029  3453               	retlw	83	;'S'
   547     002A  3431               	retlw	49	;'1'
   548     002B  343A               	retlw	58	;':'
   549     002C  3420               	retlw	32	;' '
   550     002D  3420               	retlw	32	;' '
   551     002E  3420               	retlw	32	;' '
   552     002F  3425               	retlw	37	;'%'
   553     0030  342E               	retlw	46	;'.'
   554     0031  3432               	retlw	50	;'2'
   555     0032  3464               	retlw	100	;'d'
   556     0033  342F               	retlw	47	;'/'
   557     0034  3425               	retlw	37	;'%'
   558     0035  342E               	retlw	46	;'.'
   559     0036  3432               	retlw	50	;'2'
   560     0037  3464               	retlw	100	;'d'
   561     0038  342F               	retlw	47	;'/'
   562     0039  3425               	retlw	37	;'%'
   563     003A  342E               	retlw	46	;'.'
   564     003B  3432               	retlw	50	;'2'
   565     003C  3464               	retlw	100	;'d'
   566     003D  3400               	retlw	0
   567                           
   568                           	psect	cinit
   569     07F3                     start_initialization:	
   570                           ; #config settings
   571                           
   572     07F3                     __initialization:
   573                           
   574                           ; Clear objects allocated to BANK0
   575     07F3  1383               	bcf	3,7	;select IRP bank0
   576     07F4  3020               	movlw	low __pbssBANK0
   577     07F5  0084               	movwf	4
   578     07F6  3048               	movlw	low (__pbssBANK0+40)
   579     07F7  120A  118A  228F  120A  118A  	fcall	clear_ram0
   580     07FC                     end_of_initialization:	
   581                           ;End of C runtime variable initialization code
   582                           
   583     07FC                     __end_of__initialization:
   584     07FC  0183               	clrf	3
   585     07FD  120A  118A  2DC5   	ljmp	_main	;jump to C main() function
   586                           
   587                           	psect	bssBANK0
   588     0020                     __pbssBANK0:
   589     0020                     _timeRTC:
   590     0020                     	ds	3
   591     0023                     _dateRTC:
   592     0023                     	ds	3
   593     0026                     _s1ADC:
   594     0026                     	ds	1
   595     0027                     _a:
   596     0027                     	ds	1
   597     0028                     _line2LCD:
   598     0028                     	ds	16
   599     0038                     _line1LCD:
   600     0038                     	ds	16
   601                           
   602                           	psect	clrtext
   603     028F                     clear_ram0:	
   604                           ;	Called with FSR containing the base address, and
   605                           ;	W with the last address+1
   606                           
   607     028F  0064               	clrwdt	;clear the watchdog before getting into this loop
   608     0290                     clrloop0:
   609     0290  0180               	clrf	0	;clear RAM location pointed to by FSR
   610     0291  0A84               	incf	4,f	;increment pointer
   611     0292  0604               	xorwf	4,w	;XOR with final address
   612     0293  1903               	btfsc	3,2	;have we reached the end yet?
   613     0294  3400               	retlw	0	;all done for this memory range, return
   614     0295  0604               	xorwf	4,w	;XOR again to restore value
   615     0296  2A90               	goto	clrloop0	;do the next byte
   616                           
   617                           	psect	cstackCOMMON
   618     0070                     __pcstackCOMMON:
   619     0070                     ?_isdigit:
   620     0070                     ?_setup:	
   621                           ; 1 bit 
   622                           
   623     0070                     ??_isdigit:	
   624                           ; 1 bytes @ 0x0
   625                           
   626     0070                     ?_Lcd_Port:	
   627                           ; 1 bytes @ 0x0
   628                           
   629     0070                     ??_Lcd_Port:	
   630                           ; 1 bytes @ 0x0
   631                           
   632     0070                     ?_Lcd_Cmd:	
   633                           ; 1 bytes @ 0x0
   634                           
   635     0070                     ?_Lcd_Clear:	
   636                           ; 1 bytes @ 0x0
   637                           
   638     0070                     ?_Lcd_Init:	
   639                           ; 1 bytes @ 0x0
   640                           
   641     0070                     ?_Lcd_Write_Char:	
   642                           ; 1 bytes @ 0x0
   643                           
   644     0070                     ?_Lcd_Write_String:	
   645                           ; 1 bytes @ 0x0
   646                           
   647     0070                     ?_configOsc:	
   648                           ; 1 bytes @ 0x0
   649                           
   650     0070                     ?_I2C_Master_Wait:	
   651                           ; 1 bytes @ 0x0
   652                           
   653     0070                     ??_I2C_Master_Wait:	
   654                           ; 1 bytes @ 0x0
   655                           
   656     0070                     ?_I2C_Master_Start:	
   657                           ; 1 bytes @ 0x0
   658                           
   659     0070                     ??_I2C_Master_Start:	
   660                           ; 1 bytes @ 0x0
   661                           
   662     0070                     ?_I2C_Master_Stop:	
   663                           ; 1 bytes @ 0x0
   664                           
   665     0070                     ??_I2C_Master_Stop:	
   666                           ; 1 bytes @ 0x0
   667                           
   668     0070                     ?_I2C_Master_Write:	
   669                           ; 1 bytes @ 0x0
   670                           
   671     0070                     ?_main:	
   672                           ; 1 bytes @ 0x0
   673                           
   674     0070                     ?___bmul:	
   675                           ; 1 bytes @ 0x0
   676                           
   677     0070                     ?_I2C_Master_Read:	
   678                           ; 1 bytes @ 0x0
   679                           
   680     0070                     ?___lwdiv:	
   681                           ; 2 bytes @ 0x0
   682                           
   683     0070                     ?___lldiv:	
   684                           ; 2 bytes @ 0x0
   685                           
   686     0070                     Lcd_Port@a:	
   687                           ; 4 bytes @ 0x0
   688                           
   689     0070                     ___bmul@multiplicand:	
   690                           ; 1 bytes @ 0x0
   691                           
   692     0070                     _isdigit$703:	
   693                           ; 1 bytes @ 0x0
   694                           
   695     0070                     configOsc@frec:	
   696                           ; 1 bytes @ 0x0
   697                           
   698     0070                     I2C_Master_Write@d:	
   699                           ; 2 bytes @ 0x0
   700                           
   701     0070                     I2C_Master_Read@a:	
   702                           ; 2 bytes @ 0x0
   703                           
   704     0070                     ___lwdiv@divisor:	
   705                           ; 2 bytes @ 0x0
   706                           
   707     0070                     ___lldiv@divisor:	
   708                           ; 2 bytes @ 0x0
   709                           
   710                           
   711                           ; 4 bytes @ 0x0
   712     0070                     	ds	1
   713     0071                     ??_Lcd_Cmd:
   714     0071                     ??_Lcd_Write_Char:	
   715                           ; 1 bytes @ 0x1
   716                           
   717     0071                     ??___bmul:	
   718                           ; 1 bytes @ 0x1
   719                           
   720     0071                     ___bmul@product:	
   721                           ; 1 bytes @ 0x1
   722                           
   723     0071                     isdigit@c:	
   724                           ; 1 bytes @ 0x1
   725                           
   726                           
   727                           ; 1 bytes @ 0x1
   728     0071                     	ds	1
   729     0072                     ??_configOsc:
   730     0072                     ??_I2C_Master_Write:	
   731                           ; 1 bytes @ 0x2
   732                           
   733     0072                     ??_I2C_Master_Read:	
   734                           ; 1 bytes @ 0x2
   735                           
   736     0072                     Lcd_Write_Char@a:	
   737                           ; 1 bytes @ 0x2
   738                           
   739     0072                     ___bmul@multiplier:	
   740                           ; 1 bytes @ 0x2
   741                           
   742     0072                     ___lwdiv@dividend:	
   743                           ; 1 bytes @ 0x2
   744                           
   745                           
   746                           ; 2 bytes @ 0x2
   747     0072                     	ds	1
   748     0073                     ??_Lcd_Write_String:
   749     0073                     Lcd_Cmd@a:	
   750                           ; 1 bytes @ 0x3
   751                           
   752                           
   753                           ; 1 bytes @ 0x3
   754     0073                     	ds	1
   755     0074                     ??_Lcd_Clear:
   756     0074                     ?_Lcd_Set_Cursor:	
   757                           ; 1 bytes @ 0x4
   758                           
   759     0074                     ??_Lcd_Init:	
   760                           ; 1 bytes @ 0x4
   761                           
   762     0074                     ??___lwdiv:	
   763                           ; 1 bytes @ 0x4
   764                           
   765     0074                     Lcd_Set_Cursor@b:	
   766                           ; 1 bytes @ 0x4
   767                           
   768     0074                     Lcd_Write_String@i:	
   769                           ; 1 bytes @ 0x4
   770                           
   771     0074                     I2C_Master_Read@temp:	
   772                           ; 2 bytes @ 0x4
   773                           
   774     0074                     ___lwdiv@quotient:	
   775                           ; 2 bytes @ 0x4
   776                           
   777     0074                     ___lldiv@dividend:	
   778                           ; 2 bytes @ 0x4
   779                           
   780                           
   781                           ; 4 bytes @ 0x4
   782     0074                     	ds	1
   783     0075                     ??_Lcd_Set_Cursor:
   784     0075                     Lcd_Set_Cursor@a:	
   785                           ; 1 bytes @ 0x5
   786                           
   787                           
   788                           ; 1 bytes @ 0x5
   789     0075                     	ds	1
   790     0076                     Lcd_Set_Cursor@temp:
   791     0076                     Lcd_Write_String@a:	
   792                           ; 1 bytes @ 0x6
   793                           
   794     0076                     ___lwdiv@counter:	
   795                           ; 1 bytes @ 0x6
   796                           
   797                           
   798                           ; 1 bytes @ 0x6
   799     0076                     	ds	1
   800     0077                     ?___lwmod:
   801     0077                     ___lwmod@divisor:	
   802                           ; 2 bytes @ 0x7
   803                           
   804                           
   805                           ; 2 bytes @ 0x7
   806     0077                     	ds	1
   807     0078                     ??___lldiv:
   808                           
   809                           ; 1 bytes @ 0x8
   810     0078                     	ds	1
   811     0079                     ___lwmod@dividend:
   812     0079                     ___lldiv@quotient:	
   813                           ; 2 bytes @ 0x9
   814                           
   815                           
   816                           ; 4 bytes @ 0x9
   817     0079                     	ds	2
   818     007B                     ??___lwmod:
   819     007B                     ___lwmod@counter:	
   820                           ; 1 bytes @ 0xB
   821                           
   822                           
   823                           ; 1 bytes @ 0xB
   824     007B                     	ds	2
   825     007D                     ___lldiv@counter:
   826                           
   827                           ; 1 bytes @ 0xD
   828     007D                     	ds	1
   829     007E                     ??_setup:
   830                           
   831                           	psect	cstackBANK0
   832     0048                     __pcstackBANK0:	
   833                           ; 1 bytes @ 0xE
   834                           
   835     0048                     ?_I2C_Master_Init:
   836     0048                     ?_sprintf:	
   837                           ; 1 bytes @ 0x0
   838                           
   839     0048                     sprintf@f:	
   840                           ; 2 bytes @ 0x0
   841                           
   842     0048                     I2C_Master_Init@c:	
   843                           ; 1 bytes @ 0x0
   844                           
   845                           
   846                           ; 4 bytes @ 0x0
   847     0048                     	ds	4
   848     004C                     ??_I2C_Master_Init:
   849                           
   850                           ; 1 bytes @ 0x4
   851     004C                     	ds	5
   852     0051                     ??_sprintf:
   853                           
   854                           ; 1 bytes @ 0x9
   855     0051                     	ds	3
   856     0054                     sprintf@ap:
   857                           
   858                           ; 1 bytes @ 0xC
   859     0054                     	ds	1
   860     0055                     sprintf@flag:
   861                           
   862                           ; 1 bytes @ 0xD
   863     0055                     	ds	1
   864     0056                     sprintf@val:
   865                           
   866                           ; 2 bytes @ 0xE
   867     0056                     	ds	2
   868     0058                     sprintf@sp:
   869                           
   870                           ; 1 bytes @ 0x10
   871     0058                     	ds	1
   872     0059                     sprintf@prec:
   873                           
   874                           ; 1 bytes @ 0x11
   875     0059                     	ds	1
   876     005A                     sprintf@c:
   877                           
   878                           ; 1 bytes @ 0x12
   879     005A                     	ds	1
   880     005B                     ??_main:
   881                           
   882                           ; 1 bytes @ 0x13
   883     005B                     	ds	8
   884                           
   885                           	psect	maintext
   886     05C5                     __pmaintext:	
   887 ;;
   888 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   889 ;;
   890 ;; *************** function _main *****************
   891 ;; Defined at:
   892 ;;		line 71 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;                  1    wreg      void 
   899 ;; Registers used:
   900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : B00/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   906 ;;      Params:         0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0
   908 ;;      Temps:          0       8       0       0       0
   909 ;;      Totals:         0       8       0       0       0
   910 ;;Total ram usage:        8 bytes
   911 ;; Hardware stack levels required when called: 4
   912 ;; This function calls:
   913 ;;		_I2C_Master_Read
   914 ;;		_I2C_Master_Start
   915 ;;		_I2C_Master_Stop
   916 ;;		_I2C_Master_Write
   917 ;;		_Lcd_Clear
   918 ;;		_Lcd_Set_Cursor
   919 ;;		_Lcd_Write_String
   920 ;;		_setup
   921 ;;		_sprintf
   922 ;; This function is called by:
   923 ;;		Startup code after reset
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927     05C5                     _main:	
   928                           ;psect for function _main
   929                           
   930     05C5                     l1641:	
   931                           ;incstack = 0
   932                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   933                           
   934                           
   935                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 72:     setup
      +                          ();
   936     05C5  120A  118A  2365  120A  118A  	fcall	_setup
   937     05CA                     l1643:
   938                           
   939                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 74:         I
      +                          2C_Master_Start();
   940     05CA  120A  118A  2297  120A  118A  	fcall	_I2C_Master_Start
   941     05CF                     l1645:
   942                           
   943                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 75:         I
      +                          2C_Master_Write(0x50);
   944     05CF  3050               	movlw	80
   945     05D0  00F0               	movwf	I2C_Master_Write@d
   946     05D1  3000               	movlw	0
   947     05D2  00F1               	movwf	I2C_Master_Write@d+1
   948     05D3  120A  118A  22A9  120A  118A  	fcall	_I2C_Master_Write
   949     05D8                     l1647:
   950                           
   951                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 76:         I
      +                          2C_Master_Write(PORTB);
   952     05D8  1283               	bcf	3,5	;RP0=0, select bank0
   953     05D9  1303               	bcf	3,6	;RP1=0, select bank0
   954     05DA  0806               	movf	6,w	;volatile
   955     05DB  00DB               	movwf	??_main
   956     05DC  01DC               	clrf	??_main+1
   957     05DD  085B               	movf	??_main,w
   958     05DE  00F0               	movwf	I2C_Master_Write@d
   959     05DF  085C               	movf	??_main+1,w
   960     05E0  00F1               	movwf	I2C_Master_Write@d+1
   961     05E1  120A  118A  22A9  120A  118A  	fcall	_I2C_Master_Write
   962     05E6                     l1649:
   963                           
   964                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 77:         I
      +                          2C_Master_Stop();
   965     05E6  120A  118A  22A0  120A  118A  	fcall	_I2C_Master_Stop
   966     05EB                     l1651:
   967                           
   968                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 78:         _
      +                          delay((unsigned long)((200)*(8000000/4000.0)));
   969     05EB  3003               	movlw	3
   970     05EC  1283               	bcf	3,5	;RP0=0, select bank0
   971     05ED  1303               	bcf	3,6	;RP1=0, select bank0
   972     05EE  00DD               	movwf	??_main+2
   973     05EF  3008               	movlw	8
   974     05F0  00DC               	movwf	??_main+1
   975     05F1  3076               	movlw	118
   976     05F2  00DB               	movwf	??_main
   977     05F3                     u1197:
   978     05F3  0BDB               	decfsz	??_main,f
   979     05F4  2DF3               	goto	u1197
   980     05F5  0BDC               	decfsz	??_main+1,f
   981     05F6  2DF3               	goto	u1197
   982     05F7  0BDD               	decfsz	??_main+2,f
   983     05F8  2DF3               	goto	u1197
   984     05F9  0000               	nop
   985     05FA                     l1653:
   986                           
   987                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 80:         I
      +                          2C_Master_Start();
   988     05FA  120A  118A  2297  120A  118A  	fcall	_I2C_Master_Start
   989     05FF                     l1655:
   990                           
   991                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 81:         I
      +                          2C_Master_Write(0x51);
   992     05FF  3051               	movlw	81
   993     0600  00F0               	movwf	I2C_Master_Write@d
   994     0601  3000               	movlw	0
   995     0602  00F1               	movwf	I2C_Master_Write@d+1
   996     0603  120A  118A  22A9  120A  118A  	fcall	_I2C_Master_Write
   997     0608                     l1657:
   998                           
   999                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 82:         s
      +                          1ADC = I2C_Master_Read(0);
  1000     0608  3000               	movlw	0
  1001     0609  00F0               	movwf	I2C_Master_Read@a
  1002     060A  00F1               	movwf	I2C_Master_Read@a+1
  1003     060B  120A  118A  2390  120A  118A  	fcall	_I2C_Master_Read
  1004     0610  0870               	movf	?_I2C_Master_Read,w
  1005     0611  1283               	bcf	3,5	;RP0=0, select bank0
  1006     0612  1303               	bcf	3,6	;RP1=0, select bank0
  1007     0613  00A6               	movwf	_s1ADC
  1008     0614                     l1659:
  1009                           
  1010                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 83:         I
      +                          2C_Master_Stop();
  1011     0614  120A  118A  22A0  120A  118A  	fcall	_I2C_Master_Stop
  1012     0619                     l1661:
  1013                           
  1014                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 84:         _
      +                          delay((unsigned long)((200)*(8000000/4000.0)));
  1015     0619  3003               	movlw	3
  1016     061A  1283               	bcf	3,5	;RP0=0, select bank0
  1017     061B  1303               	bcf	3,6	;RP1=0, select bank0
  1018     061C  00DD               	movwf	??_main+2
  1019     061D  3008               	movlw	8
  1020     061E  00DC               	movwf	??_main+1
  1021     061F  3076               	movlw	118
  1022     0620  00DB               	movwf	??_main
  1023     0621                     u1207:
  1024     0621  0BDB               	decfsz	??_main,f
  1025     0622  2E21               	goto	u1207
  1026     0623  0BDC               	decfsz	??_main+1,f
  1027     0624  2E21               	goto	u1207
  1028     0625  0BDD               	decfsz	??_main+2,f
  1029     0626  2E21               	goto	u1207
  1030     0627  0000               	nop
  1031     0628                     l1663:
  1032                           
  1033                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 85:         P
      +                          ORTB++;
  1034     0628  3001               	movlw	1
  1035     0629  00FF               	movwf	btemp+1
  1036     062A  087F               	movf	btemp+1,w
  1037     062B  1283               	bcf	3,5	;RP0=0, select bank0
  1038     062C  1303               	bcf	3,6	;RP1=0, select bank0
  1039     062D  0786               	addwf	6,f	;volatile
  1040     062E                     l1665:
  1041                           
  1042                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 87:         L
      +                          cd_Clear();
  1043     062E  120A  118A  22C0  120A  118A  	fcall	_Lcd_Clear
  1044     0633                     l1667:
  1045                           
  1046                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 88:         L
      +                          cd_Set_Cursor(1,1);
  1047     0633  01F4               	clrf	Lcd_Set_Cursor@b
  1048     0634  0AF4               	incf	Lcd_Set_Cursor@b,f
  1049     0635  3001               	movlw	1
  1050     0636  120A  118A  2324  120A  118A  	fcall	_Lcd_Set_Cursor
  1051     063B                     l1669:
  1052                           
  1053                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 89:         s
      +                          printf(line1LCD, "S1:   %.2d/%.2d/%.2d", timeRTC[0], timeRTC[1], timeRTC[2]);
  1054     063B  3021               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1055     063C  1283               	bcf	3,5	;RP0=0, select bank0
  1056     063D  1303               	bcf	3,6	;RP1=0, select bank0
  1057     063E  00C8               	movwf	sprintf@f
  1058     063F  0820               	movf	_timeRTC,w
  1059     0640  00DB               	movwf	??_main
  1060     0641  01DC               	clrf	??_main+1
  1061     0642  085B               	movf	??_main,w
  1062     0643  00C9               	movwf	?_sprintf+1
  1063     0644  085C               	movf	??_main+1,w
  1064     0645  00CA               	movwf	?_sprintf+2
  1065     0646  0821               	movf	_timeRTC+1,w
  1066     0647  00DD               	movwf	??_main+2
  1067     0648  01DE               	clrf	??_main+3
  1068     0649  085D               	movf	??_main+2,w
  1069     064A  00CB               	movwf	?_sprintf+3
  1070     064B  085E               	movf	??_main+3,w
  1071     064C  00CC               	movwf	?_sprintf+4
  1072     064D  0822               	movf	_timeRTC+2,w
  1073     064E  00DF               	movwf	??_main+4
  1074     064F  01E0               	clrf	??_main+5
  1075     0650  085F               	movf	??_main+4,w
  1076     0651  00CD               	movwf	?_sprintf+5
  1077     0652  0860               	movf	??_main+5,w
  1078     0653  00CE               	movwf	?_sprintf+6
  1079     0654  3038               	movlw	(low (_line1LCD| 0))& (0+255)
  1080     0655  120A  118A  26A2  120A  118A  	fcall	_sprintf
  1081     065A                     l1671:
  1082                           
  1083                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 90:         L
      +                          cd_Write_String(line1LCD);
  1084     065A  3038               	movlw	(low (_line1LCD| 0))& (0+255)
  1085     065B  120A  118A  2344  120A  118A  	fcall	_Lcd_Write_String
  1086     0660                     l1673:
  1087                           
  1088                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 91:         L
      +                          cd_Set_Cursor(2,1);
  1089     0660  01F4               	clrf	Lcd_Set_Cursor@b
  1090     0661  0AF4               	incf	Lcd_Set_Cursor@b,f
  1091     0662  3002               	movlw	2
  1092     0663  120A  118A  2324  120A  118A  	fcall	_Lcd_Set_Cursor
  1093     0668                     l1675:
  1094                           
  1095                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 92:         s
      +                          printf(line2LCD, "%.2d   %.2d:%.2d:%.2d", s1ADC, dateRTC[0], dateRTC[1], dateRTC[2]);
  1096     0668  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1097     0669  1283               	bcf	3,5	;RP0=0, select bank0
  1098     066A  1303               	bcf	3,6	;RP1=0, select bank0
  1099     066B  00C8               	movwf	sprintf@f
  1100     066C  0826               	movf	_s1ADC,w
  1101     066D  00DB               	movwf	??_main
  1102     066E  01DC               	clrf	??_main+1
  1103     066F  085B               	movf	??_main,w
  1104     0670  00C9               	movwf	?_sprintf+1
  1105     0671  085C               	movf	??_main+1,w
  1106     0672  00CA               	movwf	?_sprintf+2
  1107     0673  0823               	movf	_dateRTC,w
  1108     0674  00DD               	movwf	??_main+2
  1109     0675  01DE               	clrf	??_main+3
  1110     0676  085D               	movf	??_main+2,w
  1111     0677  00CB               	movwf	?_sprintf+3
  1112     0678  085E               	movf	??_main+3,w
  1113     0679  00CC               	movwf	?_sprintf+4
  1114     067A  0824               	movf	_dateRTC+1,w
  1115     067B  00DF               	movwf	??_main+4
  1116     067C  01E0               	clrf	??_main+5
  1117     067D  085F               	movf	??_main+4,w
  1118     067E  00CD               	movwf	?_sprintf+5
  1119     067F  0860               	movf	??_main+5,w
  1120     0680  00CE               	movwf	?_sprintf+6
  1121     0681  0825               	movf	_dateRTC+2,w
  1122     0682  00E1               	movwf	??_main+6
  1123     0683  01E2               	clrf	??_main+7
  1124     0684  0861               	movf	??_main+6,w
  1125     0685  00CF               	movwf	?_sprintf+7
  1126     0686  0862               	movf	??_main+7,w
  1127     0687  00D0               	movwf	?_sprintf+8
  1128     0688  3028               	movlw	(low (_line2LCD| 0))& (0+255)
  1129     0689  120A  118A  26A2  120A  118A  	fcall	_sprintf
  1130     068E                     l1677:
  1131                           
  1132                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 93:         L
      +                          cd_Write_String(line2LCD);
  1133     068E  3028               	movlw	(low (_line2LCD| 0))& (0+255)
  1134     068F  120A  118A  2344  120A  118A  	fcall	_Lcd_Write_String
  1135     0694                     l1679:
  1136                           
  1137                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 94:         _
      +                          delay((unsigned long)((50)*(8000000/4000.0)));
  1138     0694  3082               	movlw	130
  1139     0695  1283               	bcf	3,5	;RP0=0, select bank0
  1140     0696  1303               	bcf	3,6	;RP1=0, select bank0
  1141     0697  00DC               	movwf	??_main+1
  1142     0698  30DD               	movlw	221
  1143     0699  00DB               	movwf	??_main
  1144     069A                     u1217:
  1145     069A  0BDB               	decfsz	??_main,f
  1146     069B  2E9A               	goto	u1217
  1147     069C  0BDC               	decfsz	??_main+1,f
  1148     069D  2E9A               	goto	u1217
  1149     069E  2DCA               	goto	l1643
  1150     069F  120A  118A  2800   	ljmp	start
  1151     06A2                     __end_of_main:
  1152                           
  1153                           	psect	text1
  1154     06A2                     __ptext1:	
  1155 ;; *************** function _sprintf *****************
  1156 ;; Defined at:
  1157 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  sp              1    wreg     PTR unsigned char 
  1160 ;;		 -> line2LCD(16), line1LCD(16), 
  1161 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1162 ;;		 -> STR_2(22), STR_1(21), 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  sp              1   16[BANK0 ] PTR unsigned char 
  1165 ;;		 -> line2LCD(16), line1LCD(16), 
  1166 ;;  tmpval          4    0        struct .
  1167 ;;  val             2   14[BANK0 ] unsigned int 
  1168 ;;  cp              2    0        PTR const unsigned char 
  1169 ;;  len             2    0        unsigned int 
  1170 ;;  c               1   18[BANK0 ] unsigned char 
  1171 ;;  prec            1   17[BANK0 ] char 
  1172 ;;  flag            1   13[BANK0 ] unsigned char 
  1173 ;;  ap              1   12[BANK0 ] PTR void [1]
  1174 ;;		 -> ?_sprintf(2), 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  2    0[BANK0 ] int 
  1177 ;; Registers used:
  1178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1184 ;;      Params:         0       9       0       0       0
  1185 ;;      Locals:         0       7       0       0       0
  1186 ;;      Temps:          0       3       0       0       0
  1187 ;;      Totals:         0      19       0       0       0
  1188 ;;Total ram usage:       19 bytes
  1189 ;; Hardware stack levels used: 1
  1190 ;; Hardware stack levels required when called: 1
  1191 ;; This function calls:
  1192 ;;		___bmul
  1193 ;;		___lwdiv
  1194 ;;		___lwmod
  1195 ;;		_isdigit
  1196 ;; This function is called by:
  1197 ;;		_main
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201     06A2                     _sprintf:	
  1202                           ;psect for function _sprintf
  1203                           
  1204                           
  1205                           ;incstack = 0
  1206                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1207                           ;sprintf@sp stored from wreg
  1208     06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1209     06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1210     06A4  00D8               	movwf	sprintf@sp
  1211     06A5                     l1539:
  1212                           
  1213                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1214     06A5  3049               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1215     06A6  00D4               	movwf	sprintf@ap
  1216                           
  1217                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1218     06A7  2FDE               	goto	l1621
  1219     06A8                     l1541:
  1220                           
  1221                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1222     06A8  3025               	movlw	37
  1223     06A9  065A               	xorwf	sprintf@c,w
  1224     06AA  1903               	btfsc	3,2
  1225     06AB  2EAD               	goto	u1061
  1226     06AC  2EAE               	goto	u1060
  1227     06AD                     u1061:
  1228     06AD  2EB8               	goto	l1547
  1229     06AE                     u1060:
  1230     06AE                     l1543:
  1231                           
  1232                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1233     06AE  0858               	movf	sprintf@sp,w
  1234     06AF  0084               	movwf	4
  1235     06B0  085A               	movf	sprintf@c,w
  1236     06B1  1383               	bcf	3,7	;select IRP bank0
  1237     06B2  0080               	movwf	0
  1238     06B3                     l1545:
  1239     06B3  3001               	movlw	1
  1240     06B4  00FF               	movwf	btemp+1
  1241     06B5  087F               	movf	btemp+1,w
  1242     06B6  07D8               	addwf	sprintf@sp,f
  1243                           
  1244                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  1245     06B7  2FDE               	goto	l1621
  1246     06B8                     l1547:
  1247                           
  1248                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1249     06B8  01D5               	clrf	sprintf@flag
  1250     06B9                     l1549:
  1251                           
  1252                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1253     06B9  0848               	movf	sprintf@f,w
  1254     06BA  0084               	movwf	4
  1255     06BB  120A  118A  2003  120A  118A  	fcall	stringdir
  1256     06C0  3A2E               	xorlw	46
  1257     06C1  1D03               	skipz
  1258     06C2  2EC4               	goto	u1071
  1259     06C3  2EC5               	goto	u1070
  1260     06C4                     u1071:
  1261     06C4  2EF8               	goto	l1563
  1262     06C5                     u1070:
  1263     06C5                     l1551:
  1264                           
  1265                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 630:    f++;
  1266     06C5  3001               	movlw	1
  1267     06C6  00FF               	movwf	btemp+1
  1268     06C7  087F               	movf	btemp+1,w
  1269     06C8  07C8               	addwf	sprintf@f,f
  1270     06C9                     l1553:
  1271                           
  1272                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1273     06C9  01D9               	clrf	sprintf@prec
  1274                           
  1275                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1276     06CA  2EE7               	goto	l1561
  1277     06CB                     l1555:
  1278                           
  1279                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1280     06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1281     06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1282     06CD  0859               	movf	sprintf@prec,w
  1283     06CE  00F0               	movwf	___bmul@multiplicand
  1284     06CF  300A               	movlw	10
  1285     06D0  120A  118A  22DF  120A  118A  	fcall	___bmul
  1286     06D5  1283               	bcf	3,5	;RP0=0, select bank0
  1287     06D6  1303               	bcf	3,6	;RP1=0, select bank0
  1288     06D7  00D9               	movwf	sprintf@prec
  1289     06D8                     l1557:
  1290                           
  1291                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1292     06D8  0848               	movf	sprintf@f,w
  1293     06D9  0084               	movwf	4
  1294     06DA  120A  118A  2003  120A  118A  	fcall	stringdir
  1295     06DF  3ED0               	addlw	-48
  1296     06E0  00FF               	movwf	btemp+1
  1297     06E1  087F               	movf	btemp+1,w
  1298     06E2  07D9               	addwf	sprintf@prec,f
  1299     06E3                     l1559:
  1300     06E3  3001               	movlw	1
  1301     06E4  00FF               	movwf	btemp+1
  1302     06E5  087F               	movf	btemp+1,w
  1303     06E6  07C8               	addwf	sprintf@f,f
  1304     06E7                     l1561:
  1305                           
  1306                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1307     06E7  0848               	movf	sprintf@f,w
  1308     06E8  0084               	movwf	4
  1309     06E9  120A  118A  2003  120A  118A  	fcall	stringdir
  1310     06EE  120A  118A  22CD  120A  118A  	fcall	_isdigit
  1311     06F3  1803               	btfsc	3,0
  1312     06F4  2EF6               	goto	u1081
  1313     06F5  2EF7               	goto	u1080
  1314     06F6                     u1081:
  1315     06F6  2ECB               	goto	l1555
  1316     06F7                     u1080:
  1317     06F7  2EF9               	goto	l1567
  1318     06F8                     l1563:
  1319                           
  1320                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1321     06F8  01D9               	clrf	sprintf@prec
  1322     06F9                     l1567:
  1323     06F9  3001               	movlw	1
  1324     06FA  1283               	bcf	3,5	;RP0=0, select bank0
  1325     06FB  1303               	bcf	3,6	;RP1=0, select bank0
  1326     06FC  07C8               	addwf	sprintf@f,f
  1327     06FD  30FF               	movlw	-1
  1328     06FE  0748               	addwf	sprintf@f,w
  1329     06FF  0084               	movwf	4
  1330     0700  120A  118A  2003  120A  118A  	fcall	stringdir
  1331     0705  00DA               	movwf	sprintf@c
  1332     0706  00D1               	movwf	??_sprintf
  1333     0707  01D2               	clrf	??_sprintf+1
  1334                           
  1335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1336                           ; Switch size 1, requested type "simple"
  1337                           ; Number of cases is 1, Range of values is 0 to 0
  1338                           ; switch strategies available:
  1339                           ; Name         Instructions Cycles
  1340                           ; simple_byte            4     3 (average)
  1341                           ; direct_byte           11     8 (fixed)
  1342                           ; jumptable            260     6 (fixed)
  1343                           ;	Chosen strategy is simple_byte
  1344     0708  0852               	movf	??_sprintf+1,w
  1345     0709  3A00               	xorlw	0	; case 0
  1346     070A  1903               	skipnz
  1347     070B  2F0D               	goto	l1711
  1348     070C  2FDE               	goto	l1621
  1349     070D                     l1711:
  1350                           
  1351                           ; Switch size 1, requested type "simple"
  1352                           ; Number of cases is 3, Range of values is 0 to 105
  1353                           ; switch strategies available:
  1354                           ; Name         Instructions Cycles
  1355                           ; simple_byte           10     6 (average)
  1356                           ; jumptable            260     6 (fixed)
  1357                           ;	Chosen strategy is simple_byte
  1358     070D  0851               	movf	??_sprintf,w
  1359     070E  3A00               	xorlw	0	; case 0
  1360     070F  1903               	skipnz
  1361     0710  2FEE               	goto	l1623
  1362     0711  3A64               	xorlw	100	; case 100
  1363     0712  1903               	skipnz
  1364     0713  2F18               	goto	l1569
  1365     0714  3A0D               	xorlw	13	; case 105
  1366     0715  1903               	skipnz
  1367     0716  2F18               	goto	l1569
  1368     0717  2FDE               	goto	l1621
  1369     0718                     l1569:
  1370                           
  1371                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1372     0718  0854               	movf	sprintf@ap,w
  1373     0719  0084               	movwf	4
  1374     071A  1383               	bcf	3,7	;select IRP bank0
  1375     071B  0800               	movf	0,w
  1376     071C  00D6               	movwf	sprintf@val
  1377     071D  0A84               	incf	4,f
  1378     071E  0800               	movf	0,w
  1379     071F  00D7               	movwf	sprintf@val+1
  1380     0720                     l1571:
  1381     0720  3002               	movlw	2
  1382     0721  00FF               	movwf	btemp+1
  1383     0722  087F               	movf	btemp+1,w
  1384     0723  07D4               	addwf	sprintf@ap,f
  1385     0724                     l1573:
  1386                           
  1387                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1388     0724  1FD7               	btfss	sprintf@val+1,7
  1389     0725  2F27               	goto	u1091
  1390     0726  2F28               	goto	u1090
  1391     0727                     u1091:
  1392     0727  2F31               	goto	l1579
  1393     0728                     u1090:
  1394     0728                     l1575:
  1395                           
  1396                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1397     0728  3003               	movlw	3
  1398     0729  00FF               	movwf	btemp+1
  1399     072A  087F               	movf	btemp+1,w
  1400     072B  04D5               	iorwf	sprintf@flag,f
  1401     072C                     l1577:
  1402                           
  1403                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1404     072C  09D6               	comf	sprintf@val,f
  1405     072D  09D7               	comf	sprintf@val+1,f
  1406     072E  0AD6               	incf	sprintf@val,f
  1407     072F  1903               	skipnz
  1408     0730  0AD7               	incf	sprintf@val+1,f
  1409     0731                     l1579:
  1410                           
  1411                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  1412     0731  0859               	movf	sprintf@prec,w
  1413     0732  1D03               	btfss	3,2
  1414     0733  2F35               	goto	u1101
  1415     0734  2F36               	goto	u1100
  1416     0735                     u1101:
  1417     0735  2F40               	goto	l1585
  1418     0736                     u1100:
  1419     0736                     l1581:
  1420     0736  0856               	movf	sprintf@val,w
  1421     0737  0457               	iorwf	sprintf@val+1,w
  1422     0738  1D03               	btfss	3,2
  1423     0739  2F3B               	goto	u1111
  1424     073A  2F3C               	goto	u1110
  1425     073B                     u1111:
  1426     073B  2F40               	goto	l1585
  1427     073C                     u1110:
  1428     073C                     l1583:
  1429                           
  1430                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  1431     073C  3001               	movlw	1
  1432     073D  00FF               	movwf	btemp+1
  1433     073E  087F               	movf	btemp+1,w
  1434     073F  07D9               	addwf	sprintf@prec,f
  1435     0740                     l1585:
  1436                           
  1437                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1438     0740  01DA               	clrf	sprintf@c
  1439     0741  0ADA               	incf	sprintf@c,f
  1440     0742                     l1591:
  1441                           
  1442                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1443     0742  085A               	movf	sprintf@c,w
  1444     0743  00D1               	movwf	??_sprintf
  1445     0744  0751               	addwf	??_sprintf,w
  1446     0745  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1447     0746  0084               	movwf	4
  1448     0747  120A  118A  2003  120A  118A  	fcall	stringdir
  1449     074C  00D2               	movwf	??_sprintf+1
  1450     074D  120A  118A  2003  120A  118A  	fcall	stringdir
  1451     0752  00D3               	movwf	??_sprintf+2
  1452     0753  0853               	movf	??_sprintf+2,w
  1453     0754  0257               	subwf	sprintf@val+1,w
  1454     0755  1D03               	skipz
  1455     0756  2F59               	goto	u1125
  1456     0757  0852               	movf	??_sprintf+1,w
  1457     0758  0256               	subwf	sprintf@val,w
  1458     0759                     u1125:
  1459     0759  1803               	skipnc
  1460     075A  2F5C               	goto	u1121
  1461     075B  2F5D               	goto	u1120
  1462     075C                     u1121:
  1463     075C  2F5E               	goto	l1595
  1464     075D                     u1120:
  1465     075D  2F68               	goto	l1599
  1466     075E                     l1595:
  1467     075E  3001               	movlw	1
  1468     075F  00FF               	movwf	btemp+1
  1469     0760  087F               	movf	btemp+1,w
  1470     0761  07DA               	addwf	sprintf@c,f
  1471     0762                     l1597:
  1472     0762  3005               	movlw	5
  1473     0763  065A               	xorwf	sprintf@c,w
  1474     0764  1D03               	btfss	3,2
  1475     0765  2F67               	goto	u1131
  1476     0766  2F68               	goto	u1130
  1477     0767                     u1131:
  1478     0767  2F42               	goto	l1591
  1479     0768                     u1130:
  1480     0768                     l1599:
  1481                           
  1482                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  1483     0768  0859               	movf	sprintf@prec,w
  1484     0769  00D1               	movwf	??_sprintf
  1485     076A  01D2               	clrf	??_sprintf+1
  1486     076B  1BD1               	btfsc	??_sprintf,7
  1487     076C  03D2               	decf	??_sprintf+1,f
  1488     076D  0852               	movf	??_sprintf+1,w
  1489     076E  3A80               	xorlw	128
  1490     076F  3C80               	sublw	128
  1491     0770  1D03               	skipz
  1492     0771  2F74               	goto	u1145
  1493     0772  0851               	movf	??_sprintf,w
  1494     0773  025A               	subwf	sprintf@c,w
  1495     0774                     u1145:
  1496     0774  1803               	skipnc
  1497     0775  2F77               	goto	u1141
  1498     0776  2F78               	goto	u1140
  1499     0777                     u1141:
  1500     0777  2F79               	goto	l1603
  1501     0778                     u1140:
  1502     0778                     l1601:
  1503     0778  2F91               	goto	l1607
  1504     0779                     l1603:
  1505     0779  1283               	bcf	3,5	;RP0=0, select bank0
  1506     077A  1303               	bcf	3,6	;RP1=0, select bank0
  1507     077B  0859               	movf	sprintf@prec,w
  1508     077C  00D1               	movwf	??_sprintf
  1509     077D  01D2               	clrf	??_sprintf+1
  1510     077E  1BD1               	btfsc	??_sprintf,7
  1511     077F  03D2               	decf	??_sprintf+1,f
  1512     0780  0852               	movf	??_sprintf+1,w
  1513     0781  3A80               	xorlw	128
  1514     0782  00D3               	movwf	??_sprintf+2
  1515     0783  3080               	movlw	128
  1516     0784  0253               	subwf	??_sprintf+2,w
  1517     0785  1D03               	skipz
  1518     0786  2F89               	goto	u1155
  1519     0787  085A               	movf	sprintf@c,w
  1520     0788  0251               	subwf	??_sprintf,w
  1521     0789                     u1155:
  1522     0789  1803               	skipnc
  1523     078A  2F8C               	goto	u1151
  1524     078B  2F8D               	goto	u1150
  1525     078C                     u1151:
  1526     078C  2F91               	goto	l1607
  1527     078D                     u1150:
  1528     078D                     l1605:
  1529                           
  1530                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  1531     078D  1283               	bcf	3,5	;RP0=0, select bank0
  1532     078E  1303               	bcf	3,6	;RP1=0, select bank0
  1533     078F  085A               	movf	sprintf@c,w
  1534     0790  00D9               	movwf	sprintf@prec
  1535     0791                     l1607:
  1536                           
  1537                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1538     0791  1283               	bcf	3,5	;RP0=0, select bank0
  1539     0792  1303               	bcf	3,6	;RP1=0, select bank0
  1540     0793  0855               	movf	sprintf@flag,w
  1541     0794  3903               	andlw	3
  1542     0795  1903               	btfsc	3,2
  1543     0796  2F98               	goto	u1161
  1544     0797  2F99               	goto	u1160
  1545     0798                     u1161:
  1546     0798  2FD5               	goto	l1619
  1547     0799                     u1160:
  1548     0799                     l1609:
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1551     0799  0858               	movf	sprintf@sp,w
  1552     079A  0084               	movwf	4
  1553     079B  302D               	movlw	45
  1554     079C  1383               	bcf	3,7	;select IRP bank0
  1555     079D  0080               	movwf	0
  1556     079E                     l1611:
  1557     079E  3001               	movlw	1
  1558     079F  00FF               	movwf	btemp+1
  1559     07A0  087F               	movf	btemp+1,w
  1560     07A1  07D8               	addwf	sprintf@sp,f
  1561     07A2  2FD5               	goto	l1619
  1562     07A3                     l1613:
  1563                           
  1564                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1565     07A3  300A               	movlw	10
  1566     07A4  00F7               	movwf	___lwmod@divisor
  1567     07A5  3000               	movlw	0
  1568     07A6  00F8               	movwf	___lwmod@divisor+1
  1569     07A7  0859               	movf	sprintf@prec,w
  1570     07A8  00D1               	movwf	??_sprintf
  1571     07A9  0751               	addwf	??_sprintf,w
  1572     07AA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1573     07AB  0084               	movwf	4
  1574     07AC  120A  118A  2003  120A  118A  	fcall	stringdir
  1575     07B1  00F0               	movwf	___lwdiv@divisor
  1576     07B2  120A  118A  2003  120A  118A  	fcall	stringdir
  1577     07B7  00F1               	movwf	___lwdiv@divisor+1
  1578     07B8  0857               	movf	sprintf@val+1,w
  1579     07B9  00F3               	movwf	___lwdiv@dividend+1
  1580     07BA  0856               	movf	sprintf@val,w
  1581     07BB  00F2               	movwf	___lwdiv@dividend
  1582     07BC  120A  118A  246E  120A  118A  	fcall	___lwdiv
  1583     07C1  0871               	movf	?___lwdiv+1,w
  1584     07C2  00FA               	movwf	___lwmod@dividend+1
  1585     07C3  0870               	movf	?___lwdiv,w
  1586     07C4  00F9               	movwf	___lwmod@dividend
  1587     07C5  120A  118A  23F6  120A  118A  	fcall	___lwmod
  1588     07CA  0877               	movf	?___lwmod,w
  1589     07CB  3E30               	addlw	48
  1590     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1591     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1592     07CE  00DA               	movwf	sprintf@c
  1593     07CF                     l1615:
  1594                           
  1595                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1596     07CF  0858               	movf	sprintf@sp,w
  1597     07D0  0084               	movwf	4
  1598     07D1  085A               	movf	sprintf@c,w
  1599     07D2  1383               	bcf	3,7	;select IRP bank0
  1600     07D3  0080               	movwf	0
  1601     07D4  2F9E               	goto	l1611
  1602     07D5                     l1619:
  1603                           
  1604                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1605     07D5  30FF               	movlw	255
  1606     07D6  00FF               	movwf	btemp+1
  1607     07D7  087F               	movf	btemp+1,w
  1608     07D8  07D9               	addwf	sprintf@prec,f
  1609     07D9  0A59               	incf	sprintf@prec,w
  1610     07DA  1D03               	btfss	3,2
  1611     07DB  2FDD               	goto	u1171
  1612     07DC  2FDE               	goto	u1170
  1613     07DD                     u1171:
  1614     07DD  2FA3               	goto	l1613
  1615     07DE                     u1170:
  1616     07DE                     l1621:
  1617                           
  1618                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1619     07DE  3001               	movlw	1
  1620     07DF  07C8               	addwf	sprintf@f,f
  1621     07E0  30FF               	movlw	-1
  1622     07E1  0748               	addwf	sprintf@f,w
  1623     07E2  0084               	movwf	4
  1624     07E3  120A  118A  2003  120A  118A  	fcall	stringdir
  1625     07E8  00DA               	movwf	sprintf@c
  1626     07E9  085A               	movf	sprintf@c,w
  1627     07EA  1D03               	btfss	3,2
  1628     07EB  2FED               	goto	u1181
  1629     07EC  2FEE               	goto	u1180
  1630     07ED                     u1181:
  1631     07ED  2EA8               	goto	l1541
  1632     07EE                     u1180:
  1633     07EE                     l1623:
  1634                           
  1635                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1636     07EE  0858               	movf	sprintf@sp,w
  1637     07EF  0084               	movwf	4
  1638     07F0  1383               	bcf	3,7	;select IRP bank0
  1639     07F1  0180               	clrf	0
  1640     07F2                     l326:
  1641     07F2  0008               	return
  1642     07F3                     __end_of_sprintf:
  1643                           
  1644                           	psect	text2
  1645     02CD                     __ptext2:	
  1646 ;; *************** function _isdigit *****************
  1647 ;; Defined at:
  1648 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  c               1    wreg     unsigned char 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  c               1    1[COMMON] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;		None               void
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1662 ;;      Params:         0       0       0       0       0
  1663 ;;      Locals:         2       0       0       0       0
  1664 ;;      Temps:          0       0       0       0       0
  1665 ;;      Totals:         2       0       0       0       0
  1666 ;;Total ram usage:        2 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_sprintf
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675     02CD                     _isdigit:	
  1676                           ;psect for function _isdigit
  1677                           
  1678                           
  1679                           ;incstack = 0
  1680                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1681                           ;isdigit@c stored from wreg
  1682     02CD  00F1               	movwf	isdigit@c
  1683     02CE                     l1391:
  1684     02CE  01F0               	clrf	_isdigit$703
  1685     02CF                     l1393:
  1686     02CF  303A               	movlw	58
  1687     02D0  0271               	subwf	isdigit@c,w
  1688     02D1  1803               	skipnc
  1689     02D2  2AD4               	goto	u851
  1690     02D3  2AD5               	goto	u850
  1691     02D4                     u851:
  1692     02D4  2ADD               	goto	l1399
  1693     02D5                     u850:
  1694     02D5                     l1395:
  1695     02D5  3030               	movlw	48
  1696     02D6  0271               	subwf	isdigit@c,w
  1697     02D7  1C03               	skipc
  1698     02D8  2ADA               	goto	u861
  1699     02D9  2ADB               	goto	u860
  1700     02DA                     u861:
  1701     02DA  2ADD               	goto	l1399
  1702     02DB                     u860:
  1703     02DB                     l1397:
  1704     02DB  01F0               	clrf	_isdigit$703
  1705     02DC  0AF0               	incf	_isdigit$703,f
  1706     02DD                     l1399:
  1707     02DD  0C70               	rrf	_isdigit$703,w
  1708     02DE                     l783:
  1709     02DE  0008               	return
  1710     02DF                     __end_of_isdigit:
  1711                           
  1712                           	psect	text3
  1713     03F6                     __ptext3:	
  1714 ;; *************** function ___lwmod *****************
  1715 ;; Defined at:
  1716 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  divisor         2    7[COMMON] unsigned int 
  1719 ;;  dividend        2    9[COMMON] unsigned int 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  counter         1   11[COMMON] unsigned char 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  2    7[COMMON] unsigned int 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0, btemp+1
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1731 ;;      Params:         4       0       0       0       0
  1732 ;;      Locals:         1       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0
  1734 ;;      Totals:         5       0       0       0       0
  1735 ;;Total ram usage:        5 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		_sprintf
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744     03F6                     ___lwmod:	
  1745                           ;psect for function ___lwmod
  1746                           
  1747     03F6                     l1445:	
  1748                           ;incstack = 0
  1749                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1750                           
  1751     03F6  0877               	movf	___lwmod@divisor,w
  1752     03F7  0478               	iorwf	___lwmod@divisor+1,w
  1753     03F8  1903               	btfsc	3,2
  1754     03F9  2BFB               	goto	u961
  1755     03FA  2BFC               	goto	u960
  1756     03FB                     u961:
  1757     03FB  2C2B               	goto	l1463
  1758     03FC                     u960:
  1759     03FC                     l1447:
  1760     03FC  01FB               	clrf	___lwmod@counter
  1761     03FD  0AFB               	incf	___lwmod@counter,f
  1762     03FE  2C0A               	goto	l1453
  1763     03FF                     l1449:
  1764     03FF  3001               	movlw	1
  1765     0400                     u975:
  1766     0400  1003               	clrc
  1767     0401  0DF7               	rlf	___lwmod@divisor,f
  1768     0402  0DF8               	rlf	___lwmod@divisor+1,f
  1769     0403  3EFF               	addlw	-1
  1770     0404  1D03               	skipz
  1771     0405  2C00               	goto	u975
  1772     0406                     l1451:
  1773     0406  3001               	movlw	1
  1774     0407  00FF               	movwf	btemp+1
  1775     0408  087F               	movf	btemp+1,w
  1776     0409  07FB               	addwf	___lwmod@counter,f
  1777     040A                     l1453:
  1778     040A  1FF8               	btfss	___lwmod@divisor+1,7
  1779     040B  2C0D               	goto	u981
  1780     040C  2C0E               	goto	u980
  1781     040D                     u981:
  1782     040D  2BFF               	goto	l1449
  1783     040E                     u980:
  1784     040E                     l1455:
  1785     040E  0878               	movf	___lwmod@divisor+1,w
  1786     040F  027A               	subwf	___lwmod@dividend+1,w
  1787     0410  1D03               	skipz
  1788     0411  2C14               	goto	u995
  1789     0412  0877               	movf	___lwmod@divisor,w
  1790     0413  0279               	subwf	___lwmod@dividend,w
  1791     0414                     u995:
  1792     0414  1C03               	skipc
  1793     0415  2C17               	goto	u991
  1794     0416  2C18               	goto	u990
  1795     0417                     u991:
  1796     0417  2C1E               	goto	l1459
  1797     0418                     u990:
  1798     0418                     l1457:
  1799     0418  0877               	movf	___lwmod@divisor,w
  1800     0419  02F9               	subwf	___lwmod@dividend,f
  1801     041A  0878               	movf	___lwmod@divisor+1,w
  1802     041B  1C03               	skipc
  1803     041C  03FA               	decf	___lwmod@dividend+1,f
  1804     041D  02FA               	subwf	___lwmod@dividend+1,f
  1805     041E                     l1459:
  1806     041E  3001               	movlw	1
  1807     041F                     u1005:
  1808     041F  1003               	clrc
  1809     0420  0CF8               	rrf	___lwmod@divisor+1,f
  1810     0421  0CF7               	rrf	___lwmod@divisor,f
  1811     0422  3EFF               	addlw	-1
  1812     0423  1D03               	skipz
  1813     0424  2C1F               	goto	u1005
  1814     0425                     l1461:
  1815     0425  3001               	movlw	1
  1816     0426  02FB               	subwf	___lwmod@counter,f
  1817     0427  1D03               	btfss	3,2
  1818     0428  2C2A               	goto	u1011
  1819     0429  2C2B               	goto	u1010
  1820     042A                     u1011:
  1821     042A  2C0E               	goto	l1455
  1822     042B                     u1010:
  1823     042B                     l1463:
  1824     042B  087A               	movf	___lwmod@dividend+1,w
  1825     042C  00F8               	movwf	?___lwmod+1
  1826     042D  0879               	movf	___lwmod@dividend,w
  1827     042E  00F7               	movwf	?___lwmod
  1828     042F                     l612:
  1829     042F  0008               	return
  1830     0430                     __end_of___lwmod:
  1831                           
  1832                           	psect	text4
  1833     046E                     __ptext4:	
  1834 ;; *************** function ___lwdiv *****************
  1835 ;; Defined at:
  1836 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;  divisor         2    0[COMMON] unsigned int 
  1839 ;;  dividend        2    2[COMMON] unsigned int 
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  quotient        2    4[COMMON] unsigned int 
  1842 ;;  counter         1    6[COMMON] unsigned char 
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  2    0[COMMON] unsigned int 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2, status,0, btemp+1
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1852 ;;      Params:         4       0       0       0       0
  1853 ;;      Locals:         3       0       0       0       0
  1854 ;;      Temps:          0       0       0       0       0
  1855 ;;      Totals:         7       0       0       0       0
  1856 ;;Total ram usage:        7 bytes
  1857 ;; Hardware stack levels used: 1
  1858 ;; This function calls:
  1859 ;;		Nothing
  1860 ;; This function is called by:
  1861 ;;		_sprintf
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865     046E                     ___lwdiv:	
  1866                           ;psect for function ___lwdiv
  1867                           
  1868     046E                     l1419:	
  1869                           ;incstack = 0
  1870                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1871                           
  1872     046E  01F4               	clrf	___lwdiv@quotient
  1873     046F  01F5               	clrf	___lwdiv@quotient+1
  1874     0470                     l1421:
  1875     0470  0870               	movf	___lwdiv@divisor,w
  1876     0471  0471               	iorwf	___lwdiv@divisor+1,w
  1877     0472  1903               	btfsc	3,2
  1878     0473  2C75               	goto	u891
  1879     0474  2C76               	goto	u890
  1880     0475                     u891:
  1881     0475  2CAD               	goto	l1441
  1882     0476                     u890:
  1883     0476                     l1423:
  1884     0476  01F6               	clrf	___lwdiv@counter
  1885     0477  0AF6               	incf	___lwdiv@counter,f
  1886     0478  2C84               	goto	l1429
  1887     0479                     l1425:
  1888     0479  3001               	movlw	1
  1889     047A                     u905:
  1890     047A  1003               	clrc
  1891     047B  0DF0               	rlf	___lwdiv@divisor,f
  1892     047C  0DF1               	rlf	___lwdiv@divisor+1,f
  1893     047D  3EFF               	addlw	-1
  1894     047E  1D03               	skipz
  1895     047F  2C7A               	goto	u905
  1896     0480                     l1427:
  1897     0480  3001               	movlw	1
  1898     0481  00FF               	movwf	btemp+1
  1899     0482  087F               	movf	btemp+1,w
  1900     0483  07F6               	addwf	___lwdiv@counter,f
  1901     0484                     l1429:
  1902     0484  1FF1               	btfss	___lwdiv@divisor+1,7
  1903     0485  2C87               	goto	u911
  1904     0486  2C88               	goto	u910
  1905     0487                     u911:
  1906     0487  2C79               	goto	l1425
  1907     0488                     u910:
  1908     0488                     l1431:
  1909     0488  3001               	movlw	1
  1910     0489                     u925:
  1911     0489  1003               	clrc
  1912     048A  0DF4               	rlf	___lwdiv@quotient,f
  1913     048B  0DF5               	rlf	___lwdiv@quotient+1,f
  1914     048C  3EFF               	addlw	-1
  1915     048D  1D03               	skipz
  1916     048E  2C89               	goto	u925
  1917     048F  0871               	movf	___lwdiv@divisor+1,w
  1918     0490  0273               	subwf	___lwdiv@dividend+1,w
  1919     0491  1D03               	skipz
  1920     0492  2C95               	goto	u935
  1921     0493  0870               	movf	___lwdiv@divisor,w
  1922     0494  0272               	subwf	___lwdiv@dividend,w
  1923     0495                     u935:
  1924     0495  1C03               	skipc
  1925     0496  2C98               	goto	u931
  1926     0497  2C99               	goto	u930
  1927     0498                     u931:
  1928     0498  2CA0               	goto	l1437
  1929     0499                     u930:
  1930     0499                     l1433:
  1931     0499  0870               	movf	___lwdiv@divisor,w
  1932     049A  02F2               	subwf	___lwdiv@dividend,f
  1933     049B  0871               	movf	___lwdiv@divisor+1,w
  1934     049C  1C03               	skipc
  1935     049D  03F3               	decf	___lwdiv@dividend+1,f
  1936     049E  02F3               	subwf	___lwdiv@dividend+1,f
  1937     049F                     l1435:
  1938     049F  1474               	bsf	___lwdiv@quotient,0
  1939     04A0                     l1437:
  1940     04A0  3001               	movlw	1
  1941     04A1                     u945:
  1942     04A1  1003               	clrc
  1943     04A2  0CF1               	rrf	___lwdiv@divisor+1,f
  1944     04A3  0CF0               	rrf	___lwdiv@divisor,f
  1945     04A4  3EFF               	addlw	-1
  1946     04A5  1D03               	skipz
  1947     04A6  2CA1               	goto	u945
  1948     04A7                     l1439:
  1949     04A7  3001               	movlw	1
  1950     04A8  02F6               	subwf	___lwdiv@counter,f
  1951     04A9  1D03               	btfss	3,2
  1952     04AA  2CAC               	goto	u951
  1953     04AB  2CAD               	goto	u950
  1954     04AC                     u951:
  1955     04AC  2C88               	goto	l1431
  1956     04AD                     u950:
  1957     04AD                     l1441:
  1958     04AD  0875               	movf	___lwdiv@quotient+1,w
  1959     04AE  00F1               	movwf	?___lwdiv+1
  1960     04AF  0874               	movf	___lwdiv@quotient,w
  1961     04B0  00F0               	movwf	?___lwdiv
  1962     04B1                     l602:
  1963     04B1  0008               	return
  1964     04B2                     __end_of___lwdiv:
  1965                           
  1966                           	psect	text5
  1967     02DF                     __ptext5:	
  1968 ;; *************** function ___bmul *****************
  1969 ;; Defined at:
  1970 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  multiplier      1    wreg     unsigned char 
  1973 ;;  multiplicand    1    0[COMMON] unsigned char 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  multiplier      1    2[COMMON] unsigned char 
  1976 ;;  product         1    1[COMMON] unsigned char 
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      unsigned char 
  1979 ;; Registers used:
  1980 ;;		wreg, status,2, status,0, btemp+1
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1986 ;;      Params:         1       0       0       0       0
  1987 ;;      Locals:         2       0       0       0       0
  1988 ;;      Temps:          0       0       0       0       0
  1989 ;;      Totals:         3       0       0       0       0
  1990 ;;Total ram usage:        3 bytes
  1991 ;; Hardware stack levels used: 1
  1992 ;; This function calls:
  1993 ;;		Nothing
  1994 ;; This function is called by:
  1995 ;;		_sprintf
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999     02DF                     ___bmul:	
  2000                           ;psect for function ___bmul
  2001                           
  2002                           
  2003                           ;incstack = 0
  2004                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  2005                           ;___bmul@multiplier stored from wreg
  2006     02DF  00F2               	movwf	___bmul@multiplier
  2007     02E0                     l1403:
  2008     02E0  01F1               	clrf	___bmul@product
  2009     02E1                     l1405:
  2010     02E1  1C72               	btfss	___bmul@multiplier,0
  2011     02E2  2AE4               	goto	u871
  2012     02E3  2AE5               	goto	u870
  2013     02E4                     u871:
  2014     02E4  2AE9               	goto	l1409
  2015     02E5                     u870:
  2016     02E5                     l1407:
  2017     02E5  0870               	movf	___bmul@multiplicand,w
  2018     02E6  00FF               	movwf	btemp+1
  2019     02E7  087F               	movf	btemp+1,w
  2020     02E8  07F1               	addwf	___bmul@product,f
  2021     02E9                     l1409:
  2022     02E9  1003               	clrc
  2023     02EA  0DF0               	rlf	___bmul@multiplicand,f
  2024     02EB                     l1411:
  2025     02EB  1003               	clrc
  2026     02EC  0CF2               	rrf	___bmul@multiplier,f
  2027     02ED                     l1413:
  2028     02ED  0872               	movf	___bmul@multiplier,w
  2029     02EE  1D03               	btfss	3,2
  2030     02EF  2AF1               	goto	u881
  2031     02F0  2AF2               	goto	u880
  2032     02F1                     u881:
  2033     02F1  2AE1               	goto	l1405
  2034     02F2                     u880:
  2035     02F2                     l1415:
  2036     02F2  0871               	movf	___bmul@product,w
  2037     02F3                     l356:
  2038     02F3  0008               	return
  2039     02F4                     __end_of___bmul:
  2040                           
  2041                           	psect	text6
  2042     0365                     __ptext6:	
  2043 ;; *************** function _setup *****************
  2044 ;; Defined at:
  2045 ;;		line 103 in file "E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;		None
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;		None
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2059 ;;      Params:         0       0       0       0       0
  2060 ;;      Locals:         0       0       0       0       0
  2061 ;;      Temps:          0       0       0       0       0
  2062 ;;      Totals:         0       0       0       0       0
  2063 ;;Total ram usage:        0 bytes
  2064 ;; Hardware stack levels used: 1
  2065 ;; Hardware stack levels required when called: 3
  2066 ;; This function calls:
  2067 ;;		_I2C_Master_Init
  2068 ;;		_Lcd_Init
  2069 ;;		_configOsc
  2070 ;; This function is called by:
  2071 ;;		_main
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075     0365                     _setup:	
  2076                           ;psect for function _setup
  2077                           
  2078     0365                     l1517:	
  2079                           ;incstack = 0
  2080                           ; Regs used in _setup: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2081                           
  2082                           
  2083                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 104:     conf
      +                          igOsc(8);
  2084     0365  3008               	movlw	8
  2085     0366  00F0               	movwf	configOsc@frec
  2086     0367  3000               	movlw	0
  2087     0368  00F1               	movwf	configOsc@frec+1
  2088     0369  120A  118A  2503  120A  118A  	fcall	_configOsc
  2089     036E                     l1519:
  2090                           
  2091                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 105:     ANSE
      +                          L = 0;
  2092     036E  1683               	bsf	3,5	;RP0=1, select bank3
  2093     036F  1703               	bsf	3,6	;RP1=1, select bank3
  2094     0370  0188               	clrf	8	;volatile
  2095     0371                     l1521:
  2096                           
  2097                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 106:     ANSE
      +                          LH = 0;
  2098     0371  0189               	clrf	9	;volatile
  2099     0372                     l1523:
  2100                           
  2101                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 108:     TRIS
      +                          B = 0;
  2102     0372  1683               	bsf	3,5	;RP0=1, select bank1
  2103     0373  1303               	bcf	3,6	;RP1=0, select bank1
  2104     0374  0186               	clrf	6	;volatile
  2105     0375                     l1525:
  2106                           
  2107                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 109:     TRIS
      +                          C = 128;
  2108     0375  3080               	movlw	128
  2109     0376  0087               	movwf	7	;volatile
  2110     0377                     l1527:
  2111                           
  2112                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 110:     TRIS
      +                          D = 0;
  2113     0377  0188               	clrf	8	;volatile
  2114     0378                     l1529:
  2115                           
  2116                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 112:     PORT
      +                          B = 0;
  2117     0378  1283               	bcf	3,5	;RP0=0, select bank0
  2118     0379  1303               	bcf	3,6	;RP1=0, select bank0
  2119     037A  0186               	clrf	6	;volatile
  2120     037B                     l1531:
  2121                           
  2122                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 113:     PORT
      +                          C = 0;
  2123     037B  0187               	clrf	7	;volatile
  2124     037C                     l1533:
  2125                           
  2126                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 114:     PORT
      +                          D = 0;
  2127     037C  0188               	clrf	8	;volatile
  2128     037D                     l1535:
  2129                           
  2130                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 115:     I2C_
      +                          Master_Init(100000);
  2131     037D  3000               	movlw	0
  2132     037E  00CB               	movwf	I2C_Master_Init@c+3
  2133     037F  3001               	movlw	1
  2134     0380  00CA               	movwf	I2C_Master_Init@c+2
  2135     0381  3086               	movlw	134
  2136     0382  00C9               	movwf	I2C_Master_Init@c+1
  2137     0383  30A0               	movlw	160
  2138     0384  00C8               	movwf	I2C_Master_Init@c
  2139     0385  120A  118A  23BE  120A  118A  	fcall	_I2C_Master_Init
  2140     038A                     l1537:
  2141                           
  2142                           ;E:/Universidad/Semestre2_2023/Digital-2/Lab4/Lab4_Master.X/Lab4_Master.c: 116:     Lcd_
      +                          Init();
  2143     038A  120A  118A  24B2  120A  118A  	fcall	_Lcd_Init
  2144     038F                     l205:
  2145     038F  0008               	return
  2146     0390                     __end_of_setup:
  2147                           
  2148                           	psect	text7
  2149     0503                     __ptext7:	
  2150 ;; *************** function _configOsc *****************
  2151 ;; Defined at:
  2152 ;;		line 4 in file "oscillator.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  frec            2    0[COMMON] unsigned int 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2166 ;;      Params:         2       0       0       0       0
  2167 ;;      Locals:         0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0
  2169 ;;      Totals:         2       0       0       0       0
  2170 ;;Total ram usage:        2 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_setup
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179     0503                     _configOsc:	
  2180                           ;psect for function _configOsc
  2181                           
  2182     0503                     l1357:	
  2183                           ;incstack = 0
  2184                           ; Regs used in _configOsc: [wreg+status,2+status,0]
  2185                           
  2186                           
  2187                           ;oscillator.c: 5:         if (frec == 8) OSCCONbits.IRCF = 0b111;
  2188     0503  3008               	movlw	8
  2189     0504  0670               	xorwf	configOsc@frec,w
  2190     0505  0471               	iorwf	configOsc@frec+1,w
  2191     0506  1D03               	btfss	3,2
  2192     0507  2D09               	goto	u751
  2193     0508  2D0A               	goto	u750
  2194     0509                     u751:
  2195     0509  2D0E               	goto	l78
  2196     050A                     u750:
  2197     050A                     l1359:
  2198     050A  3070               	movlw	112
  2199     050B  1683               	bsf	3,5	;RP0=1, select bank1
  2200     050C  1303               	bcf	3,6	;RP1=0, select bank1
  2201     050D  048F               	iorwf	15,f	;volatile
  2202     050E                     l78:
  2203                           
  2204                           ;oscillator.c: 6:         if (frec == 4) OSCCONbits.IRCF = 0b110;
  2205     050E  3004               	movlw	4
  2206     050F  0670               	xorwf	configOsc@frec,w
  2207     0510  0471               	iorwf	configOsc@frec+1,w
  2208     0511  1D03               	btfss	3,2
  2209     0512  2D14               	goto	u761
  2210     0513  2D15               	goto	u760
  2211     0514                     u761:
  2212     0514  2D1B               	goto	l79
  2213     0515                     u760:
  2214     0515                     l1361:
  2215     0515  1683               	bsf	3,5	;RP0=1, select bank1
  2216     0516  1303               	bcf	3,6	;RP1=0, select bank1
  2217     0517  080F               	movf	15,w	;volatile
  2218     0518  398F               	andlw	-113
  2219     0519  3860               	iorlw	96
  2220     051A  008F               	movwf	15	;volatile
  2221     051B                     l79:
  2222                           
  2223                           ;oscillator.c: 7:         if (frec == 1) OSCCONbits.IRCF = 0b100;
  2224     051B  0370               	decf	configOsc@frec,w
  2225     051C  0471               	iorwf	configOsc@frec+1,w
  2226     051D  1D03               	btfss	3,2
  2227     051E  2D20               	goto	u771
  2228     051F  2D21               	goto	u770
  2229     0520                     u771:
  2230     0520  2D27               	goto	l80
  2231     0521                     u770:
  2232     0521                     l1363:
  2233     0521  1683               	bsf	3,5	;RP0=1, select bank1
  2234     0522  1303               	bcf	3,6	;RP1=0, select bank1
  2235     0523  080F               	movf	15,w	;volatile
  2236     0524  398F               	andlw	-113
  2237     0525  3840               	iorlw	64
  2238     0526  008F               	movwf	15	;volatile
  2239     0527                     l80:
  2240                           
  2241                           ;oscillator.c: 8:         if (frec == 500) OSCCONbits.IRCF = 0b011;
  2242     0527  30F4               	movlw	244
  2243     0528  0670               	xorwf	configOsc@frec,w
  2244     0529  1D03               	skipz
  2245     052A  2D2F               	goto	u781
  2246     052B  0371               	decf	configOsc@frec+1,w
  2247     052C  1D03               	btfss	3,2
  2248     052D  2D2F               	goto	u781
  2249     052E  2D30               	goto	u780
  2250     052F                     u781:
  2251     052F  2D36               	goto	l81
  2252     0530                     u780:
  2253     0530                     l1365:
  2254     0530  1683               	bsf	3,5	;RP0=1, select bank1
  2255     0531  1303               	bcf	3,6	;RP1=0, select bank1
  2256     0532  080F               	movf	15,w	;volatile
  2257     0533  398F               	andlw	-113
  2258     0534  3830               	iorlw	48
  2259     0535  008F               	movwf	15	;volatile
  2260     0536                     l81:
  2261                           
  2262                           ;oscillator.c: 9:         if (frec == 250) OSCCONbits.IRCF = 0b101;
  2263     0536  30FA               	movlw	250
  2264     0537  0670               	xorwf	configOsc@frec,w
  2265     0538  0471               	iorwf	configOsc@frec+1,w
  2266     0539  1D03               	btfss	3,2
  2267     053A  2D3C               	goto	u791
  2268     053B  2D3D               	goto	u790
  2269     053C                     u791:
  2270     053C  2D43               	goto	l82
  2271     053D                     u790:
  2272     053D                     l1367:
  2273     053D  1683               	bsf	3,5	;RP0=1, select bank1
  2274     053E  1303               	bcf	3,6	;RP1=0, select bank1
  2275     053F  080F               	movf	15,w	;volatile
  2276     0540  398F               	andlw	-113
  2277     0541  3850               	iorlw	80
  2278     0542  008F               	movwf	15	;volatile
  2279     0543                     l82:
  2280                           
  2281                           ;oscillator.c: 10:         if (frec == 125) OSCCONbits.IRCF = 0b001;
  2282     0543  307D               	movlw	125
  2283     0544  0670               	xorwf	configOsc@frec,w
  2284     0545  0471               	iorwf	configOsc@frec+1,w
  2285     0546  1D03               	btfss	3,2
  2286     0547  2D49               	goto	u801
  2287     0548  2D4A               	goto	u800
  2288     0549                     u801:
  2289     0549  2D50               	goto	l83
  2290     054A                     u800:
  2291     054A                     l1369:
  2292     054A  1683               	bsf	3,5	;RP0=1, select bank1
  2293     054B  1303               	bcf	3,6	;RP1=0, select bank1
  2294     054C  080F               	movf	15,w	;volatile
  2295     054D  398F               	andlw	-113
  2296     054E  3810               	iorlw	16
  2297     054F  008F               	movwf	15	;volatile
  2298     0550                     l83:
  2299                           
  2300                           ;oscillator.c: 11:         if (frec == 31) OSCCONbits.IRCF = 0b000;
  2301     0550  301F               	movlw	31
  2302     0551  0670               	xorwf	configOsc@frec,w
  2303     0552  0471               	iorwf	configOsc@frec+1,w
  2304     0553  1D03               	btfss	3,2
  2305     0554  2D56               	goto	u811
  2306     0555  2D57               	goto	u810
  2307     0556                     u811:
  2308     0556  2D5B               	goto	l1373
  2309     0557                     u810:
  2310     0557                     l1371:
  2311     0557  308F               	movlw	-113
  2312     0558  1683               	bsf	3,5	;RP0=1, select bank1
  2313     0559  1303               	bcf	3,6	;RP1=0, select bank1
  2314     055A  058F               	andwf	15,f	;volatile
  2315     055B                     l1373:
  2316                           
  2317                           ;oscillator.c: 12:         OSCCONbits.SCS = 1;
  2318     055B  1683               	bsf	3,5	;RP0=1, select bank1
  2319     055C  1303               	bcf	3,6	;RP1=0, select bank1
  2320     055D  140F               	bsf	15,0	;volatile
  2321     055E                     l85:
  2322     055E  0008               	return
  2323     055F                     __end_of_configOsc:
  2324                           
  2325                           	psect	text8
  2326     04B2                     __ptext8:	
  2327 ;; *************** function _Lcd_Init *****************
  2328 ;; Defined at:
  2329 ;;		line 80 in file "lcd.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;		None
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      void 
  2336 ;; Registers used:
  2337 ;;		wreg, status,2, status,0, pclath, cstack
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2343 ;;      Params:         0       0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0
  2345 ;;      Temps:          2       0       0       0       0
  2346 ;;      Totals:         2       0       0       0       0
  2347 ;;Total ram usage:        2 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; Hardware stack levels required when called: 2
  2350 ;; This function calls:
  2351 ;;		_Lcd_Cmd
  2352 ;;		_Lcd_Port
  2353 ;; This function is called by:
  2354 ;;		_setup
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358     04B2                     _Lcd_Init:	
  2359                           ;psect for function _Lcd_Init
  2360                           
  2361     04B2                     l1337:	
  2362                           ;incstack = 0
  2363                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2364                           
  2365                           
  2366                           ;lcd.c: 81:     Lcd_Port(0);
  2367     04B2  3000               	movlw	0
  2368     04B3  120A  118A  2430  120A  118A  	fcall	_Lcd_Port
  2369     04B8                     l1339:
  2370                           
  2371                           ;lcd.c: 82:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2372     04B8  3034               	movlw	52
  2373     04B9  00F5               	movwf	??_Lcd_Init+1
  2374     04BA  30F1               	movlw	241
  2375     04BB  00F4               	movwf	??_Lcd_Init
  2376     04BC                     u1227:
  2377     04BC  0BF4               	decfsz	??_Lcd_Init,f
  2378     04BD  2CBC               	goto	u1227
  2379     04BE  0BF5               	decfsz	??_Lcd_Init+1,f
  2380     04BF  2CBC               	goto	u1227
  2381     04C0  2CC1               	nop2
  2382     04C1                     l1341:
  2383                           
  2384                           ;lcd.c: 83:     Lcd_Cmd(48);
  2385     04C1  3030               	movlw	48
  2386     04C2  120A  118A  230A  120A  118A  	fcall	_Lcd_Cmd
  2387                           
  2388                           ;lcd.c: 84:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2389     04C7  300D               	movlw	13
  2390     04C8  00F5               	movwf	??_Lcd_Init+1
  2391     04C9  30FB               	movlw	251
  2392     04CA  00F4               	movwf	??_Lcd_Init
  2393     04CB                     u1237:
  2394     04CB  0BF4               	decfsz	??_Lcd_Init,f
  2395     04CC  2CCB               	goto	u1237
  2396     04CD  0BF5               	decfsz	??_Lcd_Init+1,f
  2397     04CE  2CCB               	goto	u1237
  2398     04CF  2CD0               	nop2
  2399     04D0                     l1343:
  2400                           
  2401                           ;lcd.c: 85:     Lcd_Cmd(48);
  2402     04D0  3030               	movlw	48
  2403     04D1  120A  118A  230A  120A  118A  	fcall	_Lcd_Cmd
  2404     04D6                     l1345:
  2405                           
  2406                           ;lcd.c: 86:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2407     04D6  301D               	movlw	29
  2408     04D7  00F5               	movwf	??_Lcd_Init+1
  2409     04D8  3091               	movlw	145
  2410     04D9  00F4               	movwf	??_Lcd_Init
  2411     04DA                     u1247:
  2412     04DA  0BF4               	decfsz	??_Lcd_Init,f
  2413     04DB  2CDA               	goto	u1247
  2414     04DC  0BF5               	decfsz	??_Lcd_Init+1,f
  2415     04DD  2CDA               	goto	u1247
  2416                           
  2417                           ;lcd.c: 87:     Lcd_Cmd(48);
  2418     04DE  3030               	movlw	48
  2419     04DF  120A  118A  230A  120A  118A  	fcall	_Lcd_Cmd
  2420                           
  2421                           ;lcd.c: 89:     Lcd_Cmd(56);
  2422     04E4  3038               	movlw	56
  2423     04E5  120A  118A  230A  120A  118A  	fcall	_Lcd_Cmd
  2424                           
  2425                           ;lcd.c: 90:     Lcd_Cmd(8);
  2426     04EA  3008               	movlw	8
  2427     04EB  120A  118A  230A  120A  118A  	fcall	_Lcd_Cmd
  2428                           
  2429                           ;lcd.c: 91:     Lcd_Cmd(1);
  2430     04F0  3001               	movlw	1
  2431     04F1  120A  118A  230A  120A  118A  	fcall	_Lcd_Cmd
  2432                           
  2433                           ;lcd.c: 92:     Lcd_Cmd(6);
  2434     04F6  3006               	movlw	6
  2435     04F7  120A  118A  230A  120A  118A  	fcall	_Lcd_Cmd
  2436                           
  2437                           ;lcd.c: 93:     Lcd_Cmd(12);
  2438     04FC  300C               	movlw	12
  2439     04FD  120A  118A  230A  120A  118A  	fcall	_Lcd_Cmd
  2440     0502                     l58:
  2441     0502  0008               	return
  2442     0503                     __end_of_Lcd_Init:
  2443                           
  2444                           	psect	text9
  2445     03BE                     __ptext9:	
  2446 ;; *************** function _I2C_Master_Init *****************
  2447 ;; Defined at:
  2448 ;;		line 16 in file "I2C.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  c               4    0[BANK0 ] const unsigned long 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2462 ;;      Params:         0       4       0       0       0
  2463 ;;      Locals:         0       0       0       0       0
  2464 ;;      Temps:          0       4       0       0       0
  2465 ;;      Totals:         0       8       0       0       0
  2466 ;;Total ram usage:        8 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; Hardware stack levels required when called: 1
  2469 ;; This function calls:
  2470 ;;		___lldiv
  2471 ;; This function is called by:
  2472 ;;		_setup
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476     03BE                     _I2C_Master_Init:	
  2477                           ;psect for function _I2C_Master_Init
  2478                           
  2479     03BE                     l1375:	
  2480                           ;incstack = 0
  2481                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2482                           
  2483                           
  2484                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2485     03BE  3028               	movlw	40
  2486     03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2487     03C0  1303               	bcf	3,6	;RP1=0, select bank0
  2488     03C1  0094               	movwf	20	;volatile
  2489     03C2                     l1377:
  2490                           
  2491                           ;I2C.c: 19:     SSPCON2 = 0;
  2492     03C2  1683               	bsf	3,5	;RP0=1, select bank1
  2493     03C3  1303               	bcf	3,6	;RP1=0, select bank1
  2494     03C4  0191               	clrf	17	;volatile
  2495     03C5                     l1379:
  2496                           
  2497                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2498     03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2499     03C6  1303               	bcf	3,6	;RP1=0, select bank0
  2500     03C7  0848               	movf	I2C_Master_Init@c,w
  2501     03C8  00CC               	movwf	??_I2C_Master_Init
  2502     03C9  0849               	movf	I2C_Master_Init@c+1,w
  2503     03CA  00CD               	movwf	??_I2C_Master_Init+1
  2504     03CB  084A               	movf	I2C_Master_Init@c+2,w
  2505     03CC  00CE               	movwf	??_I2C_Master_Init+2
  2506     03CD  084B               	movf	I2C_Master_Init@c+3,w
  2507     03CE  00CF               	movwf	??_I2C_Master_Init+3
  2508     03CF  3002               	movlw	2
  2509     03D0                     u825:
  2510     03D0  1003               	clrc
  2511     03D1  0DCC               	rlf	??_I2C_Master_Init,f
  2512     03D2  0DCD               	rlf	??_I2C_Master_Init+1,f
  2513     03D3  0DCE               	rlf	??_I2C_Master_Init+2,f
  2514     03D4  0DCF               	rlf	??_I2C_Master_Init+3,f
  2515     03D5                     u820:
  2516     03D5  3EFF               	addlw	-1
  2517     03D6  1D03               	skipz
  2518     03D7  2BD0               	goto	u825
  2519     03D8  084F               	movf	??_I2C_Master_Init+3,w
  2520     03D9  00F3               	movwf	___lldiv@divisor+3
  2521     03DA  084E               	movf	??_I2C_Master_Init+2,w
  2522     03DB  00F2               	movwf	___lldiv@divisor+2
  2523     03DC  084D               	movf	??_I2C_Master_Init+1,w
  2524     03DD  00F1               	movwf	___lldiv@divisor+1
  2525     03DE  084C               	movf	??_I2C_Master_Init,w
  2526     03DF  00F0               	movwf	___lldiv@divisor
  2527     03E0  3000               	movlw	0
  2528     03E1  00F7               	movwf	___lldiv@dividend+3
  2529     03E2  307A               	movlw	122
  2530     03E3  00F6               	movwf	___lldiv@dividend+2
  2531     03E4  3012               	movlw	18
  2532     03E5  00F5               	movwf	___lldiv@dividend+1
  2533     03E6  3000               	movlw	0
  2534     03E7  00F4               	movwf	___lldiv@dividend
  2535     03E8  120A  118A  255F  120A  118A  	fcall	___lldiv
  2536     03ED  0870               	movf	?___lldiv,w
  2537     03EE  3EFF               	addlw	255
  2538     03EF  1683               	bsf	3,5	;RP0=1, select bank1
  2539     03F0  1303               	bcf	3,6	;RP1=0, select bank1
  2540     03F1  0093               	movwf	19	;volatile
  2541     03F2                     l1381:
  2542                           
  2543                           ;I2C.c: 21:     SSPSTAT = 0;
  2544     03F2  0194               	clrf	20	;volatile
  2545     03F3                     l1383:
  2546                           
  2547                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2548     03F3  1587               	bsf	7,3	;volatile
  2549     03F4                     l1385:
  2550                           
  2551                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2552     03F4  1607               	bsf	7,4	;volatile
  2553     03F5                     l114:
  2554     03F5  0008               	return
  2555     03F6                     __end_of_I2C_Master_Init:
  2556                           
  2557                           	psect	text10
  2558     055F                     __ptext10:	
  2559 ;; *************** function ___lldiv *****************
  2560 ;; Defined at:
  2561 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  divisor         4    0[COMMON] unsigned long 
  2564 ;;  dividend        4    4[COMMON] unsigned long 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  quotient        4    9[COMMON] unsigned long 
  2567 ;;  counter         1   13[COMMON] unsigned char 
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  4    0[COMMON] unsigned long 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0, btemp+1
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2577 ;;      Params:         8       0       0       0       0
  2578 ;;      Locals:         5       0       0       0       0
  2579 ;;      Temps:          1       0       0       0       0
  2580 ;;      Totals:        14       0       0       0       0
  2581 ;;Total ram usage:       14 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; This function calls:
  2584 ;;		Nothing
  2585 ;; This function is called by:
  2586 ;;		_I2C_Master_Init
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590     055F                     ___lldiv:	
  2591                           ;psect for function ___lldiv
  2592                           
  2593     055F                     l1311:	
  2594                           ;incstack = 0
  2595                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2596                           
  2597     055F  3000               	movlw	0
  2598     0560  00FC               	movwf	___lldiv@quotient+3
  2599     0561  3000               	movlw	0
  2600     0562  00FB               	movwf	___lldiv@quotient+2
  2601     0563  3000               	movlw	0
  2602     0564  00FA               	movwf	___lldiv@quotient+1
  2603     0565  3000               	movlw	0
  2604     0566  00F9               	movwf	___lldiv@quotient
  2605     0567  0873               	movf	___lldiv@divisor+3,w
  2606     0568  0472               	iorwf	___lldiv@divisor+2,w
  2607     0569  0471               	iorwf	___lldiv@divisor+1,w
  2608     056A  0470               	iorwf	___lldiv@divisor,w
  2609     056B  1903               	skipnz
  2610     056C  2D6E               	goto	u681
  2611     056D  2D6F               	goto	u680
  2612     056E                     u681:
  2613     056E  2DBC               	goto	l1333
  2614     056F                     u680:
  2615     056F                     l1313:
  2616     056F  01FD               	clrf	___lldiv@counter
  2617     0570  0AFD               	incf	___lldiv@counter,f
  2618     0571  2D7F               	goto	l1319
  2619     0572                     l1315:
  2620     0572  3001               	movlw	1
  2621     0573  00F8               	movwf	??___lldiv
  2622     0574                     u695:
  2623     0574  1003               	clrc
  2624     0575  0DF0               	rlf	___lldiv@divisor,f
  2625     0576  0DF1               	rlf	___lldiv@divisor+1,f
  2626     0577  0DF2               	rlf	___lldiv@divisor+2,f
  2627     0578  0DF3               	rlf	___lldiv@divisor+3,f
  2628     0579  0BF8               	decfsz	??___lldiv,f
  2629     057A  2D74               	goto	u695
  2630     057B                     l1317:
  2631     057B  3001               	movlw	1
  2632     057C  00FF               	movwf	btemp+1
  2633     057D  087F               	movf	btemp+1,w
  2634     057E  07FD               	addwf	___lldiv@counter,f
  2635     057F                     l1319:
  2636     057F  1FF3               	btfss	___lldiv@divisor+3,7
  2637     0580  2D82               	goto	u701
  2638     0581  2D83               	goto	u700
  2639     0582                     u701:
  2640     0582  2D72               	goto	l1315
  2641     0583                     u700:
  2642     0583                     l1321:
  2643     0583  3001               	movlw	1
  2644     0584  00F8               	movwf	??___lldiv
  2645     0585                     u715:
  2646     0585  1003               	clrc
  2647     0586  0DF9               	rlf	___lldiv@quotient,f
  2648     0587  0DFA               	rlf	___lldiv@quotient+1,f
  2649     0588  0DFB               	rlf	___lldiv@quotient+2,f
  2650     0589  0DFC               	rlf	___lldiv@quotient+3,f
  2651     058A  0BF8               	decfsz	??___lldiv,f
  2652     058B  2D85               	goto	u715
  2653     058C                     l1323:
  2654     058C  0873               	movf	___lldiv@divisor+3,w
  2655     058D  0277               	subwf	___lldiv@dividend+3,w
  2656     058E  1D03               	skipz
  2657     058F  2D9A               	goto	u725
  2658     0590  0872               	movf	___lldiv@divisor+2,w
  2659     0591  0276               	subwf	___lldiv@dividend+2,w
  2660     0592  1D03               	skipz
  2661     0593  2D9A               	goto	u725
  2662     0594  0871               	movf	___lldiv@divisor+1,w
  2663     0595  0275               	subwf	___lldiv@dividend+1,w
  2664     0596  1D03               	skipz
  2665     0597  2D9A               	goto	u725
  2666     0598  0870               	movf	___lldiv@divisor,w
  2667     0599  0274               	subwf	___lldiv@dividend,w
  2668     059A                     u725:
  2669     059A  1C03               	skipc
  2670     059B  2D9D               	goto	u721
  2671     059C  2D9E               	goto	u720
  2672     059D                     u721:
  2673     059D  2DAD               	goto	l1329
  2674     059E                     u720:
  2675     059E                     l1325:
  2676     059E  0870               	movf	___lldiv@divisor,w
  2677     059F  02F4               	subwf	___lldiv@dividend,f
  2678     05A0  0871               	movf	___lldiv@divisor+1,w
  2679     05A1  1C03               	skipc
  2680     05A2  0F71               	incfsz	___lldiv@divisor+1,w
  2681     05A3  02F5               	subwf	___lldiv@dividend+1,f
  2682     05A4  0872               	movf	___lldiv@divisor+2,w
  2683     05A5  1C03               	skipc
  2684     05A6  0F72               	incfsz	___lldiv@divisor+2,w
  2685     05A7  02F6               	subwf	___lldiv@dividend+2,f
  2686     05A8  0873               	movf	___lldiv@divisor+3,w
  2687     05A9  1C03               	skipc
  2688     05AA  0F73               	incfsz	___lldiv@divisor+3,w
  2689     05AB  02F7               	subwf	___lldiv@dividend+3,f
  2690     05AC                     l1327:
  2691     05AC  1479               	bsf	___lldiv@quotient,0
  2692     05AD                     l1329:
  2693     05AD  3001               	movlw	1
  2694     05AE                     u735:
  2695     05AE  1003               	clrc
  2696     05AF  0CF3               	rrf	___lldiv@divisor+3,f
  2697     05B0  0CF2               	rrf	___lldiv@divisor+2,f
  2698     05B1  0CF1               	rrf	___lldiv@divisor+1,f
  2699     05B2  0CF0               	rrf	___lldiv@divisor,f
  2700     05B3  3EFF               	addlw	-1
  2701     05B4  1D03               	skipz
  2702     05B5  2DAE               	goto	u735
  2703     05B6                     l1331:
  2704     05B6  3001               	movlw	1
  2705     05B7  02FD               	subwf	___lldiv@counter,f
  2706     05B8  1D03               	btfss	3,2
  2707     05B9  2DBB               	goto	u741
  2708     05BA  2DBC               	goto	u740
  2709     05BB                     u741:
  2710     05BB  2D83               	goto	l1321
  2711     05BC                     u740:
  2712     05BC                     l1333:
  2713     05BC  087C               	movf	___lldiv@quotient+3,w
  2714     05BD  00F3               	movwf	?___lldiv+3
  2715     05BE  087B               	movf	___lldiv@quotient+2,w
  2716     05BF  00F2               	movwf	?___lldiv+2
  2717     05C0  087A               	movf	___lldiv@quotient+1,w
  2718     05C1  00F1               	movwf	?___lldiv+1
  2719     05C2  0879               	movf	___lldiv@quotient,w
  2720     05C3  00F0               	movwf	?___lldiv
  2721     05C4                     l366:
  2722     05C4  0008               	return
  2723     05C5                     __end_of___lldiv:
  2724                           
  2725                           	psect	text11
  2726     0344                     __ptext11:	
  2727 ;; *************** function _Lcd_Write_String *****************
  2728 ;; Defined at:
  2729 ;;		line 104 in file "lcd.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  a               1    wreg     PTR unsigned char 
  2732 ;;		 -> line2LCD(16), line1LCD(16), 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  a               1    6[COMMON] PTR unsigned char 
  2735 ;;		 -> line2LCD(16), line1LCD(16), 
  2736 ;;  i               2    4[COMMON] int 
  2737 ;; Return value:  Size  Location     Type
  2738 ;;                  1    wreg      void 
  2739 ;; Registers used:
  2740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2741 ;; Tracked objects:
  2742 ;;		On entry : 0/0
  2743 ;;		On exit  : 0/0
  2744 ;;		Unchanged: 0/0
  2745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2746 ;;      Params:         0       0       0       0       0
  2747 ;;      Locals:         3       0       0       0       0
  2748 ;;      Temps:          1       0       0       0       0
  2749 ;;      Totals:         4       0       0       0       0
  2750 ;;Total ram usage:        4 bytes
  2751 ;; Hardware stack levels used: 1
  2752 ;; Hardware stack levels required when called: 2
  2753 ;; This function calls:
  2754 ;;		_Lcd_Write_Char
  2755 ;; This function is called by:
  2756 ;;		_main
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760     0344                     _Lcd_Write_String:	
  2761                           ;psect for function _Lcd_Write_String
  2762                           
  2763                           
  2764                           ;incstack = 0
  2765                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2766                           ;Lcd_Write_String@a stored from wreg
  2767     0344  00F6               	movwf	Lcd_Write_String@a
  2768     0345                     l1481:
  2769                           
  2770                           ;lcd.c: 105:     int i;;lcd.c: 106:     for (i = 0; a[i] != '\0'; i++)
  2771     0345  01F4               	clrf	Lcd_Write_String@i
  2772     0346  01F5               	clrf	Lcd_Write_String@i+1
  2773     0347  2B59               	goto	l1487
  2774     0348                     l1483:
  2775                           
  2776                           ;lcd.c: 107:         Lcd_Write_Char(a[i]);
  2777     0348  0874               	movf	Lcd_Write_String@i,w
  2778     0349  0776               	addwf	Lcd_Write_String@a,w
  2779     034A  00F3               	movwf	??_Lcd_Write_String
  2780     034B  0873               	movf	??_Lcd_Write_String,w
  2781     034C  0084               	movwf	4
  2782     034D  0800               	movf	0,w
  2783     034E  120A  118A  22F4  120A  118A  	fcall	_Lcd_Write_Char
  2784     0353                     l1485:
  2785     0353  3001               	movlw	1
  2786     0354  07F4               	addwf	Lcd_Write_String@i,f
  2787     0355  1803               	skipnc
  2788     0356  0AF5               	incf	Lcd_Write_String@i+1,f
  2789     0357  3000               	movlw	0
  2790     0358  07F5               	addwf	Lcd_Write_String@i+1,f
  2791     0359                     l1487:
  2792     0359  0874               	movf	Lcd_Write_String@i,w
  2793     035A  0776               	addwf	Lcd_Write_String@a,w
  2794     035B  00F3               	movwf	??_Lcd_Write_String
  2795     035C  0873               	movf	??_Lcd_Write_String,w
  2796     035D  0084               	movwf	4
  2797     035E  1383               	bcf	3,7	;select IRP bank0
  2798     035F  0800               	movf	0,w
  2799     0360  1D03               	btfss	3,2
  2800     0361  2B63               	goto	u1041
  2801     0362  2B64               	goto	u1040
  2802     0363                     u1041:
  2803     0363  2B48               	goto	l1483
  2804     0364                     u1040:
  2805     0364                     l67:
  2806     0364  0008               	return
  2807     0365                     __end_of_Lcd_Write_String:
  2808                           
  2809                           	psect	text12
  2810     02F4                     __ptext12:	
  2811 ;; *************** function _Lcd_Write_Char *****************
  2812 ;; Defined at:
  2813 ;;		line 96 in file "lcd.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  a               1    wreg     unsigned char 
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  a               1    2[COMMON] unsigned char 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0, pclath, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2827 ;;      Params:         0       0       0       0       0
  2828 ;;      Locals:         1       0       0       0       0
  2829 ;;      Temps:          1       0       0       0       0
  2830 ;;      Totals:         2       0       0       0       0
  2831 ;;Total ram usage:        2 bytes
  2832 ;; Hardware stack levels used: 1
  2833 ;; Hardware stack levels required when called: 1
  2834 ;; This function calls:
  2835 ;;		_Lcd_Port
  2836 ;; This function is called by:
  2837 ;;		_Lcd_Write_String
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841     02F4                     _Lcd_Write_Char:	
  2842                           ;psect for function _Lcd_Write_Char
  2843                           
  2844                           
  2845                           ;incstack = 0
  2846                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2847                           ;Lcd_Write_Char@a stored from wreg
  2848     02F4  00F2               	movwf	Lcd_Write_Char@a
  2849     02F5                     l1347:
  2850                           
  2851                           ;lcd.c: 97:     RC0 = 1;
  2852     02F5  1283               	bcf	3,5	;RP0=0, select bank0
  2853     02F6  1303               	bcf	3,6	;RP1=0, select bank0
  2854     02F7  1407               	bsf	7,0	;volatile
  2855     02F8                     l1349:
  2856                           
  2857                           ;lcd.c: 98:     Lcd_Port(a);
  2858     02F8  0872               	movf	Lcd_Write_Char@a,w
  2859     02F9  120A  118A  2430  120A  118A  	fcall	_Lcd_Port
  2860     02FE                     l1351:
  2861                           
  2862                           ;lcd.c: 99:     RC1 = 1;
  2863     02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2864     02FF  1303               	bcf	3,6	;RP1=0, select bank0
  2865     0300  1487               	bsf	7,1	;volatile
  2866     0301                     l1353:
  2867                           
  2868                           ;lcd.c: 100:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2869     0301  301A               	movlw	26
  2870     0302  00F1               	movwf	??_Lcd_Write_Char
  2871     0303                     u1257:
  2872     0303  0BF1               	decfsz	??_Lcd_Write_Char,f
  2873     0304  2B03               	goto	u1257
  2874     0305  0000               	nop
  2875     0306                     l1355:
  2876                           
  2877                           ;lcd.c: 101:     RC1 = 0;
  2878     0306  1283               	bcf	3,5	;RP0=0, select bank0
  2879     0307  1303               	bcf	3,6	;RP1=0, select bank0
  2880     0308  1087               	bcf	7,1	;volatile
  2881     0309                     l61:
  2882     0309  0008               	return
  2883     030A                     __end_of_Lcd_Write_Char:
  2884                           
  2885                           	psect	text13
  2886     0324                     __ptext13:	
  2887 ;; *************** function _Lcd_Set_Cursor *****************
  2888 ;; Defined at:
  2889 ;;		line 68 in file "lcd.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  a               1    wreg     unsigned char 
  2892 ;;  b               1    4[COMMON] unsigned char 
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;  a               1    5[COMMON] unsigned char 
  2895 ;;  temp            1    6[COMMON] unsigned char 
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		wreg, status,2, status,0, pclath, cstack
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2905 ;;      Params:         1       0       0       0       0
  2906 ;;      Locals:         2       0       0       0       0
  2907 ;;      Temps:          0       0       0       0       0
  2908 ;;      Totals:         3       0       0       0       0
  2909 ;;Total ram usage:        3 bytes
  2910 ;; Hardware stack levels used: 1
  2911 ;; Hardware stack levels required when called: 2
  2912 ;; This function calls:
  2913 ;;		_Lcd_Cmd
  2914 ;; This function is called by:
  2915 ;;		_main
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919     0324                     _Lcd_Set_Cursor:	
  2920                           ;psect for function _Lcd_Set_Cursor
  2921                           
  2922                           
  2923                           ;incstack = 0
  2924                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2925                           ;Lcd_Set_Cursor@a stored from wreg
  2926     0324  00F5               	movwf	Lcd_Set_Cursor@a
  2927     0325                     l1469:
  2928                           
  2929                           ;lcd.c: 69:     unsigned char temp;;lcd.c: 70:     if (a == 1) {
  2930     0325  0375               	decf	Lcd_Set_Cursor@a,w
  2931     0326  1D03               	btfss	3,2
  2932     0327  2B29               	goto	u1021
  2933     0328  2B2A               	goto	u1020
  2934     0329                     u1021:
  2935     0329  2B34               	goto	l1475
  2936     032A                     u1020:
  2937     032A                     l1471:
  2938                           
  2939                           ;lcd.c: 71:         temp = 0x80 + b - 1;
  2940     032A  0874               	movf	Lcd_Set_Cursor@b,w
  2941     032B  3E7F               	addlw	127
  2942     032C  00F6               	movwf	Lcd_Set_Cursor@temp
  2943     032D                     l1473:
  2944                           
  2945                           ;lcd.c: 72:         Lcd_Cmd(temp);
  2946     032D  0876               	movf	Lcd_Set_Cursor@temp,w
  2947     032E  120A  118A  230A  120A  118A  	fcall	_Lcd_Cmd
  2948                           
  2949                           ;lcd.c: 74:     } else if (a == 2) {
  2950     0333  2B43               	goto	l55
  2951     0334                     l1475:
  2952     0334  3002               	movlw	2
  2953     0335  0675               	xorwf	Lcd_Set_Cursor@a,w
  2954     0336  1D03               	btfss	3,2
  2955     0337  2B39               	goto	u1031
  2956     0338  2B3A               	goto	u1030
  2957     0339                     u1031:
  2958     0339  2B43               	goto	l55
  2959     033A                     u1030:
  2960     033A                     l1477:
  2961                           
  2962                           ;lcd.c: 75:         temp = 0xC0 + b - 1;
  2963     033A  0874               	movf	Lcd_Set_Cursor@b,w
  2964     033B  3EBF               	addlw	191
  2965     033C  00F6               	movwf	Lcd_Set_Cursor@temp
  2966     033D                     l1479:
  2967                           
  2968                           ;lcd.c: 76:         Lcd_Cmd(temp);
  2969     033D  0876               	movf	Lcd_Set_Cursor@temp,w
  2970     033E  120A  118A  230A  120A  118A  	fcall	_Lcd_Cmd
  2971     0343                     l55:
  2972     0343  0008               	return
  2973     0344                     __end_of_Lcd_Set_Cursor:
  2974                           
  2975                           	psect	text14
  2976     02C0                     __ptext14:	
  2977 ;; *************** function _Lcd_Clear *****************
  2978 ;; Defined at:
  2979 ;;		line 63 in file "lcd.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;		None
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;		None
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg, status,2, status,0, pclath, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2993 ;;      Params:         0       0       0       0       0
  2994 ;;      Locals:         0       0       0       0       0
  2995 ;;      Temps:          0       0       0       0       0
  2996 ;;      Totals:         0       0       0       0       0
  2997 ;;Total ram usage:        0 bytes
  2998 ;; Hardware stack levels used: 1
  2999 ;; Hardware stack levels required when called: 2
  3000 ;; This function calls:
  3001 ;;		_Lcd_Cmd
  3002 ;; This function is called by:
  3003 ;;		_main
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007     02C0                     _Lcd_Clear:	
  3008                           ;psect for function _Lcd_Clear
  3009                           
  3010     02C0                     l1467:	
  3011                           ;incstack = 0
  3012                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3013                           
  3014                           
  3015                           ;lcd.c: 64:     Lcd_Cmd(0);
  3016     02C0  3000               	movlw	0
  3017     02C1  120A  118A  230A  120A  118A  	fcall	_Lcd_Cmd
  3018                           
  3019                           ;lcd.c: 65:     Lcd_Cmd(1);
  3020     02C6  3001               	movlw	1
  3021     02C7  120A  118A  230A  120A  118A  	fcall	_Lcd_Cmd
  3022     02CC                     l49:
  3023     02CC  0008               	return
  3024     02CD                     __end_of_Lcd_Clear:
  3025                           
  3026                           	psect	text15
  3027     030A                     __ptext15:	
  3028 ;; *************** function _Lcd_Cmd *****************
  3029 ;; Defined at:
  3030 ;;		line 55 in file "lcd.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  a               1    wreg     unsigned char 
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  a               1    3[COMMON] unsigned char 
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg, status,2, status,0, pclath, cstack
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3044 ;;      Params:         0       0       0       0       0
  3045 ;;      Locals:         1       0       0       0       0
  3046 ;;      Temps:          2       0       0       0       0
  3047 ;;      Totals:         3       0       0       0       0
  3048 ;;Total ram usage:        3 bytes
  3049 ;; Hardware stack levels used: 1
  3050 ;; Hardware stack levels required when called: 1
  3051 ;; This function calls:
  3052 ;;		_Lcd_Port
  3053 ;; This function is called by:
  3054 ;;		_Lcd_Clear
  3055 ;;		_Lcd_Set_Cursor
  3056 ;;		_Lcd_Init
  3057 ;;		_Lcd_Shift_Right
  3058 ;;		_Lcd_Shift_Left
  3059 ;; This function uses a non-reentrant model
  3060 ;;
  3061                           
  3062     030A                     _Lcd_Cmd:	
  3063                           ;psect for function _Lcd_Cmd
  3064                           
  3065                           
  3066                           ;incstack = 0
  3067                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3068                           ;Lcd_Cmd@a stored from wreg
  3069     030A  00F3               	movwf	Lcd_Cmd@a
  3070     030B                     l1301:
  3071                           
  3072                           ;lcd.c: 56:     RC0 = 0;
  3073     030B  1283               	bcf	3,5	;RP0=0, select bank0
  3074     030C  1303               	bcf	3,6	;RP1=0, select bank0
  3075     030D  1007               	bcf	7,0	;volatile
  3076     030E                     l1303:
  3077                           
  3078                           ;lcd.c: 57:     Lcd_Port(a);
  3079     030E  0873               	movf	Lcd_Cmd@a,w
  3080     030F  120A  118A  2430  120A  118A  	fcall	_Lcd_Port
  3081     0314                     l1305:
  3082                           
  3083                           ;lcd.c: 58:     RC1 = 1;
  3084     0314  1283               	bcf	3,5	;RP0=0, select bank0
  3085     0315  1303               	bcf	3,6	;RP1=0, select bank0
  3086     0316  1487               	bsf	7,1	;volatile
  3087     0317                     l1307:
  3088                           
  3089                           ;lcd.c: 59:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3090     0317  300B               	movlw	11
  3091     0318  00F2               	movwf	??_Lcd_Cmd+1
  3092     0319  3062               	movlw	98
  3093     031A  00F1               	movwf	??_Lcd_Cmd
  3094     031B                     u1267:
  3095     031B  0BF1               	decfsz	??_Lcd_Cmd,f
  3096     031C  2B1B               	goto	u1267
  3097     031D  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3098     031E  2B1B               	goto	u1267
  3099     031F  0000               	nop
  3100     0320                     l1309:
  3101                           
  3102                           ;lcd.c: 60:     RC1 = 0;
  3103     0320  1283               	bcf	3,5	;RP0=0, select bank0
  3104     0321  1303               	bcf	3,6	;RP1=0, select bank0
  3105     0322  1087               	bcf	7,1	;volatile
  3106     0323                     l46:
  3107     0323  0008               	return
  3108     0324                     __end_of_Lcd_Cmd:
  3109                           
  3110                           	psect	text16
  3111     0430                     __ptext16:	
  3112 ;; *************** function _Lcd_Port *****************
  3113 ;; Defined at:
  3114 ;;		line 13 in file "lcd.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  a               1    wreg     unsigned char 
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  a               1    0[COMMON] unsigned char 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      void 
  3121 ;; Registers used:
  3122 ;;		wreg
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3128 ;;      Params:         0       0       0       0       0
  3129 ;;      Locals:         1       0       0       0       0
  3130 ;;      Temps:          0       0       0       0       0
  3131 ;;      Totals:         1       0       0       0       0
  3132 ;;Total ram usage:        1 bytes
  3133 ;; Hardware stack levels used: 1
  3134 ;; This function calls:
  3135 ;;		Nothing
  3136 ;; This function is called by:
  3137 ;;		_Lcd_Cmd
  3138 ;;		_Lcd_Init
  3139 ;;		_Lcd_Write_Char
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143     0430                     _Lcd_Port:	
  3144                           ;psect for function _Lcd_Port
  3145                           
  3146                           
  3147                           ;incstack = 0
  3148                           ; Regs used in _Lcd_Port: [wreg]
  3149                           ;Lcd_Port@a stored from wreg
  3150     0430  00F0               	movwf	Lcd_Port@a
  3151     0431                     l1283:
  3152                           
  3153                           ;lcd.c: 14:     if (a & 1)
  3154     0431  1C70               	btfss	Lcd_Port@a,0
  3155     0432  2C34               	goto	u601
  3156     0433  2C35               	goto	u600
  3157     0434                     u601:
  3158     0434  2C39               	goto	l27
  3159     0435                     u600:
  3160     0435                     l1285:
  3161                           
  3162                           ;lcd.c: 15:         RD0 = 1;
  3163     0435  1283               	bcf	3,5	;RP0=0, select bank0
  3164     0436  1303               	bcf	3,6	;RP1=0, select bank0
  3165     0437  1408               	bsf	8,0	;volatile
  3166     0438  2C3C               	goto	l28
  3167     0439                     l27:	
  3168                           ;lcd.c: 16:     else
  3169                           
  3170                           
  3171                           ;lcd.c: 17:         RD0 = 0;
  3172     0439  1283               	bcf	3,5	;RP0=0, select bank0
  3173     043A  1303               	bcf	3,6	;RP1=0, select bank0
  3174     043B  1008               	bcf	8,0	;volatile
  3175     043C                     l28:
  3176                           
  3177                           ;lcd.c: 19:     if (a & 2)
  3178     043C  1CF0               	btfss	Lcd_Port@a,1
  3179     043D  2C3F               	goto	u611
  3180     043E  2C40               	goto	u610
  3181     043F                     u611:
  3182     043F  2C42               	goto	l29
  3183     0440                     u610:
  3184     0440                     l1287:
  3185                           
  3186                           ;lcd.c: 20:         RD1 = 1;
  3187     0440  1488               	bsf	8,1	;volatile
  3188     0441  2C43               	goto	l30
  3189     0442                     l29:	
  3190                           ;lcd.c: 21:     else
  3191                           
  3192                           
  3193                           ;lcd.c: 22:         RD1 = 0;
  3194     0442  1088               	bcf	8,1	;volatile
  3195     0443                     l30:
  3196                           
  3197                           ;lcd.c: 24:     if (a & 4)
  3198     0443  1D70               	btfss	Lcd_Port@a,2
  3199     0444  2C46               	goto	u621
  3200     0445  2C47               	goto	u620
  3201     0446                     u621:
  3202     0446  2C49               	goto	l31
  3203     0447                     u620:
  3204     0447                     l1289:
  3205                           
  3206                           ;lcd.c: 25:         RD2 = 1;
  3207     0447  1508               	bsf	8,2	;volatile
  3208     0448  2C4A               	goto	l32
  3209     0449                     l31:	
  3210                           ;lcd.c: 26:     else
  3211                           
  3212                           
  3213                           ;lcd.c: 27:         RD2 = 0;
  3214     0449  1108               	bcf	8,2	;volatile
  3215     044A                     l32:
  3216                           
  3217                           ;lcd.c: 29:     if (a & 8)
  3218     044A  1DF0               	btfss	Lcd_Port@a,3
  3219     044B  2C4D               	goto	u631
  3220     044C  2C4E               	goto	u630
  3221     044D                     u631:
  3222     044D  2C50               	goto	l33
  3223     044E                     u630:
  3224     044E                     l1291:
  3225                           
  3226                           ;lcd.c: 30:         RD3 = 1;
  3227     044E  1588               	bsf	8,3	;volatile
  3228     044F  2C51               	goto	l34
  3229     0450                     l33:	
  3230                           ;lcd.c: 31:     else
  3231                           
  3232                           
  3233                           ;lcd.c: 32:         RD3 = 0;
  3234     0450  1188               	bcf	8,3	;volatile
  3235     0451                     l34:
  3236                           
  3237                           ;lcd.c: 34:     if (a & 16)
  3238     0451  1E70               	btfss	Lcd_Port@a,4
  3239     0452  2C54               	goto	u641
  3240     0453  2C55               	goto	u640
  3241     0454                     u641:
  3242     0454  2C57               	goto	l35
  3243     0455                     u640:
  3244     0455                     l1293:
  3245                           
  3246                           ;lcd.c: 35:         RD4 = 1;
  3247     0455  1608               	bsf	8,4	;volatile
  3248     0456  2C58               	goto	l36
  3249     0457                     l35:	
  3250                           ;lcd.c: 36:     else
  3251                           
  3252                           
  3253                           ;lcd.c: 37:         RD4 = 0;
  3254     0457  1208               	bcf	8,4	;volatile
  3255     0458                     l36:
  3256                           
  3257                           ;lcd.c: 39:     if (a & 32)
  3258     0458  1EF0               	btfss	Lcd_Port@a,5
  3259     0459  2C5B               	goto	u651
  3260     045A  2C5C               	goto	u650
  3261     045B                     u651:
  3262     045B  2C5E               	goto	l37
  3263     045C                     u650:
  3264     045C                     l1295:
  3265                           
  3266                           ;lcd.c: 40:         RD5 = 1;
  3267     045C  1688               	bsf	8,5	;volatile
  3268     045D  2C5F               	goto	l38
  3269     045E                     l37:	
  3270                           ;lcd.c: 41:     else
  3271                           
  3272                           
  3273                           ;lcd.c: 42:         RD5 = 0;
  3274     045E  1288               	bcf	8,5	;volatile
  3275     045F                     l38:
  3276                           
  3277                           ;lcd.c: 44:     if (a & 64)
  3278     045F  1F70               	btfss	Lcd_Port@a,6
  3279     0460  2C62               	goto	u661
  3280     0461  2C63               	goto	u660
  3281     0462                     u661:
  3282     0462  2C65               	goto	l39
  3283     0463                     u660:
  3284     0463                     l1297:
  3285                           
  3286                           ;lcd.c: 45:         RD6 = 1;
  3287     0463  1708               	bsf	8,6	;volatile
  3288     0464  2C66               	goto	l40
  3289     0465                     l39:	
  3290                           ;lcd.c: 46:     else
  3291                           
  3292                           
  3293                           ;lcd.c: 47:         RD6 = 0;
  3294     0465  1308               	bcf	8,6	;volatile
  3295     0466                     l40:
  3296                           
  3297                           ;lcd.c: 49:     if (a & 128)
  3298     0466  1FF0               	btfss	Lcd_Port@a,7
  3299     0467  2C69               	goto	u671
  3300     0468  2C6A               	goto	u670
  3301     0469                     u671:
  3302     0469  2C6C               	goto	l41
  3303     046A                     u670:
  3304     046A                     l1299:
  3305                           
  3306                           ;lcd.c: 50:         RD7 = 1;
  3307     046A  1788               	bsf	8,7	;volatile
  3308     046B  2C6D               	goto	l43
  3309     046C                     l41:	
  3310                           ;lcd.c: 51:     else
  3311                           
  3312                           
  3313                           ;lcd.c: 52:         RD7 = 0;
  3314     046C  1388               	bcf	8,7	;volatile
  3315     046D                     l43:
  3316     046D  0008               	return
  3317     046E                     __end_of_Lcd_Port:
  3318                           
  3319                           	psect	text17
  3320     02A9                     __ptext17:	
  3321 ;; *************** function _I2C_Master_Write *****************
  3322 ;; Defined at:
  3323 ;;		line 65 in file "I2C.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  d               2    0[COMMON] unsigned int 
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		wreg, status,2, status,0, pclath, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3337 ;;      Params:         2       0       0       0       0
  3338 ;;      Locals:         0       0       0       0       0
  3339 ;;      Temps:          0       0       0       0       0
  3340 ;;      Totals:         2       0       0       0       0
  3341 ;;Total ram usage:        2 bytes
  3342 ;; Hardware stack levels used: 1
  3343 ;; Hardware stack levels required when called: 1
  3344 ;; This function calls:
  3345 ;;		_I2C_Master_Wait
  3346 ;; This function is called by:
  3347 ;;		_main
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351     02A9                     _I2C_Master_Write:	
  3352                           ;psect for function _I2C_Master_Write
  3353                           
  3354     02A9                     l1497:	
  3355                           ;incstack = 0
  3356                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3357                           
  3358                           
  3359                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3360     02A9  120A  118A  22B3  120A  118A  	fcall	_I2C_Master_Wait
  3361     02AE                     l1499:
  3362                           
  3363                           ;I2C.c: 68:     SSPBUF = d;
  3364     02AE  0870               	movf	I2C_Master_Write@d,w
  3365     02AF  1283               	bcf	3,5	;RP0=0, select bank0
  3366     02B0  1303               	bcf	3,6	;RP1=0, select bank0
  3367     02B1  0093               	movwf	19	;volatile
  3368     02B2                     l132:
  3369     02B2  0008               	return
  3370     02B3                     __end_of_I2C_Master_Write:
  3371                           
  3372                           	psect	text18
  3373     02A0                     __ptext18:	
  3374 ;; *************** function _I2C_Master_Stop *****************
  3375 ;; Defined at:
  3376 ;;		line 55 in file "I2C.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0, pclath, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3390 ;;      Params:         0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0
  3393 ;;      Totals:         0       0       0       0       0
  3394 ;;Total ram usage:        0 bytes
  3395 ;; Hardware stack levels used: 1
  3396 ;; Hardware stack levels required when called: 1
  3397 ;; This function calls:
  3398 ;;		_I2C_Master_Wait
  3399 ;; This function is called by:
  3400 ;;		_main
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404     02A0                     _I2C_Master_Stop:	
  3405                           ;psect for function _I2C_Master_Stop
  3406                           
  3407     02A0                     l1493:	
  3408                           ;incstack = 0
  3409                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3410                           
  3411                           
  3412                           ;I2C.c: 57:     I2C_Master_Wait();
  3413     02A0  120A  118A  22B3  120A  118A  	fcall	_I2C_Master_Wait
  3414     02A5                     l1495:
  3415                           
  3416                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3417     02A5  1683               	bsf	3,5	;RP0=1, select bank1
  3418     02A6  1303               	bcf	3,6	;RP1=0, select bank1
  3419     02A7  1511               	bsf	17,2	;volatile
  3420     02A8                     l129:
  3421     02A8  0008               	return
  3422     02A9                     __end_of_I2C_Master_Stop:
  3423                           
  3424                           	psect	text19
  3425     0297                     __ptext19:	
  3426 ;; *************** function _I2C_Master_Start *****************
  3427 ;; Defined at:
  3428 ;;		line 39 in file "I2C.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0, pclath, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3442 ;;      Params:         0       0       0       0       0
  3443 ;;      Locals:         0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0
  3445 ;;      Totals:         0       0       0       0       0
  3446 ;;Total ram usage:        0 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 1
  3449 ;; This function calls:
  3450 ;;		_I2C_Master_Wait
  3451 ;; This function is called by:
  3452 ;;		_main
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456     0297                     _I2C_Master_Start:	
  3457                           ;psect for function _I2C_Master_Start
  3458                           
  3459     0297                     l1489:	
  3460                           ;incstack = 0
  3461                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3462                           
  3463                           
  3464                           ;I2C.c: 41:     I2C_Master_Wait();
  3465     0297  120A  118A  22B3  120A  118A  	fcall	_I2C_Master_Wait
  3466     029C                     l1491:
  3467                           
  3468                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3469     029C  1683               	bsf	3,5	;RP0=1, select bank1
  3470     029D  1303               	bcf	3,6	;RP1=0, select bank1
  3471     029E  1411               	bsf	17,0	;volatile
  3472     029F                     l123:
  3473     029F  0008               	return
  3474     02A0                     __end_of_I2C_Master_Start:
  3475                           
  3476                           	psect	text20
  3477     0390                     __ptext20:	
  3478 ;; *************** function _I2C_Master_Read *****************
  3479 ;; Defined at:
  3480 ;;		line 74 in file "I2C.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  a               2    0[COMMON] unsigned short 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;  temp            2    4[COMMON] unsigned short 
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  2    0[COMMON] unsigned short 
  3487 ;; Registers used:
  3488 ;;		wreg, status,2, status,0, pclath, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3494 ;;      Params:         2       0       0       0       0
  3495 ;;      Locals:         2       0       0       0       0
  3496 ;;      Temps:          2       0       0       0       0
  3497 ;;      Totals:         6       0       0       0       0
  3498 ;;Total ram usage:        6 bytes
  3499 ;; Hardware stack levels used: 1
  3500 ;; Hardware stack levels required when called: 1
  3501 ;; This function calls:
  3502 ;;		_I2C_Master_Wait
  3503 ;; This function is called by:
  3504 ;;		_main
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508     0390                     _I2C_Master_Read:	
  3509                           ;psect for function _I2C_Master_Read
  3510                           
  3511     0390                     l1501:	
  3512                           ;incstack = 0
  3513                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3514                           
  3515                           
  3516                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3517     0390  120A  118A  22B3  120A  118A  	fcall	_I2C_Master_Wait
  3518     0395                     l1503:
  3519                           
  3520                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3521     0395  1683               	bsf	3,5	;RP0=1, select bank1
  3522     0396  1303               	bcf	3,6	;RP1=0, select bank1
  3523     0397  1591               	bsf	17,3	;volatile
  3524                           
  3525                           ;I2C.c: 79:     I2C_Master_Wait();
  3526     0398  120A  118A  22B3  120A  118A  	fcall	_I2C_Master_Wait
  3527     039D                     l1505:
  3528                           
  3529                           ;I2C.c: 80:     temp = SSPBUF;
  3530     039D  1283               	bcf	3,5	;RP0=0, select bank0
  3531     039E  1303               	bcf	3,6	;RP1=0, select bank0
  3532     039F  0813               	movf	19,w	;volatile
  3533     03A0  00F2               	movwf	??_I2C_Master_Read
  3534     03A1  01F3               	clrf	??_I2C_Master_Read+1
  3535     03A2  0872               	movf	??_I2C_Master_Read,w
  3536     03A3  00F4               	movwf	I2C_Master_Read@temp
  3537     03A4  0873               	movf	??_I2C_Master_Read+1,w
  3538     03A5  00F5               	movwf	I2C_Master_Read@temp+1
  3539     03A6                     l1507:
  3540                           
  3541                           ;I2C.c: 81:     I2C_Master_Wait();
  3542     03A6  120A  118A  22B3  120A  118A  	fcall	_I2C_Master_Wait
  3543     03AB                     l1509:
  3544                           
  3545                           ;I2C.c: 82:     if(a == 1){
  3546     03AB  0370               	decf	I2C_Master_Read@a,w
  3547     03AC  0471               	iorwf	I2C_Master_Read@a+1,w
  3548     03AD  1D03               	btfss	3,2
  3549     03AE  2BB0               	goto	u1051
  3550     03AF  2BB1               	goto	u1050
  3551     03B0                     u1051:
  3552     03B0  2BB5               	goto	l135
  3553     03B1                     u1050:
  3554     03B1                     l1511:
  3555                           
  3556                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3557     03B1  1683               	bsf	3,5	;RP0=1, select bank1
  3558     03B2  1303               	bcf	3,6	;RP1=0, select bank1
  3559     03B3  1291               	bcf	17,5	;volatile
  3560                           
  3561                           ;I2C.c: 84:     }else{
  3562     03B4  2BB8               	goto	l136
  3563     03B5                     l135:
  3564                           
  3565                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3566     03B5  1683               	bsf	3,5	;RP0=1, select bank1
  3567     03B6  1303               	bcf	3,6	;RP1=0, select bank1
  3568     03B7  1691               	bsf	17,5	;volatile
  3569     03B8                     l136:	
  3570                           ;I2C.c: 86:     }
  3571                           
  3572                           
  3573                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3574     03B8  1611               	bsf	17,4	;volatile
  3575     03B9                     l1513:
  3576                           
  3577                           ;I2C.c: 88:     return temp;
  3578     03B9  0875               	movf	I2C_Master_Read@temp+1,w
  3579     03BA  00F1               	movwf	?_I2C_Master_Read+1
  3580     03BB  0874               	movf	I2C_Master_Read@temp,w
  3581     03BC  00F0               	movwf	?_I2C_Master_Read
  3582     03BD                     l137:
  3583     03BD  0008               	return
  3584     03BE                     __end_of_I2C_Master_Read:
  3585                           
  3586                           	psect	text21
  3587     02B3                     __ptext21:	
  3588 ;; *************** function _I2C_Master_Wait *****************
  3589 ;; Defined at:
  3590 ;;		line 32 in file "I2C.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;		None
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;		None
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      void 
  3597 ;; Registers used:
  3598 ;;		wreg, status,2
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3604 ;;      Params:         0       0       0       0       0
  3605 ;;      Locals:         0       0       0       0       0
  3606 ;;      Temps:          0       0       0       0       0
  3607 ;;      Totals:         0       0       0       0       0
  3608 ;;Total ram usage:        0 bytes
  3609 ;; Hardware stack levels used: 1
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_I2C_Master_Start
  3614 ;;		_I2C_Master_Stop
  3615 ;;		_I2C_Master_Write
  3616 ;;		_I2C_Master_Read
  3617 ;;		_I2C_Master_RepeatedStart
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621     02B3                     _I2C_Master_Wait:	
  3622                           ;psect for function _I2C_Master_Wait
  3623                           
  3624     02B3                     l1387:	
  3625                           ;incstack = 0
  3626                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3627                           
  3628     02B3                     l117:	
  3629                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3630                           
  3631     02B3  1683               	bsf	3,5	;RP0=1, select bank1
  3632     02B4  1303               	bcf	3,6	;RP1=0, select bank1
  3633     02B5  1914               	btfsc	20,2	;volatile
  3634     02B6  2AB8               	goto	u831
  3635     02B7  2AB9               	goto	u830
  3636     02B8                     u831:
  3637     02B8  2AB3               	goto	l117
  3638     02B9                     u830:
  3639     02B9                     l1389:
  3640     02B9  0811               	movf	17,w	;volatile
  3641     02BA  391F               	andlw	31
  3642     02BB  1D03               	btfss	3,2
  3643     02BC  2ABE               	goto	u841
  3644     02BD  2ABF               	goto	u840
  3645     02BE                     u841:
  3646     02BE  2AB3               	goto	l117
  3647     02BF                     u840:
  3648     02BF                     l120:
  3649     02BF  0008               	return
  3650     02C0                     __end_of_I2C_Master_Wait:
  3651     007E                     btemp	set	126	;btemp
  3652     007E                     wtemp0	set	126
  3653                           
  3654                           	psect	idloc
  3655                           
  3656                           ;Config register IDLOC0 @ 0x2000
  3657                           ;	unspecified, using default values
  3658     2000                     	org	8192
  3659     2000  3FFF               	dw	16383
  3660                           
  3661                           ;Config register IDLOC1 @ 0x2001
  3662                           ;	unspecified, using default values
  3663     2001                     	org	8193
  3664     2001  3FFF               	dw	16383
  3665                           
  3666                           ;Config register IDLOC2 @ 0x2002
  3667                           ;	unspecified, using default values
  3668     2002                     	org	8194
  3669     2002  3FFF               	dw	16383
  3670                           
  3671                           ;Config register IDLOC3 @ 0x2003
  3672                           ;	unspecified, using default values
  3673     2003                     	org	8195
  3674     2003  3FFF               	dw	16383
  3675                           
  3676                           	psect	config
  3677                           
  3678                           ;Config register CONFIG1 @ 0x2007
  3679                           ;	Oscillator Selection bits
  3680                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3681                           ;	Watchdog Timer Enable bit
  3682                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3683                           ;	Power-up Timer Enable bit
  3684                           ;	PWRTE = OFF, PWRT disabled
  3685                           ;	RE3/MCLR pin function select bit
  3686                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3687                           ;	Code Protection bit
  3688                           ;	CP = OFF, Program memory code protection is disabled
  3689                           ;	Data Code Protection bit
  3690                           ;	CPD = OFF, Data memory code protection is disabled
  3691                           ;	Brown Out Reset Selection bits
  3692                           ;	BOREN = OFF, BOR disabled
  3693                           ;	Internal External Switchover bit
  3694                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3695                           ;	Fail-Safe Clock Monitor Enabled bit
  3696                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3697                           ;	Low Voltage Programming Enable bit
  3698                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3699                           ;	In-Circuit Debugger Mode bit
  3700                           ;	DEBUG = 0x1, unprogramme  3701     2007                     	org	8199
  3702     2007  20D4               	dw	8404
  3703                           
  3704                           ;Config register CONFIG2 @ 0x2008
  3705                           ;	Brown-out Reset Selection bit
  3706                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3707                           ;	Flash Program Memory Self Write Enable bits
  3708                           ;	WRT = OFF, Write protection off
  3709     2008                     	org	8200
  3710     2008  3FFF               	dw	16383

Data Sizes:
    Strings     43
    Constant    10
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     27      67
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_2(CODE[22]), STR_1(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> line2LCD(BANK0[16]), line1LCD(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> line2LCD(BANK0[16]), line1LCD(BANK0[16]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Init->_Lcd_Cmd
    _I2C_Master_Init->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_sprintf
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    4229
                                             19 BANK0      8     8      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    18      9    1806
                                              0 BANK0     19    10      9
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     168
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1016
                    _I2C_Master_Init
                           _Lcd_Init
                          _configOsc
 ---------------------------------------------------------------------------------
 (2) _configOsc                                            2     0      2     230
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     374
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     354
                                              3 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0     198
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1     484
                                              4 COMMON     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     198
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     198
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0     176
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _configOsc
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      51       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1B      43       5       83.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      51      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Thu Aug 03 14:22:56 2023

                       _a 0027                         pc 0002            ___bmul@product 0071  
                      l30 0443                        l31 0449                        l40 0466  
                      l32 044A                        l41 046C                        l33 0450  
                      l34 0451                        l43 046D                        l35 0457  
                      l27 0439                        l36 0458                        l28 043C  
                      l37 045E                        l29 0442                        l61 0309  
                      l38 045F                        l46 0323                        l39 0465  
                      l55 0343                        l80 0527                        l49 02CC  
                      l81 0536                        l58 0502                        l82 0543  
                      l67 0364                        l83 0550                        l85 055E  
                      l78 050E                        l79 051B                        fsr 0004  
                     l120 02BF                       l114 03F5                       l123 029F  
                     l132 02B2                       l117 02B3                       l205 038F  
                     l135 03B5                       l136 03B8                       l137 03BD  
                     l129 02A8                       l326 07F2                       l602 04B1  
                     l356 02F3                       l612 042F                       l366 05C4  
                     l783 02DE                       _GIE 005F                       _RC0 0038  
                     _RC1 0039                       _RD0 0040                       _RD1 0041  
                     _RD2 0042                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     u600 0435                       u601 0434                       u610 0440  
                     u611 043F                       u620 0447                       u700 0583  
                     u621 0446                       u701 0582                       u630 044E  
                     u631 044D                       u640 0455                       u720 059E  
                     u800 054A                       u641 0454                       u721 059D  
                     u801 0549                       u650 045C                       u810 0557  
                     u651 045B                       u715 0585                       u811 0556  
                     u660 0463                       u740 05BC                       u820 03D5  
                     u661 0462                       u741 05BB                       u725 059A  
                     u830 02B9                       u670 046A                       u750 050A  
                     u910 0488                       u831 02B8                       u671 0469  
                     u735 05AE                       u751 0509                       u911 0487  
                     u840 02BF                       u680 056F                       u760 0515  
                     u841 02BE                       u681 056E                       u825 03D0  
                     u761 0514                       u905 047A                       u770 0521  
                     u930 0499                       u850 02D5                       u771 0520  
                     u931 0498                       u851 02D4                       u780 0530  
                     u860 02DB                       u781 052F                       u925 0489  
                     u861 02DA                       u790 053D                       u870 02E5  
                     u950 04AD                       u695 0574                       u791 053C  
                     u871 02E4                       u951 04AC                       u935 0495  
                     u880 02F2                       u960 03FC                       u881 02F1  
                     u945 04A1                       u961 03FB                       u890 0476  
                     u891 0475                       u980 040E                       u981 040D  
                     u990 0418                       u991 0417                       u975 0400  
                     u995 0414                       fsr0 0004                       indf 0000  
                    l1301 030B                      l1303 030E                      l1311 055F  
                    l1305 0314                      l1321 0583                      l1313 056F  
                    l1307 0317                      l1331 05B6                      l1323 058C  
                    l1315 0572                      l1411 02EB                      l1403 02E0  
                    l1501 0390                      l1309 0320                      l1325 059E  
                    l1317 057B                      l1333 05BC                      l1341 04C1  
                    l1413 02ED                      l1405 02E1                      l1421 0470  
                    l1511 03B1                      l1503 0395                      l1351 02FE  
                    l1327 05AC                      l1319 057F                      l1343 04D0  
                    l1415 02F2                      l1407 02E5                      l1431 0488  
                    l1423 0476                      l1513 03B9                      l1505 039D  
                    l1353 0301                      l1329 05AD                      l1345 04D6  
                    l1337 04B2                      l1361 0515                      l1521 0371  
                    l1409 02E9                      l1433 0499                      l1425 0479  
                    l1441 04AD                      l1601 0778                      l1507 03A6  
                    l1291 044E                      l1283 0431                      l1355 0306  
                    l1347 02F5                      l1339 04B8                      l1371 0557  
                    l1363 0521                      l1531 037B                      l1523 0372  
                    l1435 049F                      l1427 0480                      l1419 046E  
                    l1451 0406                      l1611 079E                      l1603 0779  
                    l1509 03AB                      l1293 0455                      l1285 0435  
                    l1349 02F8                      l1381 03F2                      l1373 055B  
                    l1365 0530                      l1357 0503                      l1533 037C  
                    l1525 0375                      l1517 0365                      l1437 04A0  
                    l1429 0484                      l1461 0425                      l1453 040A  
                    l1445 03F6                      l1613 07A3                      l1605 078D  
                    l1541 06A8                      l1621 07DE                      l1295 045C  
                    l1287 0440                      l1471 032A                      l1383 03F3  
                    l1375 03BE                      l1367 053D                      l1359 050A  
                    l1535 037D                      l1527 0377                      l1519 036E  
                    l1439 04A7                      l1455 040E                      l1447 03FC  
                    l1463 042B                      l1391 02CE                      l1615 07CF  
                    l1607 0791                      l1623 07EE                      l1711 070D  
                    l1551 06C5                      l1543 06AE                      l1297 0463  
                    l1289 0447                      l1473 032D                      l1481 0345  
                    l1385 03F4                      l1377 03C2                      l1369 054A  
                    l1537 038A                      l1529 0378                      l1457 0418  
                    l1449 03FF                      l1393 02CF                      l1609 0799  
                    l1561 06E7                      l1553 06C9                      l1545 06B3  
                    l1641 05C5                      l1387 02B3                      l1491 029C  
                    l1299 046A                      l1467 02C0                      l1475 0334  
                    l1483 0348                      l1379 03C5                      l1459 041E  
                    l1395 02D5                      l1619 07D5                      l1571 0720  
                    l1555 06CB                      l1563 06F8                      l1547 06B8  
                    l1539 06A5                      l1651 05EB                      l1643 05CA  
                    l1389 02B9                      l1493 02A0                      l1477 033A  
                    l1469 0325                      l1485 0353                      l1397 02DB  
                    l1581 0736                      l1573 0724                      l1557 06D8  
                    l1549 06B9                      l1661 0619                      l1653 05FA  
                    l1645 05CF                      l1495 02A5                      l1479 033D  
                    l1487 0359                      l1399 02DD                      l1591 0742  
                    l1583 073C                      l1575 0728                      l1567 06F9  
                    l1559 06E3                      l1671 065A                      l1663 0628  
                    l1655 05FF                      l1647 05D8                      l1489 0297  
                    l1497 02A9                      l1585 0740                      l1577 072C  
                    l1569 0718                      l1673 0660                      l1665 062E  
                    l1657 0608                      l1649 05E6                      l1499 02AE  
                    l1595 075E                      l1579 0731                      l1675 0668  
                    l1667 0633                      l1659 0614                      l1597 0762  
                    l1677 068E                      l1669 063B                      l1599 0768  
                    l1679 0694                      STR_1 0029                      STR_2 0013  
                    u1010 042B                      u1011 042A                      u1020 032A  
                    u1100 0736                      u1021 0329                      u1005 041F  
                    u1101 0735                      u1030 033A                      u1110 073C  
                    u1031 0339                      u1111 073B                      u1040 0364  
                    u1120 075D                      u1041 0363                      u1121 075C  
                    u1050 03B1                      u1130 0768                      u1051 03B0  
                    u1131 0767                      u1140 0778                      u1060 06AE  
                    u1141 0777                      u1125 0759                      u1061 06AD  
                    u1150 078D                      u1070 06C5                      u1151 078C  
                    u1071 06C4                      u1207 0621                      u1160 0799  
                    u1080 06F7                      u1161 0798                      u1145 0774  
                    u1081 06F6                      u1217 069A                      u1170 07DE  
                    u1090 0728                      u1227 04BC                      u1171 07DD  
                    u1155 0789                      u1091 0727                      u1180 07EE  
                    u1237 04CB                      u1181 07ED                      u1247 04DA  
                    u1257 0303                      u1267 031B                      u1197 05F3  
                    _PEIE 005E         ?_Lcd_Write_String 0070                      _main 05C5  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0073  
         __end_of_Lcd_Cmd 0324         ___bmul@multiplier 0072          ?_I2C_Master_Init 0048  
        ?_I2C_Master_Read 0070          ?_I2C_Master_Wait 0070          ?_I2C_Master_Stop 0070  
           configOsc@frec 0070                     ?_main 0070                     _ANSEL 0188  
         __end_of___lldiv 05C5           __end_of___lwdiv 04B2           __end_of___lwmod 0430  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _SSPIE 0463                     _SSPIF 0063                     _s1ADC 0026  
         __end_of_dpowers 0013           __end_of_isdigit 02DF                     _setup 0365  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 07F3          __end_of_Lcd_Init 0503          __end_of_Lcd_Port 046E  
         __initialization 07F3              __end_of_main 06A2                    ??_main 005B  
       ?_I2C_Master_Start 0070         ?_I2C_Master_Write 0070        ??_I2C_Master_Start 0070  
      ??_I2C_Master_Write 0072                    ?_setup 0070                    _ANSELH 0189  
               ??_Lcd_Cmd 0071                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPCON 0014                    _SSPBUF 0013  
                  ___bmul 02DF                 ??___lldiv 0078                 ??___lwdiv 0074  
               ??___lwmod 007B                 ??_isdigit 0070                 ??_sprintf 0051  
         Lcd_Set_Cursor@a 0075           Lcd_Set_Cursor@b 0074   __end_of__initialization 07FC  
       __end_of_Lcd_Clear 02CD       ___bmul@multiplicand 0070            __pcstackCOMMON 0070  
           __end_of_setup 0390            _Lcd_Set_Cursor 0324                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                   ??_setup 007E                __pbssBANK0 0020  
              __pmaintext 05C5                   ?___bmul 0070    __end_of_Lcd_Set_Cursor 0344  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                   _SSPCON2 0091  
                 _SSPSTAT 0094                __stringtab 0003            _Lcd_Write_Char 02F4  
                 _Lcd_Cmd 030A         __end_of_configOsc 055F                   ___lldiv 055F  
                 ___lwdiv 046E                   ___lwmod 03F6                   _dateRTC 0023  
         ?_Lcd_Set_Cursor 0074                   __ptext1 06A2                   __ptext2 02CD  
                 __ptext3 03F6                   __ptext4 046E                   __ptext5 02DF  
                 __ptext6 0365                   __ptext7 0503                   __ptext8 04B2  
                 __ptext9 03BE                   _dpowers 0009                   _isdigit 02CD  
                 _timeRTC 0020                   _sprintf 06A2                   clrloop0 0290  
  __end_of_Lcd_Write_Char 030A      end_of_initialization 07FC           ___lldiv@divisor 0070  
         ___lldiv@counter 007D          I2C_Master_Init@c 0048          I2C_Master_Read@a 0070  
               Lcd_Port@a 0070                 _TRISCbits 0087           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0076         Lcd_Write_String@i 0074                 _Lcd_Clear 02C0  
          __end_of___bmul 02F4          _Lcd_Write_String 0344       start_initialization 07F3  
       ??_I2C_Master_Init 004C         ??_I2C_Master_Read 0072         ??_I2C_Master_Wait 0070  
       ??_I2C_Master_Stop 0070                ?_Lcd_Clear 0070                  ??___bmul 0071  
         Lcd_Write_Char@a 0072                 ___latbits 0002             __pcstackBANK0 0048  
                ?_Lcd_Cmd 0070               sprintf@flag 0055               sprintf@prec 0059  
        _I2C_Master_Start 0297          _I2C_Master_Write 02A9          ___lwdiv@dividend 0072  
        ??_Lcd_Set_Cursor 0075                  ?___lldiv 0070                  ?___lwdiv 0070  
                ?___lwmod 0077                 _configOsc 0503                 __pstrings 0003  
                ?_isdigit 0070          ___lwdiv@quotient 0074                  ?_sprintf 0048  
               clear_ram0 028F                  Lcd_Cmd@a 0073               ??_Lcd_Clear 0074  
              ?_configOsc 0070               __stringbase 0008          ??_Lcd_Write_Char 0071  
                _Lcd_Init 04B2                  _Lcd_Port 0430       I2C_Master_Read@temp 0074  
__end_of_Lcd_Write_String 0365        __end_of__stringtab 0009               _isdigit$703 0070  
              sprintf@val 0056           _I2C_Master_Init 03BE           _I2C_Master_Read 0390  
         _I2C_Master_Wait 02B3           _I2C_Master_Stop 02A0           ___lwdiv@divisor 0070  
         ___lwdiv@counter 0076                  __ptext10 055F                  __ptext11 0344  
                __ptext20 0390                  __ptext12 02F4                  __ptext21 02B3  
                __ptext13 0324                  __ptext14 02C0                  __ptext15 030A  
                __ptext16 0430                  __ptext17 02A9                  __ptext18 02A0  
                __ptext19 0297                  _line1LCD 0038                  _line2LCD 0028  
             ??_configOsc 0072  __end_of_I2C_Master_Start 02A0  __end_of_I2C_Master_Write 02B3  
                isdigit@c 0071                 sprintf@ap 0054                 sprintf@sp 0058  
        ___lwmod@dividend 0079          ___lldiv@dividend 0074                 stringcode 0003  
              _OSCCONbits 008F   __end_of_I2C_Master_Init 03F6   __end_of_I2C_Master_Read 03BE  
 __end_of_I2C_Master_Wait 02C0   __end_of_I2C_Master_Stop 02A9        Lcd_Set_Cursor@temp 0076  
                sprintf@c 005A                  sprintf@f 0048          ___lldiv@quotient 0079  
       I2C_Master_Write@d 0070           ___lwmod@divisor 0077           ___lwmod@counter 007B  
                stringdir 0003                  stringtab 0003               _SSPCON2bits 0091  
